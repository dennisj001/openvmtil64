<?xml version="1.0" encoding="UTF-8"?>
<configurationDescriptor version="100">
  <logicalFolder name="root" displayName="root" projectFiles="true" kind="ROOT">
    <df root="." name="0">
      <df name="archive">
        <df name="ff-2017-11-24">
          <df name="arm">
            <in>asm.f</in>
            <in>bsd.f</in>
            <in>freebsd.f</in>
            <in>generic.f</in>
            <in>linux.f</in>
            <in>netbsd.f</in>
            <in>openbsd.f</in>
          </df>
          <df name="boot">
          </df>
          <df name="i386">
            <in>asm.f</in>
            <in>bsd.f</in>
            <in>darwin.f</in>
            <in>freebsd.f</in>
            <in>generic.f</in>
            <in>linux.f</in>
            <in>netbsd.f</in>
            <in>openbsd.f</in>
          </df>
          <df name="m68k">
            <in>generic.f</in>
            <in>linux.f</in>
            <in>netbsd.f</in>
          </df>
          <df name="mips">
            <in>asm.f</in>
            <in>bsd.f</in>
            <in>common.f</in>
            <in>freebsd.f</in>
            <in>generic.f</in>
            <in>linux.f</in>
            <in>netbsd.f</in>
            <in>openbsd.f</in>
          </df>
          <df name="ppc">
            <in>asm.f</in>
            <in>bsd.f</in>
            <in>common.f</in>
            <in>freebsd.f</in>
            <in>generic.f</in>
            <in>linux.f</in>
            <in>netbsd.f</in>
            <in>openbsd.f</in>
          </df>
          <df name="riscv">
            <in>asm.f</in>
            <in>generic.f</in>
            <in>linux.f</in>
          </df>
          <df name="sparc">
            <in>asm.f</in>
            <in>bsd.f</in>
            <in>common.f</in>
            <in>freebsd.f</in>
            <in>generic.f</in>
            <in>linux.f</in>
            <in>netbsd.f</in>
            <in>openbsd.f</in>
          </df>
          <df name="x86_64">
            <in>bsd.f</in>
            <in>darwin.f</in>
            <in>freebsd.f</in>
            <in>generic.f</in>
            <in>linux.f</in>
            <in>netbsd.f</in>
            <in>openbsd.f</in>
            <in>sysv.f</in>
          </df>
          <in>blocks.f</in>
          <in>core.f</in>
          <in>dbg.f</in>
          <in>decomp.f</in>
          <in>ed.f</in>
          <in>elf.f</in>
          <in>endian.f</in>
          <in>flat.f</in>
          <in>generic.f</in>
          <in>kernel.f</in>
          <in>macho.f</in>
          <in>meta.f</in>
          <in>startup.f</in>
          <in>stuff.f</in>
          <in>unexec-elf.f</in>
          <in>unexec-macho.f</in>
          <in>unix.f</in>
        </df>
        <df name="ff-master">
          <in>a.out.f</in>
          <in>blocks.f</in>
          <in>core.f</in>
          <in>cross.f</in>
          <in>ed.f</in>
          <in>elf.f</in>
          <in>ff-arm.s</in>
          <in>ff-i386-plan9.s</in>
          <in>ff-i386.s</in>
          <in>meta-install.f</in>
          <in>meta.f</in>
          <in>primitives.s</in>
          <in>robots.f</in>
          <in>stuff.f</in>
          <in>words-gas.s</in>
          <in>words-nasm.s</in>
          <in>x-arm.f</in>
          <in>x-i386-plan9.f</in>
          <in>x-i386.f</in>
        </df>
        <df name="joneforth">
          <in>jonesforth.S</in>
          <in>jonesforth.f</in>
          <in>perf_dupdrop.c</in>
          <in>perf_dupdrop.f</in>
          <in>test_assembler.f</in>
          <in>test_comparison.f</in>
          <in>test_exception.f</in>
          <in>test_number.f</in>
          <in>test_read_file.f</in>
          <in>test_stack.f</in>
          <in>test_stack_trace.f</in>
        </df>
        <df name="joneforth64">
          <in>jonesforth.f</in>
          <in>jonesforth64.S</in>
          <in>perf_dupdrop.c</in>
          <in>perf_dupdrop.f</in>
          <in>test_assembler.f</in>
          <in>test_comparison.f</in>
          <in>test_exception.f</in>
          <in>test_number.f</in>
          <in>test_read_file.f</in>
          <in>test_stack.f</in>
          <in>test_stack_trace.f</in>
        </df>
        <df name="joy">
          <df name="joy">
          </df>
        </df>
        <df name="lemon">
          <in>lemon.c</in>
          <in>lempar.c</in>
        </df>
        <df name="maru-2.4">
          <df name="doc">
          </df>
          <in>buffer.c</in>
          <in>chartab.h</in>
          <in>eval.c</in>
          <in>gc.c</in>
          <in>gc.h</in>
          <in>libgc.c</in>
          <in>main.c</in>
          <in>mkosdefs.c</in>
          <in>nfibs.c</in>
          <in>test.s</in>
          <in>test2.s</in>
          <in>wcs.c</in>
        </df>
        <df name="sl5">
          <in>sl3.c</in>
          <in>sl5-1.c</in>
          <in>sl5.c</in>
        </df>
        <df name="tcc-0.9.27">
          <df name="examples">
            <in>ex1.c</in>
            <in>ex2.c</in>
            <in>ex3.c</in>
            <in>ex4.c</in>
            <in>ex5.c</in>
          </df>
          <df name="include">
            <in>float.h</in>
            <in>stdarg.h</in>
            <in>stdbool.h</in>
            <in>stddef.h</in>
            <in>varargs.h</in>
          </df>
          <df name="lib">
            <in>alloca-arm.S</in>
            <in>alloca86-bt.S</in>
            <in>alloca86.S</in>
            <in>alloca86_64-bt.S</in>
            <in>alloca86_64.S</in>
            <in>armeabi.c</in>
            <in>armflush.c</in>
            <in>bcheck.c</in>
            <in>lib-arm64.c</in>
            <in>libtcc1.c</in>
            <in>va_list.c</in>
          </df>
          <df name="tests">
            <df name="pp">
              <in>01.c</in>
              <in>02.c</in>
              <in>03.c</in>
              <in>04.c</in>
              <in>05.c</in>
              <in>06.c</in>
              <in>07.c</in>
              <in>08.c</in>
              <in>09.c</in>
              <in>10.c</in>
              <in>11.c</in>
              <in>12.S</in>
              <in>13.S</in>
              <in>14.c</in>
              <in>15.c</in>
              <in>16.c</in>
              <in>17.c</in>
              <in>18.c</in>
              <in>19.c</in>
              <in>20.c</in>
              <in>21.c</in>
              <in>pp-counter.c</in>
            </df>
            <df name="tests2">
              <in>00_assignment.c</in>
              <in>01_comment.c</in>
              <in>02_printf.c</in>
              <in>03_struct.c</in>
              <in>04_for.c</in>
              <in>05_array.c</in>
              <in>06_case.c</in>
              <in>07_function.c</in>
              <in>08_while.c</in>
              <in>09_do_while.c</in>
              <in>10_pointer.c</in>
              <in>11_precedence.c</in>
              <in>12_hashdefine.c</in>
              <in>13_integer_literals.c</in>
              <in>14_if.c</in>
              <in>15_recursion.c</in>
              <in>16_nesting.c</in>
              <in>17_enum.c</in>
              <in>18_include.c</in>
              <in>18_include.h</in>
              <in>19_pointer_arithmetic.c</in>
              <in>20_pointer_comparison.c</in>
              <in>21_char_array.c</in>
              <in>22_floating_point.c</in>
              <in>23_type_coercion.c</in>
              <in>24_math_library.c</in>
              <in>25_quicksort.c</in>
              <in>26_character_constants.c</in>
              <in>27_sizeof.c</in>
              <in>28_strings.c</in>
              <in>29_array_address.c</in>
              <in>30_hanoi.c</in>
              <in>31_args.c</in>
              <in>32_led.c</in>
              <in>33_ternary_op.c</in>
              <in>34_array_assignment.c</in>
              <in>35_sizeof.c</in>
              <in>36_array_initialisers.c</in>
              <in>37_sprintf.c</in>
              <in>38_multiple_array_index.c</in>
              <in>39_typedef.c</in>
              <in>40_stdio.c</in>
              <in>41_hashif.c</in>
              <in>42_function_pointer.c</in>
              <in>43_void_param.c</in>
              <in>44_scoped_declarations.c</in>
              <in>45_empty_for.c</in>
              <in>46_grep.c</in>
              <in>47_switch_return.c</in>
              <in>48_nested_break.c</in>
              <in>49_bracket_evaluation.c</in>
              <in>50_logical_second_arg.c</in>
              <in>51_static.c</in>
              <in>52_unnamed_enum.c</in>
              <in>54_goto.c</in>
              <in>55_lshift_type.c</in>
              <in>60_errors_and_warnings.c</in>
              <in>64_macro_nesting.c</in>
              <in>67_macro_concat.c</in>
              <in>70_floating_point_literals.c</in>
              <in>71_macro_empty_arg.c</in>
              <in>72_long_long_constant.c</in>
              <in>73_arm64.c</in>
              <in>75_array_in_struct_init.c</in>
              <in>76_dollars_in_identifiers.c</in>
              <in>77_push_pop_macro.c</in>
              <in>78_vla_label.c</in>
              <in>79_vla_continue.c</in>
              <in>80_flexarray.c</in>
              <in>81_types.c</in>
              <in>82_attribs_position.c</in>
              <in>83_utf8_in_identifiers.c</in>
              <in>84_hex-float.c</in>
              <in>85_asm-outside-function.c</in>
              <in>86_memory-model.c</in>
              <in>87_dead_code.c</in>
              <in>88_codeopt.c</in>
              <in>89_nocode_wanted.c</in>
              <in>90_struct-init.c</in>
              <in>91_ptr_longlong_arith32.c</in>
              <in>92_enum_bitfield.c</in>
              <in>93_integer_promotion.c</in>
              <in>94_generic.c</in>
              <in>95_bitfields.c</in>
              <in>95_bitfields_ms.c</in>
              <in>96_nodata_wanted.c</in>
              <in>97_utf8_string_literal.c</in>
              <in>98_al_ax_extend.c</in>
              <in>99_fastcall.c</in>
            </df>
            <in>42test.h</in>
            <in>abitest.c</in>
            <in>asm-c-connect-1.c</in>
            <in>asm-c-connect-2.c</in>
            <in>asmtest.S</in>
            <in>boundtest.c</in>
            <in>libtcc_test.c</in>
            <in>tcctest.c</in>
            <in>tcctest.h</in>
            <in>testfp.c</in>
            <in>vla_test.c</in>
          </df>
          <df name="win32">
            <df name="examples">
              <in>dll.c</in>
              <in>fib.c</in>
              <in>hello_dll.c</in>
              <in>hello_win.c</in>
            </df>
            <df name="include">
              <df name="sec_api">
                <df name="sys">
                  <in>timeb_s.h</in>
                </df>
                <in>conio_s.h</in>
                <in>crtdbg_s.h</in>
                <in>io_s.h</in>
                <in>mbstring_s.h</in>
                <in>search_s.h</in>
                <in>stdio_s.h</in>
                <in>stdlib_s.h</in>
                <in>stralign_s.h</in>
                <in>string_s.h</in>
                <in>tchar_s.h</in>
                <in>time_s.h</in>
                <in>wchar_s.h</in>
              </df>
              <df name="sys">
                <in>fcntl.h</in>
                <in>file.h</in>
                <in>locking.h</in>
                <in>stat.h</in>
                <in>time.h</in>
                <in>timeb.h</in>
                <in>types.h</in>
                <in>unistd.h</in>
                <in>utime.h</in>
              </df>
              <df name="tcc">
                <in>tcc_libm.h</in>
              </df>
              <df name="winapi">
                <in>basetsd.h</in>
                <in>basetyps.h</in>
                <in>guiddef.h</in>
                <in>poppack.h</in>
                <in>pshpack1.h</in>
                <in>pshpack2.h</in>
                <in>pshpack4.h</in>
                <in>pshpack8.h</in>
                <in>winbase.h</in>
                <in>wincon.h</in>
                <in>windef.h</in>
                <in>windows.h</in>
                <in>winerror.h</in>
                <in>wingdi.h</in>
                <in>winnt.h</in>
                <in>winreg.h</in>
                <in>winuser.h</in>
                <in>winver.h</in>
              </df>
              <in>_mingw.h</in>
              <in>assert.h</in>
              <in>conio.h</in>
              <in>ctype.h</in>
              <in>dir.h</in>
              <in>direct.h</in>
              <in>dirent.h</in>
              <in>dos.h</in>
              <in>errno.h</in>
              <in>excpt.h</in>
              <in>fcntl.h</in>
              <in>fenv.h</in>
              <in>inttypes.h</in>
              <in>io.h</in>
              <in>limits.h</in>
              <in>locale.h</in>
              <in>malloc.h</in>
              <in>math.h</in>
              <in>mem.h</in>
              <in>memory.h</in>
              <in>process.h</in>
              <in>setjmp.h</in>
              <in>share.h</in>
              <in>signal.h</in>
              <in>stdint.h</in>
              <in>stdio.h</in>
              <in>stdlib.h</in>
              <in>string.h</in>
              <in>tchar.h</in>
              <in>time.h</in>
              <in>vadefs.h</in>
              <in>values.h</in>
              <in>wchar.h</in>
              <in>wctype.h</in>
            </df>
            <df name="lib">
              <in>chkstk.S</in>
              <in>crt1.c</in>
              <in>crt1w.c</in>
              <in>dllcrt1.c</in>
              <in>dllmain.c</in>
              <in>gdi32.def</in>
              <in>kernel32.def</in>
              <in>msvcrt.def</in>
              <in>user32.def</in>
              <in>wincrt1.c</in>
              <in>wincrt1w.c</in>
            </df>
          </df>
          <in>arm-asm.c</in>
          <in>arm-gen.c</in>
          <in>arm-link.c</in>
          <in>arm64-gen.c</in>
          <in>arm64-link.c</in>
          <in>c67-gen.c</in>
          <in>c67-link.c</in>
          <in>coff.h</in>
          <in>config.h</in>
          <in>conftest.c</in>
          <in>elf.h</in>
          <in>i386-asm.c</in>
          <in>i386-asm.h</in>
          <in>i386-gen.c</in>
          <in>i386-link.c</in>
          <in>i386-tok.h</in>
          <in>il-gen.c</in>
          <in>il-opcodes.h</in>
          <in>libtcc.c</in>
          <in>libtcc.h</in>
          <in>stab.def</in>
          <in>stab.h</in>
          <in>tcc.c</in>
          <in>tcc.h</in>
          <in>tccasm.c</in>
          <in>tcccoff.c</in>
          <in>tccelf.c</in>
          <in>tccgen.c</in>
          <in>tcclib.h</in>
          <in>tccpe.c</in>
          <in>tccpp.c</in>
          <in>tccrun.c</in>
          <in>tcctok.h</in>
          <in>tcctools.c</in>
          <in>x86_64-asm.h</in>
          <in>x86_64-gen.c</in>
          <in>x86_64-link.c</in>
        </df>
        <in>lemon.c</in>
        <in>lempar.c</in>
      </df>
      <df name="bin">
      </df>
      <df name="etc">
      </df>
      <df name="lib">
      </df>
      <df name="namespaces">
        <df name="compiler">
        </df>
        <df name="test">
        </df>
      </df>
      <df name="src">
        <df name="basis">
          <df name="compiler">
            <in>_compile.c</in>
            <in>arrays.c</in>
            <in>bit.c</in>
            <in>blocks.c</in>
            <in>combinators.c</in>
            <in>compile.c</in>
            <in>compiler.c</in>
            <in>cpu.c</in>
            <in>locals.c</in>
            <in>logic.c</in>
            <in>machineCode.c</in>
            <in>math.c</in>
            <in>mcPrimitives.c</in>
            <in>memory.c</in>
            <in>optimize.c</in>
            <in>runtime.c</in>
            <in>stack.c</in>
            <in>udis.c</in>
          </df>
          <df name="core">
            <in>_readline.c</in>
            <in>_system.c</in>
            <in>array.c</in>
            <in>block.c</in>
            <in>charSet.c</in>
            <in>classes.c</in>
            <in>conditionals.c</in>
            <in>cstack.c</in>
            <in>dataObjectNew.c</in>
            <in>dataObjectRun.c</in>
            <in>dataStack.c</in>
            <in>dllist.c</in>
            <in>dllnodes.c</in>
            <in>dobject.c</in>
            <in>finder.c</in>
            <in>interpret.c</in>
            <in>io.c</in>
            <in>lexer.c</in>
            <in>memSpace.c</in>
            <in>namespace.c</in>
            <in>parse.c</in>
            <in>preprocessor.c</in>
            <in>readTable.c</in>
            <in>readline.c</in>
            <in>sequence.c</in>
            <in>sockets.c</in>
            <in>string.c</in>
            <in>symbol.c</in>
            <in>syntax.c</in>
            <in>word.c</in>
          </df>
          <df name="lc">
            <in>apply.c</in>
            <in>eval.c</in>
            <in>lambdaCalculus.c</in>
            <in>print.c</in>
            <in>read.c</in>
            <in>special.c</in>
          </df>
          <in>_debug.c</in>
          <in>atom.c</in>
          <in>attribute.c</in>
          <in>bigNum.c</in>
          <in>bigNum.gmp.c</in>
          <in>cfrtil64.c</in>
          <in>colors.c</in>
          <in>context.c</in>
          <in>debugDisassembly.c</in>
          <in>debugOutput.c</in>
          <in>debugStepping.c</in>
          <in>debugger.c</in>
          <in>exception.c</in>
          <in>history.c</in>
          <in>init.c</in>
          <in>interpreter.c</in>
          <in>interpreters.c</in>
          <in>linux.c</in>
          <in>lists.c</in>
          <in>openVmTil.c</in>
          <in>repl.c</in>
          <in>sourceCode.c</in>
          <in>system.c</in>
          <in>tabCompletion.c</in>
          <in>typeCheck.c</in>
          <in>x.c</in>
        </df>
        <df name="include">
          <in>_proto.h</in>
          <in>cfrtil64.h</in>
          <in>defines.h</in>
          <in>lc.h</in>
          <in>machineCode.h</in>
          <in>machineCodeMacros.h</in>
          <in>macros.h</in>
          <in>prototypes.h</in>
          <in>types.h</in>
          <in>udis86.h</in>
        </df>
        <df name="primitives">
          <in>bits.c</in>
          <in>cmaths.c</in>
          <in>compilers.c</in>
          <in>contexts.c</in>
          <in>dataObjectNews.c</in>
          <in>debuggers.c</in>
          <in>disassembler.c</in>
          <in>file.c</in>
          <in>interpreters.c</in>
          <in>ios.c</in>
          <in>logics.c</in>
          <in>maths.c</in>
          <in>memorys.c</in>
          <in>namespaces.c</in>
          <in>openvmtils.c</in>
          <in>parsers.c</in>
          <in>primitives.c</in>
          <in>stacks.c</in>
          <in>strings.c</in>
          <in>syntaxes.c</in>
          <in>systems.c</in>
          <in>words.c</in>
        </df>
      </df>
    </df>
  </logicalFolder>
  <projectmakefile>Makefile</projectmakefile>
  <confs>
    <conf name="Default" type="0">
      <toolsSet>
        <developmentServer>localhost</developmentServer>
        <platform>2</platform>
      </toolsSet>
      <compile>
        <compiledirpicklist>
          <compiledirpicklistitem>.</compiledirpicklistitem>
          <compiledirpicklistitem>${AUTO_FOLDER}</compiledirpicklistitem>
        </compiledirpicklist>
        <compiledir>${AUTO_FOLDER}</compiledir>
        <compilecommandpicklist>
          <compilecommandpicklistitem>${MAKE} ${ITEM_NAME}.o</compilecommandpicklistitem>
          <compilecommandpicklistitem>${AUTO_COMPILE}</compilecommandpicklistitem>
        </compilecommandpicklist>
        <compilecommand>${AUTO_COMPILE}</compilecommand>
      </compile>
      <dbx_gdbdebugger version="1">
        <gdb_pathmaps>
        </gdb_pathmaps>
        <gdb_interceptlist>
          <gdbinterceptoptions gdb_all="false" gdb_unhandled="true" gdb_unexpected="true"/>
        </gdb_interceptlist>
        <gdb_signals>
        </gdb_signals>
        <gdb_options>
          <DebugOptions>
          </DebugOptions>
        </gdb_options>
        <gdb_buildfirst gdb_buildfirst_overriden="false" gdb_buildfirst_old="false"/>
      </dbx_gdbdebugger>
      <nativedebugger version="1">
        <engine>gdb</engine>
      </nativedebugger>
      <runprofile version="9">
        <runcommandpicklist>
          <runcommandpicklistitem>"${OUTPUT_PATH}"</runcommandpicklistitem>
        </runcommandpicklist>
        <runcommand>"${OUTPUT_PATH}"</runcommand>
        <rundir>.</rundir>
        <buildfirst>false</buildfirst>
        <terminal-type>0</terminal-type>
        <remove-instrumentation>0</remove-instrumentation>
        <environment>
        </environment>
      </runprofile>
    </conf>
  </confs>
</configurationDescriptor>
