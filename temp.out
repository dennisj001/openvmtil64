[39;49m[39;49m[39;49m[39;49m
Startup [ 0 ] : elapsed time = 0.037020900 seconds
version 0.902.200
<: tc demo

before testAll 
test nested elif 1 - correct 

 =============================
C.[34;49mfactorial[39;49m <:> cfrTil compiled word
SourceCode for C.[34;49mfactorial[39;49m :> 
[34;49m: factorial ( n | rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ; [39;49m
Source code file location of [34;49mfactorial[39;49m : "namespaces/test/bigNum.cft" : 9.93 :: we are now at : namespaces/test/bigNum.cft : 10.22
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde03cabc -- code size = 87 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mfactorial[39;49m : definition = 0x00007fa6de03cabc : disassembly at namespaces/test/bigNum.cft : 10.22 :
[34;49m ..                                     : [39;49m[33;40mfactorial[39;49m[34;49m ( n | rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ; .. [39;49m[32;49m
0x7fa6de03cabc    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de03cac0    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03cac4    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                           : factorial [39;49m[33;40m([39;49m[34;49m n | rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fa6de03cacb    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..           : factorial ( n | rec ) rec [39;49m[33;40m1[39;49m[34;49m = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fa6de03cacf    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m ..         : factorial ( n | rec ) rec 1 [39;49m[33;40m=[39;49m[34;49m { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fa6de03cad9    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..     : factorial ( n | rec ) rec 1 = { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fa6de03cadc    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m  : factorial ( n | rec ) rec 1 = { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fa6de03cae0    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fa6de03cae4    0f8e19000000            jle 0x7fa6de03cb03         	< C.[34;49mfactorial[39;49m+71 >[39;49m
[34;49m .. ial ( n | rec ) rec 1 = { n @ 1 > } { [39;49m[33;40mrec[39;49m[34;49m @ n @ * rec store n -- } while return rec ; [39;49m[32;49m
0x7fa6de03caea    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. n | rec ) rec 1 = { n @ 1 > } { rec @ [39;49m[33;40mn[39;49m[34;49m @ * rec store n -- } while return rec ; [39;49m[32;49m
0x7fa6de03caee    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. rec ) rec 1 = { n @ 1 > } { rec @ n @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while return rec ; [39;49m[32;49m
0x7fa6de03caf2    480fafc1                imul rax, rcx                                          [39;49m
[34;49m .. c ) rec 1 = { n @ 1 > } { rec @ n @ * [39;49m[33;40mrec[39;49m[34;49m store n -- } while return rec ; [39;49m[32;49m
0x7fa6de03caf6    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m .. rec 1 = { n @ 1 > } { rec @ n @ * rec [39;49m[33;40mstore[39;49m[34;49m n -- } while return rec ; [39;49m[32;49m
0x7fa6de03cafa    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. { n @ 1 > } { rec @ n @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while return rec ; [39;49m[32;49m
0x7fa6de03cafd    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  @ 1 > } { rec @ n @ * rec store n -- [39;49m[33;40m}[39;49m[34;49m while return rec ; [39;49m[32;49m
0x7fa6de03cb01    ebd9                    jmp 0x7fa6de03cadc         	< C.[34;49mfactorial[39;49m+32 >[39;49m
[34;49m ..  { rec @ n @ * rec store n -- } while [39;49m[33;40mreturn[39;49m[34;49m rec ; [39;49m[32;49m
0x7fa6de03cb03    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. @ * rec store n -- } while return rec [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de03cb07    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03cb0b    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. @ n @ * rec store n -- } while return [39;49m[33;40mrec[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de03cb0f    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de03cb12    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factorial' :: codeSize = 86
Word : 0x00007fa6dddeab10 :: Compiled at : 0x00007fa6de03cabc
 =============================
::> 'wdiss' was called at namespaces/test/bigNum.cft 10.22 <::
 5040 factorial  : ok


 =============================
C.[34;49mfactorial[39;49m <:> cfrTil compiled word
SourceCode for C.[34;49mfactorial[39;49m :> 
[34;49m: factorial ( REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ; [39;49m
Source code file location of [34;49mfactorial[39;49m : "namespaces/test/bigNum.cft" : 12.101 :: we are now at : namespaces/test/bigNum.cft : 13.22
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde03cb27 -- code size = 36 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mfactorial[39;49m : definition = 0x00007fa6de03cb27 : disassembly at namespaces/test/bigNum.cft : 13.22 :
[34;49m ..                           : factorial [39;49m[33;40m([39;49m[34;49m REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fa6de03cb27    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m ..   : factorial ( REG n | REG rec ) rec [39;49m[33;40m1[39;49m[34;49m = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fa6de03cb2a    48be0100000000000000    mov rsi, 0x1                                           [39;49m
[34;49m .. l ( REG n | REG rec ) rec 1 = { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { rec @ n @ * rec store n -- } while return rec ; [39;49m[32;49m
0x7fa6de03cb34    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fa6de03cb38    0f8e09000000            jle 0x7fa6de03cb47         	< C.[34;49mfactorial[39;49m+32 >[39;49m
[34;49m .. rec ) rec 1 = { n @ 1 > } { rec @ n @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while return rec ; [39;49m[32;49m
0x7fa6de03cb3e    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. { n @ 1 > } { rec @ n @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while return rec ; [39;49m[32;49m
0x7fa6de03cb42    48ffcf                  dec rdi                                                [39;49m
[34;49m ..  @ 1 > } { rec @ n @ * rec store n -- [39;49m[33;40m}[39;49m[34;49m while return rec ; [39;49m[32;49m
0x7fa6de03cb45    ebed                    jmp 0x7fa6de03cb34         	< C.[34;49mfactorial[39;49m+13 >[39;49m
[34;49m .. @ * rec store n -- } while return rec [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de03cb47    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fa6de03cb4a    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factorial' :: codeSize = 35
Word : 0x00007fa6ddded708 :: Compiled at : 0x00007fa6de03cb27
 =============================
::> 'wdiss' was called at namespaces/test/bigNum.cft 13.22 <::
 5040 factorial  : ok


 =============================
C.[34;49mfactorial[39;49m <:> cfrTil compiled word
SourceCode for C.[34;49mfactorial[39;49m :> 
[34;49m: factorial ( REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ; [39;49m
Source code file location of [34;49mfactorial[39;49m : "namespaces/test/bigNum.cft" : 12.101 :: we are now at : namespaces/test/bigNum.cft : 26.22
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde03cb27 -- code size = 36 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mfactorial[39;49m : definition = 0x00007fa6de03cb27 : disassembly at namespaces/test/bigNum.cft : 26.22 :
[34;49m ..                           : factorial [39;49m[33;40m([39;49m[34;49m REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fa6de03cb27    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m ..   : factorial ( REG n | REG rec ) rec [39;49m[33;40m1[39;49m[34;49m = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fa6de03cb2a    48be0100000000000000    mov rsi, 0x1                                           [39;49m
[34;49m .. l ( REG n | REG rec ) rec 1 = { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { rec @ n @ * rec store n -- } while return rec ; [39;49m[32;49m
0x7fa6de03cb34    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fa6de03cb38    0f8e09000000            jle 0x7fa6de03cb47         	< C.[34;49mfactorial[39;49m+32 >[39;49m
[34;49m .. rec ) rec 1 = { n @ 1 > } { rec @ n @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while return rec ; [39;49m[32;49m
0x7fa6de03cb3e    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. { n @ 1 > } { rec @ n @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while return rec ; [39;49m[32;49m
0x7fa6de03cb42    48ffcf                  dec rdi                                                [39;49m
[34;49m ..  @ 1 > } { rec @ n @ * rec store n -- [39;49m[33;40m}[39;49m[34;49m while return rec ; [39;49m[32;49m
0x7fa6de03cb45    ebed                    jmp 0x7fa6de03cb34         	< C.[34;49mfactorial[39;49m+13 >[39;49m
[34;49m .. @ * rec store n -- } while return rec [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de03cb47    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fa6de03cb4a    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factorial' :: codeSize = 35
Word : 0x00007fa6ddded708 :: Compiled at : 0x00007fa6de03cb27
 =============================
::> 'wdiss' was called at namespaces/test/bigNum.cft 26.22 <::
 5040
 =============================
C.[34;49mfactorial[39;49m <:> cfrTil compiled word
SourceCode for C.[34;49mfactorial[39;49m :> 
[34;49m: factorial ( REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ; [39;49m
Source code file location of [34;49mfactorial[39;49m : "namespaces/test/bigNum.cft" : 12.101 :: we are now at : namespaces/test/bigNum.cft : 28.28
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde03cb27 -- code size = 36 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mfactorial[39;49m : definition = 0x00007fa6de03cb27 : disassembly at namespaces/test/bigNum.cft : 28.28 :
[34;49m ..                           : factorial [39;49m[33;40m([39;49m[34;49m REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fa6de03cb27    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m ..   : factorial ( REG n | REG rec ) rec [39;49m[33;40m1[39;49m[34;49m = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fa6de03cb2a    48be0100000000000000    mov rsi, 0x1                                           [39;49m
[34;49m .. l ( REG n | REG rec ) rec 1 = { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { rec @ n @ * rec store n -- } while return rec ; [39;49m[32;49m
0x7fa6de03cb34    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fa6de03cb38    0f8e09000000            jle 0x7fa6de03cb47         	< C.[34;49mfactorial[39;49m+32 >[39;49m
[34;49m .. rec ) rec 1 = { n @ 1 > } { rec @ n @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while return rec ; [39;49m[32;49m
0x7fa6de03cb3e    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. { n @ 1 > } { rec @ n @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while return rec ; [39;49m[32;49m
0x7fa6de03cb42    48ffcf                  dec rdi                                                [39;49m
[34;49m ..  @ 1 > } { rec @ n @ * rec store n -- [39;49m[33;40m}[39;49m[34;49m while return rec ; [39;49m[32;49m
0x7fa6de03cb45    ebed                    jmp 0x7fa6de03cb34         	< C.[34;49mfactorial[39;49m+13 >[39;49m
[34;49m .. @ * rec store n -- } while return rec [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de03cb47    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fa6de03cb4a    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factorial' :: codeSize = 35
Word : 0x00007fa6ddded708 :: Compiled at : 0x00007fa6de03cb27
 =============================
::> 'wdiss' was called at namespaces/test/bigNum.cft 28.28 <::
 5040
 =============================
BigNum.[34;49mqexp[39;49m <:> cfrTil compiled word
SourceCode for BigNum.[34;49mqexp[39;49m :> 
[34;49m: qexp { dup 1 >= } { dup -- qexp * } { drop 1 } ifElse ; [39;49m
Source code file location of [34;49mqexp[39;49m : "namespaces/test/bigNum.cft" : 49.57 :: we are now at : namespaces/test/bigNum.cft : 50.17
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum on : Lisp off : Word Source Code on
starting at address : 0xde03cbd0 -- code size = 154 bytes
TypeSignature : 
 -----------------------------
Word :: BigNum.[34;49mqexp[39;49m : definition = 0x00007fa6de03cbd0 : disassembly at namespaces/test/bigNum.cft : 50.17 :
[34;49m ..                              : qexp { [39;49m[33;40mdup[39;49m[34;49m 1 >= } { dup -- qexp * } { drop 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de03cbd0    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de03cbd3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03cbd7    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                          : qexp { dup [39;49m[33;40m1[39;49m[34;49m >= } { dup -- qexp * } { drop 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de03cbda    48b81aec09dea67f0000    mov rax, 0x7fa6de09ec1a                                [39;49m[32;49m
0x7fa6de03cbe4    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03cbe8    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                        : qexp { dup 1 [39;49m[33;40m>=[39;49m[34;49m } { dup -- qexp * } { drop 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de03cbeb    49b8e827edbf1d560000    mov r8, 0x561dbfed27e8                                 [39;49m[32;49m
0x7fa6de03cbf5    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03cbff    49ffd1                  call r9                    	< BigNum.[34;49m>=[39;49m : 0x0000561dbfed27e8 >[39;49m
[34;49m ..                     : qexp { dup 1 >= [39;49m[33;40m}[39;49m[34;49m { dup -- qexp * } { drop 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de03cc02    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de03cc05    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. p 1 >= } { dup -- qexp * } { drop 1 } [39;49m[33;40mifElse[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de03cc09    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de03cc0c    0f8442000000            jz 0x7fa6de03cc54          	< BigNum.[34;49mqexp[39;49m+132 >[39;49m
[34;49m ..                 : qexp { dup 1 >= } { [39;49m[33;40mdup[39;49m[34;49m -- qexp * } { drop 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de03cc12    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de03cc15    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03cc19    498906                  mov [r14], rax                                         [39;49m
[34;49m ..             : qexp { dup 1 >= } { dup [39;49m[33;40m--[39;49m[34;49m qexp * } { drop 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de03cc1c    49b83426edbf1d560000    mov r8, 0x561dbfed2634                                 [39;49m[32;49m
0x7fa6de03cc26    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03cc30    49ffd1                  call r9                    	< BigNum.[34;49m--[39;49m : 0x0000561dbfed2634 >[39;49m
[34;49m ..          : qexp { dup 1 >= } { dup -- [39;49m[33;40mqexp[39;49m[34;49m * } { drop 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de03cc33    e898ffffff              call 0x7fa6de03cbd0        	< BigNum.[34;49mqexp[39;49m : 0x00007fa6de03cbd0 >[39;49m
[34;49m ..     : qexp { dup 1 >= } { dup -- qexp [39;49m[33;40m*[39;49m[34;49m } { drop 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de03cc38    49b8c824edbf1d560000    mov r8, 0x561dbfed24c8                                 [39;49m[32;49m
0x7fa6de03cc42    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03cc4c    49ffd1                  call r9                    	< BigNum.[34;49m*[39;49m : 0x0000561dbfed24c8 >[39;49m
[34;49m ..   : qexp { dup 1 >= } { dup -- qexp * [39;49m[33;40m}[39;49m[34;49m { drop 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de03cc4f    e915000000              jmp 0x7fa6de03cc69         	< BigNum.[34;49mqexp[39;49m+153 >[39;49m
[34;49m  : qexp { dup 1 >= } { dup -- qexp * } { [39;49m[33;40mdrop[39;49m[34;49m 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de03cc54    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. { dup 1 >= } { dup -- qexp * } { drop [39;49m[33;40m1[39;49m[34;49m } ifElse ; [39;49m[32;49m
0x7fa6de03cc58    48b896ee09dea67f0000    mov rax, 0x7fa6de09ee96                                [39;49m[32;49m
0x7fa6de03cc62    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03cc66    498906                  mov [r14], rax                                         [39;49m
[34;49m .. } { dup -- qexp * } { drop 1 } ifElse [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de03cc69    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'qexp' :: codeSize = 153
Word : 0x00007fa6dddbebd0 :: Compiled at : 0x00007fa6de03cbd0
 =============================
::> 'wdiss' was called at namespaces/test/bigNum.cft 50.17 <::

 64 ! =  126881533357939042808962815520364490349535517879012388551519623917277055579607782641369088.0000000000000000

 1000 ! =  402500373014356573965793741945905331466415717275973005160450229307388258333305832074207539846141283233702319438244769525411367331950099268525081393066425641102364440538975256902898517732664348980339626955005842316414123623403303314558289023634589822459704133213687429695457361657683095633068674365092298546917635737018843674171489187933483232494644423138811439404881511922556769048272927089741323503336434785632402662508318178665837259828423326590524272558247963332000435657214278730517996831484196794780521608426407559004504605957514774013092093469970916169727571697221184562821813938228404815831008615299778976697065770997474768189927041576443854543367349421048551080834222352223715990791568941498400546806702876237014372470939002485369774391979668323876230446769380468612251665618792787485288393684197966231925205109888854702615949497837812295005890936840393755566768606141716118106467089738495142725886845933949765463606863447249180212483368373142748531552050758951261860855735774759363503465340414857799903094848377914328225502420134160706225369387488557165388258856440905878114403243339443218369283812196222272876497915081151745950838312945559467001410733526843709990418280028695926067425904924017160403088385615383853873873671204578957424842028610403130207220061474237697930654817955553216533560486784371742524017943681683718654713276916520518555137831575727617116067581869846850943768524279471585922876093873717315955846078694518404073987301440581322109739376192655200814870217759606791532106403065695332871696199920944938503897192549529124195488766369835125707913130533414392578650377791848991673178941730310627156743745149304683957293789930220041980215281108226887715116296939951708865964679779009286134328403379974059781066494711832852475207094304993498881340552075990361298578180682331230675764232294360563311013586691240226085143490549124289072062567132304987422415635743567746070194311533656373274375562284550382281185947162716362544861561499521687491322833509308280351313300605862362525996908983812880072943508034247701921763281673871901503890888457638381822916177377158606802753036755393390872007093544903206115548100491698914408060729906267473152898417756855951690401658725978464746597327109704448469122845463964631650412175257859192393071378748734225914381731183587471712625532959775801733207335954317771408537556974482153172331123483834269159359882984336807116835459466939557047224231302459590282324146036434360668725577414879395184240477672413414171312952473257510332755655534651539589753187702700644828017240511283623211730090940094609561181224960.0000000000000000

 =============================
BigNum.[34;49maexp[39;49m <:> cfrTil compiled word
SourceCode for BigNum.[34;49maexp[39;49m :> 
[34;49m: aexp ( -t N.N ) { dup 1 <= } { drop 1 } { dup -- aexp * } ifElse ; [39;49m
Source code file location of [34;49maexp[39;49m : "namespaces/test/bigNum.cft" : 55.68 :: we are now at : namespaces/test/bigNum.cft : 56.17
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum on : Lisp off : Word Source Code on
starting at address : 0xde03cc7e -- code size = 154 bytes
TypeSignature : BigNum -> BigNum 
 -----------------------------
Word :: BigNum.[34;49maexp[39;49m : definition = 0x00007fa6de03cc7e : disassembly at namespaces/test/bigNum.cft : 56.17 :
[34;49m ..                   : aexp ( -t N.N ) { [39;49m[33;40mdup[39;49m[34;49m 1 <= } { drop 1 } { dup -- aexp * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03cc7e    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de03cc81    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03cc85    498906                  mov [r14], rax                                         [39;49m
[34;49m ..               : aexp ( -t N.N ) { dup [39;49m[33;40m1[39;49m[34;49m <= } { drop 1 } { dup -- aexp * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03cc88    48b8eef109dea67f0000    mov rax, 0x7fa6de09f1ee                                [39;49m[32;49m
0x7fa6de03cc92    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03cc96    498906                  mov [r14], rax                                         [39;49m
[34;49m ..             : aexp ( -t N.N ) { dup 1 [39;49m[33;40m<=[39;49m[34;49m } { drop 1 } { dup -- aexp * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03cc99    49b8a627edbf1d560000    mov r8, 0x561dbfed27a6                                 [39;49m[32;49m
0x7fa6de03cca3    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03ccad    49ffd1                  call r9                    	< BigNum.[34;49m<=[39;49m : 0x0000561dbfed27a6 >[39;49m
[34;49m ..          : aexp ( -t N.N ) { dup 1 <= [39;49m[33;40m}[39;49m[34;49m { drop 1 } { dup -- aexp * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03ccb0    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de03ccb3    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. p 1 <= } { drop 1 } { dup -- aexp * } [39;49m[33;40mifElse[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de03ccb7    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de03ccba    0f841a000000            jz 0x7fa6de03ccda          	< BigNum.[34;49maexp[39;49m+92 >[39;49m
[34;49m ..      : aexp ( -t N.N ) { dup 1 <= } { [39;49m[33;40mdrop[39;49m[34;49m 1 } { dup -- aexp * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03ccc0    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. : aexp ( -t N.N ) { dup 1 <= } { drop [39;49m[33;40m1[39;49m[34;49m } { dup -- aexp * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03ccc4    48b86af409dea67f0000    mov rax, 0x7fa6de09f46a                                [39;49m[32;49m
0x7fa6de03ccce    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03ccd2    498906                  mov [r14], rax                                         [39;49m
[34;49m  : aexp ( -t N.N ) { dup 1 <= } { drop 1 [39;49m[33;40m}[39;49m[34;49m { dup -- aexp * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03ccd5    e93d000000              jmp 0x7fa6de03cd17         	< BigNum.[34;49maexp[39;49m+153 >[39;49m
[34;49m ..  ( -t N.N ) { dup 1 <= } { drop 1 } { [39;49m[33;40mdup[39;49m[34;49m -- aexp * } ifElse ; [39;49m[32;49m
0x7fa6de03ccda    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de03ccdd    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03cce1    498906                  mov [r14], rax                                         [39;49m
[34;49m .. t N.N ) { dup 1 <= } { drop 1 } { dup [39;49m[33;40m--[39;49m[34;49m aexp * } ifElse ; [39;49m[32;49m
0x7fa6de03cce4    49b83426edbf1d560000    mov r8, 0x561dbfed2634                                 [39;49m[32;49m
0x7fa6de03ccee    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03ccf8    49ffd1                  call r9                    	< BigNum.[34;49m--[39;49m : 0x0000561dbfed2634 >[39;49m
[34;49m .. .N ) { dup 1 <= } { drop 1 } { dup -- [39;49m[33;40maexp[39;49m[34;49m * } ifElse ; [39;49m[32;49m
0x7fa6de03ccfb    e87effffff              call 0x7fa6de03cc7e        	< BigNum.[34;49maexp[39;49m : 0x00007fa6de03cc7e >[39;49m
[34;49m .. { dup 1 <= } { drop 1 } { dup -- aexp [39;49m[33;40m*[39;49m[34;49m } ifElse ; [39;49m[32;49m
0x7fa6de03cd00    49b8c824edbf1d560000    mov r8, 0x561dbfed24c8                                 [39;49m[32;49m
0x7fa6de03cd0a    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03cd14    49ffd1                  call r9                    	< BigNum.[34;49m*[39;49m : 0x0000561dbfed24c8 >[39;49m
[34;49m .. } { drop 1 } { dup -- aexp * } ifElse [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de03cd17    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'aexp' :: codeSize = 153
Word : 0x00007fa6dddc0840 :: Compiled at : 0x00007fa6de03cc7e
 =============================
::> 'wdiss' was called at namespaces/test/bigNum.cft 56.17 <::

 =============================
BigNum.[34;49mbexp[39;49m <:> cfrTil compiled word
SourceCode for BigNum.[34;49mbexp[39;49m :> 
[34;49m: bexp ( n -- TOS ) { n @ 1 <= } { 1 } { n @ dup 1 - bexp * } ifElse ; [39;49m
Source code file location of [34;49mbexp[39;49m : "namespaces/test/bigNum.cft" : 57.71 :: we are now at : namespaces/test/bigNum.cft : 59.18
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum on : Lisp off : Word Source Code on
starting at address : 0xde03cd1d -- code size = 202 bytes
TypeSignature : 
 -----------------------------
Word :: BigNum.[34;49mbexp[39;49m : definition = 0x00007fa6de03cd1d : disassembly at namespaces/test/bigNum.cft : 59.18 :
[34;49m ..                                     : [39;49m[33;40mbexp[39;49m[34;49m ( n -- TOS ) { n @ 1 <= } { 1 } { n @ dup 1 - bexp * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03cd1d    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de03cd21    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03cd25    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                 : bexp ( n -- TOS ) { [39;49m[33;40mn[39;49m[34;49m @ 1 <= } { 1 } { n @ dup 1 - bexp * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03cd2c    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03cd30    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03cd34    498906                  mov [r14], rax                                         [39;49m
[34;49m ..             : bexp ( n -- TOS ) { n @ [39;49m[33;40m1[39;49m[34;49m <= } { 1 } { n @ dup 1 - bexp * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03cd37    48b83ef709dea67f0000    mov rax, 0x7fa6de09f73e                                [39;49m[32;49m
0x7fa6de03cd41    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03cd45    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de03cd48    49b8a627edbf1d560000    mov r8, 0x561dbfed27a6                                 [39;49m[32;49m
0x7fa6de03cd52    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03cd5c    49ffd1                  call r9                    	< BigNum.[34;49m<=[39;49m : 0x0000561dbfed27a6 >[39;49m
[34;49m ..        : bexp ( n -- TOS ) { n @ 1 <= [39;49m[33;40m}[39;49m[34;49m { 1 } { n @ dup 1 - bexp * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03cd5f    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de03cd62    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de03cd66    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de03cd69    0f8416000000            jz 0x7fa6de03cd85          	< BigNum.[34;49mbexp[39;49m+104 >[39;49m
[34;49m ..    : bexp ( n -- TOS ) { n @ 1 <= } { [39;49m[33;40m1[39;49m[34;49m } { n @ dup 1 - bexp * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03cd6f    48b8baf909dea67f0000    mov rax, 0x7fa6de09f9ba                                [39;49m[32;49m
0x7fa6de03cd79    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03cd7d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  : bexp ( n -- TOS ) { n @ 1 <= } { 1 [39;49m[33;40m}[39;49m[34;49m { n @ dup 1 - bexp * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03cd80    e953000000              jmp 0x7fa6de03cdd8         	< BigNum.[34;49mbexp[39;49m+187 >[39;49m
[34;49m : bexp ( n -- TOS ) { n @ 1 <= } { 1 } { [39;49m[33;40mn[39;49m[34;49m @ dup 1 - bexp * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03cd85    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03cd89    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de03cd8d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ( n -- TOS ) { n @ 1 <= } { 1 } { n @ [39;49m[33;40mdup[39;49m[34;49m 1 - bexp * } ifElse ; [39;49m[32;49m
0x7fa6de03cd90    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. -- TOS ) { n @ 1 <= } { 1 } { n @ dup [39;49m[33;40m1[39;49m[34;49m - bexp * } ifElse ; [39;49m[32;49m
0x7fa6de03cd94    48b836fc09dea67f0000    mov rax, 0x7fa6de09fc36                                [39;49m[32;49m
0x7fa6de03cd9e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03cda2    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  TOS ) { n @ 1 <= } { 1 } { n @ dup 1 [39;49m[33;40m-[39;49m[34;49m bexp * } ifElse ; [39;49m[32;49m
0x7fa6de03cda5    49b8fc24edbf1d560000    mov r8, 0x561dbfed24fc                                 [39;49m[32;49m
0x7fa6de03cdaf    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03cdb9    49ffd1                  call r9                    	< BigNum.[34;49m-[39;49m : 0x0000561dbfed24fc >[39;49m
[34;49m .. OS ) { n @ 1 <= } { 1 } { n @ dup 1 - [39;49m[33;40mbexp[39;49m[34;49m * } ifElse ; [39;49m[32;49m
0x7fa6de03cdbc    e85cffffff              call 0x7fa6de03cd1d        	< BigNum.[34;49mbexp[39;49m : 0x00007fa6de03cd1d >[39;49m[32;49m
0x7fa6de03cdc1    49b8c824edbf1d560000    mov r8, 0x561dbfed24c8                                 [39;49m[32;49m
0x7fa6de03cdcb    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03cdd5    49ffd1                  call r9                    	< BigNum.[34;49m*[39;49m : 0x0000561dbfed24c8 >[39;49m[32;49m
0x7fa6de03cdd8    498b06                  mov rax, [r14]                                         [39;49m
[34;49m .. } { 1 } { n @ dup 1 - bexp * } ifElse [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de03cddb    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03cddf    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03cde3    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de03cde6    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp' :: codeSize = 201
Word : 0x00007fa6dddc24b0 :: Compiled at : 0x00007fa6de03cd1d
 =============================
::> 'wdiss' was called at namespaces/test/bigNum.cft 59.18 <::

 =============================
BigNum.[34;49mbexp0[39;49m <:> cfrTil compiled word
SourceCode for BigNum.[34;49mbexp0[39;49m :> 
[34;49m: bexp0 ( n -- TOS ) { n @ 1 <= } { 1 } { n @ dup -- bexp0 * } ifElse ; [39;49m
Source code file location of [34;49mbexp0[39;49m : "namespaces/test/bigNum.cft" : 58.72 :: we are now at : namespaces/test/bigNum.cft : 59.37
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum on : Lisp off : Word Source Code on
starting at address : 0xde03cdec -- code size = 185 bytes
TypeSignature : 
 -----------------------------
Word :: BigNum.[34;49mbexp0[39;49m : definition = 0x00007fa6de03cdec : disassembly at namespaces/test/bigNum.cft : 59.37 :
[34;49m ..                                     : [39;49m[33;40mbexp0[39;49m[34;49m ( n -- TOS ) { n @ 1 <= } { 1 } { n @ dup -- bexp0 * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03cdec    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de03cdf0    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03cdf4    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                : bexp0 ( n -- TOS ) { [39;49m[33;40mn[39;49m[34;49m @ 1 <= } { 1 } { n @ dup -- bexp0 * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03cdfb    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03cdff    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03ce03    498906                  mov [r14], rax                                         [39;49m
[34;49m ..            : bexp0 ( n -- TOS ) { n @ [39;49m[33;40m1[39;49m[34;49m <= } { 1 } { n @ dup -- bexp0 * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03ce06    48b80aff09dea67f0000    mov rax, 0x7fa6de09ff0a                                [39;49m[32;49m
0x7fa6de03ce10    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03ce14    498906                  mov [r14], rax                                         [39;49m
[34;49m ..          : bexp0 ( n -- TOS ) { n @ 1 [39;49m[33;40m<=[39;49m[34;49m } { 1 } { n @ dup -- bexp0 * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03ce17    49b8a627edbf1d560000    mov r8, 0x561dbfed27a6                                 [39;49m[32;49m
0x7fa6de03ce21    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03ce2b    49ffd1                  call r9                    	< BigNum.[34;49m<=[39;49m : 0x0000561dbfed27a6 >[39;49m
[34;49m ..       : bexp0 ( n -- TOS ) { n @ 1 <= [39;49m[33;40m}[39;49m[34;49m { 1 } { n @ dup -- bexp0 * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03ce2e    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de03ce31    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. @ 1 <= } { 1 } { n @ dup -- bexp0 * } [39;49m[33;40mifElse[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de03ce35    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de03ce38    0f8416000000            jz 0x7fa6de03ce54          	< BigNum.[34;49mbexp0[39;49m+104 >[39;49m
[34;49m ..   : bexp0 ( n -- TOS ) { n @ 1 <= } { [39;49m[33;40m1[39;49m[34;49m } { n @ dup -- bexp0 * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03ce3e    48b886010adea67f0000    mov rax, 0x7fa6de0a0186                                [39;49m[32;49m
0x7fa6de03ce48    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03ce4c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : bexp0 ( n -- TOS ) { n @ 1 <= } { 1 [39;49m[33;40m}[39;49m[34;49m { n @ dup -- bexp0 * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03ce4f    e942000000              jmp 0x7fa6de03ce96         	< BigNum.[34;49mbexp0[39;49m+170 >[39;49m
[34;49m: bexp0 ( n -- TOS ) { n @ 1 <= } { 1 } { [39;49m[33;40mn[39;49m[34;49m @ dup -- bexp0 * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03ce54    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03ce58    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de03ce5c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ( n -- TOS ) { n @ 1 <= } { 1 } { n @ [39;49m[33;40mdup[39;49m[34;49m -- bexp0 * } ifElse ; [39;49m[32;49m
0x7fa6de03ce5f    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. -- TOS ) { n @ 1 <= } { 1 } { n @ dup [39;49m[33;40m--[39;49m[34;49m bexp0 * } ifElse ; [39;49m[32;49m
0x7fa6de03ce63    49b83426edbf1d560000    mov r8, 0x561dbfed2634                                 [39;49m[32;49m
0x7fa6de03ce6d    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03ce77    49ffd1                  call r9                    	< BigNum.[34;49m--[39;49m : 0x0000561dbfed2634 >[39;49m
[34;49m .. TOS ) { n @ 1 <= } { 1 } { n @ dup -- [39;49m[33;40mbexp0[39;49m[34;49m * } ifElse ; [39;49m[32;49m
0x7fa6de03ce7a    e86dffffff              call 0x7fa6de03cdec        	< BigNum.[34;49mbexp0[39;49m : 0x00007fa6de03cdec >[39;49m
[34;49m .. { n @ 1 <= } { 1 } { n @ dup -- bexp0 [39;49m[33;40m*[39;49m[34;49m } ifElse ; [39;49m[32;49m
0x7fa6de03ce7f    49b8c824edbf1d560000    mov r8, 0x561dbfed24c8                                 [39;49m[32;49m
0x7fa6de03ce89    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03ce93    49ffd1                  call r9                    	< BigNum.[34;49m*[39;49m : 0x0000561dbfed24c8 >[39;49m[32;49m
0x7fa6de03ce96    498b06                  mov rax, [r14]                                         [39;49m
[34;49m .. } { 1 } { n @ dup -- bexp0 * } ifElse [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de03ce99    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03ce9d    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03cea1    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de03cea4    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp0' :: codeSize = 184
Word : 0x00007fa6dddc45b8 :: Compiled at : 0x00007fa6de03cdec
 =============================
::> 'wdiss' was called at namespaces/test/bigNum.cft 59.37 <::
 5040.0000000000000000 5040.0000000000000000 40320.0000000000000000 40320.0000000000000000
 5040.0000000000000000 5040.0000000000000000 40320.0000000000000000
 =============================
BigNum.[34;49m!![39;49m <:> cfrTil compiled word
SourceCode for BigNum.[34;49m!![39;49m :> 
[34;49m: !! ! p nl ; [39;49m
Source code file location of [34;49m!![39;49m : "namespaces/test/bigNum.cft" : 69.13 :: we are now at : namespaces/test/bigNum.cft : 70.15
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum on : Lisp off : Word Source Code on
starting at address : 0xde03ceb9 -- code size = 50 bytes
TypeSignature : 
 -----------------------------
Word :: BigNum.[34;49m!![39;49m : definition = 0x00007fa6de03ceb9 : disassembly at namespaces/test/bigNum.cft : 70.15 :
[34;49m ..                                  : !! [39;49m[33;40m![39;49m[34;49m p nl ;  .. [39;49m[32;49m
0x7fa6de03ceb9    49b9eccd03dea67f0000    mov r9, 0x7fa6de03cdec                                 [39;49m[32;49m
0x7fa6de03cec3    49ffd1                  call r9                    	< BigNum.[34;49m![39;49m : 0x00007fa6de03cdec >[39;49m
[34;49m ..                                : !! ! [39;49m[33;40mp[39;49m[34;49m nl ;  .. [39;49m[32;49m
0x7fa6de03cec6    49b9c19803dea67f0000    mov r9, 0x7fa6de0398c1                                 [39;49m[32;49m
0x7fa6de03ced0    49ffd1                  call r9                    	< BigNum.[34;49mp[39;49m : 0x00007fa6de0398c1 >[39;49m
[34;49m ..                              : !! ! p [39;49m[33;40mnl[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fa6de03ced3    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de03cedd    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03cee7    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m ..                           : !! ! p nl [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de03ceea    c3                      ret                                                    [39;49m
Word_Disassemble : word - '!!' :: codeSize = 49
Word : 0x00007fa6dddc68f0 :: Compiled at : 0x00007fa6de03ceb9
 =============================
::> 'wdiss' was called at namespaces/test/bigNum.cft 70.15 <::
 5040.0000000000000000
 40320.0000000000000000
 40320.0000000000000000

 =============================
BigNum.[34;49mbexpl[39;49m <:> cfrTil compiled word
SourceCode for BigNum.[34;49mbexpl[39;49m :> 
[34;49m: bexpl ( n -- TOS ) { n @ 1 <= } { 1 } { n @ dup 1 - bexpl * } ifElse ; [39;49m
Source code file location of [34;49mbexpl[39;49m : "namespaces/test/bigNum.cft" : 81.72 :: we are now at : namespaces/test/bigNum.cft : 82.18
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum on : Lisp off : Word Source Code on
starting at address : 0xde03cef0 -- code size = 202 bytes
TypeSignature : 
 -----------------------------
Word :: BigNum.[34;49mbexpl[39;49m : definition = 0x00007fa6de03cef0 : disassembly at namespaces/test/bigNum.cft : 82.18 :
[34;49m ..                                     : [39;49m[33;40mbexpl[39;49m[34;49m ( n -- TOS ) { n @ 1 <= } { 1 } { n @ dup 1 - bexpl * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03cef0    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de03cef4    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03cef8    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                : bexpl ( n -- TOS ) { [39;49m[33;40mn[39;49m[34;49m @ 1 <= } { 1 } { n @ dup 1 - bexpl * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03ceff    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03cf03    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03cf07    498906                  mov [r14], rax                                         [39;49m
[34;49m ..            : bexpl ( n -- TOS ) { n @ [39;49m[33;40m1[39;49m[34;49m <= } { 1 } { n @ dup 1 - bexpl * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03cf0a    48b896060adea67f0000    mov rax, 0x7fa6de0a0696                                [39;49m[32;49m
0x7fa6de03cf14    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03cf18    498906                  mov [r14], rax                                         [39;49m
[34;49m ..          : bexpl ( n -- TOS ) { n @ 1 [39;49m[33;40m<=[39;49m[34;49m } { 1 } { n @ dup 1 - bexpl * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03cf1b    49b8a627edbf1d560000    mov r8, 0x561dbfed27a6                                 [39;49m[32;49m
0x7fa6de03cf25    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03cf2f    49ffd1                  call r9                    	< BigNum.[34;49m<=[39;49m : 0x0000561dbfed27a6 >[39;49m
[34;49m ..       : bexpl ( n -- TOS ) { n @ 1 <= [39;49m[33;40m}[39;49m[34;49m { 1 } { n @ dup 1 - bexpl * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03cf32    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de03cf35    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  1 <= } { 1 } { n @ dup 1 - bexpl * } [39;49m[33;40mifElse[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de03cf39    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de03cf3c    0f8416000000            jz 0x7fa6de03cf58          	< BigNum.[34;49mbexpl[39;49m+104 >[39;49m
[34;49m ..   : bexpl ( n -- TOS ) { n @ 1 <= } { [39;49m[33;40m1[39;49m[34;49m } { n @ dup 1 - bexpl * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03cf42    48b812090adea67f0000    mov rax, 0x7fa6de0a0912                                [39;49m[32;49m
0x7fa6de03cf4c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03cf50    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : bexpl ( n -- TOS ) { n @ 1 <= } { 1 [39;49m[33;40m}[39;49m[34;49m { n @ dup 1 - bexpl * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03cf53    e953000000              jmp 0x7fa6de03cfab         	< BigNum.[34;49mbexpl[39;49m+187 >[39;49m
[34;49m: bexpl ( n -- TOS ) { n @ 1 <= } { 1 } { [39;49m[33;40mn[39;49m[34;49m @ dup 1 - bexpl * } ifElse ;  .. [39;49m[32;49m
0x7fa6de03cf58    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03cf5c    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de03cf60    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ( n -- TOS ) { n @ 1 <= } { 1 } { n @ [39;49m[33;40mdup[39;49m[34;49m 1 - bexpl * } ifElse ; [39;49m[32;49m
0x7fa6de03cf63    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. -- TOS ) { n @ 1 <= } { 1 } { n @ dup [39;49m[33;40m1[39;49m[34;49m - bexpl * } ifElse ; [39;49m[32;49m
0x7fa6de03cf67    48b88e0b0adea67f0000    mov rax, 0x7fa6de0a0b8e                                [39;49m[32;49m
0x7fa6de03cf71    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03cf75    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  TOS ) { n @ 1 <= } { 1 } { n @ dup 1 [39;49m[33;40m-[39;49m[34;49m bexpl * } ifElse ; [39;49m[32;49m
0x7fa6de03cf78    49b8fc24edbf1d560000    mov r8, 0x561dbfed24fc                                 [39;49m[32;49m
0x7fa6de03cf82    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03cf8c    49ffd1                  call r9                    	< BigNum.[34;49m-[39;49m : 0x0000561dbfed24fc >[39;49m
[34;49m .. OS ) { n @ 1 <= } { 1 } { n @ dup 1 - [39;49m[33;40mbexpl[39;49m[34;49m * } ifElse ; [39;49m[32;49m
0x7fa6de03cf8f    e85cffffff              call 0x7fa6de03cef0        	< BigNum.[34;49mbexpl[39;49m : 0x00007fa6de03cef0 >[39;49m
[34;49m ..  n @ 1 <= } { 1 } { n @ dup 1 - bexpl [39;49m[33;40m*[39;49m[34;49m } ifElse ; [39;49m[32;49m
0x7fa6de03cf94    49b8c824edbf1d560000    mov r8, 0x561dbfed24c8                                 [39;49m[32;49m
0x7fa6de03cf9e    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03cfa8    49ffd1                  call r9                    	< BigNum.[34;49m*[39;49m : 0x0000561dbfed24c8 >[39;49m[32;49m
0x7fa6de03cfab    498b06                  mov rax, [r14]                                         [39;49m
[34;49m ..  { 1 } { n @ dup 1 - bexpl * } ifElse [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de03cfae    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03cfb2    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03cfb6    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de03cfb9    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexpl' :: codeSize = 201
Word : 0x00007fa6dddc73e0 :: Compiled at : 0x00007fa6de03cef0
 =============================
::> 'wdiss' was called at namespaces/test/bigNum.cft 82.18 <::
 5040.0000000000000000
 starting BigNum
 0.3333358764648438 1.7320556640625000 3.0000000000000000 
preprocessor test ok1
 
preprocessor test ok2
 
preprocessor test ok3
 
preprocessor test ok 4
 ppx = 4
 ppxe = 0 
classTest.cft
Using Namespaces :> C Root Class Compiler Logic Int Combinators int System User Shell OpenVmTil Lexer Interpreter Debug Word Namespace StartupMacros Io Compiling Reserved DObject Macro PreProcessor List Stack Memory Colors File String Asm Bits Locals C_Typedef Forth Experimental 

Pointer.size =  8

Integer size =  8

Integer.int16.size =  2

Namespace Error at namespaces/test/classTest.cft : 25.21 ? : 'byte' already exists! : C.byte : ./init.cft 158.27 : size = 44

Integer.byte.size =  1

Using Namespaces :> Class Root byte C Integer Pointer Compiler Logic Int Combinators int System User Shell OpenVmTil Lexer Interpreter Debug Word Namespace StartupMacros Io Compiling Reserved DObject Macro PreProcessor List Stack Memory Colors File String Asm Bits Locals C_Typedef Forth Experimental 

Using Namespaces :> DLLNode Buffer Class Root byte C Integer Pointer Compiler Logic Int Combinators int System User Shell OpenVmTil Lexer Interpreter Debug Word Namespace StartupMacros Io Compiling Reserved DObject Macro PreProcessor List Stack Memory Colors File String Asm Bits Locals C_Typedef Forth Experimental 

DLLNode size =  16

DLLNode size =  18

Using Namespaces :> DLLNode Buffer Class Root byte C Integer Pointer Compiler Logic Int Combinators int System User Shell OpenVmTil Lexer Interpreter Debug Word Namespace StartupMacros Io Compiling Reserved DObject Macro PreProcessor List Stack Memory Colors File String Asm Bits Locals C_Typedef Forth Experimental 

DLLNode size =  16
 16
Dump at : namespaces/test/classTest.cft : 60.36 :
Dump : Address = 0x00007fa6ddd16688 : Number = 16 :: (little endian dump)
0x00007fa6ddd16688 : 0x0000000000000001 0x0000000000000002  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 

 =============================
DLList.[34;49minit[39;49m <:> cfrTil compiled word
SourceCode for DLList.[34;49minit[39;49m :> 
[34;49m: init ( this ) this.HeadNode.AfterReference this.TailNode.BeforeReference = this.TailNode.BeforeReference this.HeadNode.AfterReference = this.HeadNode.BeforeReference 1 = this.TailNode.AfterReference 2 = ; [39;49m
Source code file location of [34;49minit[39;49m : "namespaces/test/classTest.cft" : 71.15 :: we are now at : namespaces/test/classTest.cft : 77.18
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde03d11e -- code size = 119 bytes
TypeSignature : 
 -----------------------------
Word :: DLList.[34;49minit[39;49m : definition = 0x00007fa6de03d11e : disassembly at namespaces/test/classTest.cft : 77.18 :
[34;49m ..                                     : [39;49m[33;40minit[39;49m[34;49m ( this ) this.HeadNode.AfterReference this.TailNode.BeforeReference = this.TailNode.Be .. [39;49m[32;49m
0x7fa6de03d11e    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de03d122    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03d126    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                       : init ( this ) [39;49m[33;40mthis[39;49m[34;49m.HeadNode.AfterReference this.TailNode.BeforeReference = this.TailNode.BeforeReference  .. [39;49m[32;49m
0x7fa6de03d12d    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d131    4881c000000000          add rax, 0x0                                           [39;49m
[34;49m .. ( this ) this.HeadNode.AfterReference [39;49m[33;40mthis[39;49m[34;49m.TailNode.BeforeReference = this.TailNode.BeforeReference this.HeadNode.AfterReference  .. [39;49m[32;49m
0x7fa6de03d138    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d13c    4881c118000000          add rcx, 0x18                                          [39;49m
[34;49m .. ference this.TailNode.BeforeReference [39;49m[33;40m=[39;49m[34;49m this.TailNode.BeforeReference this.HeadNode.AfterReference = this.HeadNode.BeforeReferenc .. [39;49m[32;49m
0x7fa6de03d143    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. rence this.TailNode.BeforeReference = [39;49m[33;40mthis[39;49m[34;49m.TailNode.BeforeReference this.HeadNode.AfterReference = this.HeadNode.BeforeReference  .. [39;49m[32;49m
0x7fa6de03d146    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d14a    4881c018000000          add rax, 0x18                                          [39;49m
[34;49m .. rence = this.TailNode.BeforeReference [39;49m[33;40mthis[39;49m[34;49m.HeadNode.AfterReference = this.HeadNode.BeforeReference 1 = this.TailNode.AfterReferen .. [39;49m[32;49m
0x7fa6de03d151    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. eference this.HeadNode.AfterReference [39;49m[33;40m=[39;49m[34;49m this.HeadNode.BeforeReference 1 = this.TailNode.AfterReference 2 = ;  .. [39;49m[32;49m
0x7fa6de03d155    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. erence this.HeadNode.AfterReference = [39;49m[33;40mthis[39;49m[34;49m.HeadNode.BeforeReference 1 = this.TailNode.AfterReference 2 = ;  .. [39;49m[32;49m
0x7fa6de03d158    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d15c    4881c008000000          add rax, 0x8                                           [39;49m
[34;49m .. rence = this.HeadNode.BeforeReference [39;49m[33;40m1[39;49m[34;49m = this.TailNode.AfterReference 2 = ;  .. [39;49m[32;49m
0x7fa6de03d163    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. nce = this.HeadNode.BeforeReference 1 [39;49m[33;40m=[39;49m[34;49m this.TailNode.AfterReference 2 = ;  .. [39;49m[32;49m
0x7fa6de03d16d    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. e = this.HeadNode.BeforeReference 1 = [39;49m[33;40mthis[39;49m[34;49m.TailNode.AfterReference 2 = ;  .. [39;49m[32;49m
0x7fa6de03d170    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d174    4881c010000000          add rax, 0x10                                          [39;49m
[34;49m .. ence 1 = this.TailNode.AfterReference [39;49m[33;40m2[39;49m[34;49m = ;  .. [39;49m[32;49m
0x7fa6de03d17b    48b90200000000000000    mov rcx, 0x2                                           [39;49m
[34;49m .. ce 1 = this.TailNode.AfterReference 2 [39;49m[33;40m=[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fa6de03d185    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  1 = this.TailNode.AfterReference 2 = [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de03d188    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d18c    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03d190    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d194    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'init' :: codeSize = 118
Word : 0x00007fa6dddd05d0 :: Compiled at : 0x00007fa6de03d11e
 =============================
::> 'wdiss' was called at namespaces/test/classTest.cft 77.18 <::
 32
Dump at : namespaces/test/classTest.cft : 80.34 :
Dump : Address = 0x00007fa6ddd17188 : Number = 32 :: (little endian dump)
0x00007fa6ddd17188 : 0x00007fa6ddd171a0 0x0000000000000001  a0 71 d1 dd a6 7f 00 00  01 00 00 00 00 00 00 00  .q...... ........ 
0x00007fa6ddd17198 : 0x0000000000000002 0x00007fa6ddd17188  02 00 00 00 00 00 00 00  88 71 d1 dd a6 7f 00 00  ........ .q...... 
 class init test :   : ok


Using Namespaces :> DLList DLLNode Buffer Class Root byte C Integer Pointer Compiler Logic Int Combinators int System User Shell OpenVmTil Lexer Interpreter Debug Word Namespace StartupMacros Io Compiling Reserved DObject Macro PreProcessor List Stack Memory Colors File String Asm Bits Locals C_Typedef Forth Experimental 

 =============================
DLListClone.[34;49minit[39;49m <:> cfrTil compiled word
SourceCode for DLListClone.[34;49minit[39;49m :> 
[34;49m: init ( this ) this.Category 12 = this.Three 3 = this.Prototype this.Three @ = this.Prototype @ dup p 3 "init_assert1" assert this.Prototype @ p this.Sum 0 = this.Four 4 = this.Twelve 12 = this.Accum this.Sum @ = this.Sum this.Category @ 3 + this.Prototype @ & = this.Sum @ 3 "init_assert2" do> locationPush does> locationPrint <do assert this.Accum this.Three @ this.Four @ * this.Three @ / = this.Accum @ 4 "\n DLListClone init : this.Accum = :" ps "init_assert3" assert this.Prototype @ p this.Sum this.Category @ this.Prototype @ * this.Category @ - = this.Sum @ dup hex p 24 "init_assert5" assert decimal nl this.Category @ dup p 12 "init_assert7" assert this.Prototype @ p this.Sum this.Category @ this.Prototype @ * dup "testing yada" ps dup p 36 "init_assert8" assert = this.Sum this.Category @ this.Prototype @ - dup p = this.Sum this.Category @ this.Prototype @ && dup p = this.Sum this.Category @ this.Prototype @ & dup p = this.Accum this.Prototype @ = this.Sum this.Category @ this.Prototype @ || dup p = this.Sum this.Category @ this.Prototype @ / dup p = this.Category @ dup p 12 _assert this.Sum @ p this.Prototype @ p "\n 12 3 testing yada 36 9 1 0 15 4 12 4 3 : output above should (approximately) read" ddps hex "\nthis = " ps this p "\nthis @ = " ps this @ p "\nthis.size = " ps this.size @ p this @ dup p this.size @ dump this dup p this.size @ dump this.Accum this.Prototype @ dup p = this this.size @ dump decimal this.Accum @ dup 3 "\nAccum should be 3 : assert9 =" assert p this.Category @ dup 12 "\nCategory should be 12 : assert10 =" assert p ; [39;49m
Source code file location of [34;49minit[39;49m : "namespaces/test/classTest.cft" : 102.16 :: we are now at : namespaces/test/classTest.cft : 150.18
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde03d19a -- code size = 2679 bytes
TypeSignature : 
 -----------------------------
Word :: DLListClone.[34;49minit[39;49m : definition = 0x00007fa6de03d19a : disassembly at namespaces/test/classTest.cft : 150.18 :
[34;49m ..                                     : [39;49m[33;40minit[39;49m[34;49m ( this ) this.Category 12 = this.Three 3 =  this.Prototype this.Three @ = this.Prototy .. [39;49m[32;49m
0x7fa6de03d19a    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de03d19e    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03d1a2    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                       : init ( this ) [39;49m[33;40mthis[39;49m[34;49m.Category 12 = this.Three 3 =  this.Prototype this.Three @ = this.Prototype @ dup p 3 " .. [39;49m[32;49m
0x7fa6de03d1a9    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d1ad    4881c020000000          add rax, 0x20                                          [39;49m
[34;49m ..         : init ( this ) this.Category [39;49m[33;40m12[39;49m[34;49m = this.Three 3 =  this.Prototype this.Three @ = this.Prototype @ dup p 3 "init_assert1"  .. [39;49m[32;49m
0x7fa6de03d1b4    48b90c00000000000000    mov rcx, 0xc                                           [39;49m
[34;49m ..      : init ( this ) this.Category 12 [39;49m[33;40m=[39;49m[34;49m this.Three 3 =  this.Prototype this.Three @ = this.Prototype @ dup p 3 "init_assert1" ass .. [39;49m[32;49m
0x7fa6de03d1be    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..    : init ( this ) this.Category 12 = [39;49m[33;40mthis[39;49m[34;49m.Three 3 =  this.Prototype this.Three @ = this.Prototype @ dup p 3 "init_assert1" asser .. [39;49m[32;49m
0x7fa6de03d1c1    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d1c5    4881c040000000          add rax, 0x40                                          [39;49m
[34;49m ..  this ) this.Category 12 = this.Three [39;49m[33;40m3[39;49m[34;49m =  this.Prototype this.Three @ = this.Prototype @ dup p 3 "init_assert1" assert  this.Pro .. [39;49m[32;49m
0x7fa6de03d1cc    48b90300000000000000    mov rcx, 0x3                                           [39;49m
[34;49m .. his ) this.Category 12 = this.Three 3 [39;49m[33;40m=[39;49m[34;49m  this.Prototype this.Three @ = this.Prototype @ dup p 3 "init_assert1" assert  this.Proto .. [39;49m[32;49m
0x7fa6de03d1d6    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  ) this.Category 12 = this.Three 3 =  [39;49m[33;40mthis[39;49m[34;49m.Prototype this.Three @ = this.Prototype @ dup p 3 "init_assert1" assert  this.Prototyp .. [39;49m[32;49m
0x7fa6de03d1d9    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d1dd    4881c028000000          add rax, 0x28                                          [39;49m
[34;49m .. y 12 = this.Three 3 =  this.Prototype [39;49m[33;40mthis[39;49m[34;49m.Three @ = this.Prototype @ dup p 3 "init_assert1" assert  this.Prototype @ p  this.Sum .. [39;49m[32;49m
0x7fa6de03d1e4    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d1e8    4881c140000000          add rcx, 0x40                                          [39;49m[32;49m
0x7fa6de03d1ef    488b09                  mov rcx, [rcx]                                         [39;49m
[34;49m .. hree 3 =  this.Prototype this.Three @ [39;49m[33;40m=[39;49m[34;49m this.Prototype @ dup p 3 "init_assert1" assert  this.Prototype @ p  this.Sum 0 = this.Fou .. [39;49m[32;49m
0x7fa6de03d1f2    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. ee 3 =  this.Prototype this.Three @ = [39;49m[33;40mthis[39;49m[34;49m.Prototype @ dup p 3 "init_assert1" assert  this.Prototype @ p  this.Sum 0 = this.Four  .. [39;49m[32;49m
0x7fa6de03d1f5    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d1f9    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fa6de03d200    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de03d203    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de03d207    498906                  mov [r14], rax                                         [39;49m
[34;49m .. otype this.Three @ = this.Prototype @ [39;49m[33;40mdup[39;49m[34;49m p 3 "init_assert1" assert  this.Prototype @ p  this.Sum 0 = this.Four 4 =  this.Twelve  .. [39;49m[32;49m
0x7fa6de03d20a    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. e this.Three @ = this.Prototype @ dup [39;49m[33;40mp[39;49m[34;49m 3 "init_assert1" assert  this.Prototype @ p  this.Sum 0 = this.Four 4 =  this.Twelve 12 = .. [39;49m[32;49m
0x7fa6de03d20e    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de03d218    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. this.Three @ = this.Prototype @ dup p [39;49m[33;40m3[39;49m[34;49m "init_assert1" assert  this.Prototype @ p  this.Sum 0 = this.Four 4 =  this.Twelve 12 = t .. [39;49m[32;49m
0x7fa6de03d21b    48b80300000000000000    mov rax, 0x3                                           [39;49m[32;49m
0x7fa6de03d225    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d229    498906                  mov [r14], rax                                         [39;49m
[34;49m .. is.Three @ = this.Prototype @ dup p 3 [39;49m[33;40m"init_assert1"[39;49m[34;49m assert  this.Prototype @ p  this.Sum 0 = this.Four 4 =  this.Twelve 12 = thi .. [39;49m[32;49m
0x7fa6de03d22c    48b88e63fedda67f0000    mov rax, 0x7fa6ddfe638e    	< string : '[34;49minit_assert1[39;49m' >[39;49m[32;49m
0x7fa6de03d236    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d23a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. is.Prototype @ dup p 3 "init_assert1" [39;49m[33;40massert[39;49m[34;49m  this.Prototype @ p  this.Sum 0 = this.Four 4 =  this.Twelve 12 = this.Accum this.Su .. [39;49m[32;49m
0x7fa6de03d23d    49b98da803dea67f0000    mov r9, 0x7fa6de03a88d                                 [39;49m[32;49m
0x7fa6de03d247    49ffd1                  call r9                    	< System.[34;49massert1[39;49m : 0x00007fa6de03a88d >[39;49m
[34;49m .. type @ dup p 3 "init_assert1" assert  [39;49m[33;40mthis[39;49m[34;49m.Prototype @ p  this.Sum 0 = this.Four 4 =  this.Twelve 12 = this.Accum this.Sum @ = th .. [39;49m[32;49m
0x7fa6de03d24a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d24e    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fa6de03d255    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de03d258    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d25c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. nit_assert1" assert  this.Prototype @ [39;49m[33;40mp[39;49m[34;49m  this.Sum 0 = this.Four 4 =  this.Twelve 12 = this.Accum this.Sum @ = this.Sum this.Categ .. [39;49m[32;49m
0x7fa6de03d25f    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de03d269    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. _assert1" assert  this.Prototype @ p  [39;49m[33;40mthis[39;49m[34;49m.Sum 0 = this.Four 4 =  this.Twelve 12 = this.Accum this.Sum @ = this.Sum this.Category .. [39;49m[32;49m
0x7fa6de03d26c    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d270    4881c030000000          add rax, 0x30                                          [39;49m
[34;49m ..  assert  this.Prototype @ p  this.Sum [39;49m[33;40m0[39;49m[34;49m = this.Four 4 =  this.Twelve 12 = this.Accum this.Sum @ = this.Sum this.Category @ 3 + th .. [39;49m[32;49m
0x7fa6de03d277    48b90000000000000000    mov rcx, 0x0                                           [39;49m
[34;49m .. ssert  this.Prototype @ p  this.Sum 0 [39;49m[33;40m=[39;49m[34;49m this.Four 4 =  this.Twelve 12 = this.Accum this.Sum @ = this.Sum this.Category @ 3 + this .. [39;49m[32;49m
0x7fa6de03d281    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. ert  this.Prototype @ p  this.Sum 0 = [39;49m[33;40mthis[39;49m[34;49m.Four 4 =  this.Twelve 12 = this.Accum this.Sum @ = this.Sum this.Category @ 3 + this.P .. [39;49m[32;49m
0x7fa6de03d284    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d288    4881c048000000          add rax, 0x48                                          [39;49m
[34;49m .. Prototype @ p  this.Sum 0 = this.Four [39;49m[33;40m4[39;49m[34;49m =  this.Twelve 12 = this.Accum this.Sum @ = this.Sum this.Category @ 3 + this.Prototype @ .. [39;49m[32;49m
0x7fa6de03d28f    48b90400000000000000    mov rcx, 0x4                                           [39;49m
[34;49m .. ototype @ p  this.Sum 0 = this.Four 4 [39;49m[33;40m=[39;49m[34;49m  this.Twelve 12 = this.Accum this.Sum @ = this.Sum this.Category @ 3 + this.Prototype @ & .. [39;49m[32;49m
0x7fa6de03d299    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. type @ p  this.Sum 0 = this.Four 4 =  [39;49m[33;40mthis[39;49m[34;49m.Twelve 12 = this.Accum this.Sum @ = this.Sum this.Category @ 3 + this.Prototype @ & =  .. [39;49m[32;49m
0x7fa6de03d29c    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d2a0    4881c038000000          add rax, 0x38                                          [39;49m
[34;49m .. is.Sum 0 = this.Four 4 =  this.Twelve [39;49m[33;40m12[39;49m[34;49m = this.Accum this.Sum @ = this.Sum this.Category @ 3 + this.Prototype @ & = this.Sum @ 3 .. [39;49m[32;49m
0x7fa6de03d2a7    48b90c00000000000000    mov rcx, 0xc                                           [39;49m
[34;49m .. Sum 0 = this.Four 4 =  this.Twelve 12 [39;49m[33;40m=[39;49m[34;49m this.Accum this.Sum @ = this.Sum this.Category @ 3 + this.Prototype @ & = this.Sum @ 3 "i .. [39;49m[32;49m
0x7fa6de03d2b1    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. m 0 = this.Four 4 =  this.Twelve 12 = [39;49m[33;40mthis[39;49m[34;49m.Accum this.Sum @ = this.Sum this.Category @ 3 + this.Prototype @ & = this.Sum @ 3 "ini .. [39;49m[32;49m
0x7fa6de03d2b4    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d2b8    4881c050000000          add rax, 0x50                                          [39;49m
[34;49m .. Four 4 =  this.Twelve 12 = this.Accum [39;49m[33;40mthis[39;49m[34;49m.Sum @ = this.Sum this.Category @ 3 + this.Prototype @ & = this.Sum @ 3 "init_assert2"  .. [39;49m[32;49m
0x7fa6de03d2bf    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d2c3    4881c130000000          add rcx, 0x30                                          [39;49m[32;49m
0x7fa6de03d2ca    488b09                  mov rcx, [rcx]                                         [39;49m
[34;49m .. his.Twelve 12 = this.Accum this.Sum @ [39;49m[33;40m=[39;49m[34;49m this.Sum this.Category @ 3 + this.Prototype @ & = this.Sum @ 3 "init_assert2" do> locatio .. [39;49m[32;49m
0x7fa6de03d2cd    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. s.Twelve 12 = this.Accum this.Sum @ = [39;49m[33;40mthis[39;49m[34;49m.Sum this.Category @ 3 + this.Prototype @ & = this.Sum @ 3 "init_assert2" do> locationP .. [39;49m[32;49m
0x7fa6de03d2d0    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d2d4    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fa6de03d2db    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d2df    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 12 = this.Accum this.Sum @ = this.Sum [39;49m[33;40mthis[39;49m[34;49m.Category @ 3 + this.Prototype @ & = this.Sum @ 3 "init_assert2" do> locationPush does> .. [39;49m[32;49m
0x7fa6de03d2e2    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d2e6    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fa6de03d2ed    488b00                  mov rax, [rax]                                         [39;49m
[34;49m .. this.Sum @ = this.Sum this.Category @ [39;49m[33;40m3[39;49m[34;49m + this.Prototype @ & = this.Sum @ 3 "init_assert2" do> locationPush does> locationPrint < .. [39;49m[32;49m
0x7fa6de03d2f0    48b90300000000000000    mov rcx, 0x3                                           [39;49m
[34;49m .. is.Sum @ = this.Sum this.Category @ 3 [39;49m[33;40m+[39;49m[34;49m this.Prototype @ & = this.Sum @ 3 "init_assert2" do> locationPush does> locationPrint <do .. [39;49m[32;49m
0x7fa6de03d2fa    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. .Sum @ = this.Sum this.Category @ 3 + [39;49m[33;40mthis[39;49m[34;49m.Prototype @ & = this.Sum @ 3 "init_assert2" do> locationPush does> locationPrint <do a .. [39;49m[32;49m
0x7fa6de03d2fd    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d301    4881c128000000          add rcx, 0x28                                          [39;49m[32;49m
0x7fa6de03d308    488b09                  mov rcx, [rcx]                                         [39;49m
[34;49m ..  this.Category @ 3 + this.Prototype @ [39;49m[33;40m&[39;49m[34;49m = this.Sum @ 3 "init_assert2" do> locationPush does> locationPrint <do assert  this.Accum .. [39;49m[32;49m
0x7fa6de03d30b    4823c1                  and rax, rcx                                           [39;49m[32;49m
0x7fa6de03d30e    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de03d311    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de03d314    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. his.Category @ 3 + this.Prototype @ & [39;49m[33;40m=[39;49m[34;49m this.Sum @ 3 "init_assert2" do> locationPush does> locationPrint <do assert  this.Accum t .. [39;49m[32;49m
0x7fa6de03d318    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. s.Category @ 3 + this.Prototype @ & = [39;49m[33;40mthis[39;49m[34;49m.Sum @ 3 "init_assert2" do> locationPush does> locationPrint <do assert  this.Accum thi .. [39;49m[32;49m
0x7fa6de03d31b    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d31f    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fa6de03d326    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de03d329    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d32d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ 3 + this.Prototype @ & = this.Sum @ [39;49m[33;40m3[39;49m[34;49m "init_assert2" do> locationPush does> locationPrint <do assert  this.Accum this.Three @ t .. [39;49m[32;49m
0x7fa6de03d330    48b80300000000000000    mov rax, 0x3                                           [39;49m[32;49m
0x7fa6de03d33a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d33e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 3 + this.Prototype @ & = this.Sum @ 3 [39;49m[33;40m"init_assert2"[39;49m[34;49m do> locationPush does> locationPrint <do assert  this.Accum this.Three @ thi .. [39;49m[32;49m
0x7fa6de03d341    48b8c663fedda67f0000    mov rax, 0x7fa6ddfe63c6    	< string : '[34;49minit_assert2[39;49m' >[39;49m[32;49m
0x7fa6de03d34b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d34f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ype @ & = this.Sum @ 3 "init_assert2" [39;49m[33;40mdo>[39;49m[34;49m locationPush does> locationPrint <do assert  this.Accum this.Three @ this.Four @ * this .. [39;49m[32;49m
0x7fa6de03d352    48b83878d1dda67f0000    mov rax, 0x7fa6ddd17838                                [39;49m[32;49m
0x7fa6de03d35c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d360    498906                  mov [r14], rax                                         [39;49m
[34;49m .. "init_assert2" do> locationPush does> [39;49m[33;40mlocationPrint[39;49m[34;49m <do assert  this.Accum this.Three @ this.Four @ * this.Three @ / =  this.Accu .. [39;49m[32;49m
0x7fa6de03d363    49b89143efbf1d560000    mov r8, 0x561dbfef4391                                 [39;49m[32;49m
0x7fa6de03d36d    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03d377    49ffd1                  call r9                    	< Experimental.[34;49mlocationPrint[39;49m : 0x0000561dbfef4391 >[39;49m
[34;49m ..  locationPush does> locationPrint <do [39;49m[33;40massert[39;49m[34;49m  this.Accum this.Three @ this.Four @ * this.Three @ / =  this.Accum @ 4 "\n DLListCl .. [39;49m[32;49m
0x7fa6de03d37a    49b98da803dea67f0000    mov r9, 0x7fa6de03a88d                                 [39;49m[32;49m
0x7fa6de03d384    49ffd1                  call r9                    	< System.[34;49massert1[39;49m : 0x00007fa6de03a88d >[39;49m
[34;49m .. nPush does> locationPrint <do assert  [39;49m[33;40mthis[39;49m[34;49m.Accum this.Three @ this.Four @ * this.Three @ / =  this.Accum @ 4 "\n DLListClone init .. [39;49m[32;49m
0x7fa6de03d387    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d38b    4881c050000000          add rax, 0x50                                          [39;49m[32;49m
0x7fa6de03d392    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d396    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  locationPrint <do assert  this.Accum [39;49m[33;40mthis[39;49m[34;49m.Three @ this.Four @ * this.Three @ / =  this.Accum @ 4 "\n DLListClone init : this.Acc .. [39;49m[32;49m
0x7fa6de03d399    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d39d    4881c040000000          add rax, 0x40                                          [39;49m[32;49m
0x7fa6de03d3a4    488b00                  mov rax, [rax]                                         [39;49m
[34;49m .. t <do assert  this.Accum this.Three @ [39;49m[33;40mthis[39;49m[34;49m.Four @ * this.Three @ / =  this.Accum @ 4 "\n DLListClone init : this.Accum = :" ps "i .. [39;49m[32;49m
0x7fa6de03d3a7    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d3ab    4881c148000000          add rcx, 0x48                                          [39;49m[32;49m
0x7fa6de03d3b2    488b09                  mov rcx, [rcx]                                         [39;49m
[34;49m ..   this.Accum this.Three @ this.Four @ [39;49m[33;40m*[39;49m[34;49m this.Three @ / =  this.Accum @ 4 "\n DLListClone init : this.Accum = :" ps "init_assert3" .. [39;49m[32;49m
0x7fa6de03d3b5    480fafc1                imul rax, rcx                                          [39;49m
[34;49m .. this.Accum this.Three @ this.Four @ * [39;49m[33;40mthis[39;49m[34;49m.Three @ / =  this.Accum @ 4 "\n DLListClone init : this.Accum = :" ps "init_assert3" a .. [39;49m[32;49m
0x7fa6de03d3b9    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d3bd    4881c140000000          add rcx, 0x40                                          [39;49m[32;49m
0x7fa6de03d3c4    488b09                  mov rcx, [rcx]                                         [39;49m
[34;49m .. is.Three @ this.Four @ * this.Three @ [39;49m[33;40m/[39;49m[34;49m =  this.Accum @ 4 "\n DLListClone init : this.Accum = :" ps "init_assert3" assert  this.P .. [39;49m[32;49m
0x7fa6de03d3c7    48ba0000000000000000    mov rdx, 0x0                                           [39;49m[32;49m
0x7fa6de03d3d1    48f7f9                  idiv rcx                                               [39;49m[32;49m
0x7fa6de03d3d4    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de03d3d7    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de03d3da    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. .Three @ this.Four @ * this.Three @ / [39;49m[33;40m=[39;49m[34;49m  this.Accum @ 4 "\n DLListClone init : this.Accum = :" ps "init_assert3" assert  this.Pro .. [39;49m[32;49m
0x7fa6de03d3de    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. ree @ this.Four @ * this.Three @ / =  [39;49m[33;40mthis[39;49m[34;49m.Accum @ 4 "\n DLListClone init : this.Accum = :" ps "init_assert3" assert  this.Protot .. [39;49m[32;49m
0x7fa6de03d3e1    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d3e5    4881c050000000          add rax, 0x50                                          [39;49m[32;49m
0x7fa6de03d3ec    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de03d3ef    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d3f3    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ur @ * this.Three @ / =  this.Accum @ [39;49m[33;40m4[39;49m[34;49m "\n DLListClone init : this.Accum = :" ps "init_assert3" assert  this.Prototype @ p this. .. [39;49m[32;49m
0x7fa6de03d3f6    48b80400000000000000    mov rax, 0x4                                           [39;49m[32;49m
0x7fa6de03d400    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d404    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  @ * this.Three @ / =  this.Accum @ 4 [39;49m[33;40m"\n DLListClone init : this.Accum = :"[39;49m[34;49m ps "init_assert3" assert  this.Prototype @ p this.Su .. [39;49m[32;49m
0x7fa6de03d407    48b80a64fedda67f0000    mov rax, 0x7fa6ddfe640a    	< string : '[34;49m\n DLListClone init : this.Accum = :[39;49m' >[39;49m[32;49m
0x7fa6de03d411    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d415    498906                  mov [r14], rax                                         [39;49m
[34;49m .. \n DLListClone init : this.Accum = :" [39;49m[33;40mps[39;49m[34;49m "init_assert3" assert  this.Prototype @ p this.Sum this.Category @ this.Prototype @ * th .. [39;49m[32;49m
0x7fa6de03d418    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de03d422    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m .. DLListClone init : this.Accum = :" ps [39;49m[33;40m"init_assert3"[39;49m[34;49m assert  this.Prototype @ p this.Sum this.Category @ this.Prototype @ * this. .. [39;49m[32;49m
0x7fa6de03d425    48b86364fedda67f0000    mov rax, 0x7fa6ddfe6463    	< string : '[34;49minit_assert3[39;49m' >[39;49m[32;49m
0x7fa6de03d42f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d433    498906                  mov [r14], rax                                         [39;49m
[34;49m .. t : this.Accum = :" ps "init_assert3" [39;49m[33;40massert[39;49m[34;49m  this.Prototype @ p this.Sum this.Category @ this.Prototype @ * this.Category @ - =  .. [39;49m[32;49m
0x7fa6de03d436    49b98da803dea67f0000    mov r9, 0x7fa6de03a88d                                 [39;49m[32;49m
0x7fa6de03d440    49ffd1                  call r9                    	< System.[34;49massert1[39;49m : 0x00007fa6de03a88d >[39;49m
[34;49m .. .Accum = :" ps "init_assert3" assert  [39;49m[33;40mthis[39;49m[34;49m.Prototype @ p this.Sum this.Category @ this.Prototype @ * this.Category @ - = this.Sum .. [39;49m[32;49m
0x7fa6de03d443    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d447    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fa6de03d44e    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de03d451    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d455    498906                  mov [r14], rax                                         [39;49m
[34;49m .. nit_assert3" assert  this.Prototype @ [39;49m[33;40mp[39;49m[34;49m this.Sum this.Category @ this.Prototype @ * this.Category @ - = this.Sum @ dup hex p 24 " .. [39;49m[32;49m
0x7fa6de03d458    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de03d462    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. t_assert3" assert  this.Prototype @ p [39;49m[33;40mthis[39;49m[34;49m.Sum this.Category @ this.Prototype @ * this.Category @ - = this.Sum @ dup hex p 24 "in .. [39;49m[32;49m
0x7fa6de03d465    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d469    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fa6de03d470    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d474    498906                  mov [r14], rax                                         [39;49m
[34;49m .. " assert  this.Prototype @ p this.Sum [39;49m[33;40mthis[39;49m[34;49m.Category @ this.Prototype @ * this.Category @ - = this.Sum @ dup hex p 24 "init_assert .. [39;49m[32;49m
0x7fa6de03d477    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d47b    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fa6de03d482    488b00                  mov rax, [rax]                                         [39;49m
[34;49m .. rototype @ p this.Sum this.Category @ [39;49m[33;40mthis[39;49m[34;49m.Prototype @ * this.Category @ - = this.Sum @ dup hex p 24 "init_assert5" assert decima .. [39;49m[32;49m
0x7fa6de03d485    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d489    4881c128000000          add rcx, 0x28                                          [39;49m[32;49m
0x7fa6de03d490    488b09                  mov rcx, [rcx]                                         [39;49m
[34;49m .. .Sum this.Category @ this.Prototype @ [39;49m[33;40m*[39;49m[34;49m this.Category @ - = this.Sum @ dup hex p 24 "init_assert5" assert decimal nl this.Categor .. [39;49m[32;49m
0x7fa6de03d493    480fafc1                imul rax, rcx                                          [39;49m
[34;49m .. um this.Category @ this.Prototype @ * [39;49m[33;40mthis[39;49m[34;49m.Category @ - = this.Sum @ dup hex p 24 "init_assert5" assert decimal nl this.Category  .. [39;49m[32;49m
0x7fa6de03d497    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d49b    4881c120000000          add rcx, 0x20                                          [39;49m[32;49m
0x7fa6de03d4a2    488b09                  mov rcx, [rcx]                                         [39;49m
[34;49m ..  @ this.Prototype @ * this.Category @ [39;49m[33;40m-[39;49m[34;49m = this.Sum @ dup hex p 24 "init_assert5" assert decimal nl this.Category @ dup p 12 "init .. [39;49m[32;49m
0x7fa6de03d4a5    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fa6de03d4a8    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de03d4ab    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de03d4ae    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  this.Prototype @ * this.Category @ - [39;49m[33;40m=[39;49m[34;49m this.Sum @ dup hex p 24 "init_assert5" assert decimal nl this.Category @ dup p 12 "init_a .. [39;49m[32;49m
0x7fa6de03d4b2    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. his.Prototype @ * this.Category @ - = [39;49m[33;40mthis[39;49m[34;49m.Sum @ dup hex p 24 "init_assert5" assert decimal nl this.Category @ dup p 12 "init_ass .. [39;49m[32;49m
0x7fa6de03d4b5    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d4b9    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fa6de03d4c0    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de03d4c3    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de03d4c7    498906                  mov [r14], rax                                         [39;49m
[34;49m .. pe @ * this.Category @ - = this.Sum @ [39;49m[33;40mdup[39;49m[34;49m hex p 24 "init_assert5" assert decimal nl this.Category @ dup p 12 "init_assert7" asser .. [39;49m[32;49m
0x7fa6de03d4ca    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..  * this.Category @ - = this.Sum @ dup [39;49m[33;40mhex[39;49m[34;49m p 24 "init_assert5" assert decimal nl this.Category @ dup p 12 "init_assert7" assert th .. [39;49m[32;49m
0x7fa6de03d4ce    49b80531efbf1d560000    mov r8, 0x561dbfef3105                                 [39;49m[32;49m
0x7fa6de03d4d8    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03d4e2    49ffd1                  call r9                    	< System.[34;49mhex[39;49m : 0x0000561dbfef3105 >[39;49m
[34;49m .. his.Category @ - = this.Sum @ dup hex [39;49m[33;40mp[39;49m[34;49m 24 "init_assert5" assert decimal nl this.Category @ dup p 12 "init_assert7" assert this.P .. [39;49m[32;49m
0x7fa6de03d4e5    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de03d4ef    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. s.Category @ - = this.Sum @ dup hex p [39;49m[33;40m24[39;49m[34;49m "init_assert5" assert decimal nl this.Category @ dup p 12 "init_assert7" assert this.Pro .. [39;49m[32;49m
0x7fa6de03d4f2    48b81800000000000000    mov rax, 0x18                                          [39;49m[32;49m
0x7fa6de03d4fc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d500    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ategory @ - = this.Sum @ dup hex p 24 [39;49m[33;40m"init_assert5"[39;49m[34;49m assert decimal nl this.Category @ dup p 12 "init_assert7" assert this.Protot .. [39;49m[32;49m
0x7fa6de03d503    48b89164fedda67f0000    mov rax, 0x7fa6ddfe6491    	< string : '[34;49minit_assert5[39;49m' >[39;49m[32;49m
0x7fa6de03d50d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d511    498906                  mov [r14], rax                                         [39;49m
[34;49m .. his.Sum @ dup hex p 24 "init_assert5" [39;49m[33;40massert[39;49m[34;49m decimal nl this.Category @ dup p 12 "init_assert7" assert this.Prototype @ p this.Su .. [39;49m[32;49m
0x7fa6de03d514    49b98da803dea67f0000    mov r9, 0x7fa6de03a88d                                 [39;49m[32;49m
0x7fa6de03d51e    49ffd1                  call r9                    	< System.[34;49massert1[39;49m : 0x00007fa6de03a88d >[39;49m
[34;49m ..  @ dup hex p 24 "init_assert5" assert [39;49m[33;40mdecimal[39;49m[34;49m nl this.Category @ dup p 12 "init_assert7" assert this.Prototype @ p this.Sum this. .. [39;49m[32;49m
0x7fa6de03d521    49b84f31efbf1d560000    mov r8, 0x561dbfef314f                                 [39;49m[32;49m
0x7fa6de03d52b    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03d535    49ffd1                  call r9                    	< System.[34;49mdecimal[39;49m : 0x0000561dbfef314f >[39;49m
[34;49m .. ex p 24 "init_assert5" assert decimal [39;49m[33;40mnl[39;49m[34;49m this.Category @ dup p 12 "init_assert7" assert this.Prototype @ p this.Sum this.Category .. [39;49m[32;49m
0x7fa6de03d538    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de03d542    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03d54c    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m .. p 24 "init_assert5" assert decimal nl [39;49m[33;40mthis[39;49m[34;49m.Category @ dup p 12 "init_assert7" assert this.Prototype @ p this.Sum this.Category @  .. [39;49m[32;49m
0x7fa6de03d54f    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d553    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fa6de03d55a    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de03d55d    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de03d561    498906                  mov [r14], rax                                         [39;49m
[34;49m .. t5" assert decimal nl this.Category @ [39;49m[33;40mdup[39;49m[34;49m p 12 "init_assert7" assert this.Prototype @ p this.Sum this.Category @ this.Prototype @ .. [39;49m[32;49m
0x7fa6de03d564    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. assert decimal nl this.Category @ dup [39;49m[33;40mp[39;49m[34;49m 12 "init_assert7" assert this.Prototype @ p this.Sum this.Category @ this.Prototype @ * d .. [39;49m[32;49m
0x7fa6de03d568    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de03d572    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. sert decimal nl this.Category @ dup p [39;49m[33;40m12[39;49m[34;49m "init_assert7" assert this.Prototype @ p this.Sum this.Category @ this.Prototype @ * dup .. [39;49m[32;49m
0x7fa6de03d575    48b80c00000000000000    mov rax, 0xc                                           [39;49m[32;49m
0x7fa6de03d57f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d583    498906                  mov [r14], rax                                         [39;49m
[34;49m .. t decimal nl this.Category @ dup p 12 [39;49m[33;40m"init_assert7"[39;49m[34;49m assert this.Prototype @ p this.Sum this.Category @ this.Prototype @ * dup "t .. [39;49m[32;49m
0x7fa6de03d586    48b8bf64fedda67f0000    mov rax, 0x7fa6ddfe64bf    	< string : '[34;49minit_assert7[39;49m' >[39;49m[32;49m
0x7fa6de03d590    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d594    498906                  mov [r14], rax                                         [39;49m
[34;49m .. is.Category @ dup p 12 "init_assert7" [39;49m[33;40massert[39;49m[34;49m this.Prototype @ p this.Sum this.Category @ this.Prototype @ * dup "testing yada" ps .. [39;49m[32;49m
0x7fa6de03d597    49b98da803dea67f0000    mov r9, 0x7fa6de03a88d                                 [39;49m[32;49m
0x7fa6de03d5a1    49ffd1                  call r9                    	< System.[34;49massert1[39;49m : 0x00007fa6de03a88d >[39;49m
[34;49m .. gory @ dup p 12 "init_assert7" assert [39;49m[33;40mthis[39;49m[34;49m.Prototype @ p this.Sum this.Category @ this.Prototype @ * dup "testing yada" ps dup p  .. [39;49m[32;49m
0x7fa6de03d5a4    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d5a8    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fa6de03d5af    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de03d5b2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d5b6    498906                  mov [r14], rax                                         [39;49m
[34;49m .. init_assert7" assert this.Prototype @ [39;49m[33;40mp[39;49m[34;49m this.Sum this.Category @ this.Prototype @ * dup "testing yada" ps dup p 36 "init_assert8" .. [39;49m[32;49m
0x7fa6de03d5b9    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de03d5c3    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. it_assert7" assert this.Prototype @ p [39;49m[33;40mthis[39;49m[34;49m.Sum this.Category @ this.Prototype @ * dup "testing yada" ps dup p 36 "init_assert8" a .. [39;49m[32;49m
0x7fa6de03d5c6    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d5ca    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fa6de03d5d1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d5d5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 7" assert this.Prototype @ p this.Sum [39;49m[33;40mthis[39;49m[34;49m.Category @ this.Prototype @ * dup "testing yada" ps dup p 36 "init_assert8" assert = t .. [39;49m[32;49m
0x7fa6de03d5d8    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d5dc    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fa6de03d5e3    488b00                  mov rax, [rax]                                         [39;49m
[34;49m .. rototype @ p this.Sum this.Category @ [39;49m[33;40mthis[39;49m[34;49m.Prototype @ * dup "testing yada" ps dup p 36 "init_assert8" assert = this.Sum this.Cat .. [39;49m[32;49m
0x7fa6de03d5e6    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d5ea    4881c128000000          add rcx, 0x28                                          [39;49m[32;49m
0x7fa6de03d5f1    488b09                  mov rcx, [rcx]                                         [39;49m
[34;49m .. .Sum this.Category @ this.Prototype @ [39;49m[33;40m*[39;49m[34;49m dup "testing yada" ps dup p 36 "init_assert8" assert = this.Sum this.Category @ this.Prot .. [39;49m[32;49m
0x7fa6de03d5f4    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fa6de03d5f8    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de03d5fc    498906                  mov [r14], rax                                         [39;49m
[34;49m .. um this.Category @ this.Prototype @ * [39;49m[33;40mdup[39;49m[34;49m "testing yada" ps dup p 36 "init_assert8" assert = this.Sum this.Category @ this.Protot .. [39;49m[32;49m
0x7fa6de03d5ff    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. his.Category @ this.Prototype @ * dup [39;49m[33;40m"testing yada"[39;49m[34;49m ps dup p 36 "init_assert8" assert = this.Sum this.Category @ this.Prototype  .. [39;49m[32;49m
0x7fa6de03d603    48b8ea64fedda67f0000    mov rax, 0x7fa6ddfe64ea    	< string : '[34;49mtesting yada[39;49m' >[39;49m[32;49m
0x7fa6de03d60d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d611    498906                  mov [r14], rax                                         [39;49m
[34;49m .. this.Prototype @ * dup "testing yada" [39;49m[33;40mps[39;49m[34;49m dup p 36 "init_assert8" assert = this.Sum this.Category @ this.Prototype @ - dup p = thi .. [39;49m[32;49m
0x7fa6de03d614    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de03d61e    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m .. s.Prototype @ * dup "testing yada" ps [39;49m[33;40mdup[39;49m[34;49m p 36 "init_assert8" assert = this.Sum this.Category @ this.Prototype @ - dup p = this.S .. [39;49m[32;49m
0x7fa6de03d621    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de03d624    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d628    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ototype @ * dup "testing yada" ps dup [39;49m[33;40mp[39;49m[34;49m 36 "init_assert8" assert = this.Sum this.Category @ this.Prototype @ - dup p = this.Sum t .. [39;49m[32;49m
0x7fa6de03d62b    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de03d635    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. otype @ * dup "testing yada" ps dup p [39;49m[33;40m36[39;49m[34;49m "init_assert8" assert = this.Sum this.Category @ this.Prototype @ - dup p = this.Sum thi .. [39;49m[32;49m
0x7fa6de03d638    48b82400000000000000    mov rax, 0x24                                          [39;49m[32;49m
0x7fa6de03d642    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d646    498906                  mov [r14], rax                                         [39;49m
[34;49m .. pe @ * dup "testing yada" ps dup p 36 [39;49m[33;40m"init_assert8"[39;49m[34;49m assert = this.Sum this.Category @ this.Prototype @ - dup p = this.Sum this.C .. [39;49m[32;49m
0x7fa6de03d649    48b81865fedda67f0000    mov rax, 0x7fa6ddfe6518    	< string : '[34;49minit_assert8[39;49m' >[39;49m[32;49m
0x7fa6de03d653    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d657    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ting yada" ps dup p 36 "init_assert8" [39;49m[33;40massert[39;49m[34;49m = this.Sum this.Category @ this.Prototype @ - dup p = this.Sum this.Category @ this. .. [39;49m[32;49m
0x7fa6de03d65a    49b98da803dea67f0000    mov r9, 0x7fa6de03a88d                                 [39;49m[32;49m
0x7fa6de03d664    49ffd1                  call r9                    	< System.[34;49massert1[39;49m : 0x00007fa6de03a88d >[39;49m[32;49m
0x7fa6de03d667    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de03d66a    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de03d66e    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. da" ps dup p 36 "init_assert8" assert [39;49m[33;40m=[39;49m[34;49m this.Sum this.Category @ this.Prototype @ - dup p = this.Sum this.Category @ this.Prototy .. [39;49m[32;49m
0x7fa6de03d672    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. " ps dup p 36 "init_assert8" assert = [39;49m[33;40mthis[39;49m[34;49m.Sum this.Category @ this.Prototype @ - dup p = this.Sum this.Category @ this.Prototype .. [39;49m[32;49m
0x7fa6de03d675    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d679    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fa6de03d680    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d684    498906                  mov [r14], rax                                         [39;49m
[34;49m .. p 36 "init_assert8" assert = this.Sum [39;49m[33;40mthis[39;49m[34;49m.Category @ this.Prototype @ - dup p = this.Sum this.Category @ this.Prototype @ && dup .. [39;49m[32;49m
0x7fa6de03d687    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d68b    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fa6de03d692    488b00                  mov rax, [rax]                                         [39;49m
[34;49m .. t8" assert = this.Sum this.Category @ [39;49m[33;40mthis[39;49m[34;49m.Prototype @ - dup p = this.Sum this.Category @ this.Prototype @ && dup p = this.Sum th .. [39;49m[32;49m
0x7fa6de03d695    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d699    4881c128000000          add rcx, 0x28                                          [39;49m[32;49m
0x7fa6de03d6a0    488b09                  mov rcx, [rcx]                                         [39;49m
[34;49m .. .Sum this.Category @ this.Prototype @ [39;49m[33;40m-[39;49m[34;49m dup p = this.Sum this.Category @ this.Prototype @ && dup p = this.Sum this.Category @ thi .. [39;49m[32;49m
0x7fa6de03d6a3    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fa6de03d6a6    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de03d6aa    498906                  mov [r14], rax                                         [39;49m
[34;49m .. um this.Category @ this.Prototype @ - [39;49m[33;40mdup[39;49m[34;49m p = this.Sum this.Category @ this.Prototype @ && dup p = this.Sum this.Category @ this. .. [39;49m[32;49m
0x7fa6de03d6ad    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. his.Category @ this.Prototype @ - dup [39;49m[33;40mp[39;49m[34;49m = this.Sum this.Category @ this.Prototype @ && dup p = this.Sum this.Category @ this.Prot .. [39;49m[32;49m
0x7fa6de03d6b1    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de03d6bb    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m[32;49m
0x7fa6de03d6be    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de03d6c1    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de03d6c5    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. s.Category @ this.Prototype @ - dup p [39;49m[33;40m=[39;49m[34;49m this.Sum this.Category @ this.Prototype @ && dup p = this.Sum this.Category @ this.Protot .. [39;49m[32;49m
0x7fa6de03d6c9    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. Category @ this.Prototype @ - dup p = [39;49m[33;40mthis[39;49m[34;49m.Sum this.Category @ this.Prototype @ && dup p = this.Sum this.Category @ this.Prototyp .. [39;49m[32;49m
0x7fa6de03d6cc    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d6d0    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fa6de03d6d7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d6db    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ this.Prototype @ - dup p = this.Sum [39;49m[33;40mthis[39;49m[34;49m.Category @ this.Prototype @ && dup p = this.Sum this.Category @ this.Prototype @ & dup .. [39;49m[32;49m
0x7fa6de03d6de    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d6e2    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fa6de03d6e9    488b00                  mov rax, [rax]                                         [39;49m
[34;49m ..  @ - dup p = this.Sum this.Category @ [39;49m[33;40mthis[39;49m[34;49m.Prototype @ && dup p = this.Sum this.Category @ this.Prototype @ & dup p = this.Accum  .. [39;49m[32;49m
0x7fa6de03d6ec    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d6f0    4881c128000000          add rcx, 0x28                                          [39;49m[32;49m
0x7fa6de03d6f7    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fa6de03d6fa    4885c9                  test rcx, rcx                                          [39;49m[32;49m
0x7fa6de03d6fd    7405                    jz 0xde03d704                                          [39;49m
[34;49m .. .Sum this.Category @ this.Prototype @ [39;49m[33;40m&&[39;49m[34;49m dup p = this.Sum this.Category @ this.Prototype @ & dup p = this.Accum this.Prototype @  .. [39;49m[32;49m
0x7fa6de03d6ff    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de03d702    750c                    jnz 0xde03d710                                         [39;49m[32;49m
0x7fa6de03d704    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de03d70e    eb0a                    jmp 0x7fa6de03d71a         	< DLListClone.[34;49minit[39;49m+1408 >[39;49m[32;49m
0x7fa6de03d710    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de03d71a    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de03d71e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. m this.Category @ this.Prototype @ && [39;49m[33;40mdup[39;49m[34;49m p = this.Sum this.Category @ this.Prototype @ & dup p = this.Accum this.Prototype @ = t .. [39;49m[32;49m
0x7fa6de03d721    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. is.Category @ this.Prototype @ && dup [39;49m[33;40mp[39;49m[34;49m = this.Sum this.Category @ this.Prototype @ & dup p = this.Accum this.Prototype @ = this. .. [39;49m[32;49m
0x7fa6de03d725    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de03d72f    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m[32;49m
0x7fa6de03d732    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de03d735    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de03d739    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. .Category @ this.Prototype @ && dup p [39;49m[33;40m=[39;49m[34;49m this.Sum this.Category @ this.Prototype @ & dup p = this.Accum this.Prototype @ = this.Su .. [39;49m[32;49m
0x7fa6de03d73d    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. ategory @ this.Prototype @ && dup p = [39;49m[33;40mthis[39;49m[34;49m.Sum this.Category @ this.Prototype @ & dup p = this.Accum this.Prototype @ = this.Sum  .. [39;49m[32;49m
0x7fa6de03d740    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d744    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fa6de03d74b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d74f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  this.Prototype @ && dup p = this.Sum [39;49m[33;40mthis[39;49m[34;49m.Category @ this.Prototype @ & dup p = this.Accum this.Prototype @ = this.Sum this.Cate .. [39;49m[32;49m
0x7fa6de03d752    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d756    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fa6de03d75d    488b00                  mov rax, [rax]                                         [39;49m
[34;49m .. @ && dup p = this.Sum this.Category @ [39;49m[33;40mthis[39;49m[34;49m.Prototype @ & dup p = this.Accum this.Prototype @ = this.Sum this.Category @ this.Prot .. [39;49m[32;49m
0x7fa6de03d760    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d764    4881c128000000          add rcx, 0x28                                          [39;49m[32;49m
0x7fa6de03d76b    488b09                  mov rcx, [rcx]                                         [39;49m
[34;49m .. .Sum this.Category @ this.Prototype @ [39;49m[33;40m&[39;49m[34;49m dup p = this.Accum this.Prototype @ = this.Sum this.Category @ this.Prototype @ || dup p  .. [39;49m[32;49m
0x7fa6de03d76e    4823c1                  and rax, rcx                                           [39;49m[32;49m
0x7fa6de03d771    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de03d775    498906                  mov [r14], rax                                         [39;49m
[34;49m .. um this.Category @ this.Prototype @ & [39;49m[33;40mdup[39;49m[34;49m p = this.Accum this.Prototype @ = this.Sum this.Category @ this.Prototype @ || dup p =  .. [39;49m[32;49m
0x7fa6de03d778    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. his.Category @ this.Prototype @ & dup [39;49m[33;40mp[39;49m[34;49m = this.Accum this.Prototype @ = this.Sum this.Category @ this.Prototype @ || dup p = this .. [39;49m[32;49m
0x7fa6de03d77c    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de03d786    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m[32;49m
0x7fa6de03d789    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de03d78c    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de03d790    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. s.Category @ this.Prototype @ & dup p [39;49m[33;40m=[39;49m[34;49m this.Accum this.Prototype @ = this.Sum this.Category @ this.Prototype @ || dup p = this.S .. [39;49m[32;49m
0x7fa6de03d794    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. Category @ this.Prototype @ & dup p = [39;49m[33;40mthis[39;49m[34;49m.Accum this.Prototype @ = this.Sum this.Category @ this.Prototype @ || dup p = this.Sum .. [39;49m[32;49m
0x7fa6de03d797    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d79b    4881c050000000          add rax, 0x50                                          [39;49m
[34;49m .. this.Prototype @ & dup p = this.Accum [39;49m[33;40mthis[39;49m[34;49m.Prototype @ = this.Sum this.Category @ this.Prototype @ || dup p = this.Sum this.Categ .. [39;49m[32;49m
0x7fa6de03d7a2    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d7a6    4881c128000000          add rcx, 0x28                                          [39;49m[32;49m
0x7fa6de03d7ad    488b09                  mov rcx, [rcx]                                         [39;49m
[34;49m .. & dup p = this.Accum this.Prototype @ [39;49m[33;40m=[39;49m[34;49m this.Sum this.Category @ this.Prototype @ || dup p = this.Sum this.Category @ this.Protot .. [39;49m[32;49m
0x7fa6de03d7b0    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. dup p = this.Accum this.Prototype @ = [39;49m[33;40mthis[39;49m[34;49m.Sum this.Category @ this.Prototype @ || dup p = this.Sum this.Category @ this.Prototyp .. [39;49m[32;49m
0x7fa6de03d7b3    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d7b7    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fa6de03d7be    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d7c2    498906                  mov [r14], rax                                         [39;49m
[34;49m .. his.Accum this.Prototype @ = this.Sum [39;49m[33;40mthis[39;49m[34;49m.Category @ this.Prototype @ || dup p = this.Sum this.Category @ this.Prototype @ / dup .. [39;49m[32;49m
0x7fa6de03d7c5    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d7c9    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fa6de03d7d0    488b00                  mov rax, [rax]                                         [39;49m
[34;49m .. rototype @ = this.Sum this.Category @ [39;49m[33;40mthis[39;49m[34;49m.Prototype @ || dup p = this.Sum this.Category @ this.Prototype @ / dup p = this.Catego .. [39;49m[32;49m
0x7fa6de03d7d3    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d7d7    4881c128000000          add rcx, 0x28                                          [39;49m[32;49m
0x7fa6de03d7de    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fa6de03d7e1    480bc1                  or rax, rcx                                            [39;49m
[34;49m .. .Sum this.Category @ this.Prototype @ [39;49m[33;40m||[39;49m[34;49m dup p = this.Sum this.Category @ this.Prototype @ / dup p = this.Category @ dup p 12 _as .. [39;49m[32;49m
0x7fa6de03d7e4    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de03d7e7    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de03d7eb    498906                  mov [r14], rax                                         [39;49m
[34;49m .. m this.Category @ this.Prototype @ || [39;49m[33;40mdup[39;49m[34;49m p = this.Sum this.Category @ this.Prototype @ / dup p = this.Category @ dup p 12 _asser .. [39;49m[32;49m
0x7fa6de03d7ee    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. is.Category @ this.Prototype @ || dup [39;49m[33;40mp[39;49m[34;49m = this.Sum this.Category @ this.Prototype @ / dup p = this.Category @ dup p 12 _assert th .. [39;49m[32;49m
0x7fa6de03d7f2    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de03d7fc    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m[32;49m
0x7fa6de03d7ff    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de03d802    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de03d806    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. .Category @ this.Prototype @ || dup p [39;49m[33;40m=[39;49m[34;49m this.Sum this.Category @ this.Prototype @ / dup p = this.Category @ dup p 12 _assert this .. [39;49m[32;49m
0x7fa6de03d80a    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. ategory @ this.Prototype @ || dup p = [39;49m[33;40mthis[39;49m[34;49m.Sum this.Category @ this.Prototype @ / dup p = this.Category @ dup p 12 _assert this.S .. [39;49m[32;49m
0x7fa6de03d80d    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d811    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fa6de03d818    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d81c    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  this.Prototype @ || dup p = this.Sum [39;49m[33;40mthis[39;49m[34;49m.Category @ this.Prototype @ / dup p = this.Category @ dup p 12 _assert this.Sum @ p th .. [39;49m[32;49m
0x7fa6de03d81f    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d823    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fa6de03d82a    488b00                  mov rax, [rax]                                         [39;49m
[34;49m .. @ || dup p = this.Sum this.Category @ [39;49m[33;40mthis[39;49m[34;49m.Prototype @ / dup p = this.Category @ dup p 12 _assert this.Sum @ p this.Prototype @ p .. [39;49m[32;49m
0x7fa6de03d82d    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d831    4881c128000000          add rcx, 0x28                                          [39;49m[32;49m
0x7fa6de03d838    488b09                  mov rcx, [rcx]                                         [39;49m
[34;49m .. .Sum this.Category @ this.Prototype @ [39;49m[33;40m/[39;49m[34;49m dup p = this.Category @ dup p 12 _assert this.Sum @ p this.Prototype @ p "\n 12 3 testing .. [39;49m[32;49m
0x7fa6de03d83b    48ba0000000000000000    mov rdx, 0x0                                           [39;49m[32;49m
0x7fa6de03d845    48f7f9                  idiv rcx                                               [39;49m[32;49m
0x7fa6de03d848    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de03d84c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. um this.Category @ this.Prototype @ / [39;49m[33;40mdup[39;49m[34;49m p = this.Category @ dup p 12 _assert this.Sum @ p this.Prototype @ p "\n 12 3 testing y .. [39;49m[32;49m
0x7fa6de03d84f    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. his.Category @ this.Prototype @ / dup [39;49m[33;40mp[39;49m[34;49m = this.Category @ dup p 12 _assert this.Sum @ p this.Prototype @ p "\n 12 3 testing yada  .. [39;49m[32;49m
0x7fa6de03d853    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de03d85d    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m[32;49m
0x7fa6de03d860    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de03d863    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de03d867    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. s.Category @ this.Prototype @ / dup p [39;49m[33;40m=[39;49m[34;49m this.Category @ dup p 12 _assert this.Sum @ p this.Prototype @ p "\n 12 3 testing yada 36 .. [39;49m[32;49m
0x7fa6de03d86b    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. Category @ this.Prototype @ / dup p = [39;49m[33;40mthis[39;49m[34;49m.Category @ dup p 12 _assert this.Sum @ p this.Prototype @ p "\n 12 3 testing yada 36 9 .. [39;49m[32;49m
0x7fa6de03d86e    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d872    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fa6de03d879    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de03d87c    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de03d880    498906                  mov [r14], rax                                         [39;49m
[34;49m .. Prototype @ / dup p = this.Category @ [39;49m[33;40mdup[39;49m[34;49m p 12 _assert this.Sum @ p this.Prototype @ p "\n 12 3 testing yada 36 9 1 0 15 4 12 4 3 .. [39;49m[32;49m
0x7fa6de03d883    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. otype @ / dup p = this.Category @ dup [39;49m[33;40mp[39;49m[34;49m 12 _assert this.Sum @ p this.Prototype @ p "\n 12 3 testing yada 36 9 1 0 15 4 12 4 3 : o .. [39;49m[32;49m
0x7fa6de03d887    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de03d891    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. ype @ / dup p = this.Category @ dup p [39;49m[33;40m12[39;49m[34;49m _assert this.Sum @ p this.Prototype @ p "\n 12 3 testing yada 36 9 1 0 15 4 12 4 3 : out .. [39;49m[32;49m
0x7fa6de03d894    48b80c00000000000000    mov rax, 0xc                                           [39;49m[32;49m
0x7fa6de03d89e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d8a2    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  @ / dup p = this.Category @ dup p 12 [39;49m[33;40m_assert[39;49m[34;49m this.Sum @ p this.Prototype @ p "\n 12 3 testing yada 36 9 1 0 15 4 12 4 3 : output .. [39;49m[32;49m
0x7fa6de03d8a5    49b941aa03dea67f0000    mov r9, 0x7fa6de03aa41                                 [39;49m[32;49m
0x7fa6de03d8af    49ffd1                  call r9                    	< System.[34;49m_assert[39;49m : 0x00007fa6de03aa41 >[39;49m
[34;49m ..  p = this.Category @ dup p 12 _assert [39;49m[33;40mthis[39;49m[34;49m.Sum @ p this.Prototype @ p "\n 12 3 testing yada 36 9 1 0 15 4 12 4 3 : output above s .. [39;49m[32;49m
0x7fa6de03d8b2    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d8b6    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fa6de03d8bd    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de03d8c0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d8c4    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ategory @ dup p 12 _assert this.Sum @ [39;49m[33;40mp[39;49m[34;49m this.Prototype @ p "\n 12 3 testing yada 36 9 1 0 15 4 12 4 3 : output above should (appr .. [39;49m[32;49m
0x7fa6de03d8c7    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de03d8d1    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. egory @ dup p 12 _assert this.Sum @ p [39;49m[33;40mthis[39;49m[34;49m.Prototype @ p "\n 12 3 testing yada 36 9 1 0 15 4 12 4 3 : output above should (approx .. [39;49m[32;49m
0x7fa6de03d8d4    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d8d8    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fa6de03d8df    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de03d8e2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d8e6    498906                  mov [r14], rax                                         [39;49m
[34;49m .. _assert this.Sum @ p this.Prototype @ [39;49m[33;40mp[39;49m[34;49m "\n 12 3 testing yada 36 9 1 0 15 4 12 4 3 : output above should (approximately) read" dd .. [39;49m[32;49m
0x7fa6de03d8e9    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de03d8f3    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. ssert this.Sum @ p this.Prototype @ p [39;49m[33;40m"\n 12 3 testing yada 36 9 1 0 15 4 12 4 3 : output above should (approximately) read"[39;49m[34;49m ddps .. [39;49m[32;49m
0x7fa6de03d8f6    48b88d65fedda67f0000    mov rax, 0x7fa6ddfe658d    	< string : '[34;49m\n 12 3 testing yada 36 9 1 0 15 4 12 4 3 : output above should (approximately) read[39;49m' >[39;49m[32;49m
0x7fa6de03d900    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d904    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ut above should (approximately) read" [39;49m[33;40mddps[39;49m[34;49m hex "\nthis = " ps this p "\nthis @ = " ps this @ p "\nthis.size = " ps this.size @ p  .. [39;49m[32;49m
0x7fa6de03d907    49b926a803dea67f0000    mov r9, 0x7fa6de03a826                                 [39;49m[32;49m
0x7fa6de03d911    49ffd1                  call r9                    	< System.[34;49mddps[39;49m : 0x00007fa6de03a826 >[39;49m
[34;49m .. ove should (approximately) read" ddps [39;49m[33;40mhex[39;49m[34;49m "\nthis = " ps this p "\nthis @ = " ps this @ p "\nthis.size = " ps this.size @ p this  .. [39;49m[32;49m
0x7fa6de03d914    49b80531efbf1d560000    mov r8, 0x561dbfef3105                                 [39;49m[32;49m
0x7fa6de03d91e    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03d928    49ffd1                  call r9                    	< System.[34;49mhex[39;49m : 0x0000561dbfef3105 >[39;49m
[34;49m .. should (approximately) read" ddps hex [39;49m[33;40m"\nthis = "[39;49m[34;49m ps this p "\nthis @ = " ps this @ p "\nthis.size = " ps this.size @ p this @ du .. [39;49m[32;49m
0x7fa6de03d92b    48b84266fedda67f0000    mov rax, 0x7fa6ddfe6642    	< string : '[34;49m\nthis = [39;49m' >[39;49m[32;49m
0x7fa6de03d935    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d939    498906                  mov [r14], rax                                         [39;49m
[34;49m .. oximately) read" ddps hex "\nthis = " [39;49m[33;40mps[39;49m[34;49m this p "\nthis @ = " ps this @ p "\nthis.size = " ps this.size @ p this @ dup p this.siz .. [39;49m[32;49m
0x7fa6de03d93c    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de03d946    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m .. mately) read" ddps hex "\nthis = " ps [39;49m[33;40mthis[39;49m[34;49m p "\nthis @ = " ps this @ p "\nthis.size = " ps this.size @ p this @ dup p this.size @ .. [39;49m[32;49m
0x7fa6de03d949    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d94d    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de03d954    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d958    498906                  mov [r14], rax                                         [39;49m
[34;49m .. y) read" ddps hex "\nthis = " ps this [39;49m[33;40mp[39;49m[34;49m "\nthis @ = " ps this @ p "\nthis.size = " ps this.size @ p this @ dup p this.size @ dump .. [39;49m[32;49m
0x7fa6de03d95b    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de03d965    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m ..  read" ddps hex "\nthis = " ps this p [39;49m[33;40m"\nthis @ = "[39;49m[34;49m ps this @ p "\nthis.size = " ps this.size @ p this @ dup p this.size @ dump t .. [39;49m[32;49m
0x7fa6de03d968    48b86366fedda67f0000    mov rax, 0x7fa6ddfe6663    	< string : '[34;49m\nthis @ = [39;49m' >[39;49m[32;49m
0x7fa6de03d972    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d976    498906                  mov [r14], rax                                         [39;49m
[34;49m .. x "\nthis = " ps this p "\nthis @ = " [39;49m[33;40mps[39;49m[34;49m this @ p "\nthis.size = " ps this.size @ p this @ dup p this.size @ dump this dup p this .. [39;49m[32;49m
0x7fa6de03d979    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de03d983    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m .. \nthis = " ps this p "\nthis @ = " ps [39;49m[33;40mthis[39;49m[34;49m @ p "\nthis.size = " ps this.size @ p this @ dup p this.size @ dump this dup p this.si .. [39;49m[32;49m
0x7fa6de03d986    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d98a    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de03d98d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d991    498906                  mov [r14], rax                                         [39;49m
[34;49m .. = " ps this p "\nthis @ = " ps this @ [39;49m[33;40mp[39;49m[34;49m "\nthis.size = " ps this.size @ p this @ dup p this.size @ dump this dup p this.size @ du .. [39;49m[32;49m
0x7fa6de03d994    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de03d99e    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. " ps this p "\nthis @ = " ps this @ p [39;49m[33;40m"\nthis.size = "[39;49m[34;49m ps this.size @ p this @ dup p this.size @ dump this dup p this.size @ dump .. [39;49m[32;49m
0x7fa6de03d9a1    48b88b66fedda67f0000    mov rax, 0x7fa6ddfe668b    	< string : '[34;49m\nthis.size = [39;49m' >[39;49m[32;49m
0x7fa6de03d9ab    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d9af    498906                  mov [r14], rax                                         [39;49m
[34;49m .. is @ = " ps this @ p "\nthis.size = " [39;49m[33;40mps[39;49m[34;49m this.size @ p this @ dup p this.size @ dump this dup p this.size @ dump this.Accum this. .. [39;49m[32;49m
0x7fa6de03d9b2    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de03d9bc    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m .. @ = " ps this @ p "\nthis.size = " ps [39;49m[33;40mthis[39;49m[34;49m.size @ p this @ dup p this.size @ dump this dup p this.size @ dump this.Accum this.Pro .. [39;49m[32;49m
0x7fa6de03d9bf    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d9c3    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de03d9ca    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d9ce    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ps this @ p "\nthis.size = " ps this.[39;49m[33;40msize[39;49m[34;49m @ p this @ dup p this.size @ dump this dup p this.size @ dump this.Accum this.Prototyp .. [39;49m[32;49m
0x7fa6de03d9d1    48b8a829dddda67f0000    mov rax, 0x7fa6dddd29a8    	< string : '[34;49mX[39;49m' >[39;49m[32;49m
0x7fa6de03d9db    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de03d9de    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03d9e2    498906                  mov [r14], rax                                         [39;49m
[34;49m .. s @ p "\nthis.size = " ps this.size @ [39;49m[33;40mp[39;49m[34;49m this @ dup p this.size @ dump this dup p this.size @ dump this.Accum this.Prototype @ dup .. [39;49m[32;49m
0x7fa6de03d9e5    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de03d9ef    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. @ p "\nthis.size = " ps this.size @ p [39;49m[33;40mthis[39;49m[34;49m @ dup p this.size @ dump this dup p this.size @ dump this.Accum this.Prototype @ dup p .. [39;49m[32;49m
0x7fa6de03d9f2    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03d9f6    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de03d9f9    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de03d9fd    498906                  mov [r14], rax                                         [39;49m
[34;49m .. this.size = " ps this.size @ p this @ [39;49m[33;40mdup[39;49m[34;49m p this.size @ dump this dup p this.size @ dump this.Accum this.Prototype @ dup p = this .. [39;49m[32;49m
0x7fa6de03da00    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. .size = " ps this.size @ p this @ dup [39;49m[33;40mp[39;49m[34;49m this.size @ dump this dup p this.size @ dump this.Accum this.Prototype @ dup p = this thi .. [39;49m[32;49m
0x7fa6de03da04    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de03da0e    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. ize = " ps this.size @ p this @ dup p [39;49m[33;40mthis[39;49m[34;49m.size @ dump this dup p this.size @ dump this.Accum this.Prototype @ dup p = this this. .. [39;49m[32;49m
0x7fa6de03da11    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03da15    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de03da1c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03da20    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  " ps this.size @ p this @ dup p this.[39;49m[33;40msize[39;49m[34;49m @ dump this dup p this.size @ dump this.Accum this.Prototype @ dup p = this this.size  .. [39;49m[32;49m
0x7fa6de03da23    48b8a829dddda67f0000    mov rax, 0x7fa6dddd29a8    	< string : '[34;49mX[39;49m' >[39;49m[32;49m
0x7fa6de03da2d    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de03da30    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03da34    498906                  mov [r14], rax                                         [39;49m
[34;49m .. his.size @ p this @ dup p this.size @ [39;49m[33;40mdump[39;49m[34;49m this dup p this.size @ dump this.Accum this.Prototype @ dup p = this this.size @ dump  .. [39;49m[32;49m
0x7fa6de03da37    49b87431efbf1d560000    mov r8, 0x561dbfef3174                                 [39;49m[32;49m
0x7fa6de03da41    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03da4b    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000561dbfef3174 >[39;49m
[34;49m .. ize @ p this @ dup p this.size @ dump [39;49m[33;40mthis[39;49m[34;49m dup p this.size @ dump this.Accum this.Prototype @ dup p = this this.size @ dump decim .. [39;49m[32;49m
0x7fa6de03da4e    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03da52    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de03da59    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de03da5d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  p this @ dup p this.size @ dump this [39;49m[33;40mdup[39;49m[34;49m p this.size @ dump this.Accum this.Prototype @ dup p = this this.size @ dump decimal th .. [39;49m[32;49m
0x7fa6de03da60    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. his @ dup p this.size @ dump this dup [39;49m[33;40mp[39;49m[34;49m this.size @ dump this.Accum this.Prototype @ dup p = this this.size @ dump decimal this.A .. [39;49m[32;49m
0x7fa6de03da64    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de03da6e    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. s @ dup p this.size @ dump this dup p [39;49m[33;40mthis[39;49m[34;49m.size @ dump this.Accum this.Prototype @ dup p = this this.size @ dump decimal this.Acc .. [39;49m[32;49m
0x7fa6de03da71    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03da75    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de03da7c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03da80    498906                  mov [r14], rax                                         [39;49m
[34;49m .. up p this.size @ dump this dup p this.[39;49m[33;40msize[39;49m[34;49m @ dump this.Accum this.Prototype @ dup p = this this.size @ dump decimal this.Accum @  .. [39;49m[32;49m
0x7fa6de03da83    48b8a829dddda67f0000    mov rax, 0x7fa6dddd29a8    	< string : '[34;49mX[39;49m' >[39;49m[32;49m
0x7fa6de03da8d    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de03da90    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03da94    498906                  mov [r14], rax                                         [39;49m
[34;49m .. is.size @ dump this dup p this.size @ [39;49m[33;40mdump[39;49m[34;49m this.Accum this.Prototype @ dup p = this this.size @ dump decimal this.Accum @ dup 3 " .. [39;49m[32;49m
0x7fa6de03da97    49b87431efbf1d560000    mov r8, 0x561dbfef3174                                 [39;49m[32;49m
0x7fa6de03daa1    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03daab    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000561dbfef3174 >[39;49m
[34;49m .. ze @ dump this dup p this.size @ dump [39;49m[33;40mthis[39;49m[34;49m.Accum this.Prototype @ dup p = this this.size @ dump decimal this.Accum @ dup 3 "\nAcc .. [39;49m[32;49m
0x7fa6de03daae    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03dab2    4881c050000000          add rax, 0x50                                          [39;49m[32;49m
0x7fa6de03dab9    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03dabd    498906                  mov [r14], rax                                         [39;49m
[34;49m .. his dup p this.size @ dump this.Accum [39;49m[33;40mthis[39;49m[34;49m.Prototype @ dup p = this this.size @ dump decimal this.Accum @ dup 3 "\nAccum should b .. [39;49m[32;49m
0x7fa6de03dac0    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03dac4    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fa6de03dacb    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de03dace    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de03dad2    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ze @ dump this.Accum this.Prototype @ [39;49m[33;40mdup[39;49m[34;49m p = this this.size @ dump decimal this.Accum @ dup 3 "\nAccum should be 3 : assert9 ="  .. [39;49m[32;49m
0x7fa6de03dad5    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..  dump this.Accum this.Prototype @ dup [39;49m[33;40mp[39;49m[34;49m = this this.size @ dump decimal this.Accum @ dup 3 "\nAccum should be 3 : assert9 =" asse .. [39;49m[32;49m
0x7fa6de03dad9    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de03dae3    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m[32;49m
0x7fa6de03dae6    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de03dae9    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de03daed    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. ump this.Accum this.Prototype @ dup p [39;49m[33;40m=[39;49m[34;49m this this.size @ dump decimal this.Accum @ dup 3 "\nAccum should be 3 : assert9 =" assert .. [39;49m[32;49m
0x7fa6de03daf1    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. p this.Accum this.Prototype @ dup p = [39;49m[33;40mthis[39;49m[34;49m this.size @ dump decimal this.Accum @ dup 3 "\nAccum should be 3 : assert9 =" assert p .. [39;49m[32;49m
0x7fa6de03daf4    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03daf8    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de03daff    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03db03    498906                  mov [r14], rax                                         [39;49m
[34;49m .. s.Accum this.Prototype @ dup p = this [39;49m[33;40mthis[39;49m[34;49m.size @ dump decimal this.Accum @ dup 3 "\nAccum should be 3 : assert9 =" assert p this .. [39;49m[32;49m
0x7fa6de03db06    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03db0a    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de03db11    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03db15    498906                  mov [r14], rax                                         [39;49m
[34;49m .. um this.Prototype @ dup p = this this.[39;49m[33;40msize[39;49m[34;49m @ dump decimal this.Accum @ dup 3 "\nAccum should be 3 : assert9 =" assert p this.Cate .. [39;49m[32;49m
0x7fa6de03db18    48b8a829dddda67f0000    mov rax, 0x7fa6dddd29a8    	< string : '[34;49mX[39;49m' >[39;49m[32;49m
0x7fa6de03db22    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de03db25    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03db29    498906                  mov [r14], rax                                         [39;49m
[34;49m .. .Prototype @ dup p = this this.size @ [39;49m[33;40mdump[39;49m[34;49m decimal this.Accum @ dup 3 "\nAccum should be 3 : assert9 =" assert p this.Category @  .. [39;49m[32;49m
0x7fa6de03db2c    49b87431efbf1d560000    mov r8, 0x561dbfef3174                                 [39;49m[32;49m
0x7fa6de03db36    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03db40    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000561dbfef3174 >[39;49m
[34;49m .. otype @ dup p = this this.size @ dump [39;49m[33;40mdecimal[39;49m[34;49m this.Accum @ dup 3 "\nAccum should be 3 : assert9 =" assert p this.Category @ dup 1 .. [39;49m[32;49m
0x7fa6de03db43    49b84f31efbf1d560000    mov r8, 0x561dbfef314f                                 [39;49m[32;49m
0x7fa6de03db4d    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03db57    49ffd1                  call r9                    	< System.[34;49mdecimal[39;49m : 0x0000561dbfef314f >[39;49m
[34;49m .. dup p = this this.size @ dump decimal [39;49m[33;40mthis[39;49m[34;49m.Accum @ dup 3 "\nAccum should be 3 : assert9 =" assert p this.Category @ dup 12 "\nCat .. [39;49m[32;49m
0x7fa6de03db5a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03db5e    4881c050000000          add rax, 0x50                                          [39;49m[32;49m
0x7fa6de03db65    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de03db68    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de03db6c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. this.size @ dump decimal this.Accum @ [39;49m[33;40mdup[39;49m[34;49m 3 "\nAccum should be 3 : assert9 =" assert p this.Category @ dup 12 "\nCategory should  .. [39;49m[32;49m
0x7fa6de03db6f    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. .size @ dump decimal this.Accum @ dup [39;49m[33;40m3[39;49m[34;49m "\nAccum should be 3 : assert9 =" assert p this.Category @ dup 12 "\nCategory should be 1 .. [39;49m[32;49m
0x7fa6de03db73    48b80300000000000000    mov rax, 0x3                                           [39;49m[32;49m
0x7fa6de03db7d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03db81    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ize @ dump decimal this.Accum @ dup 3 [39;49m[33;40m"\nAccum should be 3 : assert9 ="[39;49m[34;49m assert p this.Category @ dup 12 "\nCategory should be 12  .. [39;49m[32;49m
0x7fa6de03db84    48b8cc66fedda67f0000    mov rax, 0x7fa6ddfe66cc    	< string : '[34;49m\nAccum should be 3 : assert9 =[39;49m' >[39;49m[32;49m
0x7fa6de03db8e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03db92    498906                  mov [r14], rax                                         [39;49m
[34;49m .. p 3 "\nAccum should be 3 : assert9 =" [39;49m[33;40massert[39;49m[34;49m p this.Category @ dup 12 "\nCategory should be 12 : assert10 =" assert p ;  .. [39;49m[32;49m
0x7fa6de03db95    49b98da803dea67f0000    mov r9, 0x7fa6de03a88d                                 [39;49m[32;49m
0x7fa6de03db9f    49ffd1                  call r9                    	< System.[34;49massert1[39;49m : 0x00007fa6de03a88d >[39;49m
[34;49m .. Accum should be 3 : assert9 =" assert [39;49m[33;40mp[39;49m[34;49m this.Category @ dup 12 "\nCategory should be 12 : assert10 =" assert p ;  .. [39;49m[32;49m
0x7fa6de03dba2    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de03dbac    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. cum should be 3 : assert9 =" assert p [39;49m[33;40mthis[39;49m[34;49m.Category @ dup 12 "\nCategory should be 12 : assert10 =" assert p ;  .. [39;49m[32;49m
0x7fa6de03dbaf    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03dbb3    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fa6de03dbba    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de03dbbd    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de03dbc1    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : assert9 =" assert p this.Category @ [39;49m[33;40mdup[39;49m[34;49m 12 "\nCategory should be 12 : assert10 =" assert p ;  .. [39;49m[32;49m
0x7fa6de03dbc4    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. sert9 =" assert p this.Category @ dup [39;49m[33;40m12[39;49m[34;49m "\nCategory should be 12 : assert10 =" assert p ;  .. [39;49m[32;49m
0x7fa6de03dbc8    48b80c00000000000000    mov rax, 0xc                                           [39;49m[32;49m
0x7fa6de03dbd2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03dbd6    498906                  mov [r14], rax                                         [39;49m
[34;49m .. t9 =" assert p this.Category @ dup 12 [39;49m[33;40m"\nCategory should be 12 : assert10 ="[39;49m[34;49m assert p ;  .. [39;49m[32;49m
0x7fa6de03dbd9    48b83567fedda67f0000    mov rax, 0x7fa6ddfe6735    	< string : '[34;49m\nCategory should be 12 : assert10 =[39;49m' >[39;49m[32;49m
0x7fa6de03dbe3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03dbe7    498906                  mov [r14], rax                                         [39;49m
[34;49m .. \nCategory should be 12 : assert10 =" [39;49m[33;40massert[39;49m[34;49m p ;  .. [39;49m[32;49m
0x7fa6de03dbea    49b98da803dea67f0000    mov r9, 0x7fa6de03a88d                                 [39;49m[32;49m
0x7fa6de03dbf4    49ffd1                  call r9                    	< System.[34;49massert1[39;49m : 0x00007fa6de03a88d >[39;49m
[34;49m .. ory should be 12 : assert10 =" assert [39;49m[33;40mp[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fa6de03dbf7    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de03dc01    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. y should be 12 : assert10 =" assert p [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de03dc04    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03dc08    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03dc0c    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de03dc10    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'init' :: codeSize = 2678
Word : 0x00007fa6ddce2aa8 :: Compiled at : 0x00007fa6de03d19a
 =============================
::> 'wdiss' was called at namespaces/test/classTest.cft 150.18 <::
 3 init_assert1  : ok

 3
Run Time Location : namespaces/test/classTest.cft 115.99 init_assert2  : ok

 
 DLListClone init : this.Accum = : init_assert3  : ok

 3 0x0000000000000018 init_assert5  : ok


 12 init_assert7  : ok

 3 testing yada 36 init_assert8  : ok

 9 1 0 15 4 12 4 3[34;49m 
 12 3 testing yada 36 9 1 0 15 4 12 4 3 : output above should (approximately) read[39;49m 
this =  0x00007fa6ddd17a88 
this @ =  0x00007fa6ddd17aa0 
this.size =  0x0000000000000058 0x00007fa6ddd17aa0
Dump at : namespaces/test/classTest.cft : 151.28 :
Dump : Address = 0x00007fa6ddd17a88 : Number = 0x0000000000000058 :: (little endian dump)
0x00007fa6ddd17a88 : 0x00007fa6ddd17aa0 0x0000000000000001  a0 7a d1 dd a6 7f 00 00  01 00 00 00 00 00 00 00  .z...... ........ 
0x00007fa6ddd17a98 : 0x0000000000000002 0x00007fa6ddd17a88  02 00 00 00 00 00 00 00  88 7a d1 dd a6 7f 00 00  ........ .z...... 
0x00007fa6ddd17aa8 : 0x000000000000000c 0x0000000000000003  0c 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddd17ab8 : 0x0000000000000004 0x000000000000000c  04 00 00 00 00 00 00 00  0c 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddd17ac8 : 0x0000000000000003 0x0000000000000004  03 00 00 00 00 00 00 00  04 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddd17ad8 : 0x0000000000000003 0x0000000000000000  03 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 0x00007fa6ddd17a88
Dump at : namespaces/test/classTest.cft : 151.28 :
Dump : Address = 0x00007fa6ddd17a88 : Number = 0x0000000000000058 :: (little endian dump)
0x00007fa6ddd17a88 : 0x00007fa6ddd17aa0 0x0000000000000001  a0 7a d1 dd a6 7f 00 00  01 00 00 00 00 00 00 00  .z...... ........ 
0x00007fa6ddd17a98 : 0x0000000000000002 0x00007fa6ddd17a88  02 00 00 00 00 00 00 00  88 7a d1 dd a6 7f 00 00  ........ .z...... 
0x00007fa6ddd17aa8 : 0x000000000000000c 0x0000000000000003  0c 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddd17ab8 : 0x0000000000000004 0x000000000000000c  04 00 00 00 00 00 00 00  0c 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddd17ac8 : 0x0000000000000003 0x0000000000000004  03 00 00 00 00 00 00 00  04 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddd17ad8 : 0x0000000000000003 0x0000000000000000  03 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 0x0000000000000003
Dump at : namespaces/test/classTest.cft : 151.28 :
Dump : Address = 0x00007fa6ddd17a88 : Number = 0x0000000000000058 :: (little endian dump)
0x00007fa6ddd17a88 : 0x00007fa6ddd17aa0 0x0000000000000001  a0 7a d1 dd a6 7f 00 00  01 00 00 00 00 00 00 00  .z...... ........ 
0x00007fa6ddd17a98 : 0x0000000000000002 0x00007fa6ddd17a88  02 00 00 00 00 00 00 00  88 7a d1 dd a6 7f 00 00  ........ .z...... 
0x00007fa6ddd17aa8 : 0x000000000000000c 0x0000000000000003  0c 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddd17ab8 : 0x0000000000000004 0x000000000000000c  04 00 00 00 00 00 00 00  0c 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddd17ac8 : 0x0000000000000003 0x0000000000000004  03 00 00 00 00 00 00 00  04 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddd17ad8 : 0x0000000000000003 0x0000000000000000  03 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 
Accum should be 3 : assert9 =  : ok

 3 
Category should be 12 : assert10 =  : ok

 12 
this =  0x00007fa6dddd2bd8
Dump at : namespaces/test/classTest.cft : 154.22 :
Dump : Address = 0x00007fa6ddd17a88 : Number = 0x0000000000000058 :: (little endian dump)
0x00007fa6ddd17a88 : 0x00007fa6ddd17aa0 0x0000000000000001  a0 7a d1 dd a6 7f 00 00  01 00 00 00 00 00 00 00  .z...... ........ 
0x00007fa6ddd17a98 : 0x0000000000000002 0x00007fa6ddd17a88  02 00 00 00 00 00 00 00  88 7a d1 dd a6 7f 00 00  ........ .z...... 
0x00007fa6ddd17aa8 : 0x000000000000000c 0x0000000000000003  0c 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddd17ab8 : 0x0000000000000004 0x000000000000000c  04 00 00 00 00 00 00 00  0c 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddd17ac8 : 0x0000000000000003 0x0000000000000004  03 00 00 00 00 00 00 00  04 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddd17ad8 : 0x0000000000000003 0x0000000000000000  03 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 


DataStack at : [34;49mnamespaces/test/classTest.cft : 155.13[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fa6ddf73220, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	
 DLListClone size = 88
 Clone size  : ok

 DLListClone init test :   : ok

 
this @ size @ p  88 
this.size =  88
Using Namespaces :> DLListClone DLList DLLNode Buffer Class Root byte C Integer Pointer Compiler Logic Int Combinators int System User Shell OpenVmTil Lexer Interpreter Debug Word Namespace StartupMacros Io Compiling Reserved DObject Macro PreProcessor List Stack Memory Colors File String Asm Bits Locals C_Typedef Forth Experimental 
 
printf output = this.size = 88
 0x00007fa6ddd17a88 88
Dump at : namespaces/test/classTest.cft : 165.48 :
Dump : Address = 0x00007fa6ddd17a88 : Number = 88 :: (little endian dump)
0x00007fa6ddd17a88 : 0x00007fa6ddd17aa0 0x0000000000000001  a0 7a d1 dd a6 7f 00 00  01 00 00 00 00 00 00 00  .z...... ........ 
0x00007fa6ddd17a98 : 0x0000000000000002 0x00007fa6ddd17a88  02 00 00 00 00 00 00 00  88 7a d1 dd a6 7f 00 00  ........ .z...... 
0x00007fa6ddd17aa8 : 0x000000000000000c 0x0000000000000003  0c 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddd17ab8 : 0x0000000000000004 0x000000000000000c  04 00 00 00 00 00 00 00  0c 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddd17ac8 : 0x0000000000000003 0x0000000000000004  03 00 00 00 00 00 00 00  04 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddd17ad8 : 0x0000000000000003 0x0000000000000000  03 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 


 -----------------------------
[35;40m 'this' semantics have yet to be solidified[39;49m namespaces/test/classTest.cft 167.53
 -----------------------------


Dump at : namespaces/test/classTest.cft : 168.32 :
Dump : Address = 0x00007fa6ddd17a88 : Number = 88 :: (little endian dump)
0x00007fa6ddd17a88 : 0x00007fa6ddd17aa0 0x0000000000000001  a0 7a d1 dd a6 7f 00 00  01 00 00 00 00 00 00 00  .z...... ........ 
0x00007fa6ddd17a98 : 0x0000000000000002 0x00007fa6ddd17a88  02 00 00 00 00 00 00 00  88 7a d1 dd a6 7f 00 00  ........ .z...... 
0x00007fa6ddd17aa8 : 0x000000000000000c 0x0000000000000003  0c 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddd17ab8 : 0x0000000000000004 0x000000000000000c  04 00 00 00 00 00 00 00  0c 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddd17ac8 : 0x0000000000000003 0x0000000000000004  03 00 00 00 00 00 00 00  04 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddd17ad8 : 0x0000000000000003 0x0000000000000000  03 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

 DLListClone init test4 :   : ok

[34;49m 
math test
[39;49m
 =============================
C.[34;49mt*[39;49m <:> cfrTil compiled word
SourceCode for C.[34;49mt*[39;49m :> 
[34;49m: t* ( a b c d -- TOS ) a @ b @ c @ d @ * * * ; [39;49m
Source code file location of [34;49mt*[39;49m : "namespaces/test/math.cft" : 24.48 :: we are now at : namespaces/test/math.cft : 25.16
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde03df41 -- code size = 93 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mt*[39;49m : definition = 0x00007fa6de03df41 : disassembly at namespaces/test/math.cft : 25.16 :
[34;49m ..                                     : [39;49m[33;40mt*[39;49m[34;49m ( a b c d -- TOS ) a @ b @ c @ d @ * * * ;  .. [39;49m[32;49m
0x7fa6de03df41    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de03df45    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03df49    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..               : t* ( a b c d -- TOS ) [39;49m[33;40ma[39;49m[34;49m @ b @ c @ d @ * * * ;  .. [39;49m[32;49m
0x7fa6de03df50    498b47e0                mov rax, [r15-0x20]                                    [39;49m[32;49m
0x7fa6de03df54    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03df58    498906                  mov [r14], rax                                         [39;49m
[34;49m ..           : t* ( a b c d -- TOS ) a @ [39;49m[33;40mb[39;49m[34;49m @ c @ d @ * * * ;  .. [39;49m[32;49m
0x7fa6de03df5b    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fa6de03df5f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03df63    498906                  mov [r14], rax                                         [39;49m
[34;49m ..       : t* ( a b c d -- TOS ) a @ b @ [39;49m[33;40mc[39;49m[34;49m @ d @ * * * ;  .. [39;49m[32;49m
0x7fa6de03df66    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..   : t* ( a b c d -- TOS ) a @ b @ c @ [39;49m[33;40md[39;49m[34;49m @ * * * ;  .. [39;49m[32;49m
0x7fa6de03df6a    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m  : t* ( a b c d -- TOS ) a @ b @ c @ d @ [39;49m[33;40m*[39;49m[34;49m * * ;  .. [39;49m[32;49m
0x7fa6de03df6e    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fa6de03df72    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de03df75    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de03df78    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m: t* ( a b c d -- TOS ) a @ b @ c @ d @ * [39;49m[33;40m*[39;49m[34;49m * ;  .. [39;49m[32;49m
0x7fa6de03df7c    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fa6de03df80    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de03df83    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de03df86    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  a b c d -- TOS ) a @ b @ c @ d @ * * [39;49m[33;40m*[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de03df8a    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..  b c d -- TOS ) a @ b @ c @ d @ * * * [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de03df8e    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03df92    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03df96    4983ee18                sub r14, 0x18                                          [39;49m[32;49m
0x7fa6de03df9a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de03df9d    c3                      ret                                                    [39;49m
Word_Disassemble : word - 't*' :: codeSize = 92
Word : 0x00007fa6ddca7c00 :: Compiled at : 0x00007fa6de03df41
 =============================
::> 'wdiss' was called at namespaces/test/math.cft 25.16 <::

 =============================
C.[34;49mmoe[39;49m <:> cfrTil compiled word
SourceCode for C.[34;49mmoe[39;49m :> 
[34;49m: moe ( n m -- TOS) n m @ <<= n @ ; [39;49m
Source code file location of [34;49mmoe[39;49m : "namespaces/test/math.cft" : 43.36 :: we are now at : namespaces/test/math.cft : 44.17
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde03e196 -- code size = 53 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mmoe[39;49m : definition = 0x00007fa6de03e196 : disassembly at namespaces/test/math.cft : 44.17 :
[34;49m ..                                     : [39;49m[33;40mmoe[39;49m[34;49m ( n m -- TOS) n m @ <<= n @ ;  .. [39;49m[32;49m
0x7fa6de03e196    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de03e19a    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03e19e    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                                 : moe [39;49m[33;40m([39;49m[34;49m n m -- TOS) n m @ <<= n @ ;  .. [39;49m[32;49m
0x7fa6de03e1a5    498d5ff0                lea rbx, [r15-0x10]                                    [39;49m
[34;49m ..                   : moe ( n m -- TOS) [39;49m[33;40mn[39;49m[34;49m m @ <<= n @ ;  .. [39;49m[32;49m
0x7fa6de03e1a9    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..                 : moe ( n m -- TOS) n [39;49m[33;40mm[39;49m[34;49m @ <<= n @ ;  .. [39;49m[32;49m
0x7fa6de03e1ad    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03e1b1    48d3e0                  shl rax, cl                                            [39;49m
[34;49m ..             : moe ( n m -- TOS) n m @ [39;49m[33;40m<<=[39;49m[34;49m n @ ;  .. [39;49m[32;49m
0x7fa6de03e1b4    488903                  mov [rbx], rax                                         [39;49m
[34;49m ..         : moe ( n m -- TOS) n m @ <<= [39;49m[33;40mn[39;49m[34;49m @ ;  .. [39;49m[32;49m
0x7fa6de03e1b7    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..     : moe ( n m -- TOS) n m @ <<= n @ [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de03e1bb    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03e1bf    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03e1c3    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de03e1c7    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de03e1ca    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'moe' :: codeSize = 52
Word : 0x00007fa6ddcb2390 :: Compiled at : 0x00007fa6de03e196
 =============================
::> 'wdiss' was called at namespaces/test/math.cft 44.17 <::
 moe_assert1  : ok

 moe_assert2  : ok

 moe_assert3  : ok

 moe_assert3  : ok



 =============================
Infix.[34;49mmoe[39;49m <:> cfrTil compiled word
SourceCode for Infix.[34;49mmoe[39;49m :> 
[34;49m: moe ( n m -- TOS ) n <<= m n ; [39;49m
Source code file location of [34;49mmoe[39;49m : "namespaces/test/math.cft" : 52.63 :: we are now at : namespaces/test/math.cft : 53.17
Compiled with : optimizeOn, inlineOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde03e20a -- code size = 64 bytes
TypeSignature : 
 -----------------------------
Word :: Infix.[34;49mmoe[39;49m : definition = 0x00007fa6de03e20a : disassembly at namespaces/test/math.cft : 53.17 :
[34;49m ..                                     : [39;49m[33;40mmoe[39;49m[34;49m ( n m -- TOS ) n <<= m n ;  .. [39;49m[32;49m
0x7fa6de03e20a    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de03e20e    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03e212    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                                 : moe [39;49m[33;40m([39;49m[34;49m n m -- TOS ) n <<= m n ;  .. [39;49m[32;49m
0x7fa6de03e219    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de03e21d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03e221    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de03e224    498d5ff0                lea rbx, [r15-0x10]                                    [39;49m
[34;49m ..                  : moe ( n m -- TOS ) [39;49m[33;40mn[39;49m[34;49m <<= m n ;  .. [39;49m[32;49m
0x7fa6de03e228    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..            : moe ( n m -- TOS ) n <<= [39;49m[33;40mm[39;49m[34;49m n ;  .. [39;49m[32;49m
0x7fa6de03e22c    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03e230    48d3e0                  shl rax, cl                                            [39;49m
[34;49m ..                : moe ( n m -- TOS ) n [39;49m[33;40m<<=[39;49m[34;49m m n ;  .. [39;49m[32;49m
0x7fa6de03e233    488903                  mov [rbx], rax                                         [39;49m
[34;49m ..          : moe ( n m -- TOS ) n <<= m [39;49m[33;40mn[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fa6de03e236    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..        : moe ( n m -- TOS ) n <<= m n [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de03e23a    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03e23e    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03e242    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de03e246    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de03e249    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'moe' :: codeSize = 63
Word : 0x00007fa6ddc05418 :: Compiled at : 0x00007fa6de03e20a
 =============================
::> 'wdiss' was called at namespaces/test/math.cft 53.17 <::

 =============================
Infix.[34;49mmoe[39;49m <:> cfrTil compiled word
SourceCode for Infix.[34;49mmoe[39;49m :> 
[34;49m: moe ( n m -- TOS ) n >>= m n ; [39;49m
Source code file location of [34;49mmoe[39;49m : "namespaces/test/math.cft" : 55.32 :: we are now at : namespaces/test/math.cft : 56.17
Compiled with : optimizeOn, inlineOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde03e24f -- code size = 64 bytes
TypeSignature : 
 -----------------------------
Word :: Infix.[34;49mmoe[39;49m : definition = 0x00007fa6de03e24f : disassembly at namespaces/test/math.cft : 56.17 :
[34;49m ..                                     : [39;49m[33;40mmoe[39;49m[34;49m ( n m -- TOS ) n >>= m n ;  .. [39;49m[32;49m
0x7fa6de03e24f    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de03e253    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03e257    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                                 : moe [39;49m[33;40m([39;49m[34;49m n m -- TOS ) n >>= m n ;  .. [39;49m[32;49m
0x7fa6de03e25e    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de03e262    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03e266    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de03e269    498d5ff0                lea rbx, [r15-0x10]                                    [39;49m
[34;49m ..                  : moe ( n m -- TOS ) [39;49m[33;40mn[39;49m[34;49m >>= m n ;  .. [39;49m[32;49m
0x7fa6de03e26d    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..            : moe ( n m -- TOS ) n >>= [39;49m[33;40mm[39;49m[34;49m n ;  .. [39;49m[32;49m
0x7fa6de03e271    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03e275    48d3e8                  shr rax, cl                                            [39;49m
[34;49m ..                : moe ( n m -- TOS ) n [39;49m[33;40m>>=[39;49m[34;49m m n ;  .. [39;49m[32;49m
0x7fa6de03e278    488903                  mov [rbx], rax                                         [39;49m
[34;49m ..          : moe ( n m -- TOS ) n >>= m [39;49m[33;40mn[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fa6de03e27b    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..        : moe ( n m -- TOS ) n >>= m n [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de03e27f    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03e283    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03e287    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de03e28b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de03e28e    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'moe' :: codeSize = 63
Word : 0x00007fa6ddc065d0 :: Compiled at : 0x00007fa6de03e24f
 =============================
::> 'wdiss' was called at namespaces/test/math.cft 56.17 <::
 128 65536 
should show 128 65536
 2 1 
should show 2 1

 =============================
C.[34;49mmoe[39;49m <:> cfrTil compiled word
SourceCode for C.[34;49mmoe[39;49m :> 
[34;49m: moe ( n m -- TOS ) n m @ *= n @ ; [39;49m
Source code file location of [34;49mmoe[39;49m : "namespaces/test/math.cft" : 66.35 :: we are now at : namespaces/test/math.cft : 67.17
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde03e34e -- code size = 54 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mmoe[39;49m : definition = 0x00007fa6de03e34e : disassembly at namespaces/test/math.cft : 67.17 :
[34;49m ..                                     : [39;49m[33;40mmoe[39;49m[34;49m ( n m -- TOS ) n m @ *= n @ ;  .. [39;49m[32;49m
0x7fa6de03e34e    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de03e352    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03e356    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                                 : moe [39;49m[33;40m([39;49m[34;49m n m -- TOS ) n m @ *= n @ ;  .. [39;49m[32;49m
0x7fa6de03e35d    498d5ff0                lea rbx, [r15-0x10]                                    [39;49m
[34;49m ..                  : moe ( n m -- TOS ) [39;49m[33;40mn[39;49m[34;49m m @ *= n @ ;  .. [39;49m[32;49m
0x7fa6de03e361    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..                : moe ( n m -- TOS ) n [39;49m[33;40mm[39;49m[34;49m @ *= n @ ;  .. [39;49m[32;49m
0x7fa6de03e365    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03e369    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..            : moe ( n m -- TOS ) n m @ [39;49m[33;40m*=[39;49m[34;49m n @ ;  .. [39;49m[32;49m
0x7fa6de03e36d    488903                  mov [rbx], rax                                         [39;49m
[34;49m ..         : moe ( n m -- TOS ) n m @ *= [39;49m[33;40mn[39;49m[34;49m @ ;  .. [39;49m[32;49m
0x7fa6de03e370    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..     : moe ( n m -- TOS ) n m @ *= n @ [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de03e374    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03e378    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03e37c    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de03e380    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de03e383    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'moe' :: codeSize = 53
Word : 0x00007fa6ddc0a818 :: Compiled at : 0x00007fa6de03e34e
 =============================
::> 'wdiss' was called at namespaces/test/math.cft 67.17 <::


 =============================
C.[34;49mmoe[39;49m <:> cfrTil compiled word
SourceCode for C.[34;49mmoe[39;49m :> 
[34;49m: moe ( n m -- TOS ) n m @ /= n @ ; [39;49m
Source code file location of [34;49mmoe[39;49m : "namespaces/test/math.cft" : 70.35 :: we are now at : namespaces/test/math.cft : 71.17
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde03e389 -- code size = 63 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mmoe[39;49m : definition = 0x00007fa6de03e389 : disassembly at namespaces/test/math.cft : 71.17 :
[34;49m ..                                     : [39;49m[33;40mmoe[39;49m[34;49m ( n m -- TOS ) n m @ /= n @ ;  .. [39;49m[32;49m
0x7fa6de03e389    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de03e38d    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03e391    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                                 : moe [39;49m[33;40m([39;49m[34;49m n m -- TOS ) n m @ /= n @ ;  .. [39;49m[32;49m
0x7fa6de03e398    498d5ff0                lea rbx, [r15-0x10]                                    [39;49m
[34;49m ..                  : moe ( n m -- TOS ) [39;49m[33;40mn[39;49m[34;49m m @ /= n @ ;  .. [39;49m[32;49m
0x7fa6de03e39c    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..                : moe ( n m -- TOS ) n [39;49m[33;40mm[39;49m[34;49m @ /= n @ ;  .. [39;49m[32;49m
0x7fa6de03e3a0    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03e3a4    48ba0000000000000000    mov rdx, 0x0                                           [39;49m[32;49m
0x7fa6de03e3ae    48f7f9                  idiv rcx                                               [39;49m
[34;49m ..            : moe ( n m -- TOS ) n m @ [39;49m[33;40m/=[39;49m[34;49m n @ ;  .. [39;49m[32;49m
0x7fa6de03e3b1    488903                  mov [rbx], rax                                         [39;49m
[34;49m ..         : moe ( n m -- TOS ) n m @ /= [39;49m[33;40mn[39;49m[34;49m @ ;  .. [39;49m[32;49m
0x7fa6de03e3b4    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..     : moe ( n m -- TOS ) n m @ /= n @ [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de03e3b8    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03e3bc    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03e3c0    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de03e3c4    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de03e3c7    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'moe' :: codeSize = 62
Word : 0x00007fa6ddc0bc00 :: Compiled at : 0x00007fa6de03e389
 =============================
::> 'wdiss' was called at namespaces/test/math.cft 71.17 <::


 =============================
C.[34;49mmoe2[39;49m <:> cfrTil compiled word
SourceCode for C.[34;49mmoe2[39;49m :> 
[34;49m: moe2 ( n -- TOS ) n 2 /= n @ ; [39;49m
Source code file location of [34;49mmoe2[39;49m : "namespaces/test/math.cft" : 74.32 :: we are now at : namespaces/test/math.cft : 75.18
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde03e3cd -- code size = 65 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mmoe2[39;49m : definition = 0x00007fa6de03e3cd : disassembly at namespaces/test/math.cft : 75.18 :
[34;49m ..                                     : [39;49m[33;40mmoe2[39;49m[34;49m ( n -- TOS ) n 2 /= n @ ;  .. [39;49m[32;49m
0x7fa6de03e3cd    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de03e3d1    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03e3d5    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                                : moe2 [39;49m[33;40m([39;49m[34;49m n -- TOS ) n 2 /= n @ ;  .. [39;49m[32;49m
0x7fa6de03e3dc    498d5ff8                lea rbx, [r15-0x8]                                     [39;49m
[34;49m ..                   : moe2 ( n -- TOS ) [39;49m[33;40mn[39;49m[34;49m 2 /= n @ ;  .. [39;49m[32;49m
0x7fa6de03e3e0    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                 : moe2 ( n -- TOS ) n [39;49m[33;40m2[39;49m[34;49m /= n @ ;  .. [39;49m[32;49m
0x7fa6de03e3e4    48b90200000000000000    mov rcx, 0x2                                           [39;49m[32;49m
0x7fa6de03e3ee    48ba0000000000000000    mov rdx, 0x0                                           [39;49m[32;49m
0x7fa6de03e3f8    48f7f9                  idiv rcx                                               [39;49m
[34;49m ..               : moe2 ( n -- TOS ) n 2 [39;49m[33;40m/=[39;49m[34;49m n @ ;  .. [39;49m[32;49m
0x7fa6de03e3fb    488903                  mov [rbx], rax                                         [39;49m
[34;49m ..            : moe2 ( n -- TOS ) n 2 /= [39;49m[33;40mn[39;49m[34;49m @ ;  .. [39;49m[32;49m
0x7fa6de03e3fe    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..        : moe2 ( n -- TOS ) n 2 /= n @ [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de03e402    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03e406    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03e40a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de03e40d    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'moe2' :: codeSize = 64
Word : 0x00007fa6ddc0cfe8 :: Compiled at : 0x00007fa6de03e3cd
 =============================
::> 'wdiss' was called at namespaces/test/math.cft 75.18 <::


 moe3_assert1  : ok


 moe3_assert2  : ok



 =============================
C.[34;49mt64bitAdd2[39;49m <:> cfrTil compiled word
SourceCode for C.[34;49mt64bitAdd2[39;49m :> 
[34;49m: t64bitAdd2 ( n m -- TOS ) 0x100000000 n @ + m @ + ; [39;49m
Source code file location of [34;49mt64bitAdd2[39;49m : "namespaces/test/math.cft" : 82.74 :: we are now at : namespaces/test/math.cft : 83.23
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde03e47c -- code size = 55 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: C.[34;49mt64bitAdd2[39;49m : definition = 0x00007fa6de03e47c : disassembly at namespaces/test/math.cft : 83.23 :
[34;49m ..                                     : [39;49m[33;40mt64bitAdd2[39;49m[34;49m ( n m -- TOS ) 0x100000000 n @ + m @ + ;  .. [39;49m[32;49m
0x7fa6de03e47c    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de03e480    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03e484    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..           : t64bitAdd2 ( n m -- TOS ) [39;49m[33;40m0x100000000[39;49m[34;49m n @ + m @ + ;  .. [39;49m[32;49m
0x7fa6de03e48b    48b80000000001000000    mov rax, 0x100000000                                   [39;49m
[34;49m  : t64bitAdd2 ( n m -- TOS ) 0x100000000 [39;49m[33;40mn[39;49m[34;49m @ + m @ + ;  .. [39;49m[32;49m
0x7fa6de03e495    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. itAdd2 ( n m -- TOS ) 0x100000000 n @ [39;49m[33;40m+[39;49m[34;49m m @ + ; [39;49m[32;49m
0x7fa6de03e499    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. Add2 ( n m -- TOS ) 0x100000000 n @ + [39;49m[33;40mm[39;49m[34;49m @ + ; [39;49m[32;49m
0x7fa6de03e49c    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..  ( n m -- TOS ) 0x100000000 n @ + m @ [39;49m[33;40m+[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de03e4a0    4803c1                  add rax, rcx                                           [39;49m
[34;49m ..  n m -- TOS ) 0x100000000 n @ + m @ + [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de03e4a3    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03e4a7    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03e4ab    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de03e4af    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de03e4b2    c3                      ret                                                    [39;49m
Word_Disassemble : word - 't64bitAdd2' :: codeSize = 54
Word : 0x00007fa6ddc10510 :: Compiled at : 0x00007fa6de03e47c
 =============================
::> 'wdiss' was called at namespaces/test/math.cft 83.23 <::
 t64bitAdd2_assert  : ok


 0x0000000000000002
 =============================
C.[34;49mt64bitSub2[39;49m <:> cfrTil compiled word
SourceCode for C.[34;49mt64bitSub2[39;49m :> 
[34;49m: t64bitSub2 ( n m -- TOS ) 0x100000003 n @ - m @ - ; [39;49m
Source code file location of [34;49mt64bitSub2[39;49m : "namespaces/test/math.cft" : 86.74 :: we are now at : namespaces/test/math.cft : 87.23
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde03e502 -- code size = 55 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: C.[34;49mt64bitSub2[39;49m : definition = 0x00007fa6de03e502 : disassembly at namespaces/test/math.cft : 87.23 :
[34;49m ..                                     : [39;49m[33;40mt64bitSub2[39;49m[34;49m ( n m -- TOS ) 0x100000003 n @ - m @ - ;  .. [39;49m[32;49m
0x7fa6de03e502    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de03e506    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03e50a    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..           : t64bitSub2 ( n m -- TOS ) [39;49m[33;40m0x100000003[39;49m[34;49m n @ - m @ - ;  .. [39;49m[32;49m
0x7fa6de03e511    48b80300000001000000    mov rax, 0x100000003                                   [39;49m
[34;49m  : t64bitSub2 ( n m -- TOS ) 0x100000003 [39;49m[33;40mn[39;49m[34;49m @ - m @ - ;  .. [39;49m[32;49m
0x7fa6de03e51b    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. itSub2 ( n m -- TOS ) 0x100000003 n @ [39;49m[33;40m-[39;49m[34;49m m @ - ; [39;49m[32;49m
0x7fa6de03e51f    482bc1                  sub rax, rcx                                           [39;49m
[34;49m .. Sub2 ( n m -- TOS ) 0x100000003 n @ - [39;49m[33;40mm[39;49m[34;49m @ - ; [39;49m[32;49m
0x7fa6de03e522    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..  ( n m -- TOS ) 0x100000003 n @ - m @ [39;49m[33;40m-[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de03e526    482bc1                  sub rax, rcx                                           [39;49m
[34;49m ..  n m -- TOS ) 0x100000003 n @ - m @ - [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de03e529    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03e52d    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03e531    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de03e535    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de03e538    c3                      ret                                                    [39;49m
Word_Disassemble : word - 't64bitSub2' :: codeSize = 54
Word : 0x00007fa6ddc12f10 :: Compiled at : 0x00007fa6de03e502
 =============================
::> 'wdiss' was called at namespaces/test/math.cft 87.23 <::
 t64bitSub2_assert  : ok


 =============================
C.[34;49mt64bitSub3[39;49m <:> cfrTil compiled word
SourceCode for C.[34;49mt64bitSub3[39;49m :> 
[34;49m: t64bitSub3 ( n m -- TOS ) 0x100000004 n @ - m @ - ; [39;49m
Source code file location of [34;49mt64bitSub3[39;49m : "namespaces/test/math.cft" : 89.54 :: we are now at : namespaces/test/math.cft : 90.23
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde03e53e -- code size = 55 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mt64bitSub3[39;49m : definition = 0x00007fa6de03e53e : disassembly at namespaces/test/math.cft : 90.23 :
[34;49m ..                                     : [39;49m[33;40mt64bitSub3[39;49m[34;49m ( n m -- TOS ) 0x100000004 n @ - m @ - ;  .. [39;49m[32;49m
0x7fa6de03e53e    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de03e542    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03e546    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..           : t64bitSub3 ( n m -- TOS ) [39;49m[33;40m0x100000004[39;49m[34;49m n @ - m @ - ;  .. [39;49m[32;49m
0x7fa6de03e54d    48b80400000001000000    mov rax, 0x100000004                                   [39;49m
[34;49m  : t64bitSub3 ( n m -- TOS ) 0x100000004 [39;49m[33;40mn[39;49m[34;49m @ - m @ - ;  .. [39;49m[32;49m
0x7fa6de03e557    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. itSub3 ( n m -- TOS ) 0x100000004 n @ [39;49m[33;40m-[39;49m[34;49m m @ - ; [39;49m[32;49m
0x7fa6de03e55b    482bc1                  sub rax, rcx                                           [39;49m
[34;49m .. Sub3 ( n m -- TOS ) 0x100000004 n @ - [39;49m[33;40mm[39;49m[34;49m @ - ; [39;49m[32;49m
0x7fa6de03e55e    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..  ( n m -- TOS ) 0x100000004 n @ - m @ [39;49m[33;40m-[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de03e562    482bc1                  sub rax, rcx                                           [39;49m
[34;49m ..  n m -- TOS ) 0x100000004 n @ - m @ - [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de03e565    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03e569    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03e56d    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de03e571    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de03e574    c3                      ret                                                    [39;49m
Word_Disassemble : word - 't64bitSub3' :: codeSize = 54
Word : 0x00007fa6ddc142f8 :: Compiled at : 0x00007fa6de03e53e
 =============================
::> 'wdiss' was called at namespaces/test/math.cft 90.23 <::

 =============================
C.[34;49mt64bitSub3[39;49m <:> cfrTil compiled word
SourceCode for C.[34;49mt64bitSub3[39;49m :> 
[34;49m: t64bitSub3 ( n m -- TOS ) 0x100000003 0x100000002 - 0x100000003 + n @ - m @ - ; [39;49m
Source code file location of [34;49mt64bitSub3[39;49m : "namespaces/test/math.cft" : 92.82 :: we are now at : namespaces/test/math.cft : 93.23
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde03e57a -- code size = 68 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mt64bitSub3[39;49m : definition = 0x00007fa6de03e57a : disassembly at namespaces/test/math.cft : 93.23 :
[34;49m ..                                     : [39;49m[33;40mt64bitSub3[39;49m[34;49m ( n m -- TOS ) 0x100000003 0x100000002 - 0x100000003 + n @ - m @ - ;  .. [39;49m[32;49m
0x7fa6de03e57a    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de03e57e    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03e582    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..           : t64bitSub3 ( n m -- TOS ) [39;49m[33;40m0x100000003[39;49m[34;49m 0x100000002 - 0x100000003 + n @ - m @ - ;  .. [39;49m[32;49m
0x7fa6de03e589    48b80100000000000000    mov rax, 0x1                                           [39;49m
[34;49m ..  m -- TOS ) 0x100000003 0x100000002 - [39;49m[33;40m0x100000003[39;49m[34;49m + n @ - m @ - ; [39;49m[32;49m
0x7fa6de03e593    48b90300000001000000    mov rcx, 0x100000003                                   [39;49m
[34;49m .. 0x100000003 0x100000002 - 0x100000003 [39;49m[33;40m+[39;49m[34;49m n @ - m @ - ; [39;49m[32;49m
0x7fa6de03e59d    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. 100000003 0x100000002 - 0x100000003 + [39;49m[33;40mn[39;49m[34;49m @ - m @ - ; [39;49m[32;49m
0x7fa6de03e5a0    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. 00003 0x100000002 - 0x100000003 + n @ [39;49m[33;40m-[39;49m[34;49m m @ - ; [39;49m[32;49m
0x7fa6de03e5a4    482bc1                  sub rax, rcx                                           [39;49m
[34;49m .. 003 0x100000002 - 0x100000003 + n @ - [39;49m[33;40mm[39;49m[34;49m @ - ; [39;49m[32;49m
0x7fa6de03e5a7    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. 0x100000002 - 0x100000003 + n @ - m @ [39;49m[33;40m-[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de03e5ab    482bc1                  sub rax, rcx                                           [39;49m
[34;49m .. 100000002 - 0x100000003 + n @ - m @ - [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de03e5ae    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03e5b2    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03e5b6    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de03e5ba    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de03e5bd    c3                      ret                                                    [39;49m
Word_Disassemble : word - 't64bitSub3' :: codeSize = 67
Word : 0x00007fa6ddc156e0 :: Compiled at : 0x00007fa6de03e57a
 =============================
::> 'wdiss' was called at namespaces/test/math.cft 93.23 <::

 7176105502331971041 
 0110 0011  1001 0110   1010 0101  1110 1111    0000 1001  0011 1001   0010 0101  1110 0001 DLLNode size =  16
DLLNodeAlloc size =  512

Dump at : namespaces/test/arrayTest.cft : 17.15 :
Dump : Address = 0x00007fa6ddbe5448 : Number = 64 :: (little endian dump)
0x00007fa6ddbe5448 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddbe5458 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddbe5468 : 0x0000000000000000 0x0000000000000002  00 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddbe5478 : 0x0000000000000001 0x0000000000000000  01 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
DLLNodeAlloc4 size =  2560
 
testna4 =  0x00007fa6ddbe7718
 =============================
DLLNodeAlloc4.[34;49mtestna5[39;49m <:> cfrTil compiled word
SourceCode for DLLNodeAlloc4.[34;49mtestna5[39;49m :> 
[34;49m: testna5 ( DLLNodeAlloc4 dlna4o ) "\ndlna4o = " ps dlna4o hp dlna4o.nodes [ 1 ] [ 0 ].AfterReference 1 = dlna4o.nodes [ 1 ] [ 0 ].BeforeReference 2 = dlna4o.nodes [ 1 ] [ 0 ] 32 dump dlna4o.nodes [ 2 ] [ 1 ].AfterReference 1 = dlna4o.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust before : dlna4o.nodes [ 2 ] [ 1 ] 32 dump" ps dlna4o.nodes [ 2 ] [ 1 ] 32 dump dlna4o.nodes [ 3 ] [ 2 ].AfterReference 1 = dlna4o.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps dlna4o.nodes [ 3 ] [ 2 ] 32 dump dlna4o.nodes [ 3 ] [ 2 ].AfterReference dlna4o.nodes [ 3 ] [ 2 ].BeforeReference = dlna4o.nodes [ 3 ] [ 2 ].BeforeReference dlna4o.nodes [ 3 ] [ 2 ].AfterReference = "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps dlna4o.nodes [ 3 ] [ 2 ] 32 dump "dlna4o = " ps dlna4o hp ; [39;49m
Source code file location of [34;49mtestna5[39;49m : "namespaces/test/arrayTest.cft" : 27.34 :: we are now at : namespaces/test/arrayTest.cft : 46.21
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde03f4c6 -- code size = 666 bytes
TypeSignature : Object 
 -----------------------------
Word :: DLLNodeAlloc4.[34;49mtestna5[39;49m : definition = 0x00007fa6de03f4c6 : disassembly at namespaces/test/arrayTest.cft : 46.21 :
[34;49m ..                                     : [39;49m[33;40mtestna5[39;49m[34;49m ( DLLNodeAlloc4 dlna4o ) "\ndlna4o = " ps dlna4o hp dlna4o.nodes [ 1 ] [ 0 ].AfterR .. [39;49m[32;49m
0x7fa6de03f4c6    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de03f4ca    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03f4ce    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..    : testna5 ( DLLNodeAlloc4 dlna4o ) [39;49m[33;40m"\ndlna4o = "[39;49m[34;49m ps dlna4o hp dlna4o.nodes [ 1 ] [ 0 ].AfterReference 1 = dlna4o.nodes [ 1 ] [ .. [39;49m[32;49m
0x7fa6de03f4d5    48b8918cfedda67f0000    mov rax, 0x7fa6ddfe8c91    	< string : '[34;49m\ndlna4o = [39;49m' >[39;49m[32;49m
0x7fa6de03f4df    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03f4e3    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  DLLNodeAlloc4 dlna4o ) "\ndlna4o = " [39;49m[33;40mps[39;49m[34;49m dlna4o hp dlna4o.nodes [ 1 ] [ 0 ].AfterReference 1 = dlna4o.nodes [ 1 ] [ 0 ].BeforeRef .. [39;49m[32;49m
0x7fa6de03f4e6    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de03f4f0    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m .. LNodeAlloc4 dlna4o ) "\ndlna4o = " ps [39;49m[33;40mdlna4o[39;49m[34;49m hp dlna4o.nodes [ 1 ] [ 0 ].AfterReference 1 = dlna4o.nodes [ 1 ] [ 0 ].BeforeRefere .. [39;49m[32;49m
0x7fa6de03f4f3    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03f4f7    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de03f4fe    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03f502    498906                  mov [r14], rax                                         [39;49m
[34;49m .. loc4 dlna4o ) "\ndlna4o = " ps dlna4o [39;49m[33;40mhp[39;49m[34;49m dlna4o.nodes [ 1 ] [ 0 ].AfterReference 1 = dlna4o.nodes [ 1 ] [ 0 ].BeforeReference 2 = .. [39;49m[32;49m
0x7fa6de03f505    49b9cb9303dea67f0000    mov r9, 0x7fa6de0393cb                                 [39;49m[32;49m
0x7fa6de03f50f    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fa6de0393cb >[39;49m
[34;49m .. 4 dlna4o ) "\ndlna4o = " ps dlna4o hp [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 1 ] [ 0 ].AfterReference 1 = dlna4o.nodes [ 1 ] [ 0 ].BeforeReference 2 = dl .. [39;49m[32;49m
0x7fa6de03f512    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03f516    4881c000020000          add rax, 0x200                                         [39;49m
[34;49m .. na4o.nodes [ 1 ] [ 0 ].AfterReference [39;49m[33;40m1[39;49m[34;49m = dlna4o.nodes [ 1 ] [ 0 ].BeforeReference 2 = dlna4o.nodes [ 1 ] [ 0 ] 32 dump dlna4o.no .. [39;49m[32;49m
0x7fa6de03f51d    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. 4o.nodes [ 1 ] [ 0 ].AfterReference 1 [39;49m[33;40m=[39;49m[34;49m dlna4o.nodes [ 1 ] [ 0 ].BeforeReference 2 = dlna4o.nodes [ 1 ] [ 0 ] 32 dump dlna4o.node .. [39;49m[32;49m
0x7fa6de03f527    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. .nodes [ 1 ] [ 0 ].AfterReference 1 = [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 1 ] [ 0 ].BeforeReference 2 = dlna4o.nodes [ 1 ] [ 0 ] 32 dump dlna4o.nodes  .. [39;49m[32;49m
0x7fa6de03f52a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03f52e    4881c008020000          add rax, 0x208                                         [39;49m
[34;49m .. a4o.nodes [ 1 ] [ 0 ].BeforeReference [39;49m[33;40m2[39;49m[34;49m = dlna4o.nodes [ 1 ] [ 0 ] 32 dump dlna4o.nodes [ 2 ] [ 1 ].AfterReference 1 = dlna4o.nod .. [39;49m[32;49m
0x7fa6de03f535    48b90200000000000000    mov rcx, 0x2                                           [39;49m
[34;49m .. o.nodes [ 1 ] [ 0 ].BeforeReference 2 [39;49m[33;40m=[39;49m[34;49m dlna4o.nodes [ 1 ] [ 0 ] 32 dump dlna4o.nodes [ 2 ] [ 1 ].AfterReference 1 = dlna4o.nodes .. [39;49m[32;49m
0x7fa6de03f53f    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. nodes [ 1 ] [ 0 ].BeforeReference 2 = [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 1 ] [ 0 ] 32 dump dlna4o.nodes [ 2 ] [ 1 ].AfterReference 1 = dlna4o.nodes [ .. [39;49m[32;49m
0x7fa6de03f542    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03f546    4881c000020000          add rax, 0x200                                         [39;49m[32;49m
0x7fa6de03f54d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03f551    498906                  mov [r14], rax                                         [39;49m
[34;49m .. eference 2 = dlna4o.nodes [ 1 ] [ 0 ] [39;49m[33;40m32[39;49m[34;49m dump dlna4o.nodes [ 2 ] [ 1 ].AfterReference 1 = dlna4o.nodes [ 2 ] [ 1 ].BeforeReferenc .. [39;49m[32;49m
0x7fa6de03f554    48b82000000000000000    mov rax, 0x20                                          [39;49m[32;49m
0x7fa6de03f55e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03f562    498906                  mov [r14], rax                                         [39;49m
[34;49m .. rence 2 = dlna4o.nodes [ 1 ] [ 0 ] 32 [39;49m[33;40mdump[39;49m[34;49m dlna4o.nodes [ 2 ] [ 1 ].AfterReference 1 = dlna4o.nodes [ 2 ] [ 1 ].BeforeReference 2 .. [39;49m[32;49m
0x7fa6de03f565    49b87431efbf1d560000    mov r8, 0x561dbfef3174                                 [39;49m[32;49m
0x7fa6de03f56f    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03f579    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000561dbfef3174 >[39;49m
[34;49m ..  2 = dlna4o.nodes [ 1 ] [ 0 ] 32 dump [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 2 ] [ 1 ].AfterReference 1 = dlna4o.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\ .. [39;49m[32;49m
0x7fa6de03f57c    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03f580    4881c010040000          add rax, 0x410                                         [39;49m
[34;49m .. na4o.nodes [ 2 ] [ 1 ].AfterReference [39;49m[33;40m1[39;49m[34;49m = dlna4o.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust before : dlna4o.nodes [ 2 ] [ 1 ]  .. [39;49m[32;49m
0x7fa6de03f587    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. 4o.nodes [ 2 ] [ 1 ].AfterReference 1 [39;49m[33;40m=[39;49m[34;49m dlna4o.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust before : dlna4o.nodes [ 2 ] [ 1 ] 32 .. [39;49m[32;49m
0x7fa6de03f591    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. .nodes [ 2 ] [ 1 ].AfterReference 1 = [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust before : dlna4o.nodes [ 2 ] [ 1 ] 32 d .. [39;49m[32;49m
0x7fa6de03f594    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03f598    4881c018040000          add rax, 0x418                                         [39;49m
[34;49m .. a4o.nodes [ 2 ] [ 1 ].BeforeReference [39;49m[33;40m2[39;49m[34;49m = "\njust before : dlna4o.nodes [ 2 ] [ 1 ] 32 dump" ps  dlna4o.nodes [ 2 ] [ 1 ] 32 dump .. [39;49m[32;49m
0x7fa6de03f59f    48b90200000000000000    mov rcx, 0x2                                           [39;49m
[34;49m .. o.nodes [ 2 ] [ 1 ].BeforeReference 2 [39;49m[33;40m=[39;49m[34;49m "\njust before : dlna4o.nodes [ 2 ] [ 1 ] 32 dump" ps  dlna4o.nodes [ 2 ] [ 1 ] 32 dump d .. [39;49m[32;49m
0x7fa6de03f5a9    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. nodes [ 2 ] [ 1 ].BeforeReference 2 = [39;49m[33;40m"\njust before : dlna4o.nodes [ 2 ] [ 1 ] 32 dump"[39;49m[34;49m ps  dlna4o.nodes [ 2 ] [ 1 ] 32 dump dln .. [39;49m[32;49m
0x7fa6de03f5ac    48b8fa8cfedda67f0000    mov rax, 0x7fa6ddfe8cfa    	< string : '[34;49m\njust before : dlna4o.nodes [ 2 ] [ 1 ] 32 dump[39;49m' >[39;49m[32;49m
0x7fa6de03f5b6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03f5ba    498906                  mov [r14], rax                                         [39;49m
[34;49m .. e : dlna4o.nodes [ 2 ] [ 1 ] 32 dump" [39;49m[33;40mps[39;49m[34;49m  dlna4o.nodes [ 2 ] [ 1 ] 32 dump dlna4o.nodes [ 3 ] [ 2 ].AfterReference 1 = dlna4o.nod .. [39;49m[32;49m
0x7fa6de03f5bd    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de03f5c7    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m .. dlna4o.nodes [ 2 ] [ 1 ] 32 dump" ps  [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 2 ] [ 1 ] 32 dump dlna4o.nodes [ 3 ] [ 2 ].AfterReference 1 = dlna4o.nodes [ .. [39;49m[32;49m
0x7fa6de03f5ca    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03f5ce    4881c010040000          add rax, 0x410                                         [39;49m[32;49m
0x7fa6de03f5d5    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03f5d9    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 32 dump" ps  dlna4o.nodes [ 2 ] [ 1 ] [39;49m[33;40m32[39;49m[34;49m dump dlna4o.nodes [ 3 ] [ 2 ].AfterReference 1 = dlna4o.nodes [ 3 ] [ 2 ].BeforeReferenc .. [39;49m[32;49m
0x7fa6de03f5dc    48b82000000000000000    mov rax, 0x20                                          [39;49m[32;49m
0x7fa6de03f5e6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03f5ea    498906                  mov [r14], rax                                         [39;49m
[34;49m .. dump" ps  dlna4o.nodes [ 2 ] [ 1 ] 32 [39;49m[33;40mdump[39;49m[34;49m dlna4o.nodes [ 3 ] [ 2 ].AfterReference 1 = dlna4o.nodes [ 3 ] [ 2 ].BeforeReference 2 .. [39;49m[32;49m
0x7fa6de03f5ed    49b87431efbf1d560000    mov r8, 0x561dbfef3174                                 [39;49m[32;49m
0x7fa6de03f5f7    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03f601    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000561dbfef3174 >[39;49m
[34;49m ..  ps  dlna4o.nodes [ 2 ] [ 1 ] 32 dump [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 3 ] [ 2 ].AfterReference 1 = dlna4o.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\ .. [39;49m[32;49m
0x7fa6de03f604    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03f608    4881c020060000          add rax, 0x620                                         [39;49m
[34;49m .. na4o.nodes [ 3 ] [ 2 ].AfterReference [39;49m[33;40m1[39;49m[34;49m = dlna4o.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust before : dlna4o.nodes [ 3 ] [ 2 ]  .. [39;49m[32;49m
0x7fa6de03f60f    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. 4o.nodes [ 3 ] [ 2 ].AfterReference 1 [39;49m[33;40m=[39;49m[34;49m dlna4o.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 .. [39;49m[32;49m
0x7fa6de03f619    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. .nodes [ 3 ] [ 2 ].AfterReference 1 = [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 d .. [39;49m[32;49m
0x7fa6de03f61c    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03f620    4881c028060000          add rax, 0x628                                         [39;49m
[34;49m .. a4o.nodes [ 3 ] [ 2 ].BeforeReference [39;49m[33;40m2[39;49m[34;49m = "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps  dlna4o.nodes [ 3 ] [ 2 ] 32 dump .. [39;49m[32;49m
0x7fa6de03f627    48b90200000000000000    mov rcx, 0x2                                           [39;49m
[34;49m .. o.nodes [ 3 ] [ 2 ].BeforeReference 2 [39;49m[33;40m=[39;49m[34;49m "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps  dlna4o.nodes [ 3 ] [ 2 ] 32 dump d .. [39;49m[32;49m
0x7fa6de03f631    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. nodes [ 3 ] [ 2 ].BeforeReference 2 = [39;49m[33;40m"\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump"[39;49m[34;49m ps  dlna4o.nodes [ 3 ] [ 2 ] 32 dump dln .. [39;49m[32;49m
0x7fa6de03f634    48b8a18dfedda67f0000    mov rax, 0x7fa6ddfe8da1    	< string : '[34;49m\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump[39;49m' >[39;49m[32;49m
0x7fa6de03f63e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03f642    498906                  mov [r14], rax                                         [39;49m
[34;49m .. e : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" [39;49m[33;40mps[39;49m[34;49m  dlna4o.nodes [ 3 ] [ 2 ] 32 dump dlna4o.nodes [ 3 ] [ 2 ].AfterReference dlna4o.nodes [ .. [39;49m[32;49m
0x7fa6de03f645    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de03f64f    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m .. dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps  [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 3 ] [ 2 ] 32 dump dlna4o.nodes [ 3 ] [ 2 ].AfterReference dlna4o.nodes [ 3 ] .. [39;49m[32;49m
0x7fa6de03f652    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03f656    4881c020060000          add rax, 0x620                                         [39;49m[32;49m
0x7fa6de03f65d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03f661    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 32 dump" ps  dlna4o.nodes [ 3 ] [ 2 ] [39;49m[33;40m32[39;49m[34;49m dump dlna4o.nodes [ 3 ] [ 2 ].AfterReference dlna4o.nodes [ 3 ] [ 2 ].BeforeReference =  .. [39;49m[32;49m
0x7fa6de03f664    48b82000000000000000    mov rax, 0x20                                          [39;49m[32;49m
0x7fa6de03f66e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03f672    498906                  mov [r14], rax                                         [39;49m
[34;49m .. dump" ps  dlna4o.nodes [ 3 ] [ 2 ] 32 [39;49m[33;40mdump[39;49m[34;49m dlna4o.nodes [ 3 ] [ 2 ].AfterReference dlna4o.nodes [ 3 ] [ 2 ].BeforeReference = dln .. [39;49m[32;49m
0x7fa6de03f675    49b87431efbf1d560000    mov r8, 0x561dbfef3174                                 [39;49m[32;49m
0x7fa6de03f67f    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03f689    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000561dbfef3174 >[39;49m
[34;49m ..  ps  dlna4o.nodes [ 3 ] [ 2 ] 32 dump [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 3 ] [ 2 ].AfterReference dlna4o.nodes [ 3 ] [ 2 ].BeforeReference = dlna4o.n .. [39;49m[32;49m
0x7fa6de03f68c    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03f690    4881c020060000          add rax, 0x620                                         [39;49m
[34;49m .. na4o.nodes [ 3 ] [ 2 ].AfterReference [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 3 ] [ 2 ].BeforeReference = dlna4o.nodes [ 3 ] [ 2 ].BeforeReference dlna4o. .. [39;49m[32;49m
0x7fa6de03f697    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03f69b    4881c128060000          add rcx, 0x628                                         [39;49m
[34;49m .. a4o.nodes [ 3 ] [ 2 ].BeforeReference [39;49m[33;40m=[39;49m[34;49m dlna4o.nodes [ 3 ] [ 2 ].BeforeReference dlna4o.nodes [ 3 ] [ 2 ].AfterReference = "\njus .. [39;49m[32;49m
0x7fa6de03f6a2    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. o.nodes [ 3 ] [ 2 ].BeforeReference = [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 3 ] [ 2 ].BeforeReference dlna4o.nodes [ 3 ] [ 2 ].AfterReference = "\njust  .. [39;49m[32;49m
0x7fa6de03f6a5    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03f6a9    4881c028060000          add rax, 0x628                                         [39;49m
[34;49m .. a4o.nodes [ 3 ] [ 2 ].BeforeReference [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 3 ] [ 2 ].AfterReference = "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump .. [39;49m[32;49m
0x7fa6de03f6b0    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03f6b4    4881c120060000          add rcx, 0x620                                         [39;49m
[34;49m .. na4o.nodes [ 3 ] [ 2 ].AfterReference [39;49m[33;40m=[39;49m[34;49m "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps  dlna4o.nodes [ 3 ] [ 2 ] 32 dump " .. [39;49m[32;49m
0x7fa6de03f6bb    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 4o.nodes [ 3 ] [ 2 ].AfterReference = [39;49m[33;40m"\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump"[39;49m[34;49m ps  dlna4o.nodes [ 3 ] [ 2 ] 32 dump "dl .. [39;49m[32;49m
0x7fa6de03f6be    48b84c8efedda67f0000    mov rax, 0x7fa6ddfe8e4c    	< string : '[34;49m\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump[39;49m' >[39;49m[32;49m
0x7fa6de03f6c8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03f6cc    498906                  mov [r14], rax                                         [39;49m
[34;49m .. e : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" [39;49m[33;40mps[39;49m[34;49m  dlna4o.nodes [ 3 ] [ 2 ] 32 dump "dlna4o = " ps dlna4o hp ;  .. [39;49m[32;49m
0x7fa6de03f6cf    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de03f6d9    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m .. dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps  [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 3 ] [ 2 ] 32 dump "dlna4o = " ps dlna4o hp ;  .. [39;49m[32;49m
0x7fa6de03f6dc    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03f6e0    4881c020060000          add rax, 0x620                                         [39;49m[32;49m
0x7fa6de03f6e7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03f6eb    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 32 dump" ps  dlna4o.nodes [ 3 ] [ 2 ] [39;49m[33;40m32[39;49m[34;49m dump "dlna4o = " ps dlna4o hp ;  .. [39;49m[32;49m
0x7fa6de03f6ee    48b82000000000000000    mov rax, 0x20                                          [39;49m[32;49m
0x7fa6de03f6f8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03f6fc    498906                  mov [r14], rax                                         [39;49m
[34;49m .. dump" ps  dlna4o.nodes [ 3 ] [ 2 ] 32 [39;49m[33;40mdump[39;49m[34;49m "dlna4o = " ps dlna4o hp ;  .. [39;49m[32;49m
0x7fa6de03f6ff    49b87431efbf1d560000    mov r8, 0x561dbfef3174                                 [39;49m[32;49m
0x7fa6de03f709    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03f713    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000561dbfef3174 >[39;49m
[34;49m ..  ps  dlna4o.nodes [ 3 ] [ 2 ] 32 dump [39;49m[33;40m"dlna4o = "[39;49m[34;49m ps dlna4o hp ;  .. [39;49m[32;49m
0x7fa6de03f716    48b8c18efedda67f0000    mov rax, 0x7fa6ddfe8ec1    	< string : '[34;49mdlna4o = [39;49m' >[39;49m[32;49m
0x7fa6de03f720    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03f724    498906                  mov [r14], rax                                         [39;49m
[34;49m .. nodes [ 3 ] [ 2 ] 32 dump "dlna4o = " [39;49m[33;40mps[39;49m[34;49m dlna4o hp ;  .. [39;49m[32;49m
0x7fa6de03f727    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de03f731    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m .. es [ 3 ] [ 2 ] 32 dump "dlna4o = " ps [39;49m[33;40mdlna4o[39;49m[34;49m hp ;  .. [39;49m[32;49m
0x7fa6de03f734    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03f738    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de03f73f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03f743    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ] [ 2 ] 32 dump "dlna4o = " ps dlna4o [39;49m[33;40mhp[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fa6de03f746    49b9cb9303dea67f0000    mov r9, 0x7fa6de0393cb                                 [39;49m[32;49m
0x7fa6de03f750    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fa6de0393cb >[39;49m
[34;49m ..  2 ] 32 dump "dlna4o = " ps dlna4o hp [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de03f753    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03f757    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03f75b    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de03f75f    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'testna5' :: codeSize = 665
Word : 0x00007fa6ddb0f348 :: Compiled at : 0x00007fa6de03f4c6
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.cft 46.21 <::
 
dlna4o =  0x00007fa6ddbe7718
Dump at : namespaces/test/arrayTest.cft : 48.16 :
Dump : Address = 0x00007fa6ddbe7918 : Number = 32 :: (little endian dump)
0x00007fa6ddbe7918 : 0x0000000000000001 0x0000000000000002  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddbe7928 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 
just before : dlna4o.nodes [ 2 ] [ 1 ] 32 dump
Dump at : namespaces/test/arrayTest.cft : 48.16 :
Dump : Address = 0x00007fa6ddbe7b28 : Number = 32 :: (little endian dump)
0x00007fa6ddbe7b28 : 0x0000000000000001 0x0000000000000002  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddbe7b38 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 
just before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump
Dump at : namespaces/test/arrayTest.cft : 48.16 :
Dump : Address = 0x00007fa6ddbe7d38 : Number = 32 :: (little endian dump)
0x00007fa6ddbe7d38 : 0x0000000000000001 0x0000000000000002  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddbe7d48 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 
just before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump
Dump at : namespaces/test/arrayTest.cft : 48.16 :
Dump : Address = 0x00007fa6ddbe7d38 : Number = 32 :: (little endian dump)
0x00007fa6ddbe7d38 : 0x00007fa6ddbe7d40 0x00007fa6ddbe7d38  40 7d be dd a6 7f 00 00  38 7d be dd a6 7f 00 00  @}...... 8}...... 
0x00007fa6ddbe7d48 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 dlna4o =  0x00007fa6ddbe7718
 =============================
DLLNodeAlloc4.[34;49mtestna5[39;49m <:> cfrTil compiled word
SourceCode for DLLNodeAlloc4.[34;49mtestna5[39;49m :> 
[34;49m: testna5 "\ntestna4 = " ps testna4 hp testna4.nodes [ 1 ] [ 0 ].AfterReference 1 = testna4.nodes [ 1 ] [ 0 ].BeforeReference 2 = testna4.nodes [ 1 ] [ 0 ] 32 dump testna4.nodes [ 2 ] [ 1 ].AfterReference 1 = testna4.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust before : testna4.nodes [ 2 ] [ 1 ] 32 dump" ps testna4.nodes [ 2 ] [ 1 ] 32 dump testna4.nodes [ 3 ] [ 2 ].AfterReference 1 = testna4.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump" ps testna4.nodes [ 3 ] [ 2 ] 32 dump testna4.nodes [ 3 ] [ 2 ].AfterReference testna4.nodes [ 3 ] [ 2 ].BeforeReference = testna4.nodes [ 3 ] [ 2 ].BeforeReference testna4.nodes [ 3 ] [ 2 ].AfterReference = "\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump" ps testna4.nodes [ 3 ] [ 2 ] 32 dump "testna4 = " ps testna4 hp ; [39;49m
Source code file location of [34;49mtestna5[39;49m : "namespaces/test/arrayTest.cft" : 49.10 :: we are now at : namespaces/test/arrayTest.cft : 68.21
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde03f774 -- code size = 735 bytes
TypeSignature : 
 -----------------------------
Word :: DLLNodeAlloc4.[34;49mtestna5[39;49m : definition = 0x00007fa6de03f774 : disassembly at namespaces/test/arrayTest.cft : 68.21 :
[34;49m ..                            : testna5  [39;49m[33;40m"\ntestna4 = "[39;49m[34;49m ps testna4 hp testna4.nodes [ 1 ] [ 0 ].AfterReference 1 = testna4.nodes [ 1 .. [39;49m[32;49m
0x7fa6de03f774    48b82192fedda67f0000    mov rax, 0x7fa6ddfe9221    	< string : '[34;49m\ntestna4 = [39;49m' >[39;49m[32;49m
0x7fa6de03f77e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03f782    498906                  mov [r14], rax                                         [39;49m
[34;49m ..             : testna5  "\ntestna4 = " [39;49m[33;40mps[39;49m[34;49m testna4 hp testna4.nodes [ 1 ] [ 0 ].AfterReference 1 = testna4.nodes [ 1 ] [ 0 ].Before .. [39;49m[32;49m
0x7fa6de03f785    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de03f78f    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m ..          : testna5  "\ntestna4 = " ps [39;49m[33;40mtestna4[39;49m[34;49m hp testna4.nodes [ 1 ] [ 0 ].AfterReference 1 = testna4.nodes [ 1 ] [ 0 ].BeforeRef .. [39;49m[32;49m
0x7fa6de03f792    48b81877bedda67f0000    mov rax, 0x7fa6ddbe7718                                [39;49m[32;49m
0x7fa6de03f79c    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de03f7a3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03f7a7    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  : testna5  "\ntestna4 = " ps testna4 [39;49m[33;40mhp[39;49m[34;49m testna4.nodes [ 1 ] [ 0 ].AfterReference 1 = testna4.nodes [ 1 ] [ 0 ].BeforeReference 2 .. [39;49m[32;49m
0x7fa6de03f7aa    49b9cb9303dea67f0000    mov r9, 0x7fa6de0393cb                                 [39;49m[32;49m
0x7fa6de03f7b4    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fa6de0393cb >[39;49m
[34;49m  : testna5  "\ntestna4 = " ps testna4 hp [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 1 ] [ 0 ].AfterReference 1 = testna4.nodes [ 1 ] [ 0 ].BeforeReference 2 =  .. [39;49m[32;49m
0x7fa6de03f7b7    48b81877bedda67f0000    mov rax, 0x7fa6ddbe7718                                [39;49m[32;49m
0x7fa6de03f7c1    4881c000020000          add rax, 0x200                                         [39;49m
[34;49m .. tna4.nodes [ 1 ] [ 0 ].AfterReference [39;49m[33;40m1[39;49m[34;49m = testna4.nodes [ 1 ] [ 0 ].BeforeReference 2 = testna4.nodes [ 1 ] [ 0 ] 32 dump testna4 .. [39;49m[32;49m
0x7fa6de03f7c8    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. a4.nodes [ 1 ] [ 0 ].AfterReference 1 [39;49m[33;40m=[39;49m[34;49m testna4.nodes [ 1 ] [ 0 ].BeforeReference 2 = testna4.nodes [ 1 ] [ 0 ] 32 dump testna4.n .. [39;49m[32;49m
0x7fa6de03f7d2    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. .nodes [ 1 ] [ 0 ].AfterReference 1 = [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 1 ] [ 0 ].BeforeReference 2 = testna4.nodes [ 1 ] [ 0 ] 32 dump testna4.nod .. [39;49m[32;49m
0x7fa6de03f7d5    48b81877bedda67f0000    mov rax, 0x7fa6ddbe7718                                [39;49m[32;49m
0x7fa6de03f7df    4881c008020000          add rax, 0x208                                         [39;49m
[34;49m .. na4.nodes [ 1 ] [ 0 ].BeforeReference [39;49m[33;40m2[39;49m[34;49m = testna4.nodes [ 1 ] [ 0 ] 32 dump testna4.nodes [ 2 ] [ 1 ].AfterReference 1 = testna4. .. [39;49m[32;49m
0x7fa6de03f7e6    48b90200000000000000    mov rcx, 0x2                                           [39;49m
[34;49m .. 4.nodes [ 1 ] [ 0 ].BeforeReference 2 [39;49m[33;40m=[39;49m[34;49m testna4.nodes [ 1 ] [ 0 ] 32 dump testna4.nodes [ 2 ] [ 1 ].AfterReference 1 = testna4.no .. [39;49m[32;49m
0x7fa6de03f7f0    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. nodes [ 1 ] [ 0 ].BeforeReference 2 = [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 1 ] [ 0 ] 32 dump testna4.nodes [ 2 ] [ 1 ].AfterReference 1 = testna4.node .. [39;49m[32;49m
0x7fa6de03f7f3    48b81877bedda67f0000    mov rax, 0x7fa6ddbe7718                                [39;49m[32;49m
0x7fa6de03f7fd    4881c000020000          add rax, 0x200                                         [39;49m[32;49m
0x7fa6de03f804    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03f808    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ference 2 = testna4.nodes [ 1 ] [ 0 ] [39;49m[33;40m32[39;49m[34;49m dump testna4.nodes [ 2 ] [ 1 ].AfterReference 1 = testna4.nodes [ 2 ] [ 1 ].BeforeRefere .. [39;49m[32;49m
0x7fa6de03f80b    48b82000000000000000    mov rax, 0x20                                          [39;49m[32;49m
0x7fa6de03f815    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03f819    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ence 2 = testna4.nodes [ 1 ] [ 0 ] 32 [39;49m[33;40mdump[39;49m[34;49m testna4.nodes [ 2 ] [ 1 ].AfterReference 1 = testna4.nodes [ 2 ] [ 1 ].BeforeReference .. [39;49m[32;49m
0x7fa6de03f81c    49b87431efbf1d560000    mov r8, 0x561dbfef3174                                 [39;49m[32;49m
0x7fa6de03f826    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03f830    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000561dbfef3174 >[39;49m
[34;49m .. 2 = testna4.nodes [ 1 ] [ 0 ] 32 dump [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 2 ] [ 1 ].AfterReference 1 = testna4.nodes [ 2 ] [ 1 ].BeforeReference 2 =  .. [39;49m[32;49m
0x7fa6de03f833    48b81877bedda67f0000    mov rax, 0x7fa6ddbe7718                                [39;49m[32;49m
0x7fa6de03f83d    4881c010040000          add rax, 0x410                                         [39;49m
[34;49m .. tna4.nodes [ 2 ] [ 1 ].AfterReference [39;49m[33;40m1[39;49m[34;49m = testna4.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust before : testna4.nodes [ 2 ] [ 1  .. [39;49m[32;49m
0x7fa6de03f844    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. a4.nodes [ 2 ] [ 1 ].AfterReference 1 [39;49m[33;40m=[39;49m[34;49m testna4.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust before : testna4.nodes [ 2 ] [ 1 ]  .. [39;49m[32;49m
0x7fa6de03f84e    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. .nodes [ 2 ] [ 1 ].AfterReference 1 = [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust before : testna4.nodes [ 2 ] [ 1 ] 32 .. [39;49m[32;49m
0x7fa6de03f851    48b81877bedda67f0000    mov rax, 0x7fa6ddbe7718                                [39;49m[32;49m
0x7fa6de03f85b    4881c018040000          add rax, 0x418                                         [39;49m
[34;49m .. na4.nodes [ 2 ] [ 1 ].BeforeReference [39;49m[33;40m2[39;49m[34;49m = "\njust before : testna4.nodes [ 2 ] [ 1 ] 32 dump" ps  testna4.nodes [ 2 ] [ 1 ] 32 du .. [39;49m[32;49m
0x7fa6de03f862    48b90200000000000000    mov rcx, 0x2                                           [39;49m
[34;49m .. 4.nodes [ 2 ] [ 1 ].BeforeReference 2 [39;49m[33;40m=[39;49m[34;49m "\njust before : testna4.nodes [ 2 ] [ 1 ] 32 dump" ps  testna4.nodes [ 2 ] [ 1 ] 32 dump .. [39;49m[32;49m
0x7fa6de03f86c    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. nodes [ 2 ] [ 1 ].BeforeReference 2 = [39;49m[33;40m"\njust before : testna4.nodes [ 2 ] [ 1 ] 32 dump"[39;49m[34;49m ps  testna4.nodes [ 2 ] [ 1 ] 32 dump t .. [39;49m[32;49m
0x7fa6de03f86f    48b88d92fedda67f0000    mov rax, 0x7fa6ddfe928d    	< string : '[34;49m\njust before : testna4.nodes [ 2 ] [ 1 ] 32 dump[39;49m' >[39;49m[32;49m
0x7fa6de03f879    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03f87d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  : testna4.nodes [ 2 ] [ 1 ] 32 dump" [39;49m[33;40mps[39;49m[34;49m  testna4.nodes [ 2 ] [ 1 ] 32 dump testna4.nodes [ 3 ] [ 2 ].AfterReference 1 = testna4. .. [39;49m[32;49m
0x7fa6de03f880    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de03f88a    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m .. estna4.nodes [ 2 ] [ 1 ] 32 dump" ps  [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 2 ] [ 1 ] 32 dump testna4.nodes [ 3 ] [ 2 ].AfterReference 1 = testna4.node .. [39;49m[32;49m
0x7fa6de03f88d    48b81877bedda67f0000    mov rax, 0x7fa6ddbe7718                                [39;49m[32;49m
0x7fa6de03f897    4881c010040000          add rax, 0x410                                         [39;49m[32;49m
0x7fa6de03f89e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03f8a2    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 2 dump" ps  testna4.nodes [ 2 ] [ 1 ] [39;49m[33;40m32[39;49m[34;49m dump testna4.nodes [ 3 ] [ 2 ].AfterReference 1 = testna4.nodes [ 3 ] [ 2 ].BeforeRefere .. [39;49m[32;49m
0x7fa6de03f8a5    48b82000000000000000    mov rax, 0x20                                          [39;49m[32;49m
0x7fa6de03f8af    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03f8b3    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ump" ps  testna4.nodes [ 2 ] [ 1 ] 32 [39;49m[33;40mdump[39;49m[34;49m testna4.nodes [ 3 ] [ 2 ].AfterReference 1 = testna4.nodes [ 3 ] [ 2 ].BeforeReference .. [39;49m[32;49m
0x7fa6de03f8b6    49b87431efbf1d560000    mov r8, 0x561dbfef3174                                 [39;49m[32;49m
0x7fa6de03f8c0    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03f8ca    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000561dbfef3174 >[39;49m
[34;49m .. ps  testna4.nodes [ 2 ] [ 1 ] 32 dump [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 3 ] [ 2 ].AfterReference 1 = testna4.nodes [ 3 ] [ 2 ].BeforeReference 2 =  .. [39;49m[32;49m
0x7fa6de03f8cd    48b81877bedda67f0000    mov rax, 0x7fa6ddbe7718                                [39;49m[32;49m
0x7fa6de03f8d7    4881c020060000          add rax, 0x620                                         [39;49m
[34;49m .. tna4.nodes [ 3 ] [ 2 ].AfterReference [39;49m[33;40m1[39;49m[34;49m = testna4.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust before : testna4.nodes [ 3 ] [ 2  .. [39;49m[32;49m
0x7fa6de03f8de    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. a4.nodes [ 3 ] [ 2 ].AfterReference 1 [39;49m[33;40m=[39;49m[34;49m testna4.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust before : testna4.nodes [ 3 ] [ 2 ]  .. [39;49m[32;49m
0x7fa6de03f8e8    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. .nodes [ 3 ] [ 2 ].AfterReference 1 = [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust before : testna4.nodes [ 3 ] [ 2 ] 32 .. [39;49m[32;49m
0x7fa6de03f8eb    48b81877bedda67f0000    mov rax, 0x7fa6ddbe7718                                [39;49m[32;49m
0x7fa6de03f8f5    4881c028060000          add rax, 0x628                                         [39;49m
[34;49m .. na4.nodes [ 3 ] [ 2 ].BeforeReference [39;49m[33;40m2[39;49m[34;49m = "\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump" ps  testna4.nodes [ 3 ] [ 2 ] 32 du .. [39;49m[32;49m
0x7fa6de03f8fc    48b90200000000000000    mov rcx, 0x2                                           [39;49m
[34;49m .. 4.nodes [ 3 ] [ 2 ].BeforeReference 2 [39;49m[33;40m=[39;49m[34;49m "\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump" ps  testna4.nodes [ 3 ] [ 2 ] 32 dump .. [39;49m[32;49m
0x7fa6de03f906    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. nodes [ 3 ] [ 2 ].BeforeReference 2 = [39;49m[33;40m"\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump"[39;49m[34;49m ps  testna4.nodes [ 3 ] [ 2 ] 32 dump t .. [39;49m[32;49m
0x7fa6de03f909    48b83793fedda67f0000    mov rax, 0x7fa6ddfe9337    	< string : '[34;49m\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump[39;49m' >[39;49m[32;49m
0x7fa6de03f913    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03f917    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  : testna4.nodes [ 3 ] [ 2 ] 32 dump" [39;49m[33;40mps[39;49m[34;49m  testna4.nodes [ 3 ] [ 2 ] 32 dump testna4.nodes [ 3 ] [ 2 ].AfterReference testna4.node .. [39;49m[32;49m
0x7fa6de03f91a    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de03f924    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m .. estna4.nodes [ 3 ] [ 2 ] 32 dump" ps  [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 3 ] [ 2 ] 32 dump testna4.nodes [ 3 ] [ 2 ].AfterReference testna4.nodes [  .. [39;49m[32;49m
0x7fa6de03f927    48b81877bedda67f0000    mov rax, 0x7fa6ddbe7718                                [39;49m[32;49m
0x7fa6de03f931    4881c020060000          add rax, 0x620                                         [39;49m[32;49m
0x7fa6de03f938    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03f93c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 2 dump" ps  testna4.nodes [ 3 ] [ 2 ] [39;49m[33;40m32[39;49m[34;49m dump testna4.nodes [ 3 ] [ 2 ].AfterReference testna4.nodes [ 3 ] [ 2 ].BeforeReference  .. [39;49m[32;49m
0x7fa6de03f93f    48b82000000000000000    mov rax, 0x20                                          [39;49m[32;49m
0x7fa6de03f949    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03f94d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ump" ps  testna4.nodes [ 3 ] [ 2 ] 32 [39;49m[33;40mdump[39;49m[34;49m testna4.nodes [ 3 ] [ 2 ].AfterReference testna4.nodes [ 3 ] [ 2 ].BeforeReference = t .. [39;49m[32;49m
0x7fa6de03f950    49b87431efbf1d560000    mov r8, 0x561dbfef3174                                 [39;49m[32;49m
0x7fa6de03f95a    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03f964    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000561dbfef3174 >[39;49m
[34;49m .. ps  testna4.nodes [ 3 ] [ 2 ] 32 dump [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 3 ] [ 2 ].AfterReference testna4.nodes [ 3 ] [ 2 ].BeforeReference = testna .. [39;49m[32;49m
0x7fa6de03f967    48b81877bedda67f0000    mov rax, 0x7fa6ddbe7718                                [39;49m[32;49m
0x7fa6de03f971    4881c020060000          add rax, 0x620                                         [39;49m
[34;49m .. tna4.nodes [ 3 ] [ 2 ].AfterReference [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 3 ] [ 2 ].BeforeReference = testna4.nodes [ 3 ] [ 2 ].BeforeReference testn .. [39;49m[32;49m
0x7fa6de03f978    48b91877bedda67f0000    mov rcx, 0x7fa6ddbe7718                                [39;49m[32;49m
0x7fa6de03f982    4881c128060000          add rcx, 0x628                                         [39;49m
[34;49m .. na4.nodes [ 3 ] [ 2 ].BeforeReference [39;49m[33;40m=[39;49m[34;49m testna4.nodes [ 3 ] [ 2 ].BeforeReference testna4.nodes [ 3 ] [ 2 ].AfterReference = "\nj .. [39;49m[32;49m
0x7fa6de03f989    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 4.nodes [ 3 ] [ 2 ].BeforeReference = [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 3 ] [ 2 ].BeforeReference testna4.nodes [ 3 ] [ 2 ].AfterReference = "\njus .. [39;49m[32;49m
0x7fa6de03f98c    48b81877bedda67f0000    mov rax, 0x7fa6ddbe7718                                [39;49m[32;49m
0x7fa6de03f996    4881c028060000          add rax, 0x628                                         [39;49m
[34;49m .. na4.nodes [ 3 ] [ 2 ].BeforeReference [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 3 ] [ 2 ].AfterReference = "\njust before : testna4.nodes [ 3 ] [ 2 ] 32 du .. [39;49m[32;49m
0x7fa6de03f99d    48b91877bedda67f0000    mov rcx, 0x7fa6ddbe7718                                [39;49m[32;49m
0x7fa6de03f9a7    4881c120060000          add rcx, 0x620                                         [39;49m
[34;49m .. tna4.nodes [ 3 ] [ 2 ].AfterReference [39;49m[33;40m=[39;49m[34;49m "\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump" ps  testna4.nodes [ 3 ] [ 2 ] 32 dump .. [39;49m[32;49m
0x7fa6de03f9ae    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. a4.nodes [ 3 ] [ 2 ].AfterReference = [39;49m[33;40m"\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump"[39;49m[34;49m ps  testna4.nodes [ 3 ] [ 2 ] 32 dump " .. [39;49m[32;49m
0x7fa6de03f9b1    48b8e593fedda67f0000    mov rax, 0x7fa6ddfe93e5    	< string : '[34;49m\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump[39;49m' >[39;49m[32;49m
0x7fa6de03f9bb    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03f9bf    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  : testna4.nodes [ 3 ] [ 2 ] 32 dump" [39;49m[33;40mps[39;49m[34;49m  testna4.nodes [ 3 ] [ 2 ] 32 dump "testna4 = " ps testna4 hp ;  .. [39;49m[32;49m
0x7fa6de03f9c2    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de03f9cc    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m .. estna4.nodes [ 3 ] [ 2 ] 32 dump" ps  [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 3 ] [ 2 ] 32 dump "testna4 = " ps testna4 hp ;  .. [39;49m[32;49m
0x7fa6de03f9cf    48b81877bedda67f0000    mov rax, 0x7fa6ddbe7718                                [39;49m[32;49m
0x7fa6de03f9d9    4881c020060000          add rax, 0x620                                         [39;49m[32;49m
0x7fa6de03f9e0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03f9e4    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 2 dump" ps  testna4.nodes [ 3 ] [ 2 ] [39;49m[33;40m32[39;49m[34;49m dump "testna4 = " ps testna4 hp ;  .. [39;49m[32;49m
0x7fa6de03f9e7    48b82000000000000000    mov rax, 0x20                                          [39;49m[32;49m
0x7fa6de03f9f1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03f9f5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ump" ps  testna4.nodes [ 3 ] [ 2 ] 32 [39;49m[33;40mdump[39;49m[34;49m "testna4 = " ps testna4 hp ;  .. [39;49m[32;49m
0x7fa6de03f9f8    49b87431efbf1d560000    mov r8, 0x561dbfef3174                                 [39;49m[32;49m
0x7fa6de03fa02    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03fa0c    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000561dbfef3174 >[39;49m
[34;49m .. ps  testna4.nodes [ 3 ] [ 2 ] 32 dump [39;49m[33;40m"testna4 = "[39;49m[34;49m ps testna4 hp ;  .. [39;49m[32;49m
0x7fa6de03fa0f    48b85d94fedda67f0000    mov rax, 0x7fa6ddfe945d    	< string : '[34;49mtestna4 = [39;49m' >[39;49m[32;49m
0x7fa6de03fa19    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03fa1d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. odes [ 3 ] [ 2 ] 32 dump "testna4 = " [39;49m[33;40mps[39;49m[34;49m testna4 hp ;  .. [39;49m[32;49m
0x7fa6de03fa20    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de03fa2a    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m .. s [ 3 ] [ 2 ] 32 dump "testna4 = " ps [39;49m[33;40mtestna4[39;49m[34;49m hp ;  .. [39;49m[32;49m
0x7fa6de03fa2d    48b81877bedda67f0000    mov rax, 0x7fa6ddbe7718                                [39;49m[32;49m
0x7fa6de03fa37    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de03fa3e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03fa42    498906                  mov [r14], rax                                         [39;49m
[34;49m .. [ 2 ] 32 dump "testna4 = " ps testna4 [39;49m[33;40mhp[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fa6de03fa45    49b9cb9303dea67f0000    mov r9, 0x7fa6de0393cb                                 [39;49m[32;49m
0x7fa6de03fa4f    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fa6de0393cb >[39;49m
[34;49m ..  ] 32 dump "testna4 = " ps testna4 hp [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de03fa52    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'testna5' :: codeSize = 734
Word : 0x00007fa6ddabccd8 :: Compiled at : 0x00007fa6de03f774
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.cft 68.21 <::
 
testna4 =  0x00007fa6ddbe7718
Dump at : namespaces/test/arrayTest.cft : 70.8 :
Dump : Address = 0x00007fa6ddbe7918 : Number = 32 :: (little endian dump)
0x00007fa6ddbe7918 : 0x0000000000000001 0x0000000000000002  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddbe7928 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 
just before : testna4.nodes [ 2 ] [ 1 ] 32 dump
Dump at : namespaces/test/arrayTest.cft : 70.8 :
Dump : Address = 0x00007fa6ddbe7b28 : Number = 32 :: (little endian dump)
0x00007fa6ddbe7b28 : 0x0000000000000001 0x0000000000000002  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddbe7b38 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 
just before : testna4.nodes [ 3 ] [ 2 ] 32 dump
Dump at : namespaces/test/arrayTest.cft : 70.8 :
Dump : Address = 0x00007fa6ddbe7d38 : Number = 32 :: (little endian dump)
0x00007fa6ddbe7d38 : 0x0000000000000001 0x0000000000000002  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddbe7d48 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 
just before : testna4.nodes [ 3 ] [ 2 ] 32 dump
Dump at : namespaces/test/arrayTest.cft : 70.8 :
Dump : Address = 0x00007fa6ddbe7d38 : Number = 32 :: (little endian dump)
0x00007fa6ddbe7d38 : 0x00007fa6ddbe7d40 0x00007fa6ddbe7d38  40 7d be dd a6 7f 00 00  38 7d be dd a6 7f 00 00  @}...... 8}...... 
0x00007fa6ddbe7d48 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 testna4 =  0x00007fa6ddbe7718 
testna4 =  0x00007fa6ddbe7718
 =============================
DLLNodeAlloc.[34;49mtna[39;49m <:> cfrTil compiled word
SourceCode for DLLNodeAlloc.[34;49mtna[39;49m :> 
[34;49m: tna testnarr2.nodes [ 1 ] 32 dump testnarr2.nodes [ 1 ].AfterReference 1 = testnarr2.nodes [ 1 ]. BeforeReference 2 = testnarr2.nodes [ 1 ] 32 dump ; [39;49m
Source code file location of [34;49mtna[39;49m : "namespaces/test/arrayTest.cft" : 77.5 :: we are now at : namespaces/test/arrayTest.cft : 83.17
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde03fa67 -- code size = 189 bytes
TypeSignature : 
 -----------------------------
Word :: DLLNodeAlloc.[34;49mtna[39;49m : definition = 0x00007fa6de03fa67 : disassembly at namespaces/test/arrayTest.cft : 83.17 :
[34;49m ..                                 : tna [39;49m[33;40mtestnarr2[39;49m[34;49m.nodes [ 1 ] 32 dump  testnarr2.nodes [ 1 ].AfterReference 1 =  testnarr2.nodes [  .. [39;49m[32;49m
0x7fa6de03fa67    48b85807aedda67f0000    mov rax, 0x7fa6ddae0758                                [39;49m[32;49m
0x7fa6de03fa71    4881c010000000          add rax, 0x10                                          [39;49m[32;49m
0x7fa6de03fa78    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03fa7c    498906                  mov [r14], rax                                         [39;49m
[34;49m ..           : tna testnarr2.nodes [ 1 ] [39;49m[33;40m32[39;49m[34;49m dump  testnarr2.nodes [ 1 ].AfterReference 1 =  testnarr2.nodes [ 1 ]. BeforeReference 2 .. [39;49m[32;49m
0x7fa6de03fa7f    48b82000000000000000    mov rax, 0x20                                          [39;49m[32;49m
0x7fa6de03fa89    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03fa8d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..        : tna testnarr2.nodes [ 1 ] 32 [39;49m[33;40mdump[39;49m[34;49m  testnarr2.nodes [ 1 ].AfterReference 1 =  testnarr2.nodes [ 1 ]. BeforeReference 2 =  .. [39;49m[32;49m
0x7fa6de03fa90    49b87431efbf1d560000    mov r8, 0x561dbfef3174                                 [39;49m[32;49m
0x7fa6de03fa9a    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03faa4    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000561dbfef3174 >[39;49m
[34;49m ..  : tna testnarr2.nodes [ 1 ] 32 dump  [39;49m[33;40mtestnarr2[39;49m[34;49m.nodes [ 1 ].AfterReference 1 =  testnarr2.nodes [ 1 ]. BeforeReference 2 =  testn .. [39;49m[32;49m
0x7fa6de03faa7    48b85807aedda67f0000    mov rax, 0x7fa6ddae0758                                [39;49m[32;49m
0x7fa6de03fab1    4881c010000000          add rax, 0x10                                          [39;49m
[34;49m ..  testnarr2.nodes [ 1 ].AfterReference [39;49m[33;40m1[39;49m[34;49m =  testnarr2.nodes [ 1 ]. BeforeReference 2 =  testnarr2.nodes [ 1 ] 32 dump  ;  .. [39;49m[32;49m
0x7fa6de03fab8    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. estnarr2.nodes [ 1 ].AfterReference 1 [39;49m[33;40m=[39;49m[34;49m  testnarr2.nodes [ 1 ]. BeforeReference 2 =  testnarr2.nodes [ 1 ] 32 dump  ;  .. [39;49m[32;49m
0x7fa6de03fac2    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. narr2.nodes [ 1 ].AfterReference 1 =  [39;49m[33;40mtestnarr2[39;49m[34;49m.nodes [ 1 ]. BeforeReference 2 =  testnarr2.nodes [ 1 ] 32 dump  ;  .. [39;49m[32;49m
0x7fa6de03fac5    48b85807aedda67f0000    mov rax, 0x7fa6ddae0758                                [39;49m[32;49m
0x7fa6de03facf    4881c018000000          add rax, 0x18                                          [39;49m
[34;49m .. estnarr2.nodes [ 1 ]. BeforeReference [39;49m[33;40m2[39;49m[34;49m =  testnarr2.nodes [ 1 ] 32 dump  ;  .. [39;49m[32;49m
0x7fa6de03fad6    48b90200000000000000    mov rcx, 0x2                                           [39;49m
[34;49m .. tnarr2.nodes [ 1 ]. BeforeReference 2 [39;49m[33;40m=[39;49m[34;49m  testnarr2.nodes [ 1 ] 32 dump  ;  .. [39;49m[32;49m
0x7fa6de03fae0    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. rr2.nodes [ 1 ]. BeforeReference 2 =  [39;49m[33;40mtestnarr2[39;49m[34;49m.nodes [ 1 ] 32 dump  ;  .. [39;49m[32;49m
0x7fa6de03fae3    48b85807aedda67f0000    mov rax, 0x7fa6ddae0758                                [39;49m[32;49m
0x7fa6de03faed    4881c010000000          add rax, 0x10                                          [39;49m[32;49m
0x7fa6de03faf4    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03faf8    498906                  mov [r14], rax                                         [39;49m
[34;49m .. eReference 2 =  testnarr2.nodes [ 1 ] [39;49m[33;40m32[39;49m[34;49m dump  ;  .. [39;49m[32;49m
0x7fa6de03fafb    48b82000000000000000    mov rax, 0x20                                          [39;49m[32;49m
0x7fa6de03fb05    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03fb09    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ference 2 =  testnarr2.nodes [ 1 ] 32 [39;49m[33;40mdump[39;49m[34;49m  ;  .. [39;49m[32;49m
0x7fa6de03fb0c    49b87431efbf1d560000    mov r8, 0x561dbfef3174                                 [39;49m[32;49m
0x7fa6de03fb16    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03fb20    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000561dbfef3174 >[39;49m
[34;49m .. e 2 =  testnarr2.nodes [ 1 ] 32 dump  [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de03fb23    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tna' :: codeSize = 188
Word : 0x00007fa6ddac91b8 :: Compiled at : 0x00007fa6de03fa67
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.cft 83.17 <::

Dump at : namespaces/test/arrayTest.cft : 84.4 :
Dump : Address = 0x00007fa6ddae0768 : Number = 32 :: (little endian dump)
0x00007fa6ddae0768 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae0778 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

Dump at : namespaces/test/arrayTest.cft : 84.4 :
Dump : Address = 0x00007fa6ddae0768 : Number = 32 :: (little endian dump)
0x00007fa6ddae0768 : 0x0000000000000001 0x0000000000000002  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae0778 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 tnarr2a

Dump at : namespaces/test/arrayTest.cft : 105.15 :
Dump : Address = 0x00007fa6ddae25c8 : Number = 512 :: (little endian dump)
0x00007fa6ddae25c8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae25d8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae25e8 : 0x0000000000000001 0x0000000000000002  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae25f8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae2608 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae2618 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae2628 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae2638 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae2648 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae2658 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae2668 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae2678 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae2688 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae2698 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae26a8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae26b8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae26c8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae26d8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae26e8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae26f8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae2708 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae2718 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae2728 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae2738 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae2748 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae2758 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae2768 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae2778 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae2788 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae2798 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae27a8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae27b8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 tna3
Dump at : namespaces/test/arrayTest.cft : 117.12 :
Dump : Address = 0x00007fa6ddae3718 : Number = 512 :: (little endian dump)
0x00007fa6ddae3718 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3728 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3738 : 0x0000000000000001 0x0000000000000002  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3748 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3758 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3768 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3778 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3788 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3798 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae37a8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae37b8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae37c8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae37d8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae37e8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae37f8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3808 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3818 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3828 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3838 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3848 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3858 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3868 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3878 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3888 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3898 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae38a8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae38b8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae38c8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae38d8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae38e8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae38f8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3908 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 0x00007fa6ddae3718 tnarr2

 0x00007fa6ddae3718

Dump at : namespaces/test/arrayTest.cft : 120.14 :
Dump : Address = 0x00007fa6ddae3718 : Number = 512 :: (little endian dump)
0x00007fa6ddae3718 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3728 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3738 : 0x0000000000000001 0x0000000000000002  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3748 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3758 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3768 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3778 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3788 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3798 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae37a8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae37b8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae37c8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae37d8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae37e8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae37f8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3808 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3818 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3828 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3838 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3848 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3858 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3868 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3878 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3888 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3898 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae38a8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae38b8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae38c8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae38d8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae38e8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae38f8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae3908 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

 =============================
DLLNodeAlloc.[34;49mtnax1[39;49m <:> cfrTil compiled word
SourceCode for DLLNodeAlloc.[34;49mtnax1[39;49m :> 
[34;49m: tnax1 ( this ) this nl hp nl this.nodes[3].AfterReference 1 = this.nodes[4].BeforeReference 2 = this.nodes[3] hp this.nodes[3].AfterReference dup hp 16 dump this.nodes[4] hp this.nodes[4].BeforeReference dup hp 16 dump ; [39;49m
Source code file location of [34;49mtnax1[39;49m : "namespaces/test/arrayTest.cft" : 122.40 :: we are now at : namespaces/test/arrayTest.cft : 131.19
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde03fdde -- code size = 365 bytes
TypeSignature : 
 -----------------------------
Word :: DLLNodeAlloc.[34;49mtnax1[39;49m : definition = 0x00007fa6de03fdde : disassembly at namespaces/test/arrayTest.cft : 131.19 :
[34;49m ..                                     : [39;49m[33;40mtnax1[39;49m[34;49m ( this ) this nl hp nl  this.nodes[3].AfterReference 1 =  this.nodes[4].BeforeReferen .. [39;49m[32;49m
0x7fa6de03fdde    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de03fde2    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03fde6    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                      : tnax1 ( this ) [39;49m[33;40mthis[39;49m[34;49m nl hp nl  this.nodes[3].AfterReference 1 =  this.nodes[4].BeforeReference 2 =  this.no .. [39;49m[32;49m
0x7fa6de03fded    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03fdf1    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de03fdf8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03fdfc    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                 : tnax1 ( this ) this [39;49m[33;40mnl[39;49m[34;49m hp nl  this.nodes[3].AfterReference 1 =  this.nodes[4].BeforeReference 2 =  this.nodes[3 .. [39;49m[32;49m
0x7fa6de03fdff    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de03fe09    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03fe13    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m ..              : tnax1 ( this ) this nl [39;49m[33;40mhp[39;49m[34;49m nl  this.nodes[3].AfterReference 1 =  this.nodes[4].BeforeReference 2 =  this.nodes[3] h .. [39;49m[32;49m
0x7fa6de03fe16    49b9cb9303dea67f0000    mov r9, 0x7fa6de0393cb                                 [39;49m[32;49m
0x7fa6de03fe20    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fa6de0393cb >[39;49m
[34;49m ..           : tnax1 ( this ) this nl hp [39;49m[33;40mnl[39;49m[34;49m  this.nodes[3].AfterReference 1 =  this.nodes[4].BeforeReference 2 =  this.nodes[3] hp   .. [39;49m[32;49m
0x7fa6de03fe23    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de03fe2d    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03fe37    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m ..       : tnax1 ( this ) this nl hp nl  [39;49m[33;40mthis[39;49m[34;49m.nodes[3].AfterReference 1 =  this.nodes[4].BeforeReference 2 =  this.nodes[3] hp   thi .. [39;49m[32;49m
0x7fa6de03fe3a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03fe3e    4881c030000000          add rax, 0x30                                          [39;49m
[34;49m .. l hp nl  this.nodes[3].AfterReference [39;49m[33;40m1[39;49m[34;49m =  this.nodes[4].BeforeReference 2 =  this.nodes[3] hp   this.nodes[3].AfterReference dup .. [39;49m[32;49m
0x7fa6de03fe45    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. hp nl  this.nodes[3].AfterReference 1 [39;49m[33;40m=[39;49m[34;49m  this.nodes[4].BeforeReference 2 =  this.nodes[3] hp   this.nodes[3].AfterReference dup h .. [39;49m[32;49m
0x7fa6de03fe4f    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. nl  this.nodes[3].AfterReference 1 =  [39;49m[33;40mthis[39;49m[34;49m.nodes[4].BeforeReference 2 =  this.nodes[3] hp   this.nodes[3].AfterReference dup hp 1 .. [39;49m[32;49m
0x7fa6de03fe52    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03fe56    4881c048000000          add rax, 0x48                                          [39;49m
[34;49m .. ce 1 =  this.nodes[4].BeforeReference [39;49m[33;40m2[39;49m[34;49m =  this.nodes[3] hp   this.nodes[3].AfterReference dup hp 16 dump  this.nodes[4] hp   thi .. [39;49m[32;49m
0x7fa6de03fe5d    48b90200000000000000    mov rcx, 0x2                                           [39;49m
[34;49m ..  1 =  this.nodes[4].BeforeReference 2 [39;49m[33;40m=[39;49m[34;49m  this.nodes[3] hp   this.nodes[3].AfterReference dup hp 16 dump  this.nodes[4] hp   this. .. [39;49m[32;49m
0x7fa6de03fe67    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. =  this.nodes[4].BeforeReference 2 =  [39;49m[33;40mthis[39;49m[34;49m.nodes[3] hp   this.nodes[3].AfterReference dup hp 16 dump  this.nodes[4] hp   this.nod .. [39;49m[32;49m
0x7fa6de03fe6a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03fe6e    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fa6de03fe75    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03fe79    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 4].BeforeReference 2 =  this.nodes[3] [39;49m[33;40mhp[39;49m[34;49m   this.nodes[3].AfterReference dup hp 16 dump  this.nodes[4] hp   this.nodes[4].BeforeRe .. [39;49m[32;49m
0x7fa6de03fe7c    49b9cb9303dea67f0000    mov r9, 0x7fa6de0393cb                                 [39;49m[32;49m
0x7fa6de03fe86    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fa6de0393cb >[39;49m
[34;49m .. foreReference 2 =  this.nodes[3] hp   [39;49m[33;40mthis[39;49m[34;49m.nodes[3].AfterReference dup hp 16 dump  this.nodes[4] hp   this.nodes[4].BeforeReferen .. [39;49m[32;49m
0x7fa6de03fe89    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03fe8d    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fa6de03fe94    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de03fe98    498906                  mov [r14], rax                                         [39;49m
[34;49m .. [3] hp   this.nodes[3].AfterReference [39;49m[33;40mdup[39;49m[34;49m hp 16 dump  this.nodes[4] hp   this.nodes[4].BeforeReference dup hp 16 dump ;  .. [39;49m[32;49m
0x7fa6de03fe9b    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. hp   this.nodes[3].AfterReference dup [39;49m[33;40mhp[39;49m[34;49m 16 dump  this.nodes[4] hp   this.nodes[4].BeforeReference dup hp 16 dump ;  .. [39;49m[32;49m
0x7fa6de03fe9f    49b9cb9303dea67f0000    mov r9, 0x7fa6de0393cb                                 [39;49m[32;49m
0x7fa6de03fea9    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fa6de0393cb >[39;49m
[34;49m ..   this.nodes[3].AfterReference dup hp [39;49m[33;40m16[39;49m[34;49m dump  this.nodes[4] hp   this.nodes[4].BeforeReference dup hp 16 dump ;  .. [39;49m[32;49m
0x7fa6de03feac    48b81000000000000000    mov rax, 0x10                                          [39;49m[32;49m
0x7fa6de03feb6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03feba    498906                  mov [r14], rax                                         [39;49m
[34;49m .. his.nodes[3].AfterReference dup hp 16 [39;49m[33;40mdump[39;49m[34;49m  this.nodes[4] hp   this.nodes[4].BeforeReference dup hp 16 dump ;  .. [39;49m[32;49m
0x7fa6de03febd    49b87431efbf1d560000    mov r8, 0x561dbfef3174                                 [39;49m[32;49m
0x7fa6de03fec7    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03fed1    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000561dbfef3174 >[39;49m
[34;49m .. des[3].AfterReference dup hp 16 dump  [39;49m[33;40mthis[39;49m[34;49m.nodes[4] hp   this.nodes[4].BeforeReference dup hp 16 dump ;  .. [39;49m[32;49m
0x7fa6de03fed4    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03fed8    4881c040000000          add rax, 0x40                                          [39;49m[32;49m
0x7fa6de03fedf    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03fee3    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ference dup hp 16 dump  this.nodes[4] [39;49m[33;40mhp[39;49m[34;49m   this.nodes[4].BeforeReference dup hp 16 dump ;  .. [39;49m[32;49m
0x7fa6de03fee6    49b9cb9303dea67f0000    mov r9, 0x7fa6de0393cb                                 [39;49m[32;49m
0x7fa6de03fef0    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fa6de0393cb >[39;49m
[34;49m .. ce dup hp 16 dump  this.nodes[4] hp   [39;49m[33;40mthis[39;49m[34;49m.nodes[4].BeforeReference dup hp 16 dump ;  .. [39;49m[32;49m
0x7fa6de03fef3    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03fef7    4881c048000000          add rax, 0x48                                          [39;49m[32;49m
0x7fa6de03fefe    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de03ff02    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 4] hp   this.nodes[4].BeforeReference [39;49m[33;40mdup[39;49m[34;49m hp 16 dump ;  .. [39;49m[32;49m
0x7fa6de03ff05    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. p   this.nodes[4].BeforeReference dup [39;49m[33;40mhp[39;49m[34;49m 16 dump ;  .. [39;49m[32;49m
0x7fa6de03ff09    49b9cb9303dea67f0000    mov r9, 0x7fa6de0393cb                                 [39;49m[32;49m
0x7fa6de03ff13    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fa6de0393cb >[39;49m
[34;49m ..  this.nodes[4].BeforeReference dup hp [39;49m[33;40m16[39;49m[34;49m dump ;  .. [39;49m[32;49m
0x7fa6de03ff16    48b81000000000000000    mov rax, 0x10                                          [39;49m[32;49m
0x7fa6de03ff20    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03ff24    498906                  mov [r14], rax                                         [39;49m
[34;49m .. is.nodes[4].BeforeReference dup hp 16 [39;49m[33;40mdump[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fa6de03ff27    49b87431efbf1d560000    mov r8, 0x561dbfef3174                                 [39;49m[32;49m
0x7fa6de03ff31    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03ff3b    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000561dbfef3174 >[39;49m
[34;49m .. des[4].BeforeReference dup hp 16 dump [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de03ff3e    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03ff42    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03ff46    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de03ff4a    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tnax1' :: codeSize = 364
Word : 0x00007fa6ddad4390 :: Compiled at : 0x00007fa6de03fdde
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.cft 131.19 <::

 0x00007fa6ddae4868
 0x00007fa6ddae4898 0x00007fa6ddae4898
Dump at : namespaces/test/arrayTest.cft : 133.13 :
Dump : Address = 0x00007fa6ddae4898 : Number = 16 :: (little endian dump)
0x00007fa6ddae4898 : 0x0000000000000001 0x0000000000000000  01 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 0x00007fa6ddae48a8 0x00007fa6ddae48b0
Dump at : namespaces/test/arrayTest.cft : 133.13 :
Dump : Address = 0x00007fa6ddae48b0 : Number = 16 :: (little endian dump)
0x00007fa6ddae48b0 : 0x0000000000000002 0x0000000000000000  02 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 arr1 :  namespaces/test/arrayTest.cft 137.22
Dump at : namespaces/test/arrayTest.cft : 137.39 :
Dump : Address = 0x00007fa6ddae50f8 : Number = 32 :: (little endian dump)
0x00007fa6ddae50f8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae5108 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 arr1 :  namespaces/test/arrayTest.cft 141.22
Dump at : namespaces/test/arrayTest.cft : 141.39 :
Dump : Address = 0x00007fa6ddae50f8 : Number = 32 :: (little endian dump)
0x00007fa6ddae50f8 : 0x0000000000000089 0x0000000000000000  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae5108 : 0x0000000000000000 0x0000000000000089  00 00 00 00 00 00 00 00  89 00 00 00 00 00 00 00  ........ ........ 

 =============================
Ar1.[34;49marr2[39;49m <:> cfrTil compiled word
SourceCode for Ar1.[34;49marr2[39;49m :> 
[34;49m: arr2 ( Ar1 a ) a.ar[1] a.ar[3] @ = a.ar[2] a.ar[3] @ = a.ar[1] @ dup decimal p 0x89 _assert ; [39;49m
Source code file location of [34;49marr2[39;49m : "namespaces/test/arrayTest.cft" : 142.17 :: we are now at : namespaces/test/arrayTest.cft : 148.18
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde03ff50 -- code size = 175 bytes
TypeSignature : Object 
 -----------------------------
Word :: Ar1.[34;49marr2[39;49m : definition = 0x00007fa6de03ff50 : disassembly at namespaces/test/arrayTest.cft : 148.18 :
[34;49m ..                                     : [39;49m[33;40marr2[39;49m[34;49m ( Ar1 a )  a.ar[1] a.ar[3] @ =  a.ar[2] a.ar[3] @ =  a.ar[1] @ dup decimal p 0x89 _ass .. [39;49m[32;49m
0x7fa6de03ff50    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de03ff54    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03ff58    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                     : arr2 ( Ar1 a )  [39;49m[33;40ma[39;49m[34;49m.ar[1] a.ar[3] @ =  a.ar[2] a.ar[3] @ =  a.ar[1] @ dup decimal p 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de03ff5f    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03ff63    4881c008000000          add rax, 0x8                                           [39;49m
[34;49m ..             : arr2 ( Ar1 a )  a.ar[1] [39;49m[33;40ma[39;49m[34;49m.ar[3] @ =  a.ar[2] a.ar[3] @ =  a.ar[1] @ dup decimal p 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de03ff6a    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03ff6e    4881c118000000          add rcx, 0x18                                          [39;49m[32;49m
0x7fa6de03ff75    488b09                  mov rcx, [rcx]                                         [39;49m
[34;49m ..   : arr2 ( Ar1 a )  a.ar[1] a.ar[3] @ [39;49m[33;40m=[39;49m[34;49m  a.ar[2] a.ar[3] @ =  a.ar[1] @ dup decimal p 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de03ff78    488908                  mov [rax], rcx                                         [39;49m
[34;49m   : arr2 ( Ar1 a )  a.ar[1] a.ar[3] @ =  [39;49m[33;40ma[39;49m[34;49m.ar[2] a.ar[3] @ =  a.ar[1] @ dup decimal p 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de03ff7b    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03ff7f    4881c010000000          add rax, 0x10                                          [39;49m
[34;49m .. Ar1 a )  a.ar[1] a.ar[3] @ =  a.ar[2] [39;49m[33;40ma[39;49m[34;49m.ar[3] @ =  a.ar[1] @ dup decimal p 0x89 _assert  ; [39;49m[32;49m
0x7fa6de03ff86    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03ff8a    4881c118000000          add rcx, 0x18                                          [39;49m[32;49m
0x7fa6de03ff91    488b09                  mov rcx, [rcx]                                         [39;49m
[34;49m .. .ar[1] a.ar[3] @ =  a.ar[2] a.ar[3] @ [39;49m[33;40m=[39;49m[34;49m  a.ar[1] @ dup decimal p 0x89 _assert  ; [39;49m[32;49m
0x7fa6de03ff94    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. [1] a.ar[3] @ =  a.ar[2] a.ar[3] @ =  [39;49m[33;40ma[39;49m[34;49m.ar[1] @ dup decimal p 0x89 _assert  ; [39;49m[32;49m
0x7fa6de03ff97    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03ff9b    4881c008000000          add rax, 0x8                                           [39;49m[32;49m
0x7fa6de03ffa2    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de03ffa5    4983c610                add r14, 0x10                                          [39;49m
[34;49m .. .ar[3] @ =  a.ar[2] a.ar[3] @ =  a.ar[[39;49m[33;40m1[39;49m[34;49m] @ dup decimal p 0x89 _assert  ; [39;49m[32;49m
0x7fa6de03ffa9    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ] @ =  a.ar[2] a.ar[3] @ =  a.ar[1] @ [39;49m[33;40mdup[39;49m[34;49m decimal p 0x89 _assert  ; [39;49m[32;49m
0x7fa6de03ffac    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. =  a.ar[2] a.ar[3] @ =  a.ar[1] @ dup [39;49m[33;40mdecimal[39;49m[34;49m p 0x89 _assert  ; [39;49m[32;49m
0x7fa6de03ffb0    49b84f31efbf1d560000    mov r8, 0x561dbfef314f                                 [39;49m[32;49m
0x7fa6de03ffba    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de03ffc4    49ffd1                  call r9                    	< System.[34;49mdecimal[39;49m : 0x0000561dbfef314f >[39;49m
[34;49m .. 2] a.ar[3] @ =  a.ar[1] @ dup decimal [39;49m[33;40mp[39;49m[34;49m 0x89 _assert  ; [39;49m[32;49m
0x7fa6de03ffc7    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de03ffd1    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m ..  a.ar[3] @ =  a.ar[1] @ dup decimal p [39;49m[33;40m0x89[39;49m[34;49m _assert  ; [39;49m[32;49m
0x7fa6de03ffd4    48b88900000000000000    mov rax, 0x89                                          [39;49m[32;49m
0x7fa6de03ffde    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de03ffe2    498906                  mov [r14], rax                                         [39;49m
[34;49m .. [3] @ =  a.ar[1] @ dup decimal p 0x89 [39;49m[33;40m_assert[39;49m[34;49m  ; [39;49m[32;49m
0x7fa6de03ffe5    49b941aa03dea67f0000    mov r9, 0x7fa6de03aa41                                 [39;49m[32;49m
0x7fa6de03ffef    49ffd1                  call r9                    	< System.[34;49m_assert[39;49m : 0x00007fa6de03aa41 >[39;49m
[34;49m .. a.ar[1] @ dup decimal p 0x89 _assert  [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de03fff2    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de03fff6    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de03fffa    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de03fffe    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'arr2' :: codeSize = 174
Word : 0x00007fa6dda87b08 :: Compiled at : 0x00007fa6de03ff50
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.cft 148.18 <::
 137 
arr1 :  namespaces/test/arrayTest.cft 150.24
Dump at : namespaces/test/arrayTest.cft : 150.41 :
Dump : Address = 0x00007fa6ddae50f8 : Number = 32 :: (little endian dump)
0x00007fa6ddae50f8 : 0x0000000000000089 0x0000000000000089  89 00 00 00 00 00 00 00  89 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae5108 : 0x0000000000000089 0x0000000000000089  89 00 00 00 00 00 00 00  89 00 00 00 00 00 00 00  ........ ........ 

 =============================
Ar1.[34;49ma3[39;49m <:> cfrTil compiled word
SourceCode for Ar1.[34;49ma3[39;49m :> 
[34;49m: a3 ( n Ar1 a ) a.ar [n @ 1 +] a.ar[n @ 2 +] @ = a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m
Source code file location of [34;49ma3[39;49m : "namespaces/test/arrayTest.cft" : 151.17 :: we are now at : namespaces/test/arrayTest.cft : 156.16
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde040004 -- code size = 365 bytes
TypeSignature : 
 -----------------------------
Word :: Ar1.[34;49ma3[39;49m : definition = 0x00007fa6de040004 : disassembly at namespaces/test/arrayTest.cft : 156.16 :
[34;49m ..                                     : [39;49m[33;40ma3[39;49m[34;49m ( n Ar1 a )  a.ar [n @ 1 +] a.ar[n @ 2 +] @ =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert deci .. [39;49m[32;49m
0x7fa6de040004    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de040008    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04000c    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                     : a3 ( n Ar1 a )  [39;49m[33;40ma[39;49m[34;49m.ar [n @ 1 +] a.ar[n @ 2 +] @ =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ du .. [39;49m[32;49m
0x7fa6de040013    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de040017    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de04001e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de040022    498906                  mov [r14], rax                                         [39;49m
[34;49m ..               : a3 ( n Ar1 a )  a.ar [[39;49m[33;40mn[39;49m[34;49m @ 1 +] a.ar[n @ 2 +] @ =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0 .. [39;49m[32;49m
0x7fa6de040025    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..           : a3 ( n Ar1 a )  a.ar [n @ [39;49m[33;40m1[39;49m[34;49m +] a.ar[n @ 2 +] @ =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89  .. [39;49m[32;49m
0x7fa6de040029    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m ..         : a3 ( n Ar1 a )  a.ar [n @ 1 [39;49m[33;40m+[39;49m[34;49m] a.ar[n @ 2 +] @ =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _a .. [39;49m[32;49m
0x7fa6de040033    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de040036    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fa6de04003a    490106                  add [r14], rax                                         [39;49m
[34;49m ..      : a3 ( n Ar1 a )  a.ar [n @ 1 +] [39;49m[33;40ma[39;49m[34;49m.ar[n @ 2 +] @ =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _asse .. [39;49m[32;49m
0x7fa6de04003d    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de040041    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de040048    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04004c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : a3 ( n Ar1 a )  a.ar [n @ 1 +] a.ar[[39;49m[33;40mn[39;49m[34;49m @ 2 +] @ =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert de .. [39;49m[32;49m
0x7fa6de04004f    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m: a3 ( n Ar1 a )  a.ar [n @ 1 +] a.ar[n @ [39;49m[33;40m2[39;49m[34;49m +] @ =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decima .. [39;49m[32;49m
0x7fa6de040053    48b90200000000000000    mov rcx, 0x2                                           [39;49m
[34;49m ..  n Ar1 a )  a.ar [n @ 1 +] a.ar[n @ 2 [39;49m[33;40m+[39;49m[34;49m] @ =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fa6de04005d    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de040060    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fa6de040064    490106                  add [r14], rax                                         [39;49m
[34;49m .. Ar1 a )  a.ar [n @ 1 +] a.ar[n @ 2 +] [39;49m[33;40m@[39;49m[34;49m =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fa6de040067    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04006a    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de04006d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 1 a )  a.ar [n @ 1 +] a.ar[n @ 2 +] @ [39;49m[33;40m=[39;49m[34;49m  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fa6de040070    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de040073    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de040077    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fa6de04007a    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  )  a.ar [n @ 1 +] a.ar[n @ 2 +] @ =  [39;49m[33;40ma[39;49m[34;49m.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fa6de04007e    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de040082    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de040089    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04008d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ar [n @ 1 +] a.ar[n @ 2 +] @ =  a.ar[ [39;49m[33;40mn[39;49m[34;49m @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fa6de040090    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. n @ 1 +] a.ar[n @ 2 +] @ =  a.ar[ n @ [39;49m[33;40m1[39;49m[34;49m +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fa6de040094    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. @ 1 +] a.ar[n @ 2 +] @ =  a.ar[ n @ 1 [39;49m[33;40m+[39;49m[34;49m] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fa6de04009e    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de0400a1    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fa6de0400a5    490106                  add [r14], rax                                         [39;49m
[34;49m ..  +] a.ar[n @ 2 +] @ =  a.ar[ n @ 1 +] [39;49m[33;40m@[39;49m[34;49m dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fa6de0400a8    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de0400ab    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de0400ae    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ] a.ar[n @ 2 +] @ =  a.ar[ n @ 1 +] @ [39;49m[33;40mdup[39;49m[34;49m hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fa6de0400b1    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de0400b4    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0400b8    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ar[n @ 2 +] @ =  a.ar[ n @ 1 +] @ dup [39;49m[33;40mhp[39;49m[34;49m 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fa6de0400bb    49b9cb9303dea67f0000    mov r9, 0x7fa6de0393cb                                 [39;49m[32;49m
0x7fa6de0400c5    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fa6de0393cb >[39;49m
[34;49m .. n @ 2 +] @ =  a.ar[ n @ 1 +] @ dup hp [39;49m[33;40m0x89[39;49m[34;49m _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fa6de0400c8    48b88900000000000000    mov rax, 0x89                                          [39;49m[32;49m
0x7fa6de0400d2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0400d6    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  +] @ =  a.ar[ n @ 1 +] @ dup hp 0x89 [39;49m[33;40m_assert[39;49m[34;49m decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fa6de0400d9    49b941aa03dea67f0000    mov r9, 0x7fa6de03aa41                                 [39;49m[32;49m
0x7fa6de0400e3    49ffd1                  call r9                    	< System.[34;49m_assert[39;49m : 0x00007fa6de03aa41 >[39;49m
[34;49m ..  a.ar[ n @ 1 +] @ dup hp 0x89 _assert [39;49m[33;40mdecimal[39;49m[34;49m a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fa6de0400e6    49b84f31efbf1d560000    mov r8, 0x561dbfef314f                                 [39;49m[32;49m
0x7fa6de0400f0    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de0400fa    49ffd1                  call r9                    	< System.[34;49mdecimal[39;49m : 0x0000561dbfef314f >[39;49m
[34;49m ..  @ 1 +] @ dup hp 0x89 _assert decimal [39;49m[33;40ma[39;49m[34;49m.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fa6de0400fd    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de040101    4881c010000000          add rax, 0x10                                          [39;49m[32;49m
0x7fa6de040108    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04010c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ dup hp 0x89 _assert decimal a.ar[2] [39;49m[33;40m@[39;49m[34;49m dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fa6de04010f    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de040112    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de040115    498906                  mov [r14], rax                                         [39;49m
[34;49m .. dup hp 0x89 _assert decimal a.ar[2] @ [39;49m[33;40mdup[39;49m[34;49m hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fa6de040118    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04011b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04011f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. hp 0x89 _assert decimal a.ar[2] @ dup [39;49m[33;40mhp[39;49m[34;49m 0x89 _assert decimal ; [39;49m[32;49m
0x7fa6de040122    49b9cb9303dea67f0000    mov r9, 0x7fa6de0393cb                                 [39;49m[32;49m
0x7fa6de04012c    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fa6de0393cb >[39;49m
[34;49m .. 0x89 _assert decimal a.ar[2] @ dup hp [39;49m[33;40m0x89[39;49m[34;49m _assert decimal ; [39;49m[32;49m
0x7fa6de04012f    48b88900000000000000    mov rax, 0x89                                          [39;49m[32;49m
0x7fa6de040139    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04013d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. _assert decimal a.ar[2] @ dup hp 0x89 [39;49m[33;40m_assert[39;49m[34;49m decimal ; [39;49m[32;49m
0x7fa6de040140    49b941aa03dea67f0000    mov r9, 0x7fa6de03aa41                                 [39;49m[32;49m
0x7fa6de04014a    49ffd1                  call r9                    	< System.[34;49m_assert[39;49m : 0x00007fa6de03aa41 >[39;49m
[34;49m .. decimal a.ar[2] @ dup hp 0x89 _assert [39;49m[33;40mdecimal[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de04014d    49b84f31efbf1d560000    mov r8, 0x561dbfef314f                                 [39;49m[32;49m
0x7fa6de040157    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de040161    49ffd1                  call r9                    	< System.[34;49mdecimal[39;49m : 0x0000561dbfef314f >[39;49m
[34;49m .. a.ar[2] @ dup hp 0x89 _assert decimal [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de040164    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de040168    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04016c    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fa6de040170    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'a3' :: codeSize = 364
Word : 0x00007fa6dda8b880 :: Compiled at : 0x00007fa6de040004
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.cft 156.16 <::
 0x0000000000000089 0x0000000000000089 a4 :  namespaces/test/arrayTest.cft 162.20
Dump at : namespaces/test/arrayTest.cft : 162.35 :
Dump : Address = 0x00007fa6ddae8138 : Number = 160 :: (little endian dump)
0x00007fa6ddae8138 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae8148 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae8158 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae8168 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae8178 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae8188 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae8198 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae81a8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae81b8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae81c8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 a4 :  namespaces/test/arrayTest.cft 164.20
Dump at : namespaces/test/arrayTest.cft : 164.35 :
Dump : Address = 0x00007fa6ddae8138 : Number = 160 :: (little endian dump)
0x00007fa6ddae8138 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae8148 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae8158 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae8168 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae8178 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae8188 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae8198 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae81a8 : 0x0000000000000089 0x0000000000000000  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae81b8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae81c8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

 =============================
Ar2.[34;49ma5[39;49m <:> cfrTil compiled word
SourceCode for Ar2.[34;49ma5[39;49m :> 
[34;49m: a5 ( n m Ar2 a ) a.ar[n @ 1 +][m @] a.ar[n @ 2 +][m @] @ = nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert ; [39;49m
Source code file location of [34;49ma5[39;49m : "namespaces/test/arrayTest.cft" : 165.19 :: we are now at : namespaces/test/arrayTest.cft : 170.16
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde040176 -- code size = 417 bytes
TypeSignature : 
 -----------------------------
Word :: Ar2.[34;49ma5[39;49m : definition = 0x00007fa6de040176 : disassembly at namespaces/test/arrayTest.cft : 170.16 :
[34;49m ..                                     : [39;49m[33;40ma5[39;49m[34;49m ( n m Ar2 a )  a.ar[n @ 1 +][m @] a.ar[n @ 2 +][m @] @ =  nl "a4 : " ps location a a.siz .. [39;49m[32;49m
0x7fa6de040176    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04017a    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04017e    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                   : a5 ( n m Ar2 a )  [39;49m[33;40ma[39;49m[34;49m.ar[n @ 1 +][m @] a.ar[n @ 2 +][m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @  .. [39;49m[32;49m
0x7fa6de040185    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de040189    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de040190    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de040194    498906                  mov [r14], rax                                         [39;49m
[34;49m ..              : a5 ( n m Ar2 a )  a.ar[[39;49m[33;40mn[39;49m[34;49m @ 1 +][m @] a.ar[n @ 2 +][m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][ .. [39;49m[32;49m
0x7fa6de040197    498b47e8                mov rax, [r15-0x18]                                    [39;49m
[34;49m ..          : a5 ( n m Ar2 a )  a.ar[n @ [39;49m[33;40m1[39;49m[34;49m +][m @] a.ar[n @ 2 +][m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] .. [39;49m[32;49m
0x7fa6de04019b    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m ..        : a5 ( n m Ar2 a )  a.ar[n @ 1 [39;49m[33;40m+[39;49m[34;49m][m @] a.ar[n @ 2 +][m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ .. [39;49m[32;49m
0x7fa6de0401a5    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de0401a8    486bc020                imul rax, rax, 0x20                                    [39;49m[32;49m
0x7fa6de0401ac    490106                  add [r14], rax                                         [39;49m
[34;49m ..     : a5 ( n m Ar2 a )  a.ar[n @ 1 +][[39;49m[33;40mm[39;49m[34;49m @] a.ar[n @ 2 +][m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ du .. [39;49m[32;49m
0x7fa6de0401af    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de0401b3    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fa6de0401b7    490106                  add [r14], rax                                         [39;49m
[34;49m   : a5 ( n m Ar2 a )  a.ar[n @ 1 +][m @] [39;49m[33;40ma[39;49m[34;49m.ar[n @ 2 +][m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp  .. [39;49m[32;49m
0x7fa6de0401ba    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0401be    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de0401c5    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0401c9    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  n m Ar2 a )  a.ar[n @ 1 +][m @] a.ar[[39;49m[33;40mn[39;49m[34;49m @ 2 +][m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89  .. [39;49m[32;49m
0x7fa6de0401cc    498b47e8                mov rax, [r15-0x18]                                    [39;49m
[34;49m ..  Ar2 a )  a.ar[n @ 1 +][m @] a.ar[n @ [39;49m[33;40m2[39;49m[34;49m +][m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _ass .. [39;49m[32;49m
0x7fa6de0401d0    48b90200000000000000    mov rcx, 0x2                                           [39;49m
[34;49m .. r2 a )  a.ar[n @ 1 +][m @] a.ar[n @ 2 [39;49m[33;40m+[39;49m[34;49m][m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _asser .. [39;49m[32;49m
0x7fa6de0401da    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de0401dd    486bc020                imul rax, rax, 0x20                                    [39;49m[32;49m
0x7fa6de0401e1    490106                  add [r14], rax                                         [39;49m
[34;49m .. a )  a.ar[n @ 1 +][m @] a.ar[n @ 2 +][[39;49m[33;40mm[39;49m[34;49m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert   .. [39;49m[32;49m
0x7fa6de0401e4    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de0401e8    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fa6de0401ec    490106                  add [r14], rax                                         [39;49m
[34;49m .. a.ar[n @ 1 +][m @] a.ar[n @ 2 +][m @] [39;49m[33;40m@[39;49m[34;49m =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de0401ef    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de0401f2    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de0401f5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ar[n @ 1 +][m @] a.ar[n @ 2 +][m @] @ [39;49m[33;40m=[39;49m[34;49m  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de0401f8    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de0401fb    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de0401ff    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fa6de040202    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. n @ 1 +][m @] a.ar[n @ 2 +][m @] @ =  [39;49m[33;40mnl[39;49m[34;49m "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de040206    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de040210    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04021a    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m ..  1 +][m @] a.ar[n @ 2 +][m @] @ =  nl [39;49m[33;40m"a4 : "[39;49m[34;49m ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de04021d    48b8de9efedda67f0000    mov rax, 0x7fa6ddfe9ede    	< string : '[34;49ma4 : [39;49m' >[39;49m[32;49m
0x7fa6de040227    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04022b    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @] a.ar[n @ 2 +][m @] @ =  nl "a4 : " [39;49m[33;40mps[39;49m[34;49m location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de04022e    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de040238    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m .. a.ar[n @ 2 +][m @] @ =  nl "a4 : " ps [39;49m[33;40mlocation[39;49m[34;49m a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de04023b    49b9779f03dea67f0000    mov r9, 0x7fa6de039f77                                 [39;49m[32;49m
0x7fa6de040245    49ffd1                  call r9                    	< System.[34;49mlocation[39;49m : 0x00007fa6de039f77 >[39;49m
[34;49m .. 2 +][m @] @ =  nl "a4 : " ps location [39;49m[33;40ma[39;49m[34;49m a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de040248    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04024c    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de040253    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de040257    498906                  mov [r14], rax                                         [39;49m
[34;49m .. +][m @] @ =  nl "a4 : " ps location a [39;49m[33;40ma[39;49m[34;49m.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de04025a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04025e    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de040265    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de040269    498906                  mov [r14], rax                                         [39;49m
[34;49m .. [m @] @ =  nl "a4 : " ps location a a.[39;49m[33;40msize[39;49m[34;49m @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de04026c    48b898f6a8dda67f0000    mov rax, 0x7fa6dda8f698                                [39;49m[32;49m
0x7fa6de040276    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de040279    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..  @ =  nl "a4 : " ps location a a.size [39;49m[33;40m@[39;49m[34;49m dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de04027d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  =  nl "a4 : " ps location a a.size @ [39;49m[33;40mdump[39;49m[34;49m a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de040280    49b87431efbf1d560000    mov r8, 0x561dbfef3174                                 [39;49m[32;49m
0x7fa6de04028a    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de040294    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000561dbfef3174 >[39;49m
[34;49m .. l "a4 : " ps location a a.size @ dump [39;49m[33;40ma[39;49m[34;49m.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de040297    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04029b    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de0402a2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0402a6    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  : " ps location a a.size @ dump a.ar[[39;49m[33;40mn[39;49m[34;49m @ 1 +][m @] @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de0402a9    498b47e8                mov rax, [r15-0x18]                                    [39;49m
[34;49m ..  ps location a a.size @ dump a.ar[n @ [39;49m[33;40m1[39;49m[34;49m +][m @] @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de0402ad    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. s location a a.size @ dump a.ar[n @ 1 [39;49m[33;40m+[39;49m[34;49m][m @] @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de0402b7    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de0402ba    486bc020                imul rax, rax, 0x20                                    [39;49m[32;49m
0x7fa6de0402be    490106                  add [r14], rax                                         [39;49m
[34;49m .. ocation a a.size @ dump a.ar[n @ 1 +][[39;49m[33;40mm[39;49m[34;49m @] @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de0402c1    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de0402c5    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fa6de0402c9    490106                  add [r14], rax                                         [39;49m
[34;49m .. on a a.size @ dump a.ar[n @ 1 +][m @] [39;49m[33;40m@[39;49m[34;49m dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de0402cc    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de0402cf    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de0402d2    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  a a.size @ dump a.ar[n @ 1 +][m @] @ [39;49m[33;40mdup[39;49m[34;49m hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de0402d5    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de0402d8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0402dc    498906                  mov [r14], rax                                         [39;49m
[34;49m .. .size @ dump a.ar[n @ 1 +][m @] @ dup [39;49m[33;40mhp[39;49m[34;49m 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de0402df    49b9cb9303dea67f0000    mov r9, 0x7fa6de0393cb                                 [39;49m[32;49m
0x7fa6de0402e9    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fa6de0393cb >[39;49m
[34;49m .. ze @ dump a.ar[n @ 1 +][m @] @ dup hp [39;49m[33;40m0x89[39;49m[34;49m _assert  ;  .. [39;49m[32;49m
0x7fa6de0402ec    48b88900000000000000    mov rax, 0x89                                          [39;49m[32;49m
0x7fa6de0402f6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0402fa    498906                  mov [r14], rax                                         [39;49m
[34;49m .. dump a.ar[n @ 1 +][m @] @ dup hp 0x89 [39;49m[33;40m_assert[39;49m[34;49m  ;  .. [39;49m[32;49m
0x7fa6de0402fd    49b941aa03dea67f0000    mov r9, 0x7fa6de03aa41                                 [39;49m[32;49m
0x7fa6de040307    49ffd1                  call r9                    	< System.[34;49m_assert[39;49m : 0x00007fa6de03aa41 >[39;49m
[34;49m .. [n @ 1 +][m @] @ dup hp 0x89 _assert  [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de04030a    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04030e    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de040312    4983ee18                sub r14, 0x18                                          [39;49m[32;49m
0x7fa6de040316    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'a5' :: codeSize = 416
Word : 0x00007fa6dda8ff00 :: Compiled at : 0x00007fa6de040176
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.cft 170.16 <::

 a4 :  namespaces/test/arrayTest.cft 172.10
Dump at : namespaces/test/arrayTest.cft : 172.10 :
Dump : Address = 0x00007fa6ddae8138 : Number = 160 :: (little endian dump)
0x00007fa6ddae8138 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae8148 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae8158 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae8168 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae8178 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae8188 : 0x0000000000000089 0x0000000000000000  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae8198 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae81a8 : 0x0000000000000089 0x0000000000000000  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae81b8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae81c8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 0x0000000000000089
DataStack at : [34;49mnamespaces/test/arrayTest.cft : 172.12[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fa6ddf73220, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	
 a4 :  namespaces/test/arrayTest.cft 173.20
Dump at : namespaces/test/arrayTest.cft : 173.32 :
Dump : Address = 0x00007fa6ddae8138 : Number = 128 :: (little endian dump)
0x00007fa6ddae8138 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae8148 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae8158 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae8168 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae8178 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae8188 : 0x0000000000000089 0x0000000000000000  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae8198 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddae81a8 : 0x0000000000000089 0x0000000000000000  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

DataStack at : [34;49mnamespaces/test/arrayTest.cft : 175.11[39;49m :
DataStack depth =   4 : Dsp (R14) = Top = 0x00007fa6ddf73228, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73228 > = 0x00007fa6ddfe9fd9	< string : '[34;49ma6[39;49m' >
  DataStack   [  -1 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -3 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	
 0x00007fa6ddaea7d0 0x00007fa6ddaea7d0 0x0000000000000089 0x00007fa6ddaea7d0 0x0000000000000089 a6 :  namespaces/test/arrayTest.cft 183.20
Dump at : namespaces/test/arrayTest.cft : 183.38 :
Dump : Address = 0x00007fa6ddaea708 : Number = 240 :: (little endian dump)
0x00007fa6ddaea708 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea718 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea728 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea738 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea748 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea758 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea768 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea778 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea788 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea798 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea7a8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea7b8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea7c8 : 0x0000000000000000 0x0000000000000089  00 00 00 00 00 00 00 00  89 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea7d8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea7e8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

 0x00007fa6ddaea7d0 0x00007fa6ddaea7d0 0x0000000000000089
 0x00007fa6ddaea788
DataStack at : [34;49mnamespaces/test/arrayTest.cft : 187.42[39;49m :
DataStack depth =   5 : Dsp (R14) = Top = 0x00007fa6ddf73230, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73230 > = 0x00007fa6ddaea7d0	
  DataStack   [  -1 ] < 0x00007fa6ddf73228 > = 0x00007fa6ddaea788	
  DataStack   [  -2 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -3 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	
 0x00007fa6ddaea7d0 0x00007fa6ddaea7d0 0x0000000000000089
 a6 :  namespaces/test/arrayTest.cft 190.23
Dump at : namespaces/test/arrayTest.cft : 190.38 :
Dump : Address = 0x00007fa6ddaea708 : Number = 240 :: (little endian dump)
0x00007fa6ddaea708 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea718 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea728 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea738 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea748 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea758 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea768 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea778 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea788 : 0x0000000000000089 0x0000000000000000  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea798 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea7a8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea7b8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea7c8 : 0x0000000000000000 0x0000000000000089  00 00 00 00 00 00 00 00  89 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea7d8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea7e8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 137 0x00007fa6ddaea7d0 0x0000000000000089 0x00007fa6ddaea788 0x0000000000000089 0x00007fa6ddaea788 0x0000000000000089 0x00007fa6ddaea788 0x0000000000000000
 a6 :  namespaces/test/arrayTest.cft 198.23
Dump at : namespaces/test/arrayTest.cft : 198.43 :
Dump : Address = 0x00007fa6ddaea780 : Number = 16 :: (little endian dump)
0x00007fa6ddaea780 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

 =============================
Ar3.[34;49ma8[39;49m <:> cfrTil compiled word
SourceCode for Ar3.[34;49ma8[39;49m :> 
[34;49m: a8 ( Ar3 a ) a.ar[1][2][1] a.ar[2][2][1] @ = nl "a8.a : " ps location a size @ dump a.ar[1][2][1] dup hp @ dup hp 0x89 _assert a.ar[2][2][1] dup hp @ dup hp 0x89 _assert ; [39;49m
Source code file location of [34;49ma8[39;49m : "namespaces/test/arrayTest.cft" : 200.15 :: we are now at : namespaces/test/arrayTest.cft : 211.16
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04031c -- code size = 377 bytes
TypeSignature : Object 
 -----------------------------
Word :: Ar3.[34;49ma8[39;49m : definition = 0x00007fa6de04031c : disassembly at namespaces/test/arrayTest.cft : 211.16 :
[34;49m ..                                     : [39;49m[33;40ma8[39;49m[34;49m ( Ar3 a )  a.ar[1][2][1] a.ar[2][2][1] @ =  nl "a8.a : " ps location a size @ dump a.ar[ .. [39;49m[32;49m
0x7fa6de04031c    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de040320    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de040324    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                       : a8 ( Ar3 a )  [39;49m[33;40ma[39;49m[34;49m.ar[1][2][1] a.ar[2][2][1] @ =  nl "a8.a : " ps location a size @ dump a.ar[1][2][1] dup h .. [39;49m[32;49m
0x7fa6de04032b    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04032f    4881c080000000          add rax, 0x80                                          [39;49m
[34;49m ..         : a8 ( Ar3 a )  a.ar[1][2][1] [39;49m[33;40ma[39;49m[34;49m.ar[2][2][1] @ =  nl "a8.a : " ps location a size @ dump a.ar[1][2][1] dup hp @ dup hp 0x8 .. [39;49m[32;49m
0x7fa6de040336    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04033a    4881c1c8000000          add rcx, 0xc8                                          [39;49m[32;49m
0x7fa6de040341    488b09                  mov rcx, [rcx]                                         [39;49m
[34;49m .. r3 a )  a.ar[1][2][1] a.ar[2][2][1] @ [39;49m[33;40m=[39;49m[34;49m  nl "a8.a : " ps location a size @ dump a.ar[1][2][1] dup hp @ dup hp 0x89 _assert  a.ar[ .. [39;49m[32;49m
0x7fa6de040344    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. a )  a.ar[1][2][1] a.ar[2][2][1] @ =  [39;49m[33;40mnl[39;49m[34;49m "a8.a : " ps location a size @ dump a.ar[1][2][1] dup hp @ dup hp 0x89 _assert  a.ar[2][ .. [39;49m[32;49m
0x7fa6de040347    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de040351    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04035b    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m ..   a.ar[1][2][1] a.ar[2][2][1] @ =  nl [39;49m[33;40m"a8.a : "[39;49m[34;49m ps location a size @ dump a.ar[1][2][1] dup hp @ dup hp 0x89 _assert  a.ar[2][2][ .. [39;49m[32;49m
0x7fa6de04035e    48b8d4a0fedda67f0000    mov rax, 0x7fa6ddfea0d4    	< string : '[34;49ma8.a : [39;49m' >[39;49m[32;49m
0x7fa6de040368    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04036c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 2][1] a.ar[2][2][1] @ =  nl "a8.a : " [39;49m[33;40mps[39;49m[34;49m location a size @ dump a.ar[1][2][1] dup hp @ dup hp 0x89 _assert  a.ar[2][2][1] dup hp  .. [39;49m[32;49m
0x7fa6de04036f    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de040379    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m .. 1] a.ar[2][2][1] @ =  nl "a8.a : " ps [39;49m[33;40mlocation[39;49m[34;49m a size @ dump a.ar[1][2][1] dup hp @ dup hp 0x89 _assert  a.ar[2][2][1] dup hp @ d .. [39;49m[32;49m
0x7fa6de04037c    49b9779f03dea67f0000    mov r9, 0x7fa6de039f77                                 [39;49m[32;49m
0x7fa6de040386    49ffd1                  call r9                    	< System.[34;49mlocation[39;49m : 0x00007fa6de039f77 >[39;49m
[34;49m .. ][2][1] @ =  nl "a8.a : " ps location [39;49m[33;40ma[39;49m[34;49m size @ dump a.ar[1][2][1] dup hp @ dup hp 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0x8 .. [39;49m[32;49m
0x7fa6de040389    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04038d    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de040394    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de040398    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 2][1] @ =  nl "a8.a : " ps location a [39;49m[33;40msize[39;49m[34;49m @ dump a.ar[1][2][1] dup hp @ dup hp 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0x89  .. [39;49m[32;49m
0x7fa6de04039b    48b8684ca9dda67f0000    mov rax, 0x7fa6dda94c68                                [39;49m[32;49m
0x7fa6de0403a5    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de0403a8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0403ac    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  =  nl "a8.a : " ps location a size @ [39;49m[33;40mdump[39;49m[34;49m a.ar[1][2][1] dup hp @ dup hp 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 _assert .. [39;49m[32;49m
0x7fa6de0403af    49b87431efbf1d560000    mov r8, 0x561dbfef3174                                 [39;49m[32;49m
0x7fa6de0403b9    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de0403c3    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000561dbfef3174 >[39;49m
[34;49m .. l "a8.a : " ps location a size @ dump [39;49m[33;40ma[39;49m[34;49m.ar[1][2][1] dup hp @ dup hp 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de0403c6    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0403ca    4881c080000000          add rax, 0x80                                          [39;49m[32;49m
0x7fa6de0403d1    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de0403d5    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  location a size @ dump a.ar[1][2][1] [39;49m[33;40mdup[39;49m[34;49m hp @ dup hp 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de0403d8    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. ation a size @ dump a.ar[1][2][1] dup [39;49m[33;40mhp[39;49m[34;49m @ dup hp 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de0403dc    49b9cb9303dea67f0000    mov r9, 0x7fa6de0393cb                                 [39;49m[32;49m
0x7fa6de0403e6    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fa6de0393cb >[39;49m
[34;49m .. on a size @ dump a.ar[1][2][1] dup hp [39;49m[33;40m@[39;49m[34;49m dup hp 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de0403e9    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de0403ec    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de0403ef    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  a size @ dump a.ar[1][2][1] dup hp @ [39;49m[33;40mdup[39;49m[34;49m hp 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de0403f2    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de0403f5    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0403f9    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ize @ dump a.ar[1][2][1] dup hp @ dup [39;49m[33;40mhp[39;49m[34;49m 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de0403fc    49b9cb9303dea67f0000    mov r9, 0x7fa6de0393cb                                 [39;49m[32;49m
0x7fa6de040406    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fa6de0393cb >[39;49m
[34;49m ..  @ dump a.ar[1][2][1] dup hp @ dup hp [39;49m[33;40m0x89[39;49m[34;49m _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de040409    48b88900000000000000    mov rax, 0x89                                          [39;49m[32;49m
0x7fa6de040413    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de040417    498906                  mov [r14], rax                                         [39;49m
[34;49m .. mp a.ar[1][2][1] dup hp @ dup hp 0x89 [39;49m[33;40m_assert[39;49m[34;49m  a.ar[2][2][1] dup hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de04041a    49b941aa03dea67f0000    mov r9, 0x7fa6de03aa41                                 [39;49m[32;49m
0x7fa6de040424    49ffd1                  call r9                    	< System.[34;49m_assert[39;49m : 0x00007fa6de03aa41 >[39;49m
[34;49m .. ][2][1] dup hp @ dup hp 0x89 _assert  [39;49m[33;40ma[39;49m[34;49m.ar[2][2][1] dup hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de040427    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04042b    4881c0c8000000          add rax, 0xc8                                          [39;49m[32;49m
0x7fa6de040432    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de040436    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  @ dup hp 0x89 _assert  a.ar[2][2][1] [39;49m[33;40mdup[39;49m[34;49m hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de040439    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. up hp 0x89 _assert  a.ar[2][2][1] dup [39;49m[33;40mhp[39;49m[34;49m @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de04043d    49b9cb9303dea67f0000    mov r9, 0x7fa6de0393cb                                 [39;49m[32;49m
0x7fa6de040447    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fa6de0393cb >[39;49m
[34;49m .. hp 0x89 _assert  a.ar[2][2][1] dup hp [39;49m[33;40m@[39;49m[34;49m dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de04044a    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04044d    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de040450    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  0x89 _assert  a.ar[2][2][1] dup hp @ [39;49m[33;40mdup[39;49m[34;49m hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de040453    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de040456    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04045a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 9 _assert  a.ar[2][2][1] dup hp @ dup [39;49m[33;40mhp[39;49m[34;49m 0x89 _assert  ;  .. [39;49m[32;49m
0x7fa6de04045d    49b9cb9303dea67f0000    mov r9, 0x7fa6de0393cb                                 [39;49m[32;49m
0x7fa6de040467    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fa6de0393cb >[39;49m
[34;49m .. assert  a.ar[2][2][1] dup hp @ dup hp [39;49m[33;40m0x89[39;49m[34;49m _assert  ;  .. [39;49m[32;49m
0x7fa6de04046a    48b88900000000000000    mov rax, 0x89                                          [39;49m[32;49m
0x7fa6de040474    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de040478    498906                  mov [r14], rax                                         [39;49m
[34;49m .. t  a.ar[2][2][1] dup hp @ dup hp 0x89 [39;49m[33;40m_assert[39;49m[34;49m  ;  .. [39;49m[32;49m
0x7fa6de04047b    49b941aa03dea67f0000    mov r9, 0x7fa6de03aa41                                 [39;49m[32;49m
0x7fa6de040485    49ffd1                  call r9                    	< System.[34;49m_assert[39;49m : 0x00007fa6de03aa41 >[39;49m
[34;49m .. ][2][1] dup hp @ dup hp 0x89 _assert  [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de040488    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04048c    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de040490    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de040494    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'a8' :: codeSize = 376
Word : 0x00007fa6dda95708 :: Compiled at : 0x00007fa6de04031c
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.cft 211.16 <::
 0x00007fa6ddaea7d0 137 a6 :  namespaces/test/arrayTest.cft 214.20
Dump at : namespaces/test/arrayTest.cft : 214.43 :
Dump : Address = 0x00007fa6ddaea7d0 : Number = 16 :: (little endian dump)
0x00007fa6ddaea7d0 : 0x0000000000000089 0x0000000000000000  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

 a8.a :  namespaces/test/arrayTest.cft 215.6
Dump at : namespaces/test/arrayTest.cft : 215.6 :
Dump : Address = 0x00007fa6ddaea708 : Number = 240 :: (little endian dump)
0x00007fa6ddaea708 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea718 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea728 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea738 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea748 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea758 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea768 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea778 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea788 : 0x0000000000000089 0x0000000000000000  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea798 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea7a8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea7b8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea7c8 : 0x0000000000000000 0x0000000000000089  00 00 00 00 00 00 00 00  89 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea7d8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea7e8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 0x00007fa6ddaea788 0x0000000000000089 0x00007fa6ddaea7d0 0x0000000000000089 a6 :  namespaces/test/arrayTest.cft 216.20
Dump at : namespaces/test/arrayTest.cft : 216.43 :
Dump : Address = 0x00007fa6ddaea7d0 : Number = 16 :: (little endian dump)
0x00007fa6ddaea7d0 : 0x0000000000000089 0x0000000000000000  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

 =============================
Ar3.[34;49ma7[39;49m <:> cfrTil compiled word, prefix
SourceCode for Ar3.[34;49ma7[39;49m :> 
[34;49m: a7 ( n, m, o, Ar3 a ) a.ar[n @ 1 +][m @][o @] a.ar[n @ 2 +][m @][o @] @ = nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;; [39;49m
Source code file location of [34;49ma7[39;49m : "namespaces/test/arrayTest.cft" : 217.24 :: we are now at : namespaces/test/arrayTest.cft : 223.16
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04049a -- code size = 498 bytes
TypeSignature : 
 -----------------------------
Word :: Ar3.[34;49ma7[39;49m : definition = 0x00007fa6de04049a : disassembly at namespaces/test/arrayTest.cft : 223.16 :
[34;49m ..                                     : [39;49m[33;40ma7[39;49m[34;49m ( n, m, o, Ar3 a )  a.ar[n @ 1 +][m @][o @] a.ar[n @ 2 +][m @][o @] @ =  nl "a7.a : " ps .. [39;49m[32;49m
0x7fa6de04049a    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04049e    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de0404a2    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..              : a7 ( n, m, o, Ar3 a )  [39;49m[33;40ma[39;49m[34;49m.ar[n @ 1 +][m @][o @] a.ar[n @ 2 +][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +] .. [39;49m[32;49m
0x7fa6de0404a9    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0404ad    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de0404b4    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0404b8    498906                  mov [r14], rax                                         [39;49m
[34;49m ..         : a7 ( n, m, o, Ar3 a )  a.ar[[39;49m[33;40mn[39;49m[34;49m @ 1 +][m @][o @] a.ar[n @ 2 +][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @] .. [39;49m[32;49m
0x7fa6de0404bb    498b47e0                mov rax, [r15-0x20]                                    [39;49m
[34;49m ..     : a7 ( n, m, o, Ar3 a )  a.ar[n @ [39;49m[33;40m1[39;49m[34;49m +][m @][o @] a.ar[n @ 2 +][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @ .. [39;49m[32;49m
0x7fa6de0404bf    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m ..   : a7 ( n, m, o, Ar3 a )  a.ar[n @ 1 [39;49m[33;40m+[39;49m[34;49m][m @][o @] a.ar[n @ 2 +][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @]  .. [39;49m[32;49m
0x7fa6de0404c9    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de0404cc    486bc048                imul rax, rax, 0x48                                    [39;49m[32;49m
0x7fa6de0404d0    490106                  add [r14], rax                                         [39;49m
[34;49m   : a7 ( n, m, o, Ar3 a )  a.ar[n @ 1 +][[39;49m[33;40mm[39;49m[34;49m @][o @] a.ar[n @ 2 +][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16  .. [39;49m[32;49m
0x7fa6de0404d3    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fa6de0404d7    486bc018                imul rax, rax, 0x18                                    [39;49m[32;49m
0x7fa6de0404db    490106                  add [r14], rax                                         [39;49m
[34;49m ..  n, m, o, Ar3 a )  a.ar[n @ 1 +][m @][[39;49m[33;40mo[39;49m[34;49m @] a.ar[n @ 2 +][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump  .. [39;49m[32;49m
0x7fa6de0404de    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de0404e2    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fa6de0404e6    490106                  add [r14], rax                                         [39;49m
[34;49m .. , o, Ar3 a )  a.ar[n @ 1 +][m @][o @] [39;49m[33;40ma[39;49m[34;49m.ar[n @ 2 +][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[ .. [39;49m[32;49m
0x7fa6de0404e9    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0404ed    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de0404f4    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0404f8    498906                  mov [r14], rax                                         [39;49m
[34;49m .. Ar3 a )  a.ar[n @ 1 +][m @][o @] a.ar[[39;49m[33;40mn[39;49m[34;49m @ 2 +][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 .. [39;49m[32;49m
0x7fa6de0404fb    498b47e0                mov rax, [r15-0x20]                                    [39;49m
[34;49m .. a )  a.ar[n @ 1 +][m @][o @] a.ar[n @ [39;49m[33;40m2[39;49m[34;49m +][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][ .. [39;49m[32;49m
0x7fa6de0404ff    48b90200000000000000    mov rcx, 0x2                                           [39;49m
[34;49m .. )  a.ar[n @ 1 +][m @][o @] a.ar[n @ 2 [39;49m[33;40m+[39;49m[34;49m][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m  .. [39;49m[32;49m
0x7fa6de040509    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de04050c    486bc048                imul rax, rax, 0x48                                    [39;49m[32;49m
0x7fa6de040510    490106                  add [r14], rax                                         [39;49m
[34;49m .. a.ar[n @ 1 +][m @][o @] a.ar[n @ 2 +][[39;49m[33;40mm[39;49m[34;49m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][ .. [39;49m[32;49m
0x7fa6de040513    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fa6de040517    486bc018                imul rax, rax, 0x18                                    [39;49m[32;49m
0x7fa6de04051b    490106                  add [r14], rax                                         [39;49m
[34;49m .. n @ 1 +][m @][o @] a.ar[n @ 2 +][m @][[39;49m[33;40mo[39;49m[34;49m @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @]  .. [39;49m[32;49m
0x7fa6de04051e    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de040522    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fa6de040526    490106                  add [r14], rax                                         [39;49m
[34;49m ..  +][m @][o @] a.ar[n @ 2 +][m @][o @] [39;49m[33;40m@[39;49m[34;49m =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup .. [39;49m[32;49m
0x7fa6de040529    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04052c    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de04052f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ][m @][o @] a.ar[n @ 2 +][m @][o @] @ [39;49m[33;40m=[39;49m[34;49m  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup h .. [39;49m[32;49m
0x7fa6de040532    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de040535    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de040539    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fa6de04053c    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  @][o @] a.ar[n @ 2 +][m @][o @] @ =  [39;49m[33;40mnl[39;49m[34;49m "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0 .. [39;49m[32;49m
0x7fa6de040540    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de04054a    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de040554    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m .. [o @] a.ar[n @ 2 +][m @][o @] @ =  nl [39;49m[33;40m"a7.a : "[39;49m[34;49m ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 .. [39;49m[32;49m
0x7fa6de040557    48b81ca2fedda67f0000    mov rax, 0x7fa6ddfea21c    	< string : '[34;49ma7.a : [39;49m' >[39;49m[32;49m
0x7fa6de040561    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de040565    498906                  mov [r14], rax                                         [39;49m
[34;49m .. [n @ 2 +][m @][o @] @ =  nl "a7.a : " [39;49m[33;40mps[39;49m[34;49m location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert .. [39;49m[32;49m
0x7fa6de040568    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de040572    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m .. @ 2 +][m @][o @] @ =  nl "a7.a : " ps [39;49m[33;40mlocation[39;49m[34;49m a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;; .. [39;49m[32;49m
0x7fa6de040575    49b9779f03dea67f0000    mov r9, 0x7fa6de039f77                                 [39;49m[32;49m
0x7fa6de04057f    49ffd1                  call r9                    	< System.[34;49mlocation[39;49m : 0x00007fa6de039f77 >[39;49m
[34;49m .. @][o @] @ =  nl "a7.a : " ps location [39;49m[33;40ma[39;49m[34;49m.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fa6de040582    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de040586    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de04058d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de040591    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @] @ =  nl "a7.a : " ps location a.ar[[39;49m[33;40mn[39;49m[34;49m @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fa6de040594    498b47e0                mov rax, [r15-0x20]                                    [39;49m
[34;49m ..  =  nl "a7.a : " ps location a.ar[n @ [39;49m[33;40m1[39;49m[34;49m +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fa6de040598    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m ..   nl "a7.a : " ps location a.ar[n @ 1 [39;49m[33;40m+[39;49m[34;49m][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fa6de0405a2    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de0405a5    486bc048                imul rax, rax, 0x48                                    [39;49m[32;49m
0x7fa6de0405a9    490106                  add [r14], rax                                         [39;49m
[34;49m .. l "a7.a : " ps location a.ar[n @ 1 +][[39;49m[33;40mm[39;49m[34;49m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fa6de0405ac    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fa6de0405b0    486bc018                imul rax, rax, 0x18                                    [39;49m[32;49m
0x7fa6de0405b4    490106                  add [r14], rax                                         [39;49m
[34;49m .. .a : " ps location a.ar[n @ 1 +][m @][[39;49m[33;40mo[39;49m[34;49m @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fa6de0405b7    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de0405bb    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fa6de0405bf    490106                  add [r14], rax                                         [39;49m
[34;49m .. " ps location a.ar[n @ 1 +][m @][o @] [39;49m[33;40m16[39;49m[34;49m dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fa6de0405c2    48b81000000000000000    mov rax, 0x10                                          [39;49m[32;49m
0x7fa6de0405cc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0405d0    498906                  mov [r14], rax                                         [39;49m
[34;49m .. s location a.ar[n @ 1 +][m @][o @] 16 [39;49m[33;40mdump[39;49m[34;49m a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fa6de0405d3    49b87431efbf1d560000    mov r8, 0x561dbfef3174                                 [39;49m[32;49m
0x7fa6de0405dd    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de0405e7    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000561dbfef3174 >[39;49m
[34;49m .. ation a.ar[n @ 1 +][m @][o @] 16 dump [39;49m[33;40ma[39;49m[34;49m.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fa6de0405ea    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0405ee    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de0405f5    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0405f9    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  a.ar[n @ 1 +][m @][o @] 16 dump a.ar[[39;49m[33;40mn[39;49m[34;49m @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fa6de0405fc    498b47e0                mov rax, [r15-0x20]                                    [39;49m
[34;49m .. r[n @ 1 +][m @][o @] 16 dump a.ar[n @ [39;49m[33;40m1[39;49m[34;49m +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fa6de040600    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 [39;49m[33;40m+[39;49m[34;49m][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fa6de04060a    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de04060d    486bc048                imul rax, rax, 0x48                                    [39;49m[32;49m
0x7fa6de040611    490106                  add [r14], rax                                         [39;49m
[34;49m ..  1 +][m @][o @] 16 dump a.ar[n @ 1 +][[39;49m[33;40mm[39;49m[34;49m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fa6de040614    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fa6de040618    486bc018                imul rax, rax, 0x18                                    [39;49m[32;49m
0x7fa6de04061c    490106                  add [r14], rax                                         [39;49m
[34;49m .. [m @][o @] 16 dump a.ar[n @ 1 +][m @][[39;49m[33;40mo[39;49m[34;49m @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fa6de04061f    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de040623    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fa6de040627    490106                  add [r14], rax                                         [39;49m
[34;49m .. [o @] 16 dump a.ar[n @ 1 +][m @][o @] [39;49m[33;40m@[39;49m[34;49m dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fa6de04062a    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04062d    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de040630    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  @] 16 dump a.ar[n @ 1 +][m @][o @] @ [39;49m[33;40mdup[39;49m[34;49m hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fa6de040633    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de040636    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04063a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 16 dump a.ar[n @ 1 +][m @][o @] @ dup [39;49m[33;40mhp[39;49m[34;49m 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fa6de04063d    49b9cb9303dea67f0000    mov r9, 0x7fa6de0393cb                                 [39;49m[32;49m
0x7fa6de040647    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fa6de0393cb >[39;49m
[34;49m .. dump a.ar[n @ 1 +][m @][o @] @ dup hp [39;49m[33;40m0x89[39;49m[34;49m s _assert ;;  .. [39;49m[32;49m
0x7fa6de04064a    48b88900000000000000    mov rax, 0x89                                          [39;49m[32;49m
0x7fa6de040654    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de040658    498906                  mov [r14], rax                                         [39;49m
[34;49m .. a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 [39;49m[33;40ms[39;49m[34;49m _assert ;;  .. [39;49m[32;49m
0x7fa6de04065b    49b80cefecbf1d560000    mov r8, 0x561dbfecef0c                                 [39;49m[32;49m
0x7fa6de040665    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04066f    49ffd1                  call r9                    	< User.[34;49ms[39;49m : 0x0000561dbfecef0c >[39;49m
[34;49m .. ar[n @ 1 +][m @][o @] @ dup hp 0x89 s [39;49m[33;40m_assert[39;49m[34;49m ;;  .. [39;49m[32;49m
0x7fa6de040672    49b941aa03dea67f0000    mov r9, 0x7fa6de03aa41                                 [39;49m[32;49m
0x7fa6de04067c    49ffd1                  call r9                    	< System.[34;49m_assert[39;49m : 0x00007fa6de03aa41 >[39;49m
[34;49m ..  +][m @][o @] @ dup hp 0x89 s _assert [39;49m[33;40m;;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de04067f    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de040683    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de040687    4983ee20                sub r14, 0x20                                          [39;49m[32;49m
0x7fa6de04068b    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'a7' :: codeSize = 497
Word : 0x00007fa6dda9a600 :: Compiled at : 0x00007fa6de04049a
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.cft 223.16 <::
 a6 :  namespaces/test/arrayTest.cft 225.20
Dump at : namespaces/test/arrayTest.cft : 225.43 :
Dump : Address = 0x00007fa6ddaea7d0 : Number = 16 :: (little endian dump)
0x00007fa6ddaea7d0 : 0x0000000000000089 0x0000000000000000  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

 a7.a :  namespaces/test/arrayTest.cft 227.12
Dump at : namespaces/test/arrayTest.cft : 227.12 :
Dump : Address = 0x00007fa6ddaea788 : Number = 16 :: (little endian dump)
0x00007fa6ddaea788 : 0x0000000000000089 0x0000000000000000  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 0x0000000000000089
DataStack at : [34;49mnamespaces/test/arrayTest.cft : 227.12[39;49m :
DataStack depth =  10 : Dsp (R14) = Top = 0x00007fa6ddf73258, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73258 > = 0x0000000000000089	
  DataStack   [  -1 ] < 0x00007fa6ddf73250 > = 0x0000000000000089	
  DataStack   [  -2 ] < 0x00007fa6ddf73248 > = 0x0000000000000000	
  DataStack   [  -3 ] < 0x00007fa6ddf73240 > = 0x00007fa6ddaea708	
  DataStack   [  -4 ] < 0x00007fa6ddf73238 > = 0x0000000000000001	
  DataStack   [  -5 ] < 0x00007fa6ddf73230 > = 0x0000000000000002	
  DataStack   [  -6 ] < 0x00007fa6ddf73228 > = 0x0000000000000000	
  DataStack   [  -7 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -8 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -9 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	
 a6 :  namespaces/test/arrayTest.cft 228.20
Dump at : namespaces/test/arrayTest.cft : 228.38 :
Dump : Address = 0x00007fa6ddaea708 : Number = 240 :: (little endian dump)
0x00007fa6ddaea708 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea718 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea728 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea738 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea748 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea758 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea768 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea778 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea788 : 0x0000000000000089 0x0000000000000000  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea798 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea7a8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea7b8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea7c8 : 0x0000000000000000 0x0000000000000089  00 00 00 00 00 00 00 00  89 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea7d8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6ddaea7e8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 0x00007fa6dda2dae8 0x00007fa6dda2dae9 0x00007fa6dda2daf1 26 254
 =============================
ct.[34;49mtct[39;49m <:> cfrTil compiled word
SourceCode for ct.[34;49mtct[39;49m :> 
[34;49m: tct ( y ct a ) a.ar [0][0][0] 0x77 = a.ar [0][y @][0] a.ar [0][0][0] @ = a.ar [y @][y @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with variables?!" ) a.ar 32 dump ; [39;49m
Source code file location of [34;49mtct[39;49m : "namespaces/test/arrayTest.cft" : 292.16 :: we are now at : namespaces/test/arrayTest.cft : 302.16
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde040691 -- code size = 585 bytes
TypeSignature : 
 -----------------------------
Word :: ct.[34;49mtct[39;49m : definition = 0x00007fa6de040691 : disassembly at namespaces/test/arrayTest.cft : 302.16 :
[34;49m ..                                     : [39;49m[33;40mtct[39;49m[34;49m ( y ct a ) a.ar [0][0][0] 0x77 =  a.ar [0][y @][0] a.ar [0][0][0] @ = a.ar [y @][y @][0 .. [39;49m[32;49m
0x7fa6de040691    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de040695    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de040699    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                      : tct ( y ct a ) [39;49m[33;40ma[39;49m[34;49m.ar [0][0][0] 0x77 =  a.ar [0][y @][0] a.ar [0][0][0] @ = a.ar [y @][y @][0] a.ar [0][0][0 .. [39;49m[32;49m
0x7fa6de0406a0    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0406a4    4881c000000000          add rax, 0x0                                           [39;49m
[34;49m ..       : tct ( y ct a ) a.ar [0][0][0] [39;49m[33;40m0x77[39;49m[34;49m =  a.ar [0][y @][0] a.ar [0][0][0] @ = a.ar [y @][y @][0] a.ar [0][0][0] @ = a.ar [y @ .. [39;49m[32;49m
0x7fa6de0406ab    48b97700000000000000    mov rcx, 0x77                                          [39;49m
[34;49m ..  : tct ( y ct a ) a.ar [0][0][0] 0x77 [39;49m[33;40m=[39;49m[34;49m  a.ar [0][y @][0] a.ar [0][0][0] @ = a.ar [y @][y @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +] .. [39;49m[32;49m
0x7fa6de0406b5    488908                  mov [rax], rcx                                         [39;49m
[34;49m  : tct ( y ct a ) a.ar [0][0][0] 0x77 =  [39;49m[33;40ma[39;49m[34;49m.ar [0][y @][0] a.ar [0][0][0] @ = a.ar [y @][y @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y  .. [39;49m[32;49m
0x7fa6de0406b8    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0406bc    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de0406c3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0406c7    498906                  mov [r14], rax                                         [39;49m
[34;49m .. t a ) a.ar [0][0][0] 0x77 =  a.ar [0][[39;49m[33;40my[39;49m[34;49m @][0] a.ar [0][0][0] @ = a.ar [y @][y @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] d .. [39;49m[32;49m
0x7fa6de0406ca    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de0406ce    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fa6de0406d2    490106                  add [r14], rax                                         [39;49m
[34;49m .. ar [0][0][0] 0x77 =  a.ar [0][y @][0] [39;49m[33;40ma[39;49m[34;49m.ar [0][0][0] @ = a.ar [y @][y @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] dup nl hp .. [39;49m[32;49m
0x7fa6de0406d5    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0406d9    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de0406e0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0406e4    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 77 =  a.ar [0][y @][0] a.ar [0][0][0] [39;49m[33;40m@[39;49m[34;49m = a.ar [y @][y @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] .. [39;49m[32;49m
0x7fa6de0406e7    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de0406ea    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de0406ed    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  =  a.ar [0][y @][0] a.ar [0][0][0] @ [39;49m[33;40m=[39;49m[34;49m a.ar [y @][y @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ .. [39;49m[32;49m
0x7fa6de0406f0    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de0406f3    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de0406f7    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fa6de0406fa    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..   a.ar [0][y @][0] a.ar [0][0][0] @ = [39;49m[33;40ma[39;49m[34;49m.ar [y @][y @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = .. [39;49m[32;49m
0x7fa6de0406fe    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de040702    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de040709    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04070d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  [0][y @][0] a.ar [0][0][0] @ = a.ar [[39;49m[33;40my[39;49m[34;49m @][y @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar  .. [39;49m[32;49m
0x7fa6de040710    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de040714    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fa6de040718    490106                  add [r14], rax                                         [39;49m
[34;49m .. y @][0] a.ar [0][0][0] @ = a.ar [y @][[39;49m[33;40my[39;49m[34;49m @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @] .. [39;49m[32;49m
0x7fa6de04071b    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de04071f    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fa6de040723    490106                  add [r14], rax                                         [39;49m
[34;49m .. a.ar [0][0][0] @ = a.ar [y @][y @][0] [39;49m[33;40ma[39;49m[34;49m.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y  .. [39;49m[32;49m
0x7fa6de040726    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04072a    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de040731    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de040735    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ = a.ar [y @][y @][0] a.ar [0][0][0] [39;49m[33;40m@[39;49m[34;49m = a.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl h .. [39;49m[32;49m
0x7fa6de040738    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04073b    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de04073e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. = a.ar [y @][y @][0] a.ar [0][0][0] @ [39;49m[33;40m=[39;49m[34;49m a.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp  .. [39;49m[32;49m
0x7fa6de040741    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de040744    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de040748    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fa6de04074b    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. a.ar [y @][y @][0] a.ar [0][0][0] @ = [39;49m[33;40ma[39;49m[34;49m.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a. .. [39;49m[32;49m
0x7fa6de04074f    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de040753    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de04075a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04075e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. y @][y @][0] a.ar [0][0][0] @ = a.ar [[39;49m[33;40my[39;49m[34;49m @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0] .. [39;49m[32;49m
0x7fa6de040761    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. [y @][0] a.ar [0][0][0] @ = a.ar [y @ [39;49m[33;40m1[39;49m[34;49m +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][ .. [39;49m[32;49m
0x7fa6de040765    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m ..  @][0] a.ar [0][0][0] @ = a.ar [y @ 1 [39;49m[33;40m+[39;49m[34;49m][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] .. [39;49m[32;49m
0x7fa6de04076f    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de040772    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fa6de040776    490106                  add [r14], rax                                         [39;49m
[34;49m .. [0] a.ar [0][0][0] @ = a.ar [y @ 1 +][[39;49m[33;40my[39;49m[34;49m @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @  .. [39;49m[32;49m
0x7fa6de040779    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de04077d    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fa6de040781    490106                  add [r14], rax                                         [39;49m
[34;49m .. .ar [0][0][0] @ = a.ar [y @ 1 +][y @][[39;49m[33;40my[39;49m[34;49m @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TOD .. [39;49m[32;49m
0x7fa6de040784    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de040788    490106                  add [r14], rax                                         [39;49m
[34;49m .. 0][0][0] @ = a.ar [y @ 1 +][y @][y @] [39;49m[33;40mdup[39;49m[34;49m nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( " .. [39;49m[32;49m
0x7fa6de04078b    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04078e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de040792    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ][0] @ = a.ar [y @ 1 +][y @][y @] dup [39;49m[33;40mnl[39;49m[34;49m hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "arra .. [39;49m[32;49m
0x7fa6de040795    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de04079f    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de0407a9    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m .. ] @ = a.ar [y @ 1 +][y @][y @] dup nl [39;49m[33;40mhp[39;49m[34;49m a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array o .. [39;49m[32;49m
0x7fa6de0407ac    49b9cb9303dea67f0000    mov r9, 0x7fa6de0393cb                                 [39;49m[32;49m
0x7fa6de0407b6    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fa6de0393cb >[39;49m
[34;49m ..  = a.ar [y @ 1 +][y @][y @] dup nl hp [39;49m[33;40ma[39;49m[34;49m.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out  .. [39;49m[32;49m
0x7fa6de0407b9    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0407bd    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de0407c4    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0407c8    498906                  mov [r14], rax                                         [39;49m
[34;49m .. +][y @][y @] dup nl hp a.ar [0][0][0] [39;49m[33;40m@[39;49m[34;49m = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds check .. [39;49m[32;49m
0x7fa6de0407cb    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de0407ce    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de0407d1    498906                  mov [r14], rax                                         [39;49m
[34;49m .. [y @][y @] dup nl hp a.ar [0][0][0] @ [39;49m[33;40m=[39;49m[34;49m a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds checkin .. [39;49m[32;49m
0x7fa6de0407d4    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de0407d7    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de0407db    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fa6de0407de    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  @][y @] dup nl hp a.ar [0][0][0] @ = [39;49m[33;40ma[39;49m[34;49m.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking  .. [39;49m[32;49m
0x7fa6de0407e2    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0407e6    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de0407ed    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0407f1    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @] dup nl hp a.ar [0][0][0] @ = a.ar [[39;49m[33;40my[39;49m[34;49m @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with v .. [39;49m[32;49m
0x7fa6de0407f4    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de0407f8    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fa6de0407fc    490106                  add [r14], rax                                         [39;49m
[34;49m .. p nl hp a.ar [0][0][0] @ = a.ar [y @][[39;49m[33;40my[39;49m[34;49m @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with variab .. [39;49m[32;49m
0x7fa6de0407ff    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de040803    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fa6de040807    490106                  add [r14], rax                                         [39;49m
[34;49m .. hp a.ar [0][0][0] @ = a.ar [y @][y @][[39;49m[33;40my[39;49m[34;49m @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with variables?! .. [39;49m[32;49m
0x7fa6de04080a    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. .ar [0][0][0] @ = a.ar [y @][y @][y @ [39;49m[33;40m1[39;49m[34;49m +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with variables?!" )  .. [39;49m[32;49m
0x7fa6de04080e    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. r [0][0][0] @ = a.ar [y @][y @][y @ 1 [39;49m[33;40m+[39;49m[34;49m] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with variables?!" ) a. .. [39;49m[32;49m
0x7fa6de040818    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de04081b    490106                  add [r14], rax                                         [39;49m
[34;49m .. 0][0][0] @ = a.ar [y @][y @][y @ 1 +] [39;49m[33;40mdup[39;49m[34;49m nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with variables?!" ) a.ar  .. [39;49m[32;49m
0x7fa6de04081e    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de040821    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de040825    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ][0] @ = a.ar [y @][y @][y @ 1 +] dup [39;49m[33;40mnl[39;49m[34;49m hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with variables?!" ) a.ar 32 d .. [39;49m[32;49m
0x7fa6de040828    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de040832    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04083c    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m .. ] @ = a.ar [y @][y @][y @ 1 +] dup nl [39;49m[33;40mhp[39;49m[34;49m a.ar [0][0][0] @ = TODO ( "array out of bounds checking with variables?!" ) a.ar 32 dump .. [39;49m[32;49m
0x7fa6de04083f    49b9cb9303dea67f0000    mov r9, 0x7fa6de0393cb                                 [39;49m[32;49m
0x7fa6de040849    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fa6de0393cb >[39;49m
[34;49m ..  = a.ar [y @][y @][y @ 1 +] dup nl hp [39;49m[33;40ma[39;49m[34;49m.ar [0][0][0] @ = TODO ( "array out of bounds checking with variables?!" ) a.ar 32 dump ;  .. [39;49m[32;49m
0x7fa6de04084c    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de040850    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de040857    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04085b    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  @][y @ 1 +] dup nl hp a.ar [0][0][0] [39;49m[33;40m@[39;49m[34;49m = TODO ( "array out of bounds checking with variables?!" ) a.ar 32 dump ;  .. [39;49m[32;49m
0x7fa6de04085e    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de040861    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de040864    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ][y @ 1 +] dup nl hp a.ar [0][0][0] @ [39;49m[33;40m=[39;49m[34;49m TODO ( "array out of bounds checking with variables?!" ) a.ar 32 dump ;  .. [39;49m[32;49m
0x7fa6de040867    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04086a    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04086e    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fa6de040871    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. ] dup nl hp a.ar [0][0][0] @ = TODO ( [39;49m[33;40m"array out of bounds checking with variables?!"[39;49m[34;49m ) a.ar 32 dump ;  .. [39;49m[32;49m
0x7fa6de040875    48b812a4fedda67f0000    mov rax, 0x7fa6ddfea412    	< string : '[34;49marray out of bounds checking with variables?![39;49m' >[39;49m[32;49m
0x7fa6de04087f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de040883    498906                  mov [r14], rax                                         [39;49m
[34;49m .. y @ 1 +] dup nl hp a.ar [0][0][0] @ = [39;49m[33;40mTODO[39;49m[34;49m ( "array out of bounds checking with variables?!" ) a.ar 32 dump ;  .. [39;49m[32;49m
0x7fa6de040886    49b9f4b903dea67f0000    mov r9, 0x7fa6de03b9f4                                 [39;49m[32;49m
0x7fa6de040890    49ffd1                  call r9                    	< Root.[34;49mTODO[39;49m : 0x00007fa6de03b9f4 >[39;49m
[34;49m .. f bounds checking with variables?!" ) [39;49m[33;40ma[39;49m[34;49m.ar 32 dump ;  .. [39;49m[32;49m
0x7fa6de040893    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de040897    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de04089e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0408a2    498906                  mov [r14], rax                                         [39;49m
[34;49m .. nds checking with variables?!" ) a.ar [39;49m[33;40m32[39;49m[34;49m dump ;  .. [39;49m[32;49m
0x7fa6de0408a5    48b82000000000000000    mov rax, 0x20                                          [39;49m[32;49m
0x7fa6de0408af    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0408b3    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  checking with variables?!" ) a.ar 32 [39;49m[33;40mdump[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fa6de0408b6    49b87431efbf1d560000    mov r8, 0x561dbfef3174                                 [39;49m[32;49m
0x7fa6de0408c0    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de0408ca    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000561dbfef3174 >[39;49m
[34;49m .. king with variables?!" ) a.ar 32 dump [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de0408cd    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0408d1    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de0408d5    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fa6de0408d9    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tct' :: codeSize = 584
Word : 0x00007fa6dd9ef0d8 :: Compiled at : 0x00007fa6de040691
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.cft 302.16 <::

 0x00007fa6dda332b2
 0x00007fa6dda332aa

 -----------------------------
[35;40m array out of bounds checking with variables?![39;49m namespaces/test/arrayTest.cft 303.9
 -----------------------------


Dump at : namespaces/test/arrayTest.cft : 303.9 :
Dump : Address = 0x00007fa6dda3328f : Number = 32 :: (little endian dump)
0x00007fa6dda3328f : 0x0077000000000077 0x0000000000000000  77 00 00 00 00 00 77 00  00 00 00 00 00 00 00 00  w.....w. ........ 
0x00007fa6dda3329f : 0x0000000000000000 0x0000000077000077  00 00 00 00 00 00 00 00  77 00 00 77 00 00 00 00  ........ w..w.... 

 0x00007fa6dda33fdf
 0x00007fa6dda33ff1
 0x00007fa6dda33fdf
Dump at : namespaces/test/arrayTest.cft : 313.11 :
Dump : Address = 0x00007fa6dda33fd6 : Number = 32 :: (little endian dump)
0x00007fa6dda33fd6 : 0x0000000000000000 0x0000000000004d00  00 00 00 00 00 00 00 00  00 4d 00 00 00 00 00 00  ........ .M...... 
0x00007fa6dda33fe6 : 0x0000000000000000 0x000000004d000000  00 00 00 00 00 00 00 00  00 00 00 4d 00 00 00 00  ........ ...M.... 
[34;49m[34;49m
Apparent TypeMismatch : [c]  :: [34;49mnamespaces/test/arrayTest.cft[34;49m : 325.048 : <literal> :> [33;40m0[34;49m <: 0x00007fa6ddaaa884 :> [34;49m] = a.ar [0][y + 1][[34;49m[33;40m0[34;49m[34;49m] ; [34;49m [39;49m
TypeError : Wrong data sizes :: lvalue : ar : size == 1 :: rvalue : y : size == 44
apparent type mismatch :: Infix.= :: type expected : TypeVariable . Any  :: type recorded : Byte . Any  : at namespaces/test/arrayTest.cft : 325.48[34;49m[34;49m
Apparent TypeMismatch : [c]  :: [34;49m...[34;49m : 326.048 : <literal> :> [33;40m0[34;49m <: 0x00007fa6ddaab1f4 :> [34;49m    a.ar [y ][y + 1][1] = a.ar [y ][y + 1][[34;49m[33;40m0[34;49m[34;49m] ; [34;49m [39;49m
TypeError : Wrong data sizes :: lvalue : ar : size == 1 :: rvalue : y : size == 44
apparent type mismatch :: Infix.= :: type expected : TypeVariable . Any  :: type recorded : Byte . Any  : at namespaces/test/arrayTest.cft : 326.48[34;49m[34;49m
Apparent TypeMismatch : [c]  :: [34;49m...[34;49m : 327.053 : <literal> :> [33;40m1[34;49m <: 0x00007fa6ddaabdc0 :> [34;49m  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][[34;49m[33;40m1[34;49m[34;49m] ; [34;49m [39;49m
TypeError : Wrong data sizes :: lvalue : ar : size == 1 :: rvalue : y : size == 44
apparent type mismatch :: Infix.= :: type expected : TypeVariable . Any  :: type recorded : Byte . Any  : at namespaces/test/arrayTest.cft : 327.53 0x004d000000000010 0x00007fa6dda348bd
Dump at : namespaces/test/arrayTest.cft : 336.16 :
Dump : Address = 0x00007fa6dda348bd : Number = 27 :: (little endian dump)
0x00007fa6dda348bd : 0x004d000000000000 0x0600000000000000  00 00 00 00 00 00 4d 00  00 00 00 00 00 00 00 06  ......M. ........ 
0x00007fa6dda348cd : 0x004d00000000000f 0x0000000000191910  0f 00 00 00 00 00 4d 00  10 19 19 00 00 00 00 00  ......M. ........ 

 =============================
 -----------------------------
WordDisassemble : word = 0x0000000000000000
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.cft 338.19 <::
 1 0
 =============================
Bits.[34;49mlnt[39;49m <:> cfrTil compiled word
SourceCode for Bits.[34;49mlnt[39;49m :> 
[34;49m: lnt ( n -- TOS ) n @ 7 < dup p ; [39;49m
Source code file location of [34;49mlnt[39;49m : "namespaces/test/logic.cft" : 12.35 :: we are now at : namespaces/test/logic.cft : 13.17
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde040fed -- code size = 69 bytes
TypeSignature : 
 -----------------------------
Word :: Bits.[34;49mlnt[39;49m : definition = 0x00007fa6de040fed : disassembly at namespaces/test/logic.cft : 13.17 :
[34;49m ..                                     : [39;49m[33;40mlnt[39;49m[34;49m ( n -- TOS ) n @ 7 < dup p ;  .. [39;49m[32;49m
0x7fa6de040fed    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de040ff1    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de040ff5    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                    : lnt ( n -- TOS ) [39;49m[33;40mn[39;49m[34;49m @ 7 < dup p ;  .. [39;49m[32;49m
0x7fa6de040ffc    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..              : lnt ( n -- TOS ) n @ 7 [39;49m[33;40m<[39;49m[34;49m dup p ;  .. [39;49m[32;49m
0x7fa6de041000    4883f807                cmp rax, 0x7                                           [39;49m[32;49m
0x7fa6de041004    0f9cc0                  setl al                                                [39;49m
[34;49m ..                : lnt ( n -- TOS ) n @ [39;49m[33;40m7[39;49m[34;49m < dup p ;  .. [39;49m[32;49m
0x7fa6de041007    480fb6c0                movzx rax, al                                          [39;49m[32;49m
0x7fa6de04100b    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de04100f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..            : lnt ( n -- TOS ) n @ 7 < [39;49m[33;40mdup[39;49m[34;49m p ;  .. [39;49m[32;49m
0x7fa6de041012    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..        : lnt ( n -- TOS ) n @ 7 < dup [39;49m[33;40mp[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fa6de041016    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de041020    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m[32;49m
0x7fa6de041023    498b06                  mov rax, [r14]                                         [39;49m
[34;49m ..      : lnt ( n -- TOS ) n @ 7 < dup p [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de041026    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04102a    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04102e    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de041031    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'lnt' :: codeSize = 68
Word : 0x00007fa6dd96f458 :: Compiled at : 0x00007fa6de040fed
 =============================
::> 'wdiss' was called at namespaces/test/logic.cft 13.17 <::
 1 0 0 1 0 0 0 1 0 1 1 1 0 1 1 0 0 1 1 1 1 0
 =============================
Bits.[34;49mlnt2[39;49m <:> cfrTil compiled word
SourceCode for Bits.[34;49mlnt2[39;49m :> 
[34;49m: lnt2 ( n m -- TOS ) n @ m @ >= dup p ; [39;49m
Source code file location of [34;49mlnt2[39;49m : "namespaces/test/logic.cft" : 25.97 :: we are now at : namespaces/test/logic.cft : 26.18
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde041208 -- code size = 76 bytes
TypeSignature : 
 -----------------------------
Word :: Bits.[34;49mlnt2[39;49m : definition = 0x00007fa6de041208 : disassembly at namespaces/test/logic.cft : 26.18 :
[34;49m ..                                     : [39;49m[33;40mlnt2[39;49m[34;49m ( n m -- TOS ) n @ m @ >= dup p ;  .. [39;49m[32;49m
0x7fa6de041208    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04120c    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de041210    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                 : lnt2 ( n m -- TOS ) [39;49m[33;40mn[39;49m[34;49m @ m @ >= dup p ;  .. [39;49m[32;49m
0x7fa6de041217    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..             : lnt2 ( n m -- TOS ) n @ [39;49m[33;40mm[39;49m[34;49m @ >= dup p ;  .. [39;49m[32;49m
0x7fa6de04121b    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..         : lnt2 ( n m -- TOS ) n @ m @ [39;49m[33;40m>=[39;49m[34;49m dup p ;  .. [39;49m[32;49m
0x7fa6de04121f    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fa6de041222    0f9dc0                  setge al                                               [39;49m[32;49m
0x7fa6de041225    480fb6c0                movzx rax, al                                          [39;49m[32;49m
0x7fa6de041229    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de04122d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..      : lnt2 ( n m -- TOS ) n @ m @ >= [39;49m[33;40mdup[39;49m[34;49m p ;  .. [39;49m[32;49m
0x7fa6de041230    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..  : lnt2 ( n m -- TOS ) n @ m @ >= dup [39;49m[33;40mp[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fa6de041234    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de04123e    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m[32;49m
0x7fa6de041241    498b06                  mov rax, [r14]                                         [39;49m
[34;49m   : lnt2 ( n m -- TOS ) n @ m @ >= dup p [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de041244    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de041248    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04124c    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de041250    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de041253    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'lnt2' :: codeSize = 75
Word : 0x00007fa6dd977d80 :: Compiled at : 0x00007fa6de041208
 =============================
::> 'wdiss' was called at namespaces/test/logic.cft 26.18 <::

 0 0 1 1 0 0 0 0 1 1
 1 1 0 0
 =============================
Bits.[34;49mtnot[39;49m <:> cfrTil compiled word
SourceCode for Bits.[34;49mtnot[39;49m :> 
[34;49m: tnot ( n -- n ) n @ not dup n store n @ p ; [39;49m
Source code file location of [34;49mtnot[39;49m : "namespaces/test/logic.cft" : 46.65 :: we are now at : namespaces/test/logic.cft : 47.18
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde0415d6 -- code size = 114 bytes
TypeSignature : Integer -> Integer 
 -----------------------------
Word :: Bits.[34;49mtnot[39;49m : definition = 0x00007fa6de0415d6 : disassembly at namespaces/test/logic.cft : 47.18 :
[34;49m ..                                     : [39;49m[33;40mtnot[39;49m[34;49m ( n -- n ) n @ not dup n store n @ p ;  .. [39;49m[32;49m
0x7fa6de0415d6    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de0415da    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de0415de    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                                : tnot [39;49m[33;40m([39;49m[34;49m n -- n ) n @ not dup n store n @ p ;  .. [39;49m[32;49m
0x7fa6de0415e5    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                 : tnot ( n -- n ) n @ [39;49m[33;40mnot[39;49m[34;49m dup n store n @ p ;  .. [39;49m[32;49m
0x7fa6de0415e9    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de0415ec    740c                    jz 0xde0415fa                                          [39;49m[32;49m
0x7fa6de0415ee    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de0415f8    eb0a                    jmp 0x7fa6de041604         	< Bits.[34;49mtnot[39;49m+46 >[39;49m[32;49m
0x7fa6de0415fa    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de041604    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de041608    498906                  mov [r14], rax                                         [39;49m
[34;49m ..             : tnot ( n -- n ) n @ not [39;49m[33;40mdup[39;49m[34;49m n store n @ p ;  .. [39;49m[32;49m
0x7fa6de04160b    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..         : tnot ( n -- n ) n @ not dup [39;49m[33;40mn[39;49m[34;49m store n @ p ;  .. [39;49m[32;49m
0x7fa6de04160f    498d47f8                lea rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de041613    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de041616    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de041619    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..       : tnot ( n -- n ) n @ not dup n [39;49m[33;40mstore[39;49m[34;49m n @ p ;  .. [39;49m[32;49m
0x7fa6de04161d    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. : tnot ( n -- n ) n @ not dup n store [39;49m[33;40mn[39;49m[34;49m @ p ;  .. [39;49m[32;49m
0x7fa6de041620    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de041624    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de041628    498906                  mov [r14], rax                                         [39;49m
[34;49m: tnot ( n -- n ) n @ not dup n store n @ [39;49m[33;40mp[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fa6de04162b    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de041635    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m[32;49m
0x7fa6de041638    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  ( n -- n ) n @ not dup n store n @ p [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de04163c    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de041640    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m ..                     : tnot ( n -- n ) [39;49m[33;40mn[39;49m[34;49m @ not dup n store n @ p ;  .. [39;49m[32;49m
0x7fa6de041644    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de041647    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tnot' :: codeSize = 113
Word : 0x00007fa6dd94d1e8 :: Compiled at : 0x00007fa6de0415d6
 =============================
::> 'wdiss' was called at namespaces/test/logic.cft 47.18 <::
 tnot1_assert  : ok

 tnot2_assert  : ok

 1 tnot3_assert  : ok

 0 tnot4_assert  : ok


 =============================
Bits.[34;49mtnot2[39;49m <:> cfrTil compiled word
SourceCode for Bits.[34;49mtnot2[39;49m :> 
[34;49m: tnot2 ( n m | v -- v ) n @ m @ | not dup v store p ; [39;49m
Source code file location of [34;49mtnot2[39;49m : "namespaces/test/logic.cft" : 53.56 :: we are now at : namespaces/test/logic.cft : 54.19
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04164d -- code size = 114 bytes
TypeSignature : 
 -----------------------------
Word :: Bits.[34;49mtnot2[39;49m : definition = 0x00007fa6de04164d : disassembly at namespaces/test/logic.cft : 54.19 :
[34;49m ..                                     : [39;49m[33;40mtnot2[39;49m[34;49m ( n m | v -- v ) n @ m @ | not dup v store p ;  .. [39;49m[32;49m
0x7fa6de04164d    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de041651    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de041655    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..              : tnot2 ( n m | v -- v ) [39;49m[33;40mn[39;49m[34;49m @ m @ | not dup v store p ;  .. [39;49m[32;49m
0x7fa6de04165c    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..          : tnot2 ( n m | v -- v ) n @ [39;49m[33;40mm[39;49m[34;49m @ | not dup v store p ;  .. [39;49m[32;49m
0x7fa6de041660    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..      : tnot2 ( n m | v -- v ) n @ m @ [39;49m[33;40m|[39;49m[34;49m not dup v store p ;  .. [39;49m[32;49m
0x7fa6de041664    480bc1                  or rax, rcx                                            [39;49m
[34;49m ..    : tnot2 ( n m | v -- v ) n @ m @ | [39;49m[33;40mnot[39;49m[34;49m dup v store p ;  .. [39;49m[32;49m
0x7fa6de041667    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de04166a    740c                    jz 0xde041678                                          [39;49m[32;49m
0x7fa6de04166c    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de041676    eb0a                    jmp 0x7fa6de041682         	< Bits.[34;49mtnot2[39;49m+53 >[39;49m[32;49m
0x7fa6de041678    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de041682    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de041686    498906                  mov [r14], rax                                         [39;49m
[34;49m   : tnot2 ( n m | v -- v ) n @ m @ | not [39;49m[33;40mdup[39;49m[34;49m v store p ;  .. [39;49m[32;49m
0x7fa6de041689    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fa6de04168d    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de041691    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de041694    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de041697    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  ( n m | v -- v ) n @ m @ | not dup v [39;49m[33;40mstore[39;49m[34;49m p ; [39;49m[32;49m
0x7fa6de04169b    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  | v -- v ) n @ m @ | not dup v store [39;49m[33;40mp[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de04169e    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de0416a8    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m[32;49m
0x7fa6de0416ab    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  v -- v ) n @ m @ | not dup v store p [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de0416af    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0416b3    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de0416b7    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. t2 ( n m | v -- v ) n @ m @ | not dup [39;49m[33;40mv[39;49m[34;49m store p ; [39;49m[32;49m
0x7fa6de0416bb    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de0416be    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tnot2' :: codeSize = 113
Word : 0x00007fa6dd94ea30 :: Compiled at : 0x00007fa6de04164d
 =============================
::> 'wdiss' was called at namespaces/test/logic.cft 54.19 <::
 1 0
 =============================
Bits.[34;49mtnot3[39;49m <:> cfrTil compiled word
SourceCode for Bits.[34;49mtnot3[39;49m :> 
[34;49m: tnot3 ( n -- TOS ) n @ not dup p ; [39;49m
Source code file location of [34;49mtnot3[39;49m : "namespaces/test/logic.cft" : 57.36 :: we are now at : namespaces/test/logic.cft : 58.19
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde0416c4 -- code size = 85 bytes
TypeSignature : 
 -----------------------------
Word :: Bits.[34;49mtnot3[39;49m : definition = 0x00007fa6de0416c4 : disassembly at namespaces/test/logic.cft : 58.19 :
[34;49m ..                                     : [39;49m[33;40mtnot3[39;49m[34;49m ( n -- TOS ) n @ not dup p ;  .. [39;49m[32;49m
0x7fa6de0416c4    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de0416c8    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de0416cc    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                  : tnot3 ( n -- TOS ) [39;49m[33;40mn[39;49m[34;49m @ not dup p ;  .. [39;49m[32;49m
0x7fa6de0416d3    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..              : tnot3 ( n -- TOS ) n @ [39;49m[33;40mnot[39;49m[34;49m dup p ;  .. [39;49m[32;49m
0x7fa6de0416d7    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de0416da    740c                    jz 0xde0416e8                                          [39;49m[32;49m
0x7fa6de0416dc    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de0416e6    eb0a                    jmp 0x7fa6de0416f2         	< Bits.[34;49mtnot3[39;49m+46 >[39;49m[32;49m
0x7fa6de0416e8    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de0416f2    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de0416f6    498906                  mov [r14], rax                                         [39;49m
[34;49m ..          : tnot3 ( n -- TOS ) n @ not [39;49m[33;40mdup[39;49m[34;49m p ;  .. [39;49m[32;49m
0x7fa6de0416f9    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..      : tnot3 ( n -- TOS ) n @ not dup [39;49m[33;40mp[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fa6de0416fd    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de041707    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m[32;49m
0x7fa6de04170a    498b06                  mov rax, [r14]                                         [39;49m
[34;49m ..    : tnot3 ( n -- TOS ) n @ not dup p [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de04170d    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de041711    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de041715    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de041718    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tnot3' :: codeSize = 84
Word : 0x00007fa6dd9504a8 :: Compiled at : 0x00007fa6de0416c4
 =============================
::> 'wdiss' was called at namespaces/test/logic.cft 58.19 <::
 0
 =============================
Bits.[34;49mtAnd[39;49m <:> cfrTil compiled word
SourceCode for Bits.[34;49mtAnd[39;49m :> 
[34;49m: tAnd ( n m -- TOS ) n @ m @ && dup p ; [39;49m
Source code file location of [34;49mtAnd[39;49m : "namespaces/test/logic.cft" : 61.61 :: we are now at : namespaces/test/logic.cft : 62.18
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04171e -- code size = 98 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Bits.[34;49mtAnd[39;49m : definition = 0x00007fa6de04171e : disassembly at namespaces/test/logic.cft : 62.18 :
[34;49m ..                                     : [39;49m[33;40mtAnd[39;49m[34;49m ( n m -- TOS ) n @ m @ && dup p ;  .. [39;49m[32;49m
0x7fa6de04171e    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de041722    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de041726    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                 : tAnd ( n m -- TOS ) [39;49m[33;40mn[39;49m[34;49m @ m @ && dup p ;  .. [39;49m[32;49m
0x7fa6de04172d    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..             : tAnd ( n m -- TOS ) n @ [39;49m[33;40mm[39;49m[34;49m @ && dup p ;  .. [39;49m[32;49m
0x7fa6de041731    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de041735    4885c9                  test rcx, rcx                                          [39;49m[32;49m
0x7fa6de041738    7405                    jz 0xde04173f                                          [39;49m
[34;49m ..         : tAnd ( n m -- TOS ) n @ m @ [39;49m[33;40m&&[39;49m[34;49m dup p ;  .. [39;49m[32;49m
0x7fa6de04173a    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de04173d    750c                    jnz 0xde04174b                                         [39;49m[32;49m
0x7fa6de04173f    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de041749    eb0a                    jmp 0x7fa6de041755         	< Bits.[34;49mtAnd[39;49m+55 >[39;49m[32;49m
0x7fa6de04174b    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de041755    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de041759    498906                  mov [r14], rax                                         [39;49m
[34;49m ..      : tAnd ( n m -- TOS ) n @ m @ && [39;49m[33;40mdup[39;49m[34;49m p ;  .. [39;49m[32;49m
0x7fa6de04175c    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..  : tAnd ( n m -- TOS ) n @ m @ && dup [39;49m[33;40mp[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fa6de041760    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de04176a    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m[32;49m
0x7fa6de04176d    498b06                  mov rax, [r14]                                         [39;49m
[34;49m   : tAnd ( n m -- TOS ) n @ m @ && dup p [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de041770    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de041774    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de041778    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de04177c    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04177f    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tAnd' :: codeSize = 97
Word : 0x00007fa6dd951660 :: Compiled at : 0x00007fa6de04171e
 =============================
::> 'wdiss' was called at namespaces/test/logic.cft 62.18 <::
 0 1 0  : ok

 1 1 1  : ok

 0 0 0  : ok

 0 0 1  : ok


 =============================
Bits.[34;49mtNotAnd[39;49m <:> cfrTil compiled word
SourceCode for Bits.[34;49mtNotAnd[39;49m :> 
[34;49m: tNotAnd ( n m -- TOS ) n @ m @ not && dup p ; [39;49m
Source code file location of [34;49mtNotAnd[39;49m : "namespaces/test/logic.cft" : 68.68 :: we are now at : namespaces/test/logic.cft : 69.21
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde041785 -- code size = 142 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Bits.[34;49mtNotAnd[39;49m : definition = 0x00007fa6de041785 : disassembly at namespaces/test/logic.cft : 69.21 :
[34;49m ..                                     : [39;49m[33;40mtNotAnd[39;49m[34;49m ( n m -- TOS ) n @ m @ not && dup p ;  .. [39;49m[32;49m
0x7fa6de041785    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de041789    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04178d    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..              : tNotAnd ( n m -- TOS ) [39;49m[33;40mn[39;49m[34;49m @ m @ not && dup p ;  .. [39;49m[32;49m
0x7fa6de041794    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de041798    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04179c    498906                  mov [r14], rax                                         [39;49m
[34;49m ..          : tNotAnd ( n m -- TOS ) n @ [39;49m[33;40mm[39;49m[34;49m @ not && dup p ;  .. [39;49m[32;49m
0x7fa6de04179f    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..      : tNotAnd ( n m -- TOS ) n @ m @ [39;49m[33;40mnot[39;49m[34;49m && dup p ;  .. [39;49m[32;49m
0x7fa6de0417a3    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de0417a6    740c                    jz 0xde0417b4                                          [39;49m[32;49m
0x7fa6de0417a8    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de0417b2    eb0a                    jmp 0x7fa6de0417be         	< Bits.[34;49mtNotAnd[39;49m+57 >[39;49m[32;49m
0x7fa6de0417b4    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de0417be    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de0417c1    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de0417c4    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de0417c8    4885c9                  test rcx, rcx                                          [39;49m[32;49m
0x7fa6de0417cb    7405                    jz 0xde0417d2                                          [39;49m
[34;49m ..  : tNotAnd ( n m -- TOS ) n @ m @ not [39;49m[33;40m&&[39;49m[34;49m dup p ;  .. [39;49m[32;49m
0x7fa6de0417cd    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de0417d0    750c                    jnz 0xde0417de                                         [39;49m[32;49m
0x7fa6de0417d2    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de0417dc    eb0a                    jmp 0x7fa6de0417e8         	< Bits.[34;49mtNotAnd[39;49m+99 >[39;49m[32;49m
0x7fa6de0417de    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de0417e8    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de0417ec    498906                  mov [r14], rax                                         [39;49m
[34;49m  : tNotAnd ( n m -- TOS ) n @ m @ not && [39;49m[33;40mdup[39;49m[34;49m p ;  .. [39;49m[32;49m
0x7fa6de0417ef    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. And ( n m -- TOS ) n @ m @ not && dup [39;49m[33;40mp[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de0417f3    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de0417fd    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m[32;49m
0x7fa6de041800    498b06                  mov rax, [r14]                                         [39;49m
[34;49m .. d ( n m -- TOS ) n @ m @ not && dup p [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de041803    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de041807    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04180b    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de04180f    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de041812    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tNotAnd' :: codeSize = 141
Word : 0x00007fa6dd952c78 :: Compiled at : 0x00007fa6de041785
 =============================
::> 'wdiss' was called at namespaces/test/logic.cft 69.21 <::
 1 tNotAnd1 1 0  : ok

 0 tNotAnd2 1 1  : ok

 0 tNotAnd3 0 0  : ok

 0 tNotAnd4 0 1  : ok


 0x0000000100000000  >  0x00000000ffffffff 1
DataStack at : [34;49mnamespaces/test/logic.cft : 77.2[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fa6ddf73220, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	

 0x00000000ffffffff  >  0x0000000100000000 0
 =============================
Logic.[34;49mnt[39;49m <:> cfrTil compiled word
SourceCode for Logic.[34;49mnt[39;49m :> 
[34;49m: nt ( n -- TOS ) n @ ! ! ! ; [39;49m
Source code file location of [34;49mnt[39;49m : "namespaces/test/logic.cft" : 80.30 :: we are now at : namespaces/test/logic.cft : 83.15
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde0418ce -- code size = 112 bytes
TypeSignature : 
 -----------------------------
Word :: Logic.[34;49mnt[39;49m : definition = 0x00007fa6de0418ce : disassembly at namespaces/test/logic.cft : 83.15 :
[34;49m ..                                     : [39;49m[33;40mnt[39;49m[34;49m ( n -- TOS ) n @ ! ! ! ;  .. [39;49m[32;49m
0x7fa6de0418ce    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de0418d2    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de0418d6    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                     : nt ( n -- TOS ) [39;49m[33;40mn[39;49m[34;49m @ ! ! ! ;  .. [39;49m[32;49m
0x7fa6de0418dd    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                 : nt ( n -- TOS ) n @ [39;49m[33;40m![39;49m[34;49m ! ! ;  .. [39;49m[32;49m
0x7fa6de0418e1    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de0418e4    740c                    jz 0xde0418f2                                          [39;49m[32;49m
0x7fa6de0418e6    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de0418f0    eb0a                    jmp 0x7fa6de0418fc         	< Logic.[34;49mnt[39;49m+46 >[39;49m[32;49m
0x7fa6de0418f2    48b80100000000000000    mov rax, 0x1                                           [39;49m
[34;49m ..               : nt ( n -- TOS ) n @ ! [39;49m[33;40m![39;49m[34;49m ! ;  .. [39;49m[32;49m
0x7fa6de0418fc    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de0418ff    740c                    jz 0xde04190d                                          [39;49m[32;49m
0x7fa6de041901    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de04190b    eb0a                    jmp 0x7fa6de041917         	< Logic.[34;49mnt[39;49m+73 >[39;49m[32;49m
0x7fa6de04190d    48b80100000000000000    mov rax, 0x1                                           [39;49m
[34;49m ..             : nt ( n -- TOS ) n @ ! ! [39;49m[33;40m![39;49m[34;49m ;  .. [39;49m[32;49m
0x7fa6de041917    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de04191a    740c                    jz 0xde041928                                          [39;49m[32;49m
0x7fa6de04191c    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de041926    eb0a                    jmp 0x7fa6de041932         	< Logic.[34;49mnt[39;49m+100 >[39;49m[32;49m
0x7fa6de041928    48b80100000000000000    mov rax, 0x1                                           [39;49m
[34;49m ..           : nt ( n -- TOS ) n @ ! ! ! [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de041932    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de041936    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04193a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04193d    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'nt' :: codeSize = 111
Word : 0x00007fa6dd956c58 :: Compiled at : 0x00007fa6de0418ce
 =============================
::> 'wdiss' was called at namespaces/test/logic.cft 83.15 <::
 1 2 3 12

 =============================
C_Syntax.[34;49mtaa[39;49m <:> cfrTil compiled word
SourceCode for C_Syntax.[34;49mtaa[39;49m :> 
[34;49mint64 taa ( one two three ) { int64 four, five ; four = one + two + three ; five = one + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; } [39;49m
Source code file location of [34;49mtaa[39;49m : "namespaces/test/localsTest.cft" : 14.21 :: we are now at : namespaces/test/localsTest.cft : 26.16
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde041982 -- code size = 204 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mtaa[39;49m : definition = 0x00007fa6de041982 : disassembly at namespaces/test/localsTest.cft : 26.16 :
[34;49m ..                                 int64 [39;49m[33;40mtaa[39;49m[34;49m ( one two three ) { int64 four, five ; four = one + two + three ; five = one + two + th .. [39;49m[32;49m
0x7fa6de041982    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de041986    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04198a    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m .. o three ) { int64 four, five ; four = [39;49m[33;40mone[39;49m[34;49m + two + three ; five = one + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; .. [39;49m[32;49m
0x7fa6de041991    498b47e8                mov rax, [r15-0x18]                                    [39;49m
[34;49m .. e ) { int64 four, five ; four = one + [39;49m[33;40mtwo[39;49m[34;49m + three ; five = one + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( f .. [39;49m[32;49m
0x7fa6de041995    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. ree ) { int64 four, five ; four = one [39;49m[33;40m+[39;49m[34;49m two + three ; five = one + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( .. [39;49m[32;49m
0x7fa6de041999    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. int64 four, five ; four = one + two + [39;49m[33;40mthree[39;49m[34;49m ; five = one + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five )  .. [39;49m[32;49m
0x7fa6de04199c    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. { int64 four, five ; four = one + two [39;49m[33;40m+[39;49m[34;49m three ; five = one + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five  .. [39;49m[32;49m
0x7fa6de0419a0    4803c1                  add rax, rcx                                           [39;49m
[34;49m ..  one two three ) { int64 four, five ; [39;49m[33;40mfour[39;49m[34;49m = one + two + three ; five = one + two + three + four ; p ( one ) ; p ( two ) ; p ( th .. [39;49m[32;49m
0x7fa6de0419a3    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m .. two three ) { int64 four, five ; four [39;49m[33;40m=[39;49m[34;49m one + two + three ; five = one + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) .. [39;49m[32;49m
0x7fa6de0419a7    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. e ; four = one + two + three ; five = [39;49m[33;40mone[39;49m[34;49m + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fa6de0419aa    498b47e8                mov rax, [r15-0x18]                                    [39;49m
[34;49m .. ur = one + two + three ; five = one + [39;49m[33;40mtwo[39;49m[34;49m + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fa6de0419ae    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. four = one + two + three ; five = one [39;49m[33;40m+[39;49m[34;49m two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fa6de0419b2    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. ne + two + three ; five = one + two + [39;49m[33;40mthree[39;49m[34;49m + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fa6de0419b5    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..  one + two + three ; five = one + two [39;49m[33;40m+[39;49m[34;49m three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fa6de0419b9    4803c1                  add rax, rcx                                           [39;49m
[34;49m ..  + three ; five = one + two + three + [39;49m[33;40mfour[39;49m[34;49m ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fa6de0419bc    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. wo + three ; five = one + two + three [39;49m[33;40m+[39;49m[34;49m four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fa6de0419c0    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. ur, five ; four = one + two + three ; [39;49m[33;40mfive[39;49m[34;49m = one + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl ()  .. [39;49m[32;49m
0x7fa6de0419c3    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m .. ive ; four = one + two + three ; five [39;49m[33;40m=[39;49m[34;49m one + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fa6de0419c7    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. five = one + two + three + four ; p ( [39;49m[33;40mone[39;49m[34;49m ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fa6de0419ca    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fa6de0419ce    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0419d2    498906                  mov [r14], rax                                         [39;49m
[34;49m .. e ; five = one + two + three + four ; [39;49m[33;40mp[39;49m[34;49m ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fa6de0419d5    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de0419df    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m
[34;49m ..  two + three + four ; p ( one ) ; p ( [39;49m[33;40mtwo[39;49m[34;49m ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fa6de0419e2    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de0419e6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0419ea    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ne + two + three + four ; p ( one ) ; [39;49m[33;40mp[39;49m[34;49m ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fa6de0419ed    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de0419f7    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m
[34;49m ..  + four ; p ( one ) ; p ( two ) ; p ( [39;49m[33;40mthree[39;49m[34;49m ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fa6de0419fa    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0419fe    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de041a02    498906                  mov [r14], rax                                         [39;49m
[34;49m .. hree + four ; p ( one ) ; p ( two ) ; [39;49m[33;40mp[39;49m[34;49m ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fa6de041a05    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de041a0f    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m
[34;49m .. one ) ; p ( two ) ; p ( three ) ; p ( [39;49m[33;40mfive[39;49m[34;49m ) ; nl () ; }  .. [39;49m[32;49m
0x7fa6de041a12    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fa6de041a16    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de041a1a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. p ( one ) ; p ( two ) ; p ( three ) ; [39;49m[33;40mp[39;49m[34;49m ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fa6de041a1d    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de041a27    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m
[34;49m ..  ( two ) ; p ( three ) ; p ( five ) ; [39;49m[33;40mnl[39;49m[34;49m () ; }  .. [39;49m[32;49m
0x7fa6de041a2a    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de041a34    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de041a3e    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m .. wo ) ; p ( three ) ; p ( five ) ; nl ([39;49m[33;40m)[39;49m[34;49m ; }  .. [39;49m[32;49m
0x7fa6de041a41    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de041a45    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de041a49    4983ee18                sub r14, 0x18                                          [39;49m[32;49m
0x7fa6de041a4d    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'taa' :: codeSize = 203
Word : 0x00007fa6dd958b30 :: Compiled at : 0x00007fa6de041982
 =============================
::> 'wdiss' was called at namespaces/test/localsTest.cft 26.16 <::
 1 2 3 12
 3 3 3
 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7
 1 2 3
 1 2 3 4 3 3 3 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 1 2 3
 1 2 3 4
 =============================
C.[34;49mhey[39;49m <:> cfrTil compiled word
SourceCode for C.[34;49mhey[39;49m :> 
[34;49m: hey ( n m | o q ) o m @ = m @ o @ "hey_1_assert" assert q n @ = n @ q @ "hey_2_assert" assert n @ m @ o @ q @ + + + 1 + dup p 7 "hey_3_assert" assert n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ; [39;49m
Source code file location of [34;49mhey[39;49m : "namespaces/test/localsTest.cft" : 94.19 :: we are now at : namespaces/test/localsTest.cft : 102.17
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04229b -- code size = 406 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mhey[39;49m : definition = 0x00007fa6de04229b : disassembly at namespaces/test/localsTest.cft : 102.17 :
[34;49m ..                                     : [39;49m[33;40mhey[39;49m[34;49m ( n m | o q )  o m @ =  m @ o @ "hey_1_assert" assert  q n @ =  n @ q @ "hey_2_assert"  .. [39;49m[32;49m
0x7fa6de04229b    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04229f    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de0422a3    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m ..                  : hey ( n m | o q )  [39;49m[33;40mo[39;49m[34;49m m @ =  m @ o @ "hey_1_assert" assert  q n @ =  n @ q @ "hey_2_assert" assert  n @ m @ o @ .. [39;49m[32;49m
0x7fa6de0422aa    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..                : hey ( n m | o q )  o [39;49m[33;40mm[39;49m[34;49m @ =  m @ o @ "hey_1_assert" assert  q n @ =  n @ q @ "hey_2_assert" assert  n @ m @ o @ q .. [39;49m[32;49m
0x7fa6de0422ae    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..            : hey ( n m | o q )  o m @ [39;49m[33;40m=[39;49m[34;49m  m @ o @ "hey_1_assert" assert  q n @ =  n @ q @ "hey_2_assert" assert  n @ m @ o @ q @ + .. [39;49m[32;49m
0x7fa6de0422b2    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..         : hey ( n m | o q )  o m @ =  [39;49m[33;40mm[39;49m[34;49m @ o @ "hey_1_assert" assert  q n @ =  n @ q @ "hey_2_assert" assert  n @ m @ o @ q @ + +  .. [39;49m[32;49m
0x7fa6de0422b5    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0422b9    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0422bd    498906                  mov [r14], rax                                         [39;49m
[34;49m ..     : hey ( n m | o q )  o m @ =  m @ [39;49m[33;40mo[39;49m[34;49m @ "hey_1_assert" assert  q n @ =  n @ q @ "hey_2_assert" assert  n @ m @ o @ q @ + + + 1  .. [39;49m[32;49m
0x7fa6de0422c0    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de0422c4    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0422c8    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : hey ( n m | o q )  o m @ =  m @ o @ [39;49m[33;40m"hey_1_assert"[39;49m[34;49m assert  q n @ =  n @ q @ "hey_2_assert" assert  n @ m @ o @ q @ + + + 1 + du .. [39;49m[32;49m
0x7fa6de0422cb    48b860b8fedda67f0000    mov rax, 0x7fa6ddfeb860    	< string : '[34;49mhey_1_assert[39;49m' >[39;49m[32;49m
0x7fa6de0422d5    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0422d9    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  q )  o m @ =  m @ o @ "hey_1_assert" [39;49m[33;40massert[39;49m[34;49m  q n @ =  n @ q @ "hey_2_assert" assert  n @ m @ o @ q @ + + + 1 + dup p 7 "hey_3_as .. [39;49m[32;49m
0x7fa6de0422dc    49b98da803dea67f0000    mov r9, 0x7fa6de03a88d                                 [39;49m[32;49m
0x7fa6de0422e6    49ffd1                  call r9                    	< System.[34;49massert1[39;49m : 0x00007fa6de03a88d >[39;49m
[34;49m .. m @ =  m @ o @ "hey_1_assert" assert  [39;49m[33;40mq[39;49m[34;49m n @ =  n @ q @ "hey_2_assert" assert  n @ m @ o @ q @ + + + 1 + dup p 7 "hey_3_assert" as .. [39;49m[32;49m
0x7fa6de0422e9    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. @ =  m @ o @ "hey_1_assert" assert  q [39;49m[33;40mn[39;49m[34;49m @ =  n @ q @ "hey_2_assert" assert  n @ m @ o @ q @ + + + 1 + dup p 7 "hey_3_assert" asse .. [39;49m[32;49m
0x7fa6de0422ed    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m ..  m @ o @ "hey_1_assert" assert  q n @ [39;49m[33;40m=[39;49m[34;49m  n @ q @ "hey_2_assert" assert  n @ m @ o @ q @ + + + 1 + dup p 7 "hey_3_assert" assert   .. [39;49m[32;49m
0x7fa6de0422f1    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. @ o @ "hey_1_assert" assert  q n @ =  [39;49m[33;40mn[39;49m[34;49m @ q @ "hey_2_assert" assert  n @ m @ o @ q @ + + + 1 + dup p 7 "hey_3_assert" assert  n @ .. [39;49m[32;49m
0x7fa6de0422f4    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de0422f8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0422fc    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ "hey_1_assert" assert  q n @ =  n @ [39;49m[33;40mq[39;49m[34;49m @ "hey_2_assert" assert  n @ m @ o @ q @ + + + 1 + dup p 7 "hey_3_assert" assert  n @ m @ .. [39;49m[32;49m
0x7fa6de0422ff    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fa6de042303    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de042307    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ey_1_assert" assert  q n @ =  n @ q @ [39;49m[33;40m"hey_2_assert"[39;49m[34;49m assert  n @ m @ o @ q @ + + + 1 + dup p 7 "hey_3_assert" assert  n @ m @ + o .. [39;49m[32;49m
0x7fa6de04230a    48b88bb8fedda67f0000    mov rax, 0x7fa6ddfeb88b    	< string : '[34;49mhey_2_assert[39;49m' >[39;49m[32;49m
0x7fa6de042314    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de042318    498906                  mov [r14], rax                                         [39;49m
[34;49m .. sert  q n @ =  n @ q @ "hey_2_assert" [39;49m[33;40massert[39;49m[34;49m  n @ m @ o @ q @ + + + 1 + dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 +  .. [39;49m[32;49m
0x7fa6de04231b    49b98da803dea67f0000    mov r9, 0x7fa6de03a88d                                 [39;49m[32;49m
0x7fa6de042325    49ffd1                  call r9                    	< System.[34;49massert1[39;49m : 0x00007fa6de03a88d >[39;49m
[34;49m .. n @ =  n @ q @ "hey_2_assert" assert  [39;49m[33;40mn[39;49m[34;49m @ m @ o @ q @ + + + 1 + dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7  .. [39;49m[32;49m
0x7fa6de042328    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de04232c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de042330    498906                  mov [r14], rax                                         [39;49m
[34;49m .. =  n @ q @ "hey_2_assert" assert  n @ [39;49m[33;40mm[39;49m[34;49m @ o @ q @ + + + 1 + dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey .. [39;49m[32;49m
0x7fa6de042333    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de042337    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04233b    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  @ q @ "hey_2_assert" assert  n @ m @ [39;49m[33;40mo[39;49m[34;49m @ q @ + + + 1 + dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_a .. [39;49m[32;49m
0x7fa6de04233e    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  @ "hey_2_assert" assert  n @ m @ o @ [39;49m[33;40mq[39;49m[34;49m @ + + + 1 + dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_asser .. [39;49m[32;49m
0x7fa6de042342    498b4f10                mov rcx, [r15+0x10]                                    [39;49m
[34;49m .. hey_2_assert" assert  n @ m @ o @ q @ [39;49m[33;40m+[39;49m[34;49m + + 1 + dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" a .. [39;49m[32;49m
0x7fa6de042346    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de042349    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de04234c    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04234f    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. y_2_assert" assert  n @ m @ o @ q @ + [39;49m[33;40m+[39;49m[34;49m + 1 + dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" ass .. [39;49m[32;49m
0x7fa6de042353    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de042356    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de042359    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04235c    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. 2_assert" assert  n @ m @ o @ q @ + + [39;49m[33;40m+[39;49m[34;49m 1 + dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" asser .. [39;49m[32;49m
0x7fa6de042360    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. assert" assert  n @ m @ o @ q @ + + + [39;49m[33;40m1[39;49m[34;49m + dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert  .. [39;49m[32;49m
0x7fa6de042363    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. sert" assert  n @ m @ o @ q @ + + + 1 [39;49m[33;40m+[39;49m[34;49m dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fa6de04236d    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de042370    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de042374    498906                  mov [r14], rax                                         [39;49m
[34;49m .. rt" assert  n @ m @ o @ q @ + + + 1 + [39;49m[33;40mdup[39;49m[34;49m p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fa6de042377    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. assert  n @ m @ o @ q @ + + + 1 + dup [39;49m[33;40mp[39;49m[34;49m 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fa6de04237b    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de042385    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m
[34;49m .. sert  n @ m @ o @ q @ + + + 1 + dup p [39;49m[33;40m7[39;49m[34;49m "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fa6de042388    48b80700000000000000    mov rax, 0x7                                           [39;49m[32;49m
0x7fa6de042392    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de042396    498906                  mov [r14], rax                                         [39;49m
[34;49m .. rt  n @ m @ o @ q @ + + + 1 + dup p 7 [39;49m[33;40m"hey_3_assert"[39;49m[34;49m assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fa6de042399    48b8bab8fedda67f0000    mov rax, 0x7fa6ddfeb8ba    	< string : '[34;49mhey_3_assert[39;49m' >[39;49m[32;49m
0x7fa6de0423a3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0423a7    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  q @ + + + 1 + dup p 7 "hey_3_assert" [39;49m[33;40massert[39;49m[34;49m  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fa6de0423aa    49b98da803dea67f0000    mov r9, 0x7fa6de03a88d                                 [39;49m[32;49m
0x7fa6de0423b4    49ffd1                  call r9                    	< System.[34;49massert1[39;49m : 0x00007fa6de03a88d >[39;49m
[34;49m ..  + 1 + dup p 7 "hey_3_assert" assert  [39;49m[33;40mn[39;49m[34;49m @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fa6de0423b7    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..  + dup p 7 "hey_3_assert" assert  n @ [39;49m[33;40mm[39;49m[34;49m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fa6de0423bb    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. up p 7 "hey_3_assert" assert  n @ m @ [39;49m[33;40m+[39;49m[34;49m o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fa6de0423bf    4803c1                  add rax, rcx                                           [39;49m
[34;49m ..  p 7 "hey_3_assert" assert  n @ m @ + [39;49m[33;40mo[39;49m[34;49m @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fa6de0423c2    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m ..  "hey_3_assert" assert  n @ m @ + o @ [39;49m[33;40m+[39;49m[34;49m q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fa6de0423c6    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. hey_3_assert" assert  n @ m @ + o @ + [39;49m[33;40mq[39;49m[34;49m @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fa6de0423c9    498b4f10                mov rcx, [r15+0x10]                                    [39;49m
[34;49m .. 3_assert" assert  n @ m @ + o @ + q @ [39;49m[33;40m+[39;49m[34;49m 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fa6de0423cd    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. assert" assert  n @ m @ + o @ + q @ + [39;49m[33;40m1[39;49m[34;49m + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fa6de0423d0    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. sert" assert  n @ m @ + o @ + q @ + 1 [39;49m[33;40m+[39;49m[34;49m dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fa6de0423da    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de0423dd    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de0423e1    498906                  mov [r14], rax                                         [39;49m
[34;49m .. rt" assert  n @ m @ + o @ + q @ + 1 + [39;49m[33;40mdup[39;49m[34;49m p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fa6de0423e4    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. assert  n @ m @ + o @ + q @ + 1 + dup [39;49m[33;40mp[39;49m[34;49m 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fa6de0423e8    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de0423f2    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m
[34;49m .. sert  n @ m @ + o @ + q @ + 1 + dup p [39;49m[33;40m7[39;49m[34;49m "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fa6de0423f5    48b80700000000000000    mov rax, 0x7                                           [39;49m[32;49m
0x7fa6de0423ff    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de042403    498906                  mov [r14], rax                                         [39;49m
[34;49m .. rt  n @ m @ + o @ + q @ + 1 + dup p 7 [39;49m[33;40m"hey_4_assert"[39;49m[34;49m assert ;  .. [39;49m[32;49m
0x7fa6de042406    48b8e9b8fedda67f0000    mov rax, 0x7fa6ddfeb8e9    	< string : '[34;49mhey_4_assert[39;49m' >[39;49m[32;49m
0x7fa6de042410    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de042414    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  @ + q @ + 1 + dup p 7 "hey_4_assert" [39;49m[33;40massert[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fa6de042417    49b98da803dea67f0000    mov r9, 0x7fa6de03a88d                                 [39;49m[32;49m
0x7fa6de042421    49ffd1                  call r9                    	< System.[34;49massert1[39;49m : 0x00007fa6de03a88d >[39;49m
[34;49m .. @ + 1 + dup p 7 "hey_4_assert" assert [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de042424    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de042428    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04242c    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fa6de042430    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'hey' :: codeSize = 405
Word : 0x00007fa6dd922830 :: Compiled at : 0x00007fa6de04229b
 =============================
::> 'wdiss' was called at namespaces/test/localsTest.cft 102.17 <::
 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7
beforeHeey
 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7
afterHeey
testA1 =  0x00007fa6dd942918
 0x00007fa6dd942918 0x00007fa6ddf73238 0x00007fa6dd942918
 this =  0x00007fa6dd942918

 t1 @ =  0x00007fa6dd942918
 t1 =  0x00007fa6ddf73238
 done showing variables

Dump at : namespaces/test/localsTest.cft : 148.48 :
Dump : Address = 0x00007fa6dd942918 : Number = 0x0000000000000080 :: (little endian dump)
0x00007fa6dd942918 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd942928 : 0x0000000000000001 0x0000000000000000  01 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd942938 : 0x0000000000000002 0x0000000000000000  02 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd942948 : 0x0000000000000000 0x0000000000000003  00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd942958 : 0x0000000000000000 0x0000000000000004  00 00 00 00 00 00 00 00  04 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd942968 : 0x0000000000000000 0x0000000000000005  00 00 00 00 00 00 00 00  05 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd942978 : 0x0000000000000000 0x0000000000000006  00 00 00 00 00 00 00 00  06 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd942988 : 0x0000000000000000 0x0000000000000007  00 00 00 00 00 00 00 00  07 00 00 00 00 00 00 00  ........ ........ 

Dump at : namespaces/test/localsTest.cft : 157.15 :
Dump : Address = 0x00007fa6dd9433a8 : Number = 0x0000000000000032 :: (little endian dump)
0x00007fa6dd9433a8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd9433b8 : 0x0000000000000003 0x0000000000000000  03 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd9433c8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd9433d8 : 0x0000000000000000 0x0000000000000004  00 00 00 00 00 00 00 00  04 00 00 00 00 00 00 00  ........ ........ 
 0x0000000000000003 0x0000000000000004
 before test

Using Namespaces :> DLLNodeAlloc DLLNode Buffer Class Root C int64 User Logic Bits Int cta void ct Ar3 Ar2 Ar1 DLLNodeAlloc4 DLListClone DLList byte Integer Pointer Compiler Combinators int System Shell OpenVmTil Lexer Interpreter Debug Word Namespace StartupMacros Io Compiling Reserved DObject Macro PreProcessor List Stack Memory Colors File String Asm Locals C_Typedef Forth Experimental 

 array test ok
 0x0000000000000001
Dump at : namespaces/test/localsTest.cft : 166.15 :
Dump : Address = 0x00007fa6dd9433a8 : Number = 0x0000000000000032 :: (little endian dump)
0x00007fa6dd9433a8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd9433b8 : 0x0000000000000003 0x0000000000000000  03 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd9433c8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd9433d8 : 0x0000000000000000 0x0000000000000004  00 00 00 00 00 00 00 00  04 00 00 00 00 00 00 00  ........ ........ 

Dump at : namespaces/test/localsTest.cft : 169.15 :
Dump : Address = 0x00007fa6dd9437d8 : Number = 0x0000000000000032 :: (little endian dump)
0x00007fa6dd9437d8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd9437e8 : 0x0000000000000005 0x0000000000000000  05 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd9437f8 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd943808 : 0x0000000000000000 0x0000000000000006  00 00 00 00 00 00 00 00  06 00 00 00 00 00 00 00  ........ ........ 
 0x0000000000000077 0x00007fa6ddf73228 0x0000000000000001 0x00007fa6ddf73238 0x0000000000000000 0x0000000000000001 0x00007fa6ddf73240 0x0000000000000001 0x00007fa6ddf73250 0x00007fa6ddf73238 0x0000000000000001 0x00007fa6ddf73240 0x0000000000000001 0x00007fa6ddf73250 0x0000000000000001 0x0000000000000001 

testing nested locals

 =============================
User.[34;49mgoedel[39;49m <:> cfrTil compiled word
SourceCode for User.[34;49mgoedel[39;49m :> 
[34;49m: goedel { (| n ) n 1 = n @ 6 + dup 7 _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ; [39;49m
Source code file location of [34;49mgoedel[39;49m : "namespaces/test/localsTest.cft" : 204.99 :: we are now at : namespaces/test/localsTest.cft : 206.19
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde042beb -- code size = 200 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mgoedel[39;49m : definition = 0x00007fa6de042beb : disassembly at namespaces/test/localsTest.cft : 206.19 :
[34;49m ..                                     : [39;49m[33;40mgoedel[39;49m[34;49m { (| n ) n 1 = n @ 6 + dup 7 _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } .. [39;49m[32;49m
0x7fa6de042beb    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de042bef    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de042bf3    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m ..                            : goedel { [39;49m[33;40m([39;49m[34;49m| n ) n 1 = n @ 6 + dup 7 _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ;  .. [39;49m[32;49m
0x7fa6de042bfa    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..                   : goedel { (| n ) n [39;49m[33;40m1[39;49m[34;49m = n @ 6 + dup 7 _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ;  .. [39;49m[32;49m
0x7fa6de042bfe    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m ..                 : goedel { (| n ) n 1 [39;49m[33;40m=[39;49m[34;49m n @ 6 + dup 7 _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ;  .. [39;49m[32;49m
0x7fa6de042c08    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..               : goedel { (| n ) n 1 = [39;49m[33;40mn[39;49m[34;49m @ 6 + dup 7 _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ;  .. [39;49m[32;49m
0x7fa6de042c0b    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..           : goedel { (| n ) n 1 = n @ [39;49m[33;40m6[39;49m[34;49m + dup 7 _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ;  .. [39;49m[32;49m
0x7fa6de042c0f    48b90600000000000000    mov rcx, 0x6                                           [39;49m
[34;49m ..         : goedel { (| n ) n 1 = n @ 6 [39;49m[33;40m+[39;49m[34;49m dup 7 _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ;  .. [39;49m[32;49m
0x7fa6de042c19    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de042c1c    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de042c20    498906                  mov [r14], rax                                         [39;49m
[34;49m ..       : goedel { (| n ) n 1 = n @ 6 + [39;49m[33;40mdup[39;49m[34;49m 7 _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ;  .. [39;49m[32;49m
0x7fa6de042c23    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..   : goedel { (| n ) n 1 = n @ 6 + dup [39;49m[33;40m7[39;49m[34;49m _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ;  .. [39;49m[32;49m
0x7fa6de042c27    48b80700000000000000    mov rax, 0x7                                           [39;49m[32;49m
0x7fa6de042c31    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de042c35    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : goedel { (| n ) n 1 = n @ 6 + dup 7 [39;49m[33;40m_assert[39;49m[34;49m p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ;  .. [39;49m[32;49m
0x7fa6de042c38    49b941aa03dea67f0000    mov r9, 0x7fa6de03aa41                                 [39;49m[32;49m
0x7fa6de042c42    49ffd1                  call r9                    	< System.[34;49m_assert[39;49m : 0x00007fa6de03aa41 >[39;49m
[34;49m ..  { (| n ) n 1 = n @ 6 + dup 7 _assert [39;49m[33;40mp[39;49m[34;49m } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ; [39;49m[32;49m
0x7fa6de042c45    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de042c4f    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m
[34;49m ..  n 1 = n @ 6 + dup 7 _assert p } ix { [39;49m[33;40m([39;49m[34;49m| m ) m 3 = m @ 4 + dup 7 _assert p } ix ; [39;49m[32;49m
0x7fa6de042c52    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. @ 6 + dup 7 _assert p } ix { (| m ) m [39;49m[33;40m3[39;49m[34;49m = m @ 4 + dup 7 _assert p } ix ; [39;49m[32;49m
0x7fa6de042c56    48b90300000000000000    mov rcx, 0x3                                           [39;49m
[34;49m .. 6 + dup 7 _assert p } ix { (| m ) m 3 [39;49m[33;40m=[39;49m[34;49m m @ 4 + dup 7 _assert p } ix ; [39;49m[32;49m
0x7fa6de042c60    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. + dup 7 _assert p } ix { (| m ) m 3 = [39;49m[33;40mm[39;49m[34;49m @ 4 + dup 7 _assert p } ix ; [39;49m[32;49m
0x7fa6de042c63    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m .. p 7 _assert p } ix { (| m ) m 3 = m @ [39;49m[33;40m4[39;49m[34;49m + dup 7 _assert p } ix ; [39;49m[32;49m
0x7fa6de042c67    48b90400000000000000    mov rcx, 0x4                                           [39;49m
[34;49m .. 7 _assert p } ix { (| m ) m 3 = m @ 4 [39;49m[33;40m+[39;49m[34;49m dup 7 _assert p } ix ; [39;49m[32;49m
0x7fa6de042c71    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de042c74    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de042c78    498906                  mov [r14], rax                                         [39;49m
[34;49m .. _assert p } ix { (| m ) m 3 = m @ 4 + [39;49m[33;40mdup[39;49m[34;49m 7 _assert p } ix ; [39;49m[32;49m
0x7fa6de042c7b    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. ert p } ix { (| m ) m 3 = m @ 4 + dup [39;49m[33;40m7[39;49m[34;49m _assert p } ix ; [39;49m[32;49m
0x7fa6de042c7f    48b80700000000000000    mov rax, 0x7                                           [39;49m[32;49m
0x7fa6de042c89    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de042c8d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. t p } ix { (| m ) m 3 = m @ 4 + dup 7 [39;49m[33;40m_assert[39;49m[34;49m p } ix ; [39;49m[32;49m
0x7fa6de042c90    49b941aa03dea67f0000    mov r9, 0x7fa6de03aa41                                 [39;49m[32;49m
0x7fa6de042c9a    49ffd1                  call r9                    	< System.[34;49m_assert[39;49m : 0x00007fa6de03aa41 >[39;49m
[34;49m ..  { (| m ) m 3 = m @ 4 + dup 7 _assert [39;49m[33;40mp[39;49m[34;49m } ix ; [39;49m[32;49m
0x7fa6de042c9d    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de042ca7    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m
[34;49m ..  ) m 3 = m @ 4 + dup 7 _assert p } ix [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de042caa    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de042cae    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de042cb2    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'goedel' :: codeSize = 199
Word : 0x00007fa6dd8808e0 :: Compiled at : 0x00007fa6de042beb
 =============================
::> 'wdiss' was called at namespaces/test/localsTest.cft 206.19 <::

 goedel ::  7 7
 =============================
User.[34;49mgoedel2[39;49m <:> cfrTil compiled word
SourceCode for User.[34;49mgoedel2[39;49m :> 
[34;49m: goedel2 { (| n ) n 2 = n @ 5 + dup 7 "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_assert" assert } ix ; [39;49m
Source code file location of [34;49mgoedel2[39;49m : "namespaces/test/localsTest.cft" : 208.141 :: we are now at : namespaces/test/localsTest.cft : 209.20
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde042cb8 -- code size = 258 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mgoedel2[39;49m : definition = 0x00007fa6de042cb8 : disassembly at namespaces/test/localsTest.cft : 209.20 :
[34;49m ..                                     : [39;49m[33;40mgoedel2[39;49m[34;49m { (| n ) n 2 = n @ 5 + dup 7 "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 =  .. [39;49m[32;49m
0x7fa6de042cb8    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de042cbc    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de042cc0    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m ..                           : goedel2 { [39;49m[33;40m([39;49m[34;49m| n ) n 2 = n @ 5 + dup 7 "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + du .. [39;49m[32;49m
0x7fa6de042cc7    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..                  : goedel2 { (| n ) n [39;49m[33;40m2[39;49m[34;49m = n @ 5 + dup 7 "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "go .. [39;49m[32;49m
0x7fa6de042ccb    48b90200000000000000    mov rcx, 0x2                                           [39;49m
[34;49m ..                : goedel2 { (| n ) n 2 [39;49m[33;40m=[39;49m[34;49m n @ 5 + dup 7 "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goed .. [39;49m[32;49m
0x7fa6de042cd5    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..              : goedel2 { (| n ) n 2 = [39;49m[33;40mn[39;49m[34;49m @ 5 + dup 7 "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel .. [39;49m[32;49m
0x7fa6de042cd8    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..          : goedel2 { (| n ) n 2 = n @ [39;49m[33;40m5[39;49m[34;49m + dup 7 "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_ .. [39;49m[32;49m
0x7fa6de042cdc    48b90500000000000000    mov rcx, 0x5                                           [39;49m
[34;49m ..        : goedel2 { (| n ) n 2 = n @ 5 [39;49m[33;40m+[39;49m[34;49m dup 7 "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_as .. [39;49m[32;49m
0x7fa6de042ce6    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de042ce9    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de042ced    498906                  mov [r14], rax                                         [39;49m
[34;49m ..      : goedel2 { (| n ) n 2 = n @ 5 + [39;49m[33;40mdup[39;49m[34;49m 7 "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_asse .. [39;49m[32;49m
0x7fa6de042cf0    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..  : goedel2 { (| n ) n 2 = n @ 5 + dup [39;49m[33;40m7[39;49m[34;49m "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_assert"  .. [39;49m[32;49m
0x7fa6de042cf4    48b80700000000000000    mov rax, 0x7                                           [39;49m[32;49m
0x7fa6de042cfe    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de042d02    498906                  mov [r14], rax                                         [39;49m
[34;49m   : goedel2 { (| n ) n 2 = n @ 5 + dup 7 [39;49m[33;40m"goedel2_1_assert"[39;49m[34;49m assert p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_assert" as .. [39;49m[32;49m
0x7fa6de042d05    48b84ac2fedda67f0000    mov rax, 0x7fa6ddfec24a    	< string : '[34;49mgoedel2_1_assert[39;49m' >[39;49m[32;49m
0x7fa6de042d0f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de042d13    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  2 = n @ 5 + dup 7 "goedel2_1_assert" [39;49m[33;40massert[39;49m[34;49m p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fa6de042d16    49b98da803dea67f0000    mov r9, 0x7fa6de03a88d                                 [39;49m[32;49m
0x7fa6de042d20    49ffd1                  call r9                    	< System.[34;49massert1[39;49m : 0x00007fa6de03a88d >[39;49m
[34;49m .. @ 5 + dup 7 "goedel2_1_assert" assert [39;49m[33;40mp[39;49m[34;49m } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fa6de042d23    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de042d2d    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m
[34;49m ..  7 "goedel2_1_assert" assert p } ix { [39;49m[33;40m([39;49m[34;49m| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fa6de042d30    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fa6de042d34    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de042d38    498906                  mov [r14], rax                                         [39;49m
[34;49m .. _1_assert" assert p } ix { (| n ) n @ [39;49m[33;40mp[39;49m[34;49m n 3 = n @ 4 + dup p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fa6de042d3b    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de042d45    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m
[34;49m .. _assert" assert p } ix { (| n ) n @ p [39;49m[33;40mn[39;49m[34;49m 3 = n @ 4 + dup p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fa6de042d48    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. ssert" assert p } ix { (| n ) n @ p n [39;49m[33;40m3[39;49m[34;49m = n @ 4 + dup p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fa6de042d4c    48b90300000000000000    mov rcx, 0x3                                           [39;49m
[34;49m .. ert" assert p } ix { (| n ) n @ p n 3 [39;49m[33;40m=[39;49m[34;49m n @ 4 + dup p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fa6de042d56    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. t" assert p } ix { (| n ) n @ p n 3 = [39;49m[33;40mn[39;49m[34;49m @ 4 + dup p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fa6de042d59    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m .. ssert p } ix { (| n ) n @ p n 3 = n @ [39;49m[33;40m4[39;49m[34;49m + dup p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fa6de042d5d    48b90400000000000000    mov rcx, 0x4                                           [39;49m
[34;49m .. ert p } ix { (| n ) n @ p n 3 = n @ 4 [39;49m[33;40m+[39;49m[34;49m dup p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fa6de042d67    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de042d6a    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de042d6e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. t p } ix { (| n ) n @ p n 3 = n @ 4 + [39;49m[33;40mdup[39;49m[34;49m p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fa6de042d71    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. } ix { (| n ) n @ p n 3 = n @ 4 + dup [39;49m[33;40mp[39;49m[34;49m 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fa6de042d75    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de042d7f    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m
[34;49m .. ix { (| n ) n @ p n 3 = n @ 4 + dup p [39;49m[33;40m7[39;49m[34;49m "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fa6de042d82    48b80700000000000000    mov rax, 0x7                                           [39;49m[32;49m
0x7fa6de042d8c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de042d90    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  { (| n ) n @ p n 3 = n @ 4 + dup p 7 [39;49m[33;40m"goedel2_2_assert"[39;49m[34;49m assert } ix ; [39;49m[32;49m
0x7fa6de042d93    48b892c2fedda67f0000    mov rax, 0x7fa6ddfec292    	< string : '[34;49mgoedel2_2_assert[39;49m' >[39;49m[32;49m
0x7fa6de042d9d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de042da1    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  = n @ 4 + dup p 7 "goedel2_2_assert" [39;49m[33;40massert[39;49m[34;49m } ix ; [39;49m[32;49m
0x7fa6de042da4    49b98da803dea67f0000    mov r9, 0x7fa6de03a88d                                 [39;49m[32;49m
0x7fa6de042dae    49ffd1                  call r9                    	< System.[34;49massert1[39;49m : 0x00007fa6de03a88d >[39;49m
[34;49m .. up p 7 "goedel2_2_assert" assert } ix [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de042db1    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de042db5    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de042db9    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'goedel2' :: codeSize = 257
Word : 0x00007fa6dd883970 :: Compiled at : 0x00007fa6de042cb8
 =============================
::> 'wdiss' was called at namespaces/test/localsTest.cft 209.20 <::

 goedel2 ::  goedel2_1_assert  : ok

 7 0 7 goedel2_2_assert  : ok


 =============================
User.[34;49mgoedel4[39;49m <:> cfrTil compiled word
SourceCode for User.[34;49mgoedel4[39;49m :> 
[34;49m: goedel4 (| n -- TOS ) nl "goedel4 :: " ps nl n 9 = { (| n ) n @ p n 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert } ix { (| n ) n @ p n 3 = n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix n @ dup p ; [39;49m
Source code file location of [34;49mgoedel4[39;49m : "namespaces/test/localsTest.cft" : 212.24 :: we are now at : namespaces/test/localsTest.cft : 231.21
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde042dbf -- code size = 719 bytes
TypeSignature : -> Integer 
 -----------------------------
Word :: User.[34;49mgoedel4[39;49m : definition = 0x00007fa6de042dbf : disassembly at namespaces/test/localsTest.cft : 231.21 :
[34;49m ..                                     : [39;49m[33;40mgoedel4[39;49m[34;49m (| n -- TOS )  nl "goedel4 :: " ps nl n 9 = {  (| n ) n @ p n 2 = n @ dup p 2 "goed .. [39;49m[32;49m
0x7fa6de042dbf    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de042dc3    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de042dc7    4981c628000000          add r14, 0x28                                          [39;49m
[34;49m ..              : goedel4 (| n -- TOS )  [39;49m[33;40mnl[39;49m[34;49m "goedel4 :: " ps nl n 9 = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel4_1_assert" assert {  .. [39;49m[32;49m
0x7fa6de042dce    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de042dd8    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de042de2    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m ..           : goedel4 (| n -- TOS )  nl [39;49m[33;40m"goedel4 :: "[39;49m[34;49m ps nl n 9 = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel4_1_assert" assert { (|  .. [39;49m[32;49m
0x7fa6de042de5    48b88ec3fedda67f0000    mov rax, 0x7fa6ddfec38e    	< string : '[34;49mgoedel4 :: [39;49m' >[39;49m[32;49m
0x7fa6de042def    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de042df3    498906                  mov [r14], rax                                         [39;49m
[34;49m: goedel4 (| n -- TOS )  nl "goedel4 :: " [39;49m[33;40mps[39;49m[34;49m nl n 9 = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3  .. [39;49m[32;49m
0x7fa6de042df6    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de042e00    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m .. l4 (| n -- TOS )  nl "goedel4 :: " ps [39;49m[33;40mnl[39;49m[34;49m n 9 = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n .. [39;49m[32;49m
0x7fa6de042e03    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de042e0d    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de042e17    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m .. (| n -- TOS )  nl "goedel4 :: " ps nl [39;49m[33;40mn[39;49m[34;49m 9 = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @  .. [39;49m[32;49m
0x7fa6de042e1a    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..  n -- TOS )  nl "goedel4 :: " ps nl n [39;49m[33;40m9[39;49m[34;49m = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4  .. [39;49m[32;49m
0x7fa6de042e1e    48b90900000000000000    mov rcx, 0x9                                           [39;49m
[34;49m ..  -- TOS )  nl "goedel4 :: " ps nl n 9 [39;49m[33;40m=[39;49m[34;49m {  (| n ) n @ p n 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 +  .. [39;49m[32;49m
0x7fa6de042e28    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. OS )  nl "goedel4 :: " ps nl n 9 = {  [39;49m[33;40m([39;49m[34;49m| n ) n @ p n 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p .. [39;49m[32;49m
0x7fa6de042e2b    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fa6de042e2f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de042e33    498906                  mov [r14], rax                                         [39;49m
[34;49m .. oedel4 :: " ps nl n 9 = {  (| n ) n @ [39;49m[33;40mp[39;49m[34;49m n 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4 .. [39;49m[32;49m
0x7fa6de042e36    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de042e40    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m
[34;49m .. del4 :: " ps nl n 9 = {  (| n ) n @ p [39;49m[33;40mn[39;49m[34;49m 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2 .. [39;49m[32;49m
0x7fa6de042e43    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. l4 :: " ps nl n 9 = {  (| n ) n @ p n [39;49m[33;40m2[39;49m[34;49m = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_a .. [39;49m[32;49m
0x7fa6de042e47    48b90200000000000000    mov rcx, 0x2                                           [39;49m
[34;49m ..  :: " ps nl n 9 = {  (| n ) n @ p n 2 [39;49m[33;40m=[39;49m[34;49m n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_ass .. [39;49m[32;49m
0x7fa6de042e51    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. : " ps nl n 9 = {  (| n ) n @ p n 2 = [39;49m[33;40mn[39;49m[34;49m @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_asser .. [39;49m[32;49m
0x7fa6de042e54    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fa6de042e58    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de042e5c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ps nl n 9 = {  (| n ) n @ p n 2 = n @ [39;49m[33;40mdup[39;49m[34;49m p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_assert" a .. [39;49m[32;49m
0x7fa6de042e5f    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. l n 9 = {  (| n ) n @ p n 2 = n @ dup [39;49m[33;40mp[39;49m[34;49m 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_assert" asser .. [39;49m[32;49m
0x7fa6de042e63    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de042e6d    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m
[34;49m .. n 9 = {  (| n ) n @ p n 2 = n @ dup p [39;49m[33;40m2[39;49m[34;49m "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_assert" assert  .. [39;49m[32;49m
0x7fa6de042e70    48b80200000000000000    mov rax, 0x2                                           [39;49m[32;49m
0x7fa6de042e7a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de042e7e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 9 = {  (| n ) n @ p n 2 = n @ dup p 2 [39;49m[33;40m"goedel4_1_assert"[39;49m[34;49m assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_assert" assert }  .. [39;49m[32;49m
0x7fa6de042e81    48b8ccc3fedda67f0000    mov rax, 0x7fa6ddfec3cc    	< string : '[34;49mgoedel4_1_assert[39;49m' >[39;49m[32;49m
0x7fa6de042e8b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de042e8f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  n 2 = n @ dup p 2 "goedel4_1_assert" [39;49m[33;40massert[39;49m[34;49m { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _asser .. [39;49m[32;49m
0x7fa6de042e92    49b98da803dea67f0000    mov r9, 0x7fa6de03a88d                                 [39;49m[32;49m
0x7fa6de042e9c    49ffd1                  call r9                    	< System.[34;49massert1[39;49m : 0x00007fa6de03a88d >[39;49m
[34;49m .. @ dup p 2 "goedel4_1_assert" assert { [39;49m[33;40m([39;49m[34;49m| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { .. [39;49m[32;49m
0x7fa6de042e9f    498b4718                mov rax, [r15+0x18]                                    [39;49m[32;49m
0x7fa6de042ea3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de042ea7    498906                  mov [r14], rax                                         [39;49m
[34;49m .. goedel4_1_assert" assert { (| n ) n @ [39;49m[33;40mp[39;49m[34;49m n 3 = n @ 4 + dup p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n  .. [39;49m[32;49m
0x7fa6de042eaa    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de042eb4    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m
[34;49m .. edel4_1_assert" assert { (| n ) n @ p [39;49m[33;40mn[39;49m[34;49m 3 = n @ 4 + dup p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @  .. [39;49m[32;49m
0x7fa6de042eb7    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m .. el4_1_assert" assert { (| n ) n @ p n [39;49m[33;40m3[39;49m[34;49m = n @ 4 + dup p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  .. [39;49m[32;49m
0x7fa6de042ebb    48b90300000000000000    mov rcx, 0x3                                           [39;49m
[34;49m .. 4_1_assert" assert { (| n ) n @ p n 3 [39;49m[33;40m=[39;49m[34;49m n @ 4 + dup p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n .. [39;49m[32;49m
0x7fa6de042ec5    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 1_assert" assert { (| n ) n @ p n 3 = [39;49m[33;40mn[39;49m[34;49m @ 4 + dup p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 .. [39;49m[32;49m
0x7fa6de042ec8    498b4718                mov rax, [r15+0x18]                                    [39;49m
[34;49m .. sert" assert { (| n ) n @ p n 3 = n @ [39;49m[33;40m4[39;49m[34;49m + dup p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n .. [39;49m[32;49m
0x7fa6de042ecc    48b90400000000000000    mov rcx, 0x4                                           [39;49m
[34;49m .. rt" assert { (| n ) n @ p n 3 = n @ 4 [39;49m[33;40m+[39;49m[34;49m dup p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n d .. [39;49m[32;49m
0x7fa6de042ed6    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de042ed9    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de042edd    498906                  mov [r14], rax                                         [39;49m
[34;49m .. " assert { (| n ) n @ p n 3 = n @ 4 + [39;49m[33;40mdup[39;49m[34;49m p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup .. [39;49m[32;49m
0x7fa6de042ee0    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. sert { (| n ) n @ p n 3 = n @ 4 + dup [39;49m[33;40mp[39;49m[34;49m 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 .. [39;49m[32;49m
0x7fa6de042ee4    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de042eee    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m
[34;49m .. rt { (| n ) n @ p n 3 = n @ 4 + dup p [39;49m[33;40m7[39;49m[34;49m "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + .. [39;49m[32;49m
0x7fa6de042ef1    48b80700000000000000    mov rax, 0x7                                           [39;49m[32;49m
0x7fa6de042efb    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de042eff    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  { (| n ) n @ p n 3 = n @ 4 + dup p 7 [39;49m[33;40m"goedel4_2_assert"[39;49m[34;49m assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + d .. [39;49m[32;49m
0x7fa6de042f02    48b814c4fedda67f0000    mov rax, 0x7fa6ddfec414    	< string : '[34;49mgoedel4_2_assert[39;49m' >[39;49m[32;49m
0x7fa6de042f0c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de042f10    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  = n @ 4 + dup p 7 "goedel4_2_assert" [39;49m[33;40massert[39;49m[34;49m } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + dup dup 7 "goedel4_3 .. [39;49m[32;49m
0x7fa6de042f13    49b98da803dea67f0000    mov r9, 0x7fa6de03a88d                                 [39;49m[32;49m
0x7fa6de042f1d    49ffd1                  call r9                    	< System.[34;49massert1[39;49m : 0x00007fa6de03a88d >[39;49m
[34;49m .. up p 7 "goedel4_2_assert" assert } ix [39;49m[33;40mn[39;49m[34;49m @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + dup dup 7 "goedel4_3_assert" ass .. [39;49m[32;49m
0x7fa6de042f20    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  7 "goedel4_2_assert" assert } ix n @ [39;49m[33;40m6[39;49m[34;49m + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + dup dup 7 "goedel4_3_assert" assert  .. [39;49m[32;49m
0x7fa6de042f24    48b90600000000000000    mov rcx, 0x6                                           [39;49m
[34;49m ..  "goedel4_2_assert" assert } ix n @ 6 [39;49m[33;40m+[39;49m[34;49m 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p  .. [39;49m[32;49m
0x7fa6de042f2e    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de042f31    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de042f35    498906                  mov [r14], rax                                         [39;49m
[34;49m .. goedel4_2_assert" assert } ix n @ 6 + [39;49m[33;40m8[39;49m[34;49m _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p =  .. [39;49m[32;49m
0x7fa6de042f38    48b80800000000000000    mov rax, 0x8                                           [39;49m[32;49m
0x7fa6de042f42    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de042f46    498906                  mov [r14], rax                                         [39;49m
[34;49m .. edel4_2_assert" assert } ix n @ 6 + 8 [39;49m[33;40m_assert[39;49m[34;49m  } ix { (| n )  n @ p  n 3 = n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n  .. [39;49m[32;49m
0x7fa6de042f49    49b941aa03dea67f0000    mov r9, 0x7fa6de03aa41                                 [39;49m[32;49m
0x7fa6de042f53    49ffd1                  call r9                    	< System.[34;49m_assert[39;49m : 0x00007fa6de03aa41 >[39;49m
[34;49m .. assert } ix n @ 6 + 8 _assert  } ix { [39;49m[33;40m([39;49m[34;49m| n )  n @ p  n 3 = n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goede .. [39;49m[32;49m
0x7fa6de042f56    498b4720                mov rax, [r15+0x20]                                    [39;49m[32;49m
0x7fa6de042f5a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de042f5e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. n @ 6 + 8 _assert  } ix { (| n )  n @ [39;49m[33;40mp[39;49m[34;49m  n 3 = n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" .. [39;49m[32;49m
0x7fa6de042f61    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de042f6b    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m
[34;49m ..  6 + 8 _assert  } ix { (| n )  n @ p  [39;49m[33;40mn[39;49m[34;49m 3 = n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" as .. [39;49m[32;49m
0x7fa6de042f6e    498d4720                lea rax, [r15+0x20]                                    [39;49m
[34;49m ..  + 8 _assert  } ix { (| n )  n @ p  n [39;49m[33;40m3[39;49m[34;49m = n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" asse .. [39;49m[32;49m
0x7fa6de042f72    48b90300000000000000    mov rcx, 0x3                                           [39;49m
[34;49m ..  8 _assert  } ix { (| n )  n @ p  n 3 [39;49m[33;40m=[39;49m[34;49m n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert .. [39;49m[32;49m
0x7fa6de042f7c    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  _assert  } ix { (| n )  n @ p  n 3 = [39;49m[33;40mn[39;49m[34;49m dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } .. [39;49m[32;49m
0x7fa6de042f7f    498d4720                lea rax, [r15+0x20]                                    [39;49m[32;49m
0x7fa6de042f83    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de042f87    498906                  mov [r14], rax                                         [39;49m
[34;49m .. assert  } ix { (| n )  n @ p  n 3 = n [39;49m[33;40mdup[39;49m[34;49m @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } i .. [39;49m[32;49m
0x7fa6de042f8a    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. rt  } ix { (| n )  n @ p  n 3 = n dup [39;49m[33;40m@[39;49m[34;49m 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n .. [39;49m[32;49m
0x7fa6de042f8e    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de042f91    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de042f94    498906                  mov [r14], rax                                         [39;49m
[34;49m ..   } ix { (| n )  n @ p  n 3 = n dup @ [39;49m[33;40m4[39;49m[34;49m + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ .. [39;49m[32;49m
0x7fa6de042f97    48b80400000000000000    mov rax, 0x4                                           [39;49m[32;49m
0x7fa6de042fa1    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de042fa4    498b06                  mov rax, [r14]                                         [39;49m
[34;49m .. 4 + dup p 7 "goedel4_2_assert" assert [39;49m[33;40m}[39;49m[34;49m ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + dup dup 7 "goedel4_3_assert .. [39;49m[32;49m
0x7fa6de042fa7    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } ix { (| n )  n @ p  n 3 = n dup @ 4 [39;49m[33;40m+[39;49m[34;49m dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ d .. [39;49m[32;49m
0x7fa6de042fab    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de042fae    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de042fb2    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ix { (| n )  n @ p  n 3 = n dup @ 4 + [39;49m[33;40mdup[39;49m[34;49m dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup .. [39;49m[32;49m
0x7fa6de042fb5    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..  (| n )  n @ p  n 3 = n dup @ 4 + dup [39;49m[33;40mdup[39;49m[34;49m 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup p ; .. [39;49m[32;49m
0x7fa6de042fb9    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de042fbc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de042fc0    498906                  mov [r14], rax                                         [39;49m
[34;49m .. n )  n @ p  n 3 = n dup @ 4 + dup dup [39;49m[33;40m7[39;49m[34;49m "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup p ;  .. [39;49m[32;49m
0x7fa6de042fc3    48b80700000000000000    mov rax, 0x7                                           [39;49m[32;49m
0x7fa6de042fcd    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de042fd1    498906                  mov [r14], rax                                         [39;49m
[34;49m .. )  n @ p  n 3 = n dup @ 4 + dup dup 7 [39;49m[33;40m"goedel4_3_assert"[39;49m[34;49m assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup p ;  .. [39;49m[32;49m
0x7fa6de042fd4    48b860c4fedda67f0000    mov rax, 0x7fa6ddfec460    	< string : '[34;49mgoedel4_3_assert[39;49m' >[39;49m[32;49m
0x7fa6de042fde    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de042fe2    498906                  mov [r14], rax                                         [39;49m
[34;49m .. up @ 4 + dup dup 7 "goedel4_3_assert" [39;49m[33;40massert[39;49m[34;49m p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup p ;  .. [39;49m[32;49m
0x7fa6de042fe5    49b98da803dea67f0000    mov r9, 0x7fa6de03a88d                                 [39;49m[32;49m
0x7fa6de042fef    49ffd1                  call r9                    	< System.[34;49massert1[39;49m : 0x00007fa6de03a88d >[39;49m
[34;49m .. + dup dup 7 "goedel4_3_assert" assert [39;49m[33;40mp[39;49m[34;49m = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup p ;  .. [39;49m[32;49m
0x7fa6de042ff2    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de042ffc    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m[32;49m
0x7fa6de042fff    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de043002    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de043006    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. dup dup 7 "goedel4_3_assert" assert p [39;49m[33;40m=[39;49m[34;49m n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup p ;  .. [39;49m[32;49m
0x7fa6de04300a    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. p dup 7 "goedel4_3_assert" assert p = [39;49m[33;40mn[39;49m[34;49m @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup p ;  .. [39;49m[32;49m
0x7fa6de04300d    498b4720                mov rax, [r15+0x20]                                    [39;49m[32;49m
0x7fa6de043011    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de043015    498906                  mov [r14], rax                                         [39;49m
[34;49m .. p 7 "goedel4_3_assert" assert p = n @ [39;49m[33;40mp[39;49m[34;49m n @ 7 "goedel4_4_assert" assert } ix  n @ dup p ;  .. [39;49m[32;49m
0x7fa6de043018    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de043022    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m
[34;49m .. 7 "goedel4_3_assert" assert p = n @ p [39;49m[33;40mn[39;49m[34;49m @ 7 "goedel4_4_assert" assert } ix  n @ dup p ;  .. [39;49m[32;49m
0x7fa6de043025    498b4720                mov rax, [r15+0x20]                                    [39;49m[32;49m
0x7fa6de043029    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04302d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. oedel4_3_assert" assert p = n @ p n @ [39;49m[33;40m7[39;49m[34;49m "goedel4_4_assert" assert } ix  n @ dup p ;  .. [39;49m[32;49m
0x7fa6de043030    48b80700000000000000    mov rax, 0x7                                           [39;49m[32;49m
0x7fa6de04303a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04303e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. del4_3_assert" assert p = n @ p n @ 7 [39;49m[33;40m"goedel4_4_assert"[39;49m[34;49m assert } ix  n @ dup p ;  .. [39;49m[32;49m
0x7fa6de043041    48b899c4fedda67f0000    mov rax, 0x7fa6ddfec499    	< string : '[34;49mgoedel4_4_assert[39;49m' >[39;49m[32;49m
0x7fa6de04304b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04304f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. rt p = n @ p n @ 7 "goedel4_4_assert" [39;49m[33;40massert[39;49m[34;49m } ix  n @ dup p ;  .. [39;49m[32;49m
0x7fa6de043052    49b98da803dea67f0000    mov r9, 0x7fa6de03a88d                                 [39;49m[32;49m
0x7fa6de04305c    49ffd1                  call r9                    	< System.[34;49massert1[39;49m : 0x00007fa6de03a88d >[39;49m
[34;49m .. n @ 7 "goedel4_4_assert" assert } ix  [39;49m[33;40mn[39;49m[34;49m @ dup p ;  .. [39;49m[32;49m
0x7fa6de04305f    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de043063    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de043067    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 7 "goedel4_4_assert" assert } ix  n @ [39;49m[33;40mdup[39;49m[34;49m p ;  .. [39;49m[32;49m
0x7fa6de04306a    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. oedel4_4_assert" assert } ix  n @ dup [39;49m[33;40mp[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fa6de04306e    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de043078    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m[32;49m
0x7fa6de04307b    498b06                  mov rax, [r14]                                         [39;49m
[34;49m .. del4_4_assert" assert } ix  n @ dup p [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de04307e    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de043082    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de043086    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04308a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04308d    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'goedel4' :: codeSize = 718
Word : 0x00007fa6dd8874f0 :: Compiled at : 0x00007fa6de042dbf
 =============================
::> 'wdiss' was called at namespaces/test/localsTest.cft 231.21 <::

 goedel4 :: 
 140354658006256 2 goedel4_1_assert  : ok

 140354665263664 7 goedel4_2_assert  : ok

 140354665720668 goedel4_3_assert  : ok

 7 7 goedel4_4_assert  : ok

 9 goedel4_0_assert  : ok

 
goedel4 :: output should have read : 
'junk' 2 'junk' 7 'junk' 7 7 9
 goedel5 :: 
 0 2 goedel5_1_assert  : ok

 140354665721937 7 goedel5_2_assert  : ok

 goedel5_3_assert  : ok

 7 7 goedel5_4_assert  : ok

 9 goedel5_0_assert  : ok

 
goedel5 :: output should read : junk' 2 'junk' 7 7 9
 goedel6 :: 
 0 2 goedel6_1_assert  : ok

 140354665721937 7 goedel6_2_assert  : ok

 goedel6_3_assert  : ok

 7 7 goedel6_4_assert  : ok

 9 goedel6_0_assert  : ok

 
goedel6 :: goedel6 output should read : 
'junk' 2 'junk' 7 7 'junk' 9
 goedel7 :: 

 goedel7 :: 
 0 2 goedel7_1_assert  : ok

 140354665721937 7 goedel7_2_assert  : ok

 18 goedel7_0_assert  : ok

 
goedel7 :: goedel7 output should read : 
'junk' 2 'junk' 7 18
 =============================
Lexer.[34;49mofile[39;49m <:> cfrTil compiled word, prefix
SourceCode for Lexer.[34;49mofile[39;49m :> 
[34;49m: ofile ( name | file input result ) input 0 = "open/read/print :: " ps name @ ps nl file name @ fopen = nl { result file @ input 1 fread = input @ emit } { result @ 1 == } doWhile file @ fclose ; [39;49m
Source code file location of [34;49mofile[39;49m : "namespaces/test/file.cft" : 4.36 :: we are now at : namespaces/test/file.cft : 13.19
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde043781 -- code size = 378 bytes
TypeSignature : 
 -----------------------------
Word :: Lexer.[34;49mofile[39;49m : definition = 0x00007fa6de043781 : disassembly at namespaces/test/file.cft : 13.19 :
[34;49m ..                                     : [39;49m[33;40mofile[39;49m[34;49m ( name | file input result ) input 0 = "open/read/print :: " ps name @ ps nl file nam .. [39;49m[32;49m
0x7fa6de043781    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de043785    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de043789    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m ..  : ofile ( name | file input result ) [39;49m[33;40minput[39;49m[34;49m 0 = "open/read/print :: " ps name @ ps nl file name @ fopen = nl { result file @ inpu .. [39;49m[32;49m
0x7fa6de043790    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. le ( name | file input result ) input [39;49m[33;40m0[39;49m[34;49m = "open/read/print :: " ps name @ ps nl file name @ fopen = nl { result file @ input 1 fr .. [39;49m[32;49m
0x7fa6de043794    48b90000000000000000    mov rcx, 0x0                                           [39;49m
[34;49m ..  ( name | file input result ) input 0 [39;49m[33;40m=[39;49m[34;49m "open/read/print :: " ps name @ ps nl file name @ fopen = nl { result file @ input 1 frea .. [39;49m[32;49m
0x7fa6de04379e    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  name | file input result ) input 0 = [39;49m[33;40m"open/read/print :: "[39;49m[34;49m ps name @ ps nl file name @ fopen = nl { result file @ input 1 fread  .. [39;49m[32;49m
0x7fa6de0437a1    48b8b3d1fedda67f0000    mov rax, 0x7fa6ddfed1b3    	< string : '[34;49mopen/read/print :: [39;49m' >[39;49m[32;49m
0x7fa6de0437ab    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0437af    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ult ) input 0 = "open/read/print :: " [39;49m[33;40mps[39;49m[34;49m name @ ps nl file name @ fopen = nl { result file @ input 1 fread = input @ emit } { res .. [39;49m[32;49m
0x7fa6de0437b2    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de0437bc    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m ..  ) input 0 = "open/read/print :: " ps [39;49m[33;40mname[39;49m[34;49m @ ps nl file name @ fopen = nl { result file @ input 1 fread = input @ emit } { result .. [39;49m[32;49m
0x7fa6de0437bf    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0437c3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0437c7    498906                  mov [r14], rax                                         [39;49m
[34;49m .. t 0 = "open/read/print :: " ps name @ [39;49m[33;40mps[39;49m[34;49m nl file name @ fopen = nl { result file @ input 1 fread = input @ emit } { result @ 1 == .. [39;49m[32;49m
0x7fa6de0437ca    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de0437d4    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m ..  = "open/read/print :: " ps name @ ps [39;49m[33;40mnl[39;49m[34;49m file name @ fopen = nl { result file @ input 1 fread = input @ emit } { result @ 1 == }  .. [39;49m[32;49m
0x7fa6de0437d7    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de0437e1    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de0437eb    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m .. "open/read/print :: " ps name @ ps nl [39;49m[33;40mfile[39;49m[34;49m name @ fopen = nl { result file @ input 1 fread = input @ emit } { result @ 1 == } doW .. [39;49m[32;49m
0x7fa6de0437ee    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de0437f2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0437f6    498906                  mov [r14], rax                                         [39;49m
[34;49m .. /read/print :: " ps name @ ps nl file [39;49m[33;40mname[39;49m[34;49m @ fopen = nl { result file @ input 1 fread = input @ emit } { result @ 1 == } doWhile  .. [39;49m[32;49m
0x7fa6de0437f9    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0437fd    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de043801    498906                  mov [r14], rax                                         [39;49m
[34;49m .. rint :: " ps name @ ps nl file name @ [39;49m[33;40mfopen[39;49m[34;49m = nl { result file @ input 1 fread = input @ emit } { result @ 1 == } doWhile  file @ .. [39;49m[32;49m
0x7fa6de043804    49b8b550efbf1d560000    mov r8, 0x561dbfef50b5                                 [39;49m[32;49m
0x7fa6de04380e    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de043818    49ffd1                  call r9                    	< File.[34;49mfopen[39;49m : 0x0000561dbfef50b5 >[39;49m[32;49m
0x7fa6de04381b    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04381e    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de043822    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. : " ps name @ ps nl file name @ fopen [39;49m[33;40m=[39;49m[34;49m nl { result file @ input 1 fread = input @ emit } { result @ 1 == } doWhile  file @ fclos .. [39;49m[32;49m
0x7fa6de043826    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. " ps name @ ps nl file name @ fopen = [39;49m[33;40mnl[39;49m[34;49m { result file @ input 1 fread = input @ emit } { result @ 1 == } doWhile  file @ fclose  .. [39;49m[32;49m
0x7fa6de043829    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de043833    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04383d    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m .. name @ ps nl file name @ fopen = nl { [39;49m[33;40mresult[39;49m[34;49m file @ input 1 fread = input @ emit } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fa6de043840    498d4718                lea rax, [r15+0x18]                                    [39;49m[32;49m
0x7fa6de043844    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de043848    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ps nl file name @ fopen = nl { result [39;49m[33;40mfile[39;49m[34;49m @ input 1 fread = input @ emit } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fa6de04384b    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de04384f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de043853    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ile name @ fopen = nl { result file @ [39;49m[33;40minput[39;49m[34;49m 1 fread = input @ emit } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fa6de043856    498d4710                lea rax, [r15+0x10]                                    [39;49m[32;49m
0x7fa6de04385a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04385e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. me @ fopen = nl { result file @ input [39;49m[33;40m1[39;49m[34;49m fread = input @ emit } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fa6de043861    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de04386b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04386f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  @ fopen = nl { result file @ input 1 [39;49m[33;40mfread[39;49m[34;49m = input @ emit } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fa6de043872    49b82e51efbf1d560000    mov r8, 0x561dbfef512e                                 [39;49m[32;49m
0x7fa6de04387c    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de043886    49ffd1                  call r9                    	< File.[34;49mfread[39;49m : 0x0000561dbfef512e >[39;49m[32;49m
0x7fa6de043889    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04388c    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de043890    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. en = nl { result file @ input 1 fread [39;49m[33;40m=[39;49m[34;49m input @ emit } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fa6de043894    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  = nl { result file @ input 1 fread = [39;49m[33;40minput[39;49m[34;49m @ emit } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fa6de043897    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fa6de04389b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04389f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. result file @ input 1 fread = input @ [39;49m[33;40memit[39;49m[34;49m } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fa6de0438a2    49b85613efbf1d560000    mov r8, 0x561dbfef1356                                 [39;49m[32;49m
0x7fa6de0438ac    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de0438b6    49ffd1                  call r9                    	< Io.[34;49memit[39;49m : 0x0000561dbfef1356 >[39;49m
[34;49m .. le @ input 1 fread = input @ emit } { [39;49m[33;40mresult[39;49m[34;49m @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fa6de0438b9    498b4718                mov rax, [r15+0x18]                                    [39;49m
[34;49m .. 1 fread = input @ emit } { result @ 1 [39;49m[33;40m==[39;49m[34;49m } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fa6de0438bd    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fa6de0438c1    0f8505000000            jnz 0x7fa6de0438cc         	< Lexer.[34;49mofile[39;49m+331 >[39;49m[32;49m
0x7fa6de0438c7    e974ffffff              jmp 0x7fa6de043840         	< Lexer.[34;49mofile[39;49m+191 >[39;49m
[34;49m .. t @ emit } { result @ 1 == } doWhile  [39;49m[33;40mfile[39;49m[34;49m @ fclose ;  .. [39;49m[32;49m
0x7fa6de0438cc    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de0438d0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0438d4    498906                  mov [r14], rax                                         [39;49m
[34;49m .. t } { result @ 1 == } doWhile  file @ [39;49m[33;40mfclose[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fa6de0438d7    49b80a51efbf1d560000    mov r8, 0x561dbfef510a                                 [39;49m[32;49m
0x7fa6de0438e1    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de0438eb    49ffd1                  call r9                    	< File.[34;49mfclose[39;49m : 0x0000561dbfef510a >[39;49m
[34;49m .. esult @ 1 == } doWhile  file @ fclose [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de0438ee    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0438f2    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de0438f6    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de0438fa    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'ofile' :: codeSize = 377
Word : 0x00007fa6dd863fb0 :: Compiled at : 0x00007fa6de043781
 =============================
::> 'wdiss' was called at namespaces/test/file.cft 13.19 <::
 open/read/print ::  namespaces/test/file.cft

5
#if 1 // already added to .init.cft
C Compiler Int Lexer
: ofile ( name | file input result )
    input 0 =
    "open/read/print :: " ps name @ ps nl
    file name @ fopen =
    nl { result file @ input 1 fread = input @ emit } { result @ 1 == } doWhile 
    file @ fclose
; prefix
//pause
#endif 
' ofile find wdiss //pause
ofile ( "namespaces/test/file.cft" )
// pause
: hi 1 2 + p ;
: hey hi hi ;
: heey hey hey ;
heey
2 + 7 assertStkChk // stack checking


 3 3 3 3[34;49m 
dynamic object test
[39;49m object new slot test :   : ok

 object clone test :   : ok

 object clone test2 :   : ok

 object clone test3 :   : ok

 object clone test4 :   : ok

 object clone test5 :   : ok

 object compile test6 :   : ok

 object compile test7 :   : ok

 object compile test8 :   : ok


 =============================
Control.[34;49mabrkcon[39;49m <:> cfrTil compiled word
SourceCode for Control.[34;49mabrkcon[39;49m :> 
[34;49m: abrkcon { { x @ 0 == } { break } { x @ p x dup @ 1 - = continue } ifElse 2 p } loop ; [39;49m
Source code file location of [34;49mabrkcon[39;49m : "namespaces/test/control.cft" : 15.87 :: we are now at : namespaces/test/control.cft : 16.20
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde043aec -- code size = 172 bytes
TypeSignature : 
 -----------------------------
Word :: Control.[34;49mabrkcon[39;49m : definition = 0x00007fa6de043aec : disassembly at namespaces/test/control.cft : 16.20 :
[34;49m ..                         : abrkcon { { [39;49m[33;40mx[39;49m[34;49m @ 0 == } { break } { x @ p x dup @ 1 - = continue } ifElse 2 p } loop ;  .. [39;49m[32;49m
0x7fa6de043aec    48b8c09481dda67f0000    mov rax, 0x7fa6dd8194c0    	< string : '[34;49m\n[39;49m' >[39;49m[32;49m
0x7fa6de043af6    488b00                  mov rax, [rax]                                         [39;49m
[34;49m ..                   : abrkcon { { x @ 0 [39;49m[33;40m==[39;49m[34;49m } { break } { x @ p x dup @ 1 - = continue } ifElse 2 p } loop ;  .. [39;49m[32;49m
0x7fa6de043af9    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de043afc    0f850a000000            jnz 0x7fa6de043b0c         	< Control.[34;49mabrkcon[39;49m+32 >[39;49m
[34;49m ..            : abrkcon { { x @ 0 == } { [39;49m[33;40mbreak[39;49m[34;49m } { x @ p x dup @ 1 - = continue } ifElse 2 p } loop ;  .. [39;49m[32;49m
0x7fa6de043b02    e990000000              jmp 0x7fa6de043b97         	< Control.[34;49mabrkcon[39;49m+171 >[39;49m
[34;49m ..      : abrkcon { { x @ 0 == } { break [39;49m[33;40m}[39;49m[34;49m { x @ p x dup @ 1 - = continue } ifElse 2 p } loop ;  .. [39;49m[32;49m
0x7fa6de043b07    e968000000              jmp 0x7fa6de043b74         	< Control.[34;49mabrkcon[39;49m+136 >[39;49m
[34;49m ..  : abrkcon { { x @ 0 == } { break } { [39;49m[33;40mx[39;49m[34;49m @ p x dup @ 1 - = continue } ifElse 2 p } loop ;  .. [39;49m[32;49m
0x7fa6de043b0c    48b8c09481dda67f0000    mov rax, 0x7fa6dd8194c0    	< string : '[34;49m\n[39;49m' >[39;49m[32;49m
0x7fa6de043b16    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de043b19    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de043b1d    498906                  mov [r14], rax                                         [39;49m
[34;49m : abrkcon { { x @ 0 == } { break } { x @ [39;49m[33;40mp[39;49m[34;49m x dup @ 1 - = continue } ifElse 2 p } loop ;  .. [39;49m[32;49m
0x7fa6de043b20    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de043b2a    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. kcon { { x @ 0 == } { break } { x @ p [39;49m[33;40mx[39;49m[34;49m dup @ 1 - = continue } ifElse 2 p } loop ; [39;49m[32;49m
0x7fa6de043b2d    48b8c09481dda67f0000    mov rax, 0x7fa6dd8194c0    	< string : '[34;49m\n[39;49m' >[39;49m[32;49m
0x7fa6de043b37    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de043b3b    498906                  mov [r14], rax                                         [39;49m
[34;49m .. on { { x @ 0 == } { break } { x @ p x [39;49m[33;40mdup[39;49m[34;49m @ 1 - = continue } ifElse 2 p } loop ; [39;49m[32;49m
0x7fa6de043b3e    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..  { x @ 0 == } { break } { x @ p x dup [39;49m[33;40m@[39;49m[34;49m 1 - = continue } ifElse 2 p } loop ; [39;49m[32;49m
0x7fa6de043b42    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de043b45    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de043b48    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  x @ 0 == } { break } { x @ p x dup @ [39;49m[33;40m1[39;49m[34;49m - = continue } ifElse 2 p } loop ; [39;49m[32;49m
0x7fa6de043b4b    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de043b55    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de043b58    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de043b5b    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  @ 0 == } { break } { x @ p x dup @ 1 [39;49m[33;40m-[39;49m[34;49m = continue } ifElse 2 p } loop ; [39;49m[32;49m
0x7fa6de043b5f    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fa6de043b62    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de043b65    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de043b68    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  0 == } { break } { x @ p x dup @ 1 - [39;49m[33;40m=[39;49m[34;49m continue } ifElse 2 p } loop ; [39;49m[32;49m
0x7fa6de043b6c    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  == } { break } { x @ p x dup @ 1 - = [39;49m[33;40mcontinue[39;49m[34;49m } ifElse 2 p } loop ; [39;49m[32;49m
0x7fa6de043b6f    e978ffffff              jmp 0x7fa6de043aec         	< Control.[34;49mabrkcon[39;49m : 0x00007fa6de043aec >[39;49m
[34;49m .. x @ p x dup @ 1 - = continue } ifElse [39;49m[33;40m2[39;49m[34;49m p } loop ; [39;49m[32;49m
0x7fa6de043b74    48b80200000000000000    mov rax, 0x2                                           [39;49m[32;49m
0x7fa6de043b7e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de043b82    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ p x dup @ 1 - = continue } ifElse 2 [39;49m[33;40mp[39;49m[34;49m } loop ; [39;49m[32;49m
0x7fa6de043b85    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de043b8f    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. p x dup @ 1 - = continue } ifElse 2 p [39;49m[33;40m}[39;49m[34;49m loop ; [39;49m[32;49m
0x7fa6de043b92    e955ffffff              jmp 0x7fa6de043aec         	< Control.[34;49mabrkcon[39;49m : 0x00007fa6de043aec >[39;49m
[34;49m ..  @ 1 - = continue } ifElse 2 p } loop [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de043b97    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'abrkcon' :: codeSize = 171
Word : 0x00007fa6dd819688 :: Compiled at : 0x00007fa6de043aec
 =============================
::> 'wdiss' was called at namespaces/test/control.cft 16.20 <::
 10 9 8 7 6 5 4 3 2 1
 10 9 8 7 6 5 4 3 2 1
 =============================
Control.[34;49mct00[39;49m <:> cfrTil compiled word
SourceCode for Control.[34;49mct00[39;49m :> 
[34;49m: ct00 ( n | j ) { j 1 = } { j @ n @ <= } { j ++ } { n @ p j @ p } for ; [39;49m
Source code file location of [34;49mct00[39;49m : "namespaces/test/control.cft" : 33.17 :: we are now at : namespaces/test/control.cft : 40.17
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde043d1e -- code size = 116 bytes
TypeSignature : 
 -----------------------------
Word :: Control.[34;49mct00[39;49m : definition = 0x00007fa6de043d1e : disassembly at namespaces/test/control.cft : 40.17 :
[34;49m ..                                     : [39;49m[33;40mct00[39;49m[34;49m ( n | j )  { j 1 = } { j @ n @ <= } { j ++ } { n @ p j @ p  } for ;  .. [39;49m[32;49m
0x7fa6de043d1e    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de043d22    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de043d26    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                   : ct00 ( n | j )  { [39;49m[33;40mj[39;49m[34;49m 1 = } { j @ n @ <= } { j ++ } { n @ p j @ p  } for ;  .. [39;49m[32;49m
0x7fa6de043d2d    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..                 : ct00 ( n | j )  { j [39;49m[33;40m1[39;49m[34;49m = } { j @ n @ <= } { j ++ } { n @ p j @ p  } for ;  .. [39;49m[32;49m
0x7fa6de043d31    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m ..               : ct00 ( n | j )  { j 1 [39;49m[33;40m=[39;49m[34;49m } { j @ n @ <= } { j ++ } { n @ p j @ p  } for ;  .. [39;49m[32;49m
0x7fa6de043d3b    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..         : ct00 ( n | j )  { j 1 = } { [39;49m[33;40mj[39;49m[34;49m @ n @ <= } { j ++ } { n @ p j @ p  } for ;  .. [39;49m[32;49m
0x7fa6de043d3e    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..     : ct00 ( n | j )  { j 1 = } { j @ [39;49m[33;40mn[39;49m[34;49m @ <= } { j ++ } { n @ p j @ p  } for ;  .. [39;49m[32;49m
0x7fa6de043d42    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. : ct00 ( n | j )  { j 1 = } { j @ n @ [39;49m[33;40m<=[39;49m[34;49m } { j ++ } { n @ p j @ p  } for ;  .. [39;49m[32;49m
0x7fa6de043d46    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fa6de043d49    0f8f36000000            jg 0x7fa6de043d85          	< Control.[34;49mct00[39;49m+103 >[39;49m
[34;49m ..   { j 1 = } { j @ n @ <= } { j ++ } { [39;49m[33;40mn[39;49m[34;49m @ p j @ p  } for ; [39;49m[32;49m
0x7fa6de043d4f    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de043d53    4983c608                add r14, 0x8                                           [39;49m
[34;49m : ct00 ( n | j )  { j 1 = } { j @ n @ <= [39;49m[33;40m}[39;49m[34;49m { j ++ } { n @ p j @ p  } for ;  .. [39;49m[32;49m
0x7fa6de043d57    498906                  mov [r14], rax                                         [39;49m
[34;49m .. j 1 = } { j @ n @ <= } { j ++ } { n @ [39;49m[33;40mp[39;49m[34;49m j @ p  } for ; [39;49m[32;49m
0x7fa6de043d5a    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de043d64    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. 1 = } { j @ n @ <= } { j ++ } { n @ p [39;49m[33;40mj[39;49m[34;49m @ p  } for ; [39;49m[32;49m
0x7fa6de043d67    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de043d6b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de043d6f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. } { j @ n @ <= } { j ++ } { n @ p j @ [39;49m[33;40mp[39;49m[34;49m  } for ; [39;49m[32;49m
0x7fa6de043d72    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de043d7c    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. n | j )  { j 1 = } { j @ n @ <= } { j [39;49m[33;40m++[39;49m[34;49m } { n @ p j @ p  } for ; [39;49m[32;49m
0x7fa6de043d7f    49ff4708                inc qword [r15+0x8]                                    [39;49m
[34;49m ..  j )  { j 1 = } { j @ n @ <= } { j ++ [39;49m[33;40m}[39;49m[34;49m { n @ p j @ p  } for ; [39;49m[32;49m
0x7fa6de043d83    ebb9                    jmp 0x7fa6de043d3e         	< Control.[34;49mct00[39;49m+32 >[39;49m
[34;49m ..  @ <= } { j ++ } { n @ p j @ p  } for [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de043d85    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de043d89    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de043d8d    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de043d91    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'ct00' :: codeSize = 115
Word : 0x00007fa6dd821808 :: Compiled at : 0x00007fa6de043d1e
 =============================
::> 'wdiss' was called at namespaces/test/control.cft 40.17 <::
 17 1 17 2 17 3 17 4 17 5 17 6 17 7 17 8 17 9 17 10 17 11 17 12 17 13 17 14 17 15 17 16 17 17
 =============================
Control.[34;49mct0[39;49m <:> cfrTil compiled word
SourceCode for Control.[34;49mct0[39;49m :> 
[34;49m: ct0 ( n | j ) nl "ct0 : " ps nl { label: test1 "ct0 before goto/label works" ps nl goto: leave } _ { j 1 = } { j @ n @ <= } { j ++ } { n @ p j @ p { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "continuing ct0" ps } ifElse } for label: leave "ct0" n @ j @ leaving ; [39;49m
Source code file location of [34;49mct0[39;49m : "namespaces/test/control.cft" : 42.16 :: we are now at : namespaces/test/control.cft : 58.16
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde043d97 -- code size = 421 bytes
TypeSignature : 
 -----------------------------
Word :: Control.[34;49mct0[39;49m : definition = 0x00007fa6de043d97 : disassembly at namespaces/test/control.cft : 58.16 :
[34;49m ..                                     : [39;49m[33;40mct0[39;49m[34;49m ( n | j )  nl "ct0 : " ps nl {  label: test1  "ct0 before goto/label works" ps nl  goto .. [39;49m[32;49m
0x7fa6de043d97    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de043d9b    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de043d9f    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                      : ct0 ( n | j )  [39;49m[33;40mnl[39;49m[34;49m "ct0 : " ps nl {  label: test1  "ct0 before goto/label works" ps nl  goto: leave  } _ {  .. [39;49m[32;49m
0x7fa6de043da6    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de043db0    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de043dba    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m ..                   : ct0 ( n | j )  nl [39;49m[33;40m"ct0 : "[39;49m[34;49m ps nl {  label: test1  "ct0 before goto/label works" ps nl  goto: leave  } _ { j 1 .. [39;49m[32;49m
0x7fa6de043dbd    48b8a9dafedda67f0000    mov rax, 0x7fa6ddfedaa9    	< string : '[34;49mct0 : [39;49m' >[39;49m[32;49m
0x7fa6de043dc7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de043dcb    498906                  mov [r14], rax                                         [39;49m
[34;49m ..          : ct0 ( n | j )  nl "ct0 : " [39;49m[33;40mps[39;49m[34;49m nl {  label: test1  "ct0 before goto/label works" ps nl  goto: leave  } _ { j 1 = } { j  .. [39;49m[32;49m
0x7fa6de043dce    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de043dd8    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m ..       : ct0 ( n | j )  nl "ct0 : " ps [39;49m[33;40mnl[39;49m[34;49m {  label: test1  "ct0 before goto/label works" ps nl  goto: leave  } _ { j 1 = } { j @ n .. [39;49m[32;49m
0x7fa6de043ddb    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de043de5    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de043def    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m ..    : ct0 ( n | j )  nl "ct0 : " ps nl [39;49m[33;40m{[39;49m[34;49m  label: test1  "ct0 before goto/label works" ps nl  goto: leave  } _ { j 1 = } { j @ n @  .. [39;49m[32;49m
0x7fa6de043df2    e93b000000              jmp 0x7fa6de043e32         	< Control.[34;49mct0[39;49m+155 >[39;49m
[34;49m .. )  nl "ct0 : " ps nl {  label: test1  [39;49m[33;40m"ct0 before goto/label works"[39;49m[34;49m ps nl  goto: leave  } _ { j 1 = } { j @ n @ <= } { j ++ } { n .. [39;49m[32;49m
0x7fa6de043df7    48b8e8dafedda67f0000    mov rax, 0x7fa6ddfedae8    	< string : '[34;49mct0 before goto/label works[39;49m' >[39;49m[32;49m
0x7fa6de043e01    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de043e05    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  test1  "ct0 before goto/label works" [39;49m[33;40mps[39;49m[34;49m nl  goto: leave  } _ { j 1 = } { j @ n @ <= } { j ++ } { n @ p j @ p  { n @ j @ == } { n .. [39;49m[32;49m
0x7fa6de043e08    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de043e12    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m .. st1  "ct0 before goto/label works" ps [39;49m[33;40mnl[39;49m[34;49m  goto: leave  } _ { j 1 = } { j @ n @ <= } { j ++ } { n @ p j @ p  { n @ j @ == } { nl " .. [39;49m[32;49m
0x7fa6de043e15    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de043e1f    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de043e29    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m ..  "ct0 before goto/label works" ps nl  [39;49m[33;40mgoto:[39;49m[34;49m leave  } _ { j 1 = } { j @ n @ <= } { j ++ } { n @ p j @ p  { n @ j @ == } { nl "test .. [39;49m[32;49m
0x7fa6de043e2c    e9ca000000              jmp 0x7fa6de043efb         	< Control.[34;49mct0[39;49m+356 >[39;49m
[34;49m .. goto/label works" ps nl  goto: leave  [39;49m[33;40m}[39;49m[34;49m _ { j 1 = } { j @ n @ <= } { j ++ } { n @ p j @ p  { n @ j @ == } { nl "testing ct0 : got .. [39;49m[32;49m
0x7fa6de043e31    c3                      ret                                                    [39;49m
[34;49m .. abel works" ps nl  goto: leave  } _ { [39;49m[33;40mj[39;49m[34;49m 1 = } { j @ n @ <= } { j ++ } { n @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/labe .. [39;49m[32;49m
0x7fa6de043e32    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m .. el works" ps nl  goto: leave  } _ { j [39;49m[33;40m1[39;49m[34;49m = } { j @ n @ <= } { j ++ } { n @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/label  .. [39;49m[32;49m
0x7fa6de043e36    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m ..  works" ps nl  goto: leave  } _ { j 1 [39;49m[33;40m=[39;49m[34;49m } { j @ n @ <= } { j ++ } { n @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \' .. [39;49m[32;49m
0x7fa6de043e40    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. " ps nl  goto: leave  } _ { j 1 = } { [39;49m[33;40mj[39;49m[34;49m @ n @ <= } { j ++ } { n @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' - .. [39;49m[32;49m
0x7fa6de043e43    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  nl  goto: leave  } _ { j 1 = } { j @ [39;49m[33;40mn[39;49m[34;49m @ <= } { j ++ } { n @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" p .. [39;49m[32;49m
0x7fa6de043e47    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..  goto: leave  } _ { j 1 = } { j @ n @ [39;49m[33;40m<=[39;49m[34;49m } { j ++ } { n @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps go .. [39;49m[32;49m
0x7fa6de043e4b    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fa6de043e4e    0f8fa7000000            jg 0x7fa6de043efb          	< Control.[34;49mct0[39;49m+356 >[39;49m
[34;49m .. _ { j 1 = } { j @ n @ <= } { j ++ } { [39;49m[33;40mn[39;49m[34;49m @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "c .. [39;49m[32;49m
0x7fa6de043e54    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de043e58    4983c608                add r14, 0x8                                           [39;49m
[34;49m .. to: leave  } _ { j 1 = } { j @ n @ <= [39;49m[33;40m}[39;49m[34;49m { j ++ } { n @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: .. [39;49m[32;49m
0x7fa6de043e5c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. j 1 = } { j @ n @ <= } { j ++ } { n @ [39;49m[33;40mp[39;49m[34;49m j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "conti .. [39;49m[32;49m
0x7fa6de043e5f    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de043e69    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. 1 = } { j @ n @ <= } { j ++ } { n @ p [39;49m[33;40mj[39;49m[34;49m @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "continu .. [39;49m[32;49m
0x7fa6de043e6c    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de043e70    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de043e74    498906                  mov [r14], rax                                         [39;49m
[34;49m .. } { j @ n @ <= } { j ++ } { n @ p j @ [39;49m[33;40mp[39;49m[34;49m  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "continuing  .. [39;49m[32;49m
0x7fa6de043e77    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de043e81    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m ..  @ n @ <= } { j ++ } { n @ p j @ p  { [39;49m[33;40mn[39;49m[34;49m @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "continuing ct0"  .. [39;49m[32;49m
0x7fa6de043e84    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  @ <= } { j ++ } { n @ p j @ p  { n @ [39;49m[33;40mj[39;49m[34;49m @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "continuing ct0" ps } .. [39;49m[32;49m
0x7fa6de043e88    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. = } { j ++ } { n @ p j @ p  { n @ j @ [39;49m[33;40m==[39;49m[34;49m } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "continuing ct0" ps } ifE .. [39;49m[32;49m
0x7fa6de043e8c    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fa6de043e8f    0f853f000000            jnz 0x7fa6de043ed4         	< Control.[34;49mct0[39;49m+317 >[39;49m
[34;49m ..  ++ } { n @ p j @ p  { n @ j @ == } { [39;49m[33;40mnl[39;49m[34;49m "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "continuing ct0" ps } ifElse } f .. [39;49m[32;49m
0x7fa6de043e95    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de043e9f    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de043ea9    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m ..  } { n @ p j @ p  { n @ j @ == } { nl [39;49m[33;40m"testing ct0 : goto/label 'hi' ->"[39;49m[34;49m>" ps goto: test1 } { "continuing ct0" ps } ifElse } for  .. [39;49m[32;49m
0x7fa6de043eac    48b847dbfedda67f0000    mov rax, 0x7fa6ddfedb47    	< string : '[34;49mtesting ct0 : goto/label 'hi' ->[39;49m' >[39;49m[32;49m
0x7fa6de043eb6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de043eba    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  "testing ct0 : goto/label \'hi\' ->" [39;49m[33;40mps[39;49m[34;49m goto: test1 } { "continuing ct0" ps } ifElse } for label: leave  "ct0" n @ j @ leaving ; .. [39;49m[32;49m
0x7fa6de043ebd    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de043ec7    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m .. esting ct0 : goto/label \'hi\' ->" ps [39;49m[33;40mgoto:[39;49m[34;49m test1 } { "continuing ct0" ps } ifElse } for label: leave  "ct0" n @ j @ leaving ;  .. [39;49m[32;49m
0x7fa6de043eca    e928ffffff              jmp 0x7fa6de043df7         	< Control.[34;49mct0[39;49m+96 >[39;49m
[34;49m ..  goto/label \'hi\' ->" ps goto: test1 [39;49m[33;40m}[39;49m[34;49m { "continuing ct0" ps } ifElse } for label: leave  "ct0" n @ j @ leaving ;  .. [39;49m[32;49m
0x7fa6de043ecf    e91e000000              jmp 0x7fa6de043ef2         	< Control.[34;49mct0[39;49m+347 >[39;49m
[34;49m .. o/label \'hi\' ->" ps goto: test1 } { [39;49m[33;40m"continuing ct0"[39;49m[34;49m ps } ifElse } for label: leave  "ct0" n @ j @ leaving ;  .. [39;49m[32;49m
0x7fa6de043ed4    48b89cdbfedda67f0000    mov rax, 0x7fa6ddfedb9c    	< string : '[34;49mcontinuing ct0[39;49m' >[39;49m[32;49m
0x7fa6de043ede    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de043ee2    498906                  mov [r14], rax                                         [39;49m
[34;49m .. " ps goto: test1 } { "continuing ct0" [39;49m[33;40mps[39;49m[34;49m } ifElse } for label: leave  "ct0" n @ j @ leaving ;  .. [39;49m[32;49m
0x7fa6de043ee5    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de043eef    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m .. ave  } _ { j 1 = } { j @ n @ <= } { j [39;49m[33;40m++[39;49m[34;49m } { n @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 .. [39;49m[32;49m
0x7fa6de043ef2    49ff4708                inc qword [r15+0x8]                                    [39;49m
[34;49m ..   } _ { j 1 = } { j @ n @ <= } { j ++ [39;49m[33;40m}[39;49m[34;49m { n @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 }  .. [39;49m[32;49m
0x7fa6de043ef6    e948ffffff              jmp 0x7fa6de043e43         	< Control.[34;49mct0[39;49m+172 >[39;49m
[34;49m ..  ct0" ps } ifElse } for label: leave  [39;49m[33;40m"ct0"[39;49m[34;49m n @ j @ leaving ;  .. [39;49m[32;49m
0x7fa6de043efb    48b8c8dbfedda67f0000    mov rax, 0x7fa6ddfedbc8    	< string : '[34;49mct0[39;49m' >[39;49m[32;49m
0x7fa6de043f05    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de043f09    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ps } ifElse } for label: leave  "ct0" [39;49m[33;40mn[39;49m[34;49m @ j @ leaving ;  .. [39;49m[32;49m
0x7fa6de043f0c    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de043f10    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de043f14    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ifElse } for label: leave  "ct0" n @ [39;49m[33;40mj[39;49m[34;49m @ leaving ;  .. [39;49m[32;49m
0x7fa6de043f17    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de043f1b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de043f1f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. lse } for label: leave  "ct0" n @ j @ [39;49m[33;40mleaving[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fa6de043f22    49b92d3c04dea67f0000    mov r9, 0x7fa6de043c2d                                 [39;49m[32;49m
0x7fa6de043f2c    49ffd1                  call r9                    	< Control.[34;49mleaving[39;49m : 0x00007fa6de043c2d >[39;49m
[34;49m .. r label: leave  "ct0" n @ j @ leaving [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de043f2f    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de043f33    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de043f37    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de043f3b    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'ct0' :: codeSize = 420
Word : 0x00007fa6dd825120 :: Compiled at : 0x00007fa6de043d97
 =============================
::> 'wdiss' was called at namespaces/test/control.cft 58.16 <::

 ct0 : 
 17 1 continuing ct0 17 2 continuing ct0 17 3 continuing ct0 17 4 continuing ct0 17 5 continuing ct0 17 6 continuing ct0 17 7 continuing ct0 17 8 continuing ct0 17 9 continuing ct0 17 10 continuing ct0 17 11 continuing ct0 17 12 continuing ct0 17 13 continuing ct0 17 14 continuing ct0 17 15 continuing ct0 17 16 continuing ct0 17 17
 testing ct0 : goto/label 'hi' -> ct0 before goto/label works

DataStack at : [34;49mnamespaces/test/control.cft : 59.7[39;49m :
DataStack depth =  10 : Dsp (R14) = Top = 0x00007fa6ddf73258, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73258 > = 0x00007fa6ddf73230	
  DataStack   [  -1 ] < 0x00007fa6ddf73250 > = 0x0000000000000011	
  DataStack   [  -2 ] < 0x00007fa6ddf73248 > = 0x0000000000000011	
  DataStack   [  -3 ] < 0x00007fa6ddf73240 > = 0x00007fa6ddfedbc8	< string : '[34;49mct0[39;49m' >
  DataStack   [  -4 ] < 0x00007fa6ddf73238 > = 0x0000000000000011	
  DataStack   [  -5 ] < 0x00007fa6ddf73230 > = 0x0000000000000000	
  DataStack   [  -6 ] < 0x00007fa6ddf73228 > = 0x0000000000000011	
  DataStack   [  -7 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -8 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -9 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	
 leaving ct0 n = 17 j =  17
DataStack at : [34;49mnamespaces/test/control.cft : 59.7[39;49m :
DataStack depth =  10 : Dsp (R14) = Top = 0x00007fa6ddf73258, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73258 > = 0x00007fa6ddf73230	
  DataStack   [  -1 ] < 0x00007fa6ddf73250 > = 0x0000000000000011	
  DataStack   [  -2 ] < 0x00007fa6ddf73248 > = 0x0000000000000011	
  DataStack   [  -3 ] < 0x00007fa6ddf73240 > = 0x00007fa6ddfedbc8	< string : '[34;49mct0[39;49m' >
  DataStack   [  -4 ] < 0x00007fa6ddf73238 > = 0x0000000000000011	
  DataStack   [  -5 ] < 0x00007fa6ddf73230 > = 0x0000000000000000	
  DataStack   [  -6 ] < 0x00007fa6ddf73228 > = 0x0000000000000011	
  DataStack   [  -7 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -8 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -9 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	

 ct1 : 
 17 1 continuing ct1 17 2 continuing ct1 17 3 continuing ct1 17 4 continuing ct1 17 5 continuing ct1 17 6 continuing ct1 17 7 continuing ct1 17 8 continuing ct1 17 9 continuing ct1 17 10 continuing ct1 17 11 continuing ct1 17 12 continuing ct1 17 13 continuing ct1 17 14 continuing ct1 17 15 continuing ct1 17 16 continuing ct1 17 17
 testing ct1 : goto/label1 -> ct1 after nested goto/label1 works

 ct2 : 

 testing ct2 : goto/label2 -> ct2 after goto/label2 works

 =============================
Control.[34;49mhic2[39;49m <:> cfrTil compiled word
SourceCode for Control.[34;49mhic2[39;49m :> 
[34;49m: hic2 ( n ) nl "hic2 : start " ps nl s n @ p n @ s ct0 s n @ s ct1 n @ s ct2 s n @ p nl "hic2 : done " ps nl ; [39;49m
Source code file location of [34;49mhic2[39;49m : "namespaces/test/control.cft" : 79.13 :: we are now at : namespaces/test/control.cft : 84.17
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde044199 -- code size = 438 bytes
TypeSignature : 
 -----------------------------
Word :: Control.[34;49mhic2[39;49m : definition = 0x00007fa6de044199 : disassembly at namespaces/test/control.cft : 84.17 :
[34;49m ..                                     : [39;49m[33;40mhic2[39;49m[34;49m ( n )  nl "hic2 : start " ps nl s n @ p n @ s ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "h .. [39;49m[32;49m
0x7fa6de044199    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04419d    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de0441a1    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                         : hic2 ( n )  [39;49m[33;40mnl[39;49m[34;49m "hic2 : start " ps nl s n @ p n @ s ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " .. [39;49m[32;49m
0x7fa6de0441a8    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de0441b2    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de0441bc    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m ..                      : hic2 ( n )  nl [39;49m[33;40m"hic2 : start "[39;49m[34;49m ps nl s n @ p n @ s ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps .. [39;49m[32;49m
0x7fa6de0441bf    48b8d0e0fedda67f0000    mov rax, 0x7fa6ddfee0d0    	< string : '[34;49mhic2 : start [39;49m' >[39;49m[32;49m
0x7fa6de0441c9    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0441cd    498906                  mov [r14], rax                                         [39;49m
[34;49m ..      : hic2 ( n )  nl "hic2 : start " [39;49m[33;40mps[39;49m[34;49m nl s n @ p n @ s ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ;  .. [39;49m[32;49m
0x7fa6de0441d0    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de0441da    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m ..   : hic2 ( n )  nl "hic2 : start " ps [39;49m[33;40mnl[39;49m[34;49m s n @ p n @ s ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ;  .. [39;49m[32;49m
0x7fa6de0441dd    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de0441e7    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de0441f1    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m   : hic2 ( n )  nl "hic2 : start " ps nl [39;49m[33;40ms[39;49m[34;49m n @ p n @ s ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ;  .. [39;49m[32;49m
0x7fa6de0441f4    49b80cefecbf1d560000    mov r8, 0x561dbfecef0c                                 [39;49m[32;49m
0x7fa6de0441fe    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de044208    49ffd1                  call r9                    	< User.[34;49ms[39;49m : 0x0000561dbfecef0c >[39;49m
[34;49m : hic2 ( n )  nl "hic2 : start " ps nl s [39;49m[33;40mn[39;49m[34;49m @ p n @ s ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ;  .. [39;49m[32;49m
0x7fa6de04420b    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04420f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044213    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ( n )  nl "hic2 : start " ps nl s n @ [39;49m[33;40mp[39;49m[34;49m n @ s ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fa6de044216    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de044220    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. n )  nl "hic2 : start " ps nl s n @ p [39;49m[33;40mn[39;49m[34;49m @ s ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fa6de044223    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de044227    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04422b    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  nl "hic2 : start " ps nl s n @ p n @ [39;49m[33;40ms[39;49m[34;49m ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fa6de04422e    49b80cefecbf1d560000    mov r8, 0x561dbfecef0c                                 [39;49m[32;49m
0x7fa6de044238    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de044242    49ffd1                  call r9                    	< User.[34;49ms[39;49m : 0x0000561dbfecef0c >[39;49m
[34;49m .. l "hic2 : start " ps nl s n @ p n @ s [39;49m[33;40mct0[39;49m[34;49m s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fa6de044245    49b9973d04dea67f0000    mov r9, 0x7fa6de043d97                                 [39;49m[32;49m
0x7fa6de04424f    49ffd1                  call r9                    	< Control.[34;49mct0[39;49m : 0x00007fa6de043d97 >[39;49m
[34;49m .. ic2 : start " ps nl s n @ p n @ s ct0 [39;49m[33;40ms[39;49m[34;49m n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fa6de044252    49b80cefecbf1d560000    mov r8, 0x561dbfecef0c                                 [39;49m[32;49m
0x7fa6de04425c    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de044266    49ffd1                  call r9                    	< User.[34;49ms[39;49m : 0x0000561dbfecef0c >[39;49m
[34;49m .. 2 : start " ps nl s n @ p n @ s ct0 s [39;49m[33;40mn[39;49m[34;49m @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fa6de044269    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04426d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044271    498906                  mov [r14], rax                                         [39;49m
[34;49m .. start " ps nl s n @ p n @ s ct0 s n @ [39;49m[33;40ms[39;49m[34;49m ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fa6de044274    49b80cefecbf1d560000    mov r8, 0x561dbfecef0c                                 [39;49m[32;49m
0x7fa6de04427e    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de044288    49ffd1                  call r9                    	< User.[34;49ms[39;49m : 0x0000561dbfecef0c >[39;49m
[34;49m .. art " ps nl s n @ p n @ s ct0 s n @ s [39;49m[33;40mct1[39;49m[34;49m n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fa6de04428b    49b9413f04dea67f0000    mov r9, 0x7fa6de043f41                                 [39;49m[32;49m
0x7fa6de044295    49ffd1                  call r9                    	< Control.[34;49mct1[39;49m : 0x00007fa6de043f41 >[39;49m
[34;49m .. " ps nl s n @ p n @ s ct0 s n @ s ct1 [39;49m[33;40mn[39;49m[34;49m @ s ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fa6de044298    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04429c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0442a0    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  nl s n @ p n @ s ct0 s n @ s ct1 n @ [39;49m[33;40ms[39;49m[34;49m ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fa6de0442a3    49b80cefecbf1d560000    mov r8, 0x561dbfecef0c                                 [39;49m[32;49m
0x7fa6de0442ad    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de0442b7    49ffd1                  call r9                    	< User.[34;49ms[39;49m : 0x0000561dbfecef0c >[39;49m
[34;49m .. l s n @ p n @ s ct0 s n @ s ct1 n @ s [39;49m[33;40mct2[39;49m[34;49m s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fa6de0442ba    49b9d24004dea67f0000    mov r9, 0x7fa6de0440d2                                 [39;49m[32;49m
0x7fa6de0442c4    49ffd1                  call r9                    	< Control.[34;49mct2[39;49m : 0x00007fa6de0440d2 >[39;49m
[34;49m .. n @ p n @ s ct0 s n @ s ct1 n @ s ct2 [39;49m[33;40ms[39;49m[34;49m n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fa6de0442c7    49b80cefecbf1d560000    mov r8, 0x561dbfecef0c                                 [39;49m[32;49m
0x7fa6de0442d1    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de0442db    49ffd1                  call r9                    	< User.[34;49ms[39;49m : 0x0000561dbfecef0c >[39;49m
[34;49m .. @ p n @ s ct0 s n @ s ct1 n @ s ct2 s [39;49m[33;40mn[39;49m[34;49m @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fa6de0442de    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0442e2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0442e6    498906                  mov [r14], rax                                         [39;49m
[34;49m .. n @ s ct0 s n @ s ct1 n @ s ct2 s n @ [39;49m[33;40mp[39;49m[34;49m  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fa6de0442e9    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de0442f3    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m ..  s ct0 s n @ s ct1 n @ s ct2 s n @ p  [39;49m[33;40mnl[39;49m[34;49m "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fa6de0442f6    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de044300    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04430a    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m .. ct0 s n @ s ct1 n @ s ct2 s n @ p  nl [39;49m[33;40m"hic2 : done "[39;49m[34;49m ps nl  ; [39;49m[32;49m
0x7fa6de04430d    48b8fde0fedda67f0000    mov rax, 0x7fa6ddfee0fd    	< string : '[34;49mhic2 : done [39;49m' >[39;49m[32;49m
0x7fa6de044317    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04431b    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  n @ s ct2 s n @ p  nl "hic2 : done " [39;49m[33;40mps[39;49m[34;49m nl  ; [39;49m[32;49m
0x7fa6de04431e    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de044328    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m .. @ s ct2 s n @ p  nl "hic2 : done " ps [39;49m[33;40mnl[39;49m[34;49m  ; [39;49m[32;49m
0x7fa6de04432b    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de044335    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04433f    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m .. ct2 s n @ p  nl "hic2 : done " ps nl  [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de044342    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de044346    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04434a    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de04434e    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'hic2' :: codeSize = 437
Word : 0x00007fa6dd7d6ca0 :: Compiled at : 0x00007fa6de044199
 =============================
::> 'wdiss' was called at namespaces/test/control.cft 84.17 <::

 hic2 : start 

DataStack at : [34;49mnamespaces/test/control.cft : 85.7[39;49m :
DataStack depth =   5 : Dsp (R14) = Top = 0x00007fa6ddf73230, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73230 > = 0x0000000000000000	
  DataStack   [  -1 ] < 0x00007fa6ddf73228 > = 0x0000000000000003	
  DataStack   [  -2 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -3 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	
 3
DataStack at : [34;49mnamespaces/test/control.cft : 85.7[39;49m :
DataStack depth =   6 : Dsp (R14) = Top = 0x00007fa6ddf73238, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73238 > = 0x0000000000000003	
  DataStack   [  -1 ] < 0x00007fa6ddf73230 > = 0x0000000000000000	
  DataStack   [  -2 ] < 0x00007fa6ddf73228 > = 0x0000000000000003	
  DataStack   [  -3 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -5 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	

 ct0 : 
 3 1 continuing ct0 3 2 continuing ct0 3 3
 testing ct0 : goto/label 'hi' -> ct0 before goto/label works

DataStack at : [34;49mnamespaces/test/control.cft : 85.7[39;49m :
DataStack depth =  12 : Dsp (R14) = Top = 0x00007fa6ddf73268, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73268 > = 0x00007fa6ddf73240	
  DataStack   [  -1 ] < 0x00007fa6ddf73260 > = 0x0000000000000003	
  DataStack   [  -2 ] < 0x00007fa6ddf73258 > = 0x0000000000000003	
  DataStack   [  -3 ] < 0x00007fa6ddf73250 > = 0x00007fa6ddfedbc8	< string : '[34;49mct0[39;49m' >
  DataStack   [  -4 ] < 0x00007fa6ddf73248 > = 0x0000000000000003	
  DataStack   [  -5 ] < 0x00007fa6ddf73240 > = 0x00007fa6ddf73230	
  DataStack   [  -6 ] < 0x00007fa6ddf73238 > = 0x0000000000000003	
  DataStack   [  -7 ] < 0x00007fa6ddf73230 > = 0x0000000000000000	
  DataStack   [  -8 ] < 0x00007fa6ddf73228 > = 0x0000000000000003	
  DataStack   [  -9 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [ -10 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [ -11 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	
 leaving ct0 n = 3 j =  3
DataStack at : [34;49mnamespaces/test/control.cft : 85.7[39;49m :
DataStack depth =  12 : Dsp (R14) = Top = 0x00007fa6ddf73268, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73268 > = 0x00007fa6ddf73240	
  DataStack   [  -1 ] < 0x00007fa6ddf73260 > = 0x0000000000000003	
  DataStack   [  -2 ] < 0x00007fa6ddf73258 > = 0x0000000000000003	
  DataStack   [  -3 ] < 0x00007fa6ddf73250 > = 0x00007fa6ddfedbc8	< string : '[34;49mct0[39;49m' >
  DataStack   [  -4 ] < 0x00007fa6ddf73248 > = 0x0000000000000003	
  DataStack   [  -5 ] < 0x00007fa6ddf73240 > = 0x00007fa6ddf73230	
  DataStack   [  -6 ] < 0x00007fa6ddf73238 > = 0x0000000000000003	
  DataStack   [  -7 ] < 0x00007fa6ddf73230 > = 0x0000000000000000	
  DataStack   [  -8 ] < 0x00007fa6ddf73228 > = 0x0000000000000003	
  DataStack   [  -9 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [ -10 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [ -11 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/test/control.cft : 85.7[39;49m :
DataStack depth =   5 : Dsp (R14) = Top = 0x00007fa6ddf73230, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73230 > = 0x0000000000000000	
  DataStack   [  -1 ] < 0x00007fa6ddf73228 > = 0x0000000000000003	
  DataStack   [  -2 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -3 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/test/control.cft : 85.7[39;49m :
DataStack depth =   6 : Dsp (R14) = Top = 0x00007fa6ddf73238, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73238 > = 0x0000000000000003	
  DataStack   [  -1 ] < 0x00007fa6ddf73230 > = 0x0000000000000000	
  DataStack   [  -2 ] < 0x00007fa6ddf73228 > = 0x0000000000000003	
  DataStack   [  -3 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -5 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	

 ct1 : 
 3 1 continuing ct1 3 2 continuing ct1 3 3
 testing ct1 : goto/label1 -> ct1 after nested goto/label1 works

DataStack at : [34;49mnamespaces/test/control.cft : 85.7[39;49m :
DataStack depth =   6 : Dsp (R14) = Top = 0x00007fa6ddf73238, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73238 > = 0x0000000000000003	
  DataStack   [  -1 ] < 0x00007fa6ddf73230 > = 0x0000000000000000	
  DataStack   [  -2 ] < 0x00007fa6ddf73228 > = 0x0000000000000003	
  DataStack   [  -3 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -5 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	

 ct2 : 

 testing ct2 : goto/label2 -> ct2 after goto/label2 works

DataStack at : [34;49mnamespaces/test/control.cft : 85.7[39;49m :
DataStack depth =   6 : Dsp (R14) = Top = 0x00007fa6ddf73238, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73238 > = 0x0000000000000003	
  DataStack   [  -1 ] < 0x00007fa6ddf73230 > = 0x0000000000000000	
  DataStack   [  -2 ] < 0x00007fa6ddf73228 > = 0x0000000000000003	
  DataStack   [  -3 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -5 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	
 3
 hic2 : done 

 hic2 : start 

DataStack at : [34;49mnamespaces/test/control.cft : 87.7[39;49m :
DataStack depth =   5 : Dsp (R14) = Top = 0x00007fa6ddf73230, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73230 > = 0x0000000000000000	
  DataStack   [  -1 ] < 0x00007fa6ddf73228 > = 0x0000000000000007	
  DataStack   [  -2 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -3 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	
 7
DataStack at : [34;49mnamespaces/test/control.cft : 87.7[39;49m :
DataStack depth =   6 : Dsp (R14) = Top = 0x00007fa6ddf73238, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73238 > = 0x0000000000000007	
  DataStack   [  -1 ] < 0x00007fa6ddf73230 > = 0x0000000000000000	
  DataStack   [  -2 ] < 0x00007fa6ddf73228 > = 0x0000000000000007	
  DataStack   [  -3 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -5 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	

 ct0 : 
 7 1 continuing ct0 7 2 continuing ct0 7 3 continuing ct0 7 4 continuing ct0 7 5 continuing ct0 7 6 continuing ct0 7 7
 testing ct0 : goto/label 'hi' -> ct0 before goto/label works

DataStack at : [34;49mnamespaces/test/control.cft : 87.7[39;49m :
DataStack depth =  12 : Dsp (R14) = Top = 0x00007fa6ddf73268, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73268 > = 0x00007fa6ddf73240	
  DataStack   [  -1 ] < 0x00007fa6ddf73260 > = 0x0000000000000007	
  DataStack   [  -2 ] < 0x00007fa6ddf73258 > = 0x0000000000000007	
  DataStack   [  -3 ] < 0x00007fa6ddf73250 > = 0x00007fa6ddfedbc8	< string : '[34;49mct0[39;49m' >
  DataStack   [  -4 ] < 0x00007fa6ddf73248 > = 0x0000000000000007	
  DataStack   [  -5 ] < 0x00007fa6ddf73240 > = 0x00007fa6ddf73230	
  DataStack   [  -6 ] < 0x00007fa6ddf73238 > = 0x0000000000000007	
  DataStack   [  -7 ] < 0x00007fa6ddf73230 > = 0x0000000000000000	
  DataStack   [  -8 ] < 0x00007fa6ddf73228 > = 0x0000000000000007	
  DataStack   [  -9 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [ -10 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [ -11 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	
 leaving ct0 n = 7 j =  7
DataStack at : [34;49mnamespaces/test/control.cft : 87.7[39;49m :
DataStack depth =  12 : Dsp (R14) = Top = 0x00007fa6ddf73268, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73268 > = 0x00007fa6ddf73240	
  DataStack   [  -1 ] < 0x00007fa6ddf73260 > = 0x0000000000000007	
  DataStack   [  -2 ] < 0x00007fa6ddf73258 > = 0x0000000000000007	
  DataStack   [  -3 ] < 0x00007fa6ddf73250 > = 0x00007fa6ddfedbc8	< string : '[34;49mct0[39;49m' >
  DataStack   [  -4 ] < 0x00007fa6ddf73248 > = 0x0000000000000007	
  DataStack   [  -5 ] < 0x00007fa6ddf73240 > = 0x00007fa6ddf73230	
  DataStack   [  -6 ] < 0x00007fa6ddf73238 > = 0x0000000000000007	
  DataStack   [  -7 ] < 0x00007fa6ddf73230 > = 0x0000000000000000	
  DataStack   [  -8 ] < 0x00007fa6ddf73228 > = 0x0000000000000007	
  DataStack   [  -9 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [ -10 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [ -11 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/test/control.cft : 87.7[39;49m :
DataStack depth =   5 : Dsp (R14) = Top = 0x00007fa6ddf73230, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73230 > = 0x0000000000000000	
  DataStack   [  -1 ] < 0x00007fa6ddf73228 > = 0x0000000000000007	
  DataStack   [  -2 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -3 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/test/control.cft : 87.7[39;49m :
DataStack depth =   6 : Dsp (R14) = Top = 0x00007fa6ddf73238, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73238 > = 0x0000000000000007	
  DataStack   [  -1 ] < 0x00007fa6ddf73230 > = 0x0000000000000000	
  DataStack   [  -2 ] < 0x00007fa6ddf73228 > = 0x0000000000000007	
  DataStack   [  -3 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -5 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	

 ct1 : 
 7 1 continuing ct1 7 2 continuing ct1 7 3 continuing ct1 7 4 continuing ct1 7 5 continuing ct1 7 6 continuing ct1 7 7
 testing ct1 : goto/label1 -> ct1 after nested goto/label1 works

DataStack at : [34;49mnamespaces/test/control.cft : 87.7[39;49m :
DataStack depth =   6 : Dsp (R14) = Top = 0x00007fa6ddf73238, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73238 > = 0x0000000000000007	
  DataStack   [  -1 ] < 0x00007fa6ddf73230 > = 0x0000000000000000	
  DataStack   [  -2 ] < 0x00007fa6ddf73228 > = 0x0000000000000007	
  DataStack   [  -3 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -5 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	

 ct2 : 

 testing ct2 : goto/label2 -> ct2 after goto/label2 works

DataStack at : [34;49mnamespaces/test/control.cft : 87.7[39;49m :
DataStack depth =   6 : Dsp (R14) = Top = 0x00007fa6ddf73238, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73238 > = 0x0000000000000007	
  DataStack   [  -1 ] < 0x00007fa6ddf73230 > = 0x0000000000000000	
  DataStack   [  -2 ] < 0x00007fa6ddf73228 > = 0x0000000000000007	
  DataStack   [  -3 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -5 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	
 7
 hic2 : done 
 7
 2 2 2 
last line should show : 2 2 2[34;49m 
starting lisp.cft
[39;49m[39;49m 7
[39;49m ( 1 2 ( 3 4 ) 5 6 ( 7 ( 8 ( 9 ) 10 11 ) ( ( ( ( 12 ) ) 121 ) ) 13 ( 14 ) ) 15 ( 16 ( 17 ( 18 ) ) ) )
[39;49m ( 1 2 ( 3 4 ) 5 6 ( 7 ( 8 ( 9 ) 10 11 ) ( ) ( ( ( ( 12 ) ) 121 ) 122 ) 13 ( 14 ( 141 ) ) 15 ( 16 ( 161 ( 162 ( 163 ) ) ) ( 17 ( 18 ) ) ) ) )
[39;49m ( 1 2 ( 3 4 ) 5 6 ( 7 ( 8 9 10 11 ) 12 13 14 ) 15 ( 16 ( 17 18 ) ) )
[39;49m 7
[39;49m 777
[39;49m f

 =============================
LispDefines.[34;49mf[39;49m <:> variable
SourceCode for LispDefines.[34;49mf[39;49m :> 
[34;49m( define f ( lambda x ( + x 1 2 ) ) )[39;49m
Source code file location of [34;49mf[39;49m : "namespaces/test/lisp.cft" : 24.38 :: we are now at : namespaces/test/lisp.cft : 25.18
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xde0445af -- code size = 67 bytes
 -----------------------------
Word :: LispDefines.[34;49mf[39;49m : definition = 0x00007fa6de0445af : disassembly at namespaces/test/lisp.cft : 25.18 :
[34;49m ..                              ( define [39;49m[33;40mf[39;49m[34;49m ( lambda x ( + x 1 2 ) ) ) .. [39;49m[32;49m
0x7fa6de0445af    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de0445b3    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de0445b7    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..             ( define f ( lambda x ( + [39;49m[33;40mx[39;49m[34;49m 1 2 ) ) ) .. [39;49m[32;49m
0x7fa6de0445be    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..           ( define f ( lambda x ( + x [39;49m[33;40m1[39;49m[34;49m 2 ) ) ) .. [39;49m[32;49m
0x7fa6de0445c2    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m ..               ( define f ( lambda x ( [39;49m[33;40m+[39;49m[34;49m x 1 2 ) ) ) .. [39;49m[32;49m
0x7fa6de0445cc    4803c1                  add rax, rcx                                           [39;49m
[34;49m ..         ( define f ( lambda x ( + x 1 [39;49m[33;40m2[39;49m[34;49m ) ) ) .. [39;49m[32;49m
0x7fa6de0445cf    48b90200000000000000    mov rcx, 0x2                                           [39;49m
[34;49m ..               ( define f ( lambda x ( [39;49m[33;40m+[39;49m[34;49m x 1 2 ) ) ) .. [39;49m[32;49m
0x7fa6de0445d9    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de0445dc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0445e0    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de0445e3    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de0445e6    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0445ea    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de0445ee    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de0445f1    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'f' :: codeSize = 66
Word : 0x00007fa6dd9d82b8 :: Compiled at : 0x00007fa6de0445af
 =============================
::> 'wdiss' was called at namespaces/test/lisp.cft 25.18 <::
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 777
[39;49m 7
[39;49m 77
[39;49m 77
[39;49m 77
[39;49m 77
[39;49m 77
[39;49m 77
[39;49m 77
[39;49m x
[39;49m 7
[39;49m 7
[39;49m f1
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m f4
[39;49m zs1[39;49m abc[39;49m
[39;49m zs1
[39;49m f3
[39;49m 13
[39;49m f4
[39;49m 77
[39;49m zs1
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 11
 
 cond :: should show 7 7 7 11
[39;49m g
[39;49m h
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m h1
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 77
[39;49m 77
[39;49m pd
[39;49m 7
[34;49m 
starting BigNum
[39;49m[39;49m g
[39;49m h
[39;49m1.0000000000000000
[39;49m-1.0000000000000000
[39;49m-2.0000000000000000
[39;49m0.3333358764648438
[39;49m3.0000000000000000
[39;49m7.0000000000000000
[39;49m7.0000000000000000
[34;49m 
ending BigNum
[39;49m[39;49m a
[39;49m b
[39;49m ( 3 4 1 2 )
[39;49m ( a b 1 2 )
[39;49m x
[39;49m ( x ( 3 4 1 2 ) ( 3 4 1 2 ) 3 4 1 2 )
[39;49m ( x x x x )
[39;49m ( x x x 3 4 1 2 )
[39;49m y
[39;49m ( y ( x ( 3 4 1 2 ) ( 3 4 1 2 ) 3 4 1 2 ) ( x ( 3 4 1 2 ) ( 3 4 1 2 ) 3 4 1 2 ) x ( 3 4 1 2 ) ( 3 4 1 2 ) 3 4 1 2 )
[39;49m ( y y y y )
[39;49m ( y y y x ( 3 4 1 2 ) ( 3 4 1 2 ) 3 4 1 2 )
[34;49m 
lisp test
[39;49m namespaces/test/lisp.cft 144.30[39;49m a
[39;49m b
[39;49m y
[39;49m x
[39;49m y
[39;49m ( x x x 1 2 3 4 5 6 7 8 9 y )
[39;49m ( 1 2 ( 3 4 ) 5 6 ( 7 ( 8 ( 9 ) 10 11 ) ( ( ( ( 12 ) ) 121 ) ) 13 ( 14 ) ) 15 ( 16 ( 17 ( 18 ) ) ) )
[39;49m ( 1 2 ( 3 4 ) 5 6 ( 7 ( 8 9 10 11 ) 12 13 14 ) 15 ( 16 ( 17 18 ) ) )
[39;49m 7
[39;49m 7
[39;49m x
[39;49m ( 1 2 3 x )
[39;49m ( 1 2 3 ( 7 8 9 47 ) )
[39;49m ( 1 2 3 ( 7 8 9 47 ) )
[39;49m ( 1 2 3 7 8 9 47 )
[39;49m 77
[39;49m q1x
[39;49m q2
[39;49m 7
[39;49m q3
[39;49m q4
[39;49m q2
[39;49m 77
[39;49m 7
[39;49m yfac
[39;49m 3628800
[39;49m 5040
[39;49m fibc
 
fibc 20 = [39;49m 6765

 =============================
LispDefines.[34;49mfibc[39;49m <:> variable
SourceCode for LispDefines.[34;49mfibc[39;49m :> 
[34;49m(define fibc (lambda ( n ) (ifElse (< n 2) n (+ (fibc (- n 1)) (fibc (- n 2))))))[39;49m
Source code file location of [34;49mfibc[39;49m : "namespaces/test/lisp.cft" : 177.81 :: we are now at : namespaces/test/lisp.cft : 180.21
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xde0447dc -- code size = 139 bytes
 -----------------------------
Word :: LispDefines.[34;49mfibc[39;49m : definition = 0x00007fa6de0447dc : disassembly at namespaces/test/lisp.cft : 180.21 :
[34;49m ..                               (define [39;49m[33;40mfibc[39;49m[34;49m (lambda ( n ) (ifElse (< n 2) n (+ (fibc (- n 1)) (fibc (- n 2)))))) .. [39;49m[32;49m
0x7fa6de0447dc    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de0447e0    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de0447e4    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m .. (define fibc (lambda ( n ) (ifElse (< [39;49m[33;40mn[39;49m[34;49m 2) n (+ (fibc (- n 1)) (fibc (- n 2)))))) .. [39;49m[32;49m
0x7fa6de0447eb    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..   (define fibc (lambda ( n ) (ifElse ([39;49m[33;40m<[39;49m[34;49m n 2) n (+ (fibc (- n 1)) (fibc (- n 2)))))) .. [39;49m[32;49m
0x7fa6de0447ef    4883f802                cmp rax, 0x2                                           [39;49m[32;49m
0x7fa6de0447f3    0f8d10000000            jge 0x7fa6de044809         	< LispDefines.[34;49mfibc[39;49m+45 >[39;49m
[34;49m .. ne fibc (lambda ( n ) (ifElse (< n 2) [39;49m[33;40mn[39;49m[34;49m (+ (fibc (- n 1)) (fibc (- n 2))))))[39;49m[32;49m
0x7fa6de0447f9    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0447fd    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044801    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de044804    e94f000000              jmp 0x7fa6de044858         	< LispDefines.[34;49mfibc[39;49m+124 >[39;49m
[34;49m .. a ( n ) (ifElse (< n 2) n (+ (fibc (- [39;49m[33;40mn[39;49m[34;49m 1)) (fibc (- n 2))))))[39;49m[32;49m
0x7fa6de044809    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. ( n ) (ifElse (< n 2) n (+ (fibc (- n [39;49m[33;40m1[39;49m[34;49m)) (fibc (- n 2))))))[39;49m[32;49m
0x7fa6de04480d    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. se (< n 2) n (+ (fibc (- n 1)) (fibc ([39;49m[33;40m-[39;49m[34;49m n 2))))))[39;49m[32;49m
0x7fa6de044817    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fa6de04481a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04481e    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                               (define [39;49m[33;40mfibc[39;49m[34;49m (lambda ( n ) (ifElse (< n 2) n (+ (fibc (- n 1)) (fibc (- n 2)))))) .. [39;49m[32;49m
0x7fa6de044821    e8b6ffffff              call 0x7fa6de0447dc        	< LispDefines.[34;49mfibc[39;49m : 0x00007fa6de0447dc >[39;49m
[34;49m ..  (< n 2) n (+ (fibc (- n 1)) (fibc (- [39;49m[33;40mn[39;49m[34;49m 2))))))[39;49m[32;49m
0x7fa6de044826    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. < n 2) n (+ (fibc (- n 1)) (fibc (- n [39;49m[33;40m2[39;49m[34;49m))))))[39;49m[32;49m
0x7fa6de04482a    48b90200000000000000    mov rcx, 0x2                                           [39;49m
[34;49m .. se (< n 2) n (+ (fibc (- n 1)) (fibc ([39;49m[33;40m-[39;49m[34;49m n 2))))))[39;49m[32;49m
0x7fa6de044834    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fa6de044837    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04483b    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                               (define [39;49m[33;40mfibc[39;49m[34;49m (lambda ( n ) (ifElse (< n 2) n (+ (fibc (- n 1)) (fibc (- n 2)))))) .. [39;49m[32;49m
0x7fa6de04483e    e899ffffff              call 0x7fa6de0447dc        	< LispDefines.[34;49mfibc[39;49m : 0x00007fa6de0447dc >[39;49m[32;49m
0x7fa6de044843    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de044846    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04484a    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. fibc (lambda ( n ) (ifElse (< n 2) n ([39;49m[33;40m+[39;49m[34;49m (fibc (- n 1)) (fibc (- n 2))))))[39;49m[32;49m
0x7fa6de04484e    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de044851    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044855    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de044858    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04485b    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04485f    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de044863    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de044866    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fibc' :: codeSize = 138
Word : 0x00007fa6dd6802d8 :: Compiled at : 0x00007fa6de0447dc
 =============================
::> 'wdiss' was called at namespaces/test/lisp.cft 180.21 <::
 11 7[39;49m

DataStack at : [34;49mnamespaces/test/lisp.cft : 184.80[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fa6ddf73220, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	
 7[39;49m
 11[39;49m
 11 7
 =============================
Root.[34;49mhioo[39;49m <:> cfrTil compiled word
SourceCode for Root.[34;49mhioo[39;49m :> 
[34;49m( :: : hioo 3 4 + dup p ; : hio 5 6 + dup p ; hio hioo )[39;49m
Source code file location of [34;49mhioo[39;49m : "namespaces/test/lisp.cft" : 184.87 :: we are now at : namespaces/test/lisp.cft : 186.21
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xde04487b -- code size = 35 bytes
TypeSignature : 
 -----------------------------
Word :: Root.[34;49mhioo[39;49m : definition = 0x00007fa6de04487b : disassembly at namespaces/test/lisp.cft : 186.21 :
[34;49m ..                           ( :: : hioo [39;49m[33;40m3[39;49m[34;49m 4 + dup p ; : hio 5 6 + dup p ; hio hioo ) .. [39;49m[32;49m
0x7fa6de04487b    48b80700000000000000    mov rax, 0x7                                           [39;49m[32;49m
0x7fa6de044885    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de044889    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                     ( :: : hioo 3 4 + [39;49m[33;40mdup[39;49m[34;49m p ; : hio 5 6 + dup p ; hio hioo ) .. [39;49m[32;49m
0x7fa6de04488c    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..                 ( :: : hioo 3 4 + dup [39;49m[33;40mp[39;49m[34;49m ; : hio 5 6 + dup p ; hio hioo ) .. [39;49m[32;49m
0x7fa6de044890    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de04489a    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m ..                       ( :: : hioo 3 4 [39;49m[33;40m+[39;49m[34;49m dup p ; : hio 5 6 + dup p ; hio hioo ) .. [39;49m[32;49m
0x7fa6de04489d    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'hioo' :: codeSize = 34
Word : 0x00007fa6dd6dd2b0 :: Compiled at : 0x00007fa6de04487b
 =============================
::> 'wdiss' was called at namespaces/test/lisp.cft 186.21 <::

 =============================
Root.[34;49mhio[39;49m <:> cfrTil compiled word
SourceCode for Root.[34;49mhio[39;49m :> 
[34;49m( :: : hioo 3 4 + dup p ; : hio 5 6 + dup p ; hio hioo )[39;49m
Source code file location of [34;49mhio[39;49m : "namespaces/test/lisp.cft" : 184.87 :: we are now at : namespaces/test/lisp.cft : 187.20
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xde0448b2 -- code size = 35 bytes
TypeSignature : 
 -----------------------------
Word :: Root.[34;49mhio[39;49m : definition = 0x00007fa6de0448b2 : disassembly at namespaces/test/lisp.cft : 187.20 :
[34;49m ..       ( :: : hioo 3 4 + dup p ; : hio [39;49m[33;40m5[39;49m[34;49m 6 + dup p ; hio hioo ) .. [39;49m[32;49m
0x7fa6de0448b2    48b80b00000000000000    mov rax, 0xb                                           [39;49m[32;49m
0x7fa6de0448bc    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de0448c0    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ( :: : hioo 3 4 + dup p ; : hio 5 6 + [39;49m[33;40mdup[39;49m[34;49m p ; hio hioo ) .. [39;49m[32;49m
0x7fa6de0448c3    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m( :: : hioo 3 4 + dup p ; : hio 5 6 + dup [39;49m[33;40mp[39;49m[34;49m ; hio hioo ) .. [39;49m[32;49m
0x7fa6de0448c7    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de0448d1    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m ..   ( :: : hioo 3 4 + dup p ; : hio 5 6 [39;49m[33;40m+[39;49m[34;49m dup p ; hio hioo ) .. [39;49m[32;49m
0x7fa6de0448d4    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'hio' :: codeSize = 34
Word : 0x00007fa6dd6ddb70 :: Compiled at : 0x00007fa6de0448b2
 =============================
::> 'wdiss' was called at namespaces/test/lisp.cft 187.20 <::

 =============================
C.[34;49mbexp43[39;49m <:> cfrTil compiled word
SourceCode for C.[34;49mbexp43[39;49m :> 
[34;49m: bexp43 ( n ) { n @ 1 > } { n @ n @ -- bexp43 * } { 1 } ifElse ; [39;49m
Source code file location of [34;49mbexp43[39;49m : "namespaces/test/lisp.cft" : 190.65 :: we are now at : namespaces/test/lisp.cft : 191.19
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde0448da -- code size = 115 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mbexp43[39;49m : definition = 0x00007fa6de0448da : disassembly at namespaces/test/lisp.cft : 191.19 :
[34;49m ..                                     : [39;49m[33;40mbexp43[39;49m[34;49m ( n ) { n @ 1 > } { n @ n @ -- bexp43 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de0448da    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de0448de    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de0448e2    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                      : bexp43 ( n ) { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ n @ -- bexp43 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de0448e9    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                : bexp43 ( n ) { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ n @ -- bexp43 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de0448ed    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fa6de0448f1    0f8e39000000            jle 0x7fa6de044930         	< C.[34;49mbexp43[39;49m+86 >[39;49m
[34;49m ..          : bexp43 ( n ) { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ n @ -- bexp43 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de0448f7    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0448fb    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..              : bexp43 ( n ) { n @ 1 > [39;49m[33;40m}[39;49m[34;49m { n @ n @ -- bexp43 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de0448ff    498906                  mov [r14], rax                                         [39;49m
[34;49m ..      : bexp43 ( n ) { n @ 1 > } { n @ [39;49m[33;40mn[39;49m[34;49m @ -- bexp43 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de044902    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  : bexp43 ( n ) { n @ 1 > } { n @ n @ [39;49m[33;40m--[39;49m[34;49m bexp43 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de044906    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fa6de044909    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04490d    498906                  mov [r14], rax                                         [39;49m
[34;49m  : bexp43 ( n ) { n @ 1 > } { n @ n @ -- [39;49m[33;40mbexp43[39;49m[34;49m * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de044910    e8c5ffffff              call 0x7fa6de0448da        	< C.[34;49mbexp43[39;49m : 0x00007fa6de0448da >[39;49m[32;49m
0x7fa6de044915    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de044918    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04491c    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. ( n ) { n @ 1 > } { n @ n @ -- bexp43 [39;49m[33;40m*[39;49m[34;49m } { 1 } ifElse ; [39;49m[32;49m
0x7fa6de044920    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fa6de044924    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044928    498906                  mov [r14], rax                                         [39;49m
[34;49m .. n ) { n @ 1 > } { n @ n @ -- bexp43 * [39;49m[33;40m}[39;49m[34;49m { 1 } ifElse ; [39;49m[32;49m
0x7fa6de04492b    e911000000              jmp 0x7fa6de044941         	< C.[34;49mbexp43[39;49m+103 >[39;49m
[34;49m .. { n @ 1 > } { n @ n @ -- bexp43 * } { [39;49m[33;40m1[39;49m[34;49m } ifElse ; [39;49m[32;49m
0x7fa6de044930    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de04493a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04493e    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  { n @ n @ -- bexp43 * } { 1 } ifElse [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de044941    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de044945    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de044949    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04494c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp43' :: codeSize = 114
Word : 0x00007fa6dd6de430 :: Compiled at : 0x00007fa6de0448da
 =============================
::> 'wdiss' was called at namespaces/test/lisp.cft 191.19 <::
 C : bexp43_assert  : ok

 5040[39;49m

 =============================
C.[34;49mbexp44[39;49m <:> cfrTil compiled word
SourceCode for C.[34;49mbexp44[39;49m :> 
[34;49m( :: C : bexp44 ( n ) { n @ 1 > } { n @ n @ -- bexp44 * } { 1 } ifElse ; )[39;49m
Source code file location of [34;49mbexp44[39;49m : "namespaces/test/lisp.cft" : 196.74 :: we are now at : namespaces/test/lisp.cft : 197.23
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xde044952 -- code size = 115 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mbexp44[39;49m : definition = 0x00007fa6de044952 : disassembly at namespaces/test/lisp.cft : 197.23 :
[34;49m ..  n @ -- bexp44 * } { 1 } ifElse ; )[39;49m[33;40m([39;49m[34;49m[39;49m[32;49m
0x7fa6de044952    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de044956    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04495a    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..               ( :: C : bexp44 ( n ) { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ n @ -- bexp44 * } { 1 } ifElse ; ) .. [39;49m[32;49m
0x7fa6de044961    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..         ( :: C : bexp44 ( n ) { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ n @ -- bexp44 * } { 1 } ifElse ; ) .. [39;49m[32;49m
0x7fa6de044965    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fa6de044969    0f8e39000000            jle 0x7fa6de0449a8         	< C.[34;49mbexp44[39;49m+86 >[39;49m
[34;49m ..   ( :: C : bexp44 ( n ) { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ n @ -- bexp44 * } { 1 } ifElse ; ) .. [39;49m[32;49m
0x7fa6de04496f    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de044973    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..       ( :: C : bexp44 ( n ) { n @ 1 > [39;49m[33;40m}[39;49m[34;49m { n @ n @ -- bexp44 * } { 1 } ifElse ; ) .. [39;49m[32;49m
0x7fa6de044977    498906                  mov [r14], rax                                         [39;49m
[34;49m  ( :: C : bexp44 ( n ) { n @ 1 > } { n @ [39;49m[33;40mn[39;49m[34;49m @ -- bexp44 * } { 1 } ifElse ; ) .. [39;49m[32;49m
0x7fa6de04497a    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  : bexp44 ( n ) { n @ 1 > } { n @ n @ [39;49m[33;40m--[39;49m[34;49m bexp44 * } { 1 } ifElse ; )[39;49m[32;49m
0x7fa6de04497e    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fa6de044981    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044985    498906                  mov [r14], rax                                         [39;49m
[34;49m .. bexp44 ( n ) { n @ 1 > } { n @ n @ -- [39;49m[33;40mbexp44[39;49m[34;49m * } { 1 } ifElse ; )[39;49m[32;49m
0x7fa6de044988    e8c5ffffff              call 0x7fa6de044952        	< C.[34;49mbexp44[39;49m : 0x00007fa6de044952 >[39;49m[32;49m
0x7fa6de04498d    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de044990    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de044994    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. ( n ) { n @ 1 > } { n @ n @ -- bexp44 [39;49m[33;40m*[39;49m[34;49m } { 1 } ifElse ; )[39;49m[32;49m
0x7fa6de044998    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fa6de04499c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0449a0    498906                  mov [r14], rax                                         [39;49m
[34;49m .. n ) { n @ 1 > } { n @ n @ -- bexp44 * [39;49m[33;40m}[39;49m[34;49m { 1 } ifElse ; )[39;49m[32;49m
0x7fa6de0449a3    e911000000              jmp 0x7fa6de0449b9         	< C.[34;49mbexp44[39;49m+103 >[39;49m
[34;49m .. { n @ 1 > } { n @ n @ -- bexp44 * } { [39;49m[33;40m1[39;49m[34;49m } ifElse ; )[39;49m[32;49m
0x7fa6de0449a8    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de0449b2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0449b6    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ 1 > } { n @ n @ -- bexp44 * } { 1 } [39;49m[33;40mifElse[39;49m[34;49m ; )[39;49m[32;49m
0x7fa6de0449b9    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0449bd    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de0449c1    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de0449c4    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp44' :: codeSize = 114
Word : 0x00007fa6dd6e0e30 :: Compiled at : 0x00007fa6de044952
 =============================
::> 'wdiss' was called at namespaces/test/lisp.cft 197.23 <::
 C : bexp43_assert  : ok

 5040
DataStack at : [34;49mnamespaces/test/lisp.cft : 200.2[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fa6ddf73220, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	
 goedel3 ::  
 goedel3 ::  140354665776633 2 goedel3_assert1  : ok

 0 7 goedel3_assert2  : ok

 goedel3_assert4  : ok

 140354665721937 7 goedel3_assert5  : ok

 9 
goedel3 output should read (after ignoring _asserts) : 
'junk' 2 'junk' 7 'junk' 7 9
 =============================
Root.[34;49mgoedel6[39;49m <:> cfrTil compiled word
SourceCode for Root.[34;49mgoedel6[39;49m :> 
[34;49m( :: : goedel6 (| n -- TOS ) "\n goedel6 :: " ps n 9 = { (| n ) n @ p n 2 = n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert } ix { (| n ) n @ p n 3 = n dup @ 4 + = n @ dup p 7 "goedel6_4_assert" assert } ix n @ dup p ; ".I" typeSignature ' goedel6 find wdiss 9 goedel6 "goedel6_0_assert" assert "\ngoedel6 output should read (after ignoring _asserts) : \n 'junk' 2 'junk' 7 'junk' 7 9" ps )[39;49m
Source code file location of [34;49mgoedel6[39;49m : "namespaces/test/lisp.cft" : 245.1 :: we are now at : namespaces/test/lisp.cft : 245.1
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde044c28 -- code size = 601 bytes
TypeSignature : -> Integer 
 -----------------------------
Word :: Root.[34;49mgoedel6[39;49m : definition = 0x00007fa6de044c28 : disassembly at namespaces/test/lisp.cft : 245.1 :
[34;49m .. s 9 goedel6 "goedel6_0_assert" assert [39;49m[33;40m"\ngoedel6 output should read (after ignoring _asserts) : \n 'junk' 2 'junk' 7 'junk' 7 9"[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de044c28    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de044c2c    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de044c30    4981c628000000          add r14, 0x28                                          [39;49m
[34;49m ..        ( ::  : goedel6 (| n -- TOS )  [39;49m[33;40m"\n goedel6 :: "[39;49m[34;49m ps  n 9 = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel6_1_assert" assert { (| .. [39;49m[32;49m
0x7fa6de044c37    48b80210ffdda67f0000    mov rax, 0x7fa6ddff1002    	< string : '[34;49m\n goedel6 :: [39;49m' >[39;49m[32;49m
0x7fa6de044c41    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044c45    498906                  mov [r14], rax                                         [39;49m
[34;49m .. edel6 (| n -- TOS )  "\n goedel6 :: " [39;49m[33;40mps[39;49m[34;49m  n 9 = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 =  .. [39;49m[32;49m
0x7fa6de044c48    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de044c52    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m .. 6 (| n -- TOS )  "\n goedel6 :: " ps  [39;49m[33;40mn[39;49m[34;49m 9 = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @  .. [39;49m[32;49m
0x7fa6de044c55    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m .. (| n -- TOS )  "\n goedel6 :: " ps  n [39;49m[33;40m9[39;49m[34;49m = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4  .. [39;49m[32;49m
0x7fa6de044c59    48b90900000000000000    mov rcx, 0x9                                           [39;49m
[34;49m ..  n -- TOS )  "\n goedel6 :: " ps  n 9 [39;49m[33;40m=[39;49m[34;49m {  (| n ) n @ p n 2 = n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 +  .. [39;49m[32;49m
0x7fa6de044c63    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  @ 6 + 8 "goedel6_3_assert" assert  } [39;49m[33;40mix[39;49m[34;49m { (| n )  n @ p  n 3 =  n dup @ 4 + =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ d .. [39;49m[32;49m
0x7fa6de044c66    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fa6de044c6a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044c6e    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  goedel6 :: " ps  n 9 = {  (| n ) n @ [39;49m[33;40mp[39;49m[34;49m n 2 = n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6 .. [39;49m[32;49m
0x7fa6de044c71    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de044c7b    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. oedel6 :: " ps  n 9 = {  (| n ) n @ p [39;49m[33;40mn[39;49m[34;49m 2 = n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2 .. [39;49m[32;49m
0x7fa6de044c7e    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. del6 :: " ps  n 9 = {  (| n ) n @ p n [39;49m[33;40m2[39;49m[34;49m = n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_a .. [39;49m[32;49m
0x7fa6de044c82    48b90200000000000000    mov rcx, 0x2                                           [39;49m
[34;49m .. l6 :: " ps  n 9 = {  (| n ) n @ p n 2 [39;49m[33;40m=[39;49m[34;49m n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_ass .. [39;49m[32;49m
0x7fa6de044c8c    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  :: " ps  n 9 = {  (| n ) n @ p n 2 = [39;49m[33;40mn[39;49m[34;49m @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_asser .. [39;49m[32;49m
0x7fa6de044c8f    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fa6de044c93    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de044c97    498906                  mov [r14], rax                                         [39;49m
[34;49m .. " ps  n 9 = {  (| n ) n @ p n 2 = n @ [39;49m[33;40mdup[39;49m[34;49m p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_assert" a .. [39;49m[32;49m
0x7fa6de044c9a    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..   n 9 = {  (| n ) n @ p n 2 = n @ dup [39;49m[33;40mp[39;49m[34;49m 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_assert" asser .. [39;49m[32;49m
0x7fa6de044c9e    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de044ca8    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. n 9 = {  (| n ) n @ p n 2 = n @ dup p [39;49m[33;40m2[39;49m[34;49m "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_assert" assert  .. [39;49m[32;49m
0x7fa6de044cab    48b80200000000000000    mov rax, 0x2                                           [39;49m[32;49m
0x7fa6de044cb5    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044cb9    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 9 = {  (| n ) n @ p n 2 = n @ dup p 2 [39;49m[33;40m"goedel6_1_assert"[39;49m[34;49m assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_assert" assert }  .. [39;49m[32;49m
0x7fa6de044cbc    48b83110ffdda67f0000    mov rax, 0x7fa6ddff1031    	< string : '[34;49mgoedel6_1_assert[39;49m' >[39;49m[32;49m
0x7fa6de044cc6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044cca    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  n 2 = n @ dup p 2 "goedel6_1_assert" [39;49m[33;40massert[39;49m[34;49m { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goede .. [39;49m[32;49m
0x7fa6de044ccd    49b98da803dea67f0000    mov r9, 0x7fa6de03a88d                                 [39;49m[32;49m
0x7fa6de044cd7    49ffd1                  call r9                    	< System.[34;49massert1[39;49m : 0x00007fa6de03a88d >[39;49m
[34;49m .. + dup p 7 "goedel6_2_assert" assert } [39;49m[33;40mix[39;49m[34;49m n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n )  n @ p  n 3 =  n dup @ 4 + =  n @ dup .. [39;49m[32;49m
0x7fa6de044cda    498b4718                mov rax, [r15+0x18]                                    [39;49m[32;49m
0x7fa6de044cde    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044ce2    498906                  mov [r14], rax                                         [39;49m
[34;49m .. goedel6_1_assert" assert { (| n ) n @ [39;49m[33;40mp[39;49m[34;49m n 3 = n @ 4 + dup p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  .. [39;49m[32;49m
0x7fa6de044ce5    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de044cef    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. edel6_1_assert" assert { (| n ) n @ p [39;49m[33;40mn[39;49m[34;49m 3 = n @ 4 + dup p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } .. [39;49m[32;49m
0x7fa6de044cf2    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m .. el6_1_assert" assert { (| n ) n @ p n [39;49m[33;40m3[39;49m[34;49m = n @ 4 + dup p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } i .. [39;49m[32;49m
0x7fa6de044cf6    48b90300000000000000    mov rcx, 0x3                                           [39;49m
[34;49m .. 6_1_assert" assert { (| n ) n @ p n 3 [39;49m[33;40m=[39;49m[34;49m n @ 4 + dup p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix  .. [39;49m[32;49m
0x7fa6de044d00    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 1_assert" assert { (| n ) n @ p n 3 = [39;49m[33;40mn[39;49m[34;49m @ 4 + dup p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix {  .. [39;49m[32;49m
0x7fa6de044d03    498b4718                mov rax, [r15+0x18]                                    [39;49m
[34;49m .. sert" assert { (| n ) n @ p n 3 = n @ [39;49m[33;40m4[39;49m[34;49m + dup p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n .. [39;49m[32;49m
0x7fa6de044d07    48b90400000000000000    mov rcx, 0x4                                           [39;49m
[34;49m .. rt" assert { (| n ) n @ p n 3 = n @ 4 [39;49m[33;40m+[39;49m[34;49m dup p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n ) .. [39;49m[32;49m
0x7fa6de044d11    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de044d14    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de044d18    498906                  mov [r14], rax                                         [39;49m
[34;49m .. " assert { (| n ) n @ p n 3 = n @ 4 + [39;49m[33;40mdup[39;49m[34;49m p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n )   .. [39;49m[32;49m
0x7fa6de044d1b    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. sert { (| n ) n @ p n 3 = n @ 4 + dup [39;49m[33;40mp[39;49m[34;49m 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n )  n @  .. [39;49m[32;49m
0x7fa6de044d1f    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de044d29    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. rt { (| n ) n @ p n 3 = n @ 4 + dup p [39;49m[33;40m7[39;49m[34;49m "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n )  n @ p  .. [39;49m[32;49m
0x7fa6de044d2c    48b80700000000000000    mov rax, 0x7                                           [39;49m[32;49m
0x7fa6de044d36    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044d3a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  { (| n ) n @ p n 3 = n @ 4 + dup p 7 [39;49m[33;40m"goedel6_2_assert"[39;49m[34;49m assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n )  n @ p  n .. [39;49m[32;49m
0x7fa6de044d3d    48b86610ffdda67f0000    mov rax, 0x7fa6ddff1066    	< string : '[34;49mgoedel6_2_assert[39;49m' >[39;49m[32;49m
0x7fa6de044d47    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044d4b    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  = n @ 4 + dup p 7 "goedel6_2_assert" [39;49m[33;40massert[39;49m[34;49m } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n )  n @ p  n 3 =  n dup @ 4 + = .. [39;49m[32;49m
0x7fa6de044d4e    49b98da803dea67f0000    mov r9, 0x7fa6de03a88d                                 [39;49m[32;49m
0x7fa6de044d58    49ffd1                  call r9                    	< System.[34;49massert1[39;49m : 0x00007fa6de03a88d >[39;49m
[34;49m .. up p 7 "goedel6_2_assert" assert } ix [39;49m[33;40mn[39;49m[34;49m @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n )  n @ p  n 3 =  n dup @ 4 + =  n @ dup p  .. [39;49m[32;49m
0x7fa6de044d5b    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  7 "goedel6_2_assert" assert } ix n @ [39;49m[33;40m6[39;49m[34;49m + 8 "goedel6_3_assert" assert  } ix { (| n )  n @ p  n 3 =  n dup @ 4 + =  n @ dup p 7 "g .. [39;49m[32;49m
0x7fa6de044d5f    48b90600000000000000    mov rcx, 0x6                                           [39;49m
[34;49m ..  "goedel6_2_assert" assert } ix n @ 6 [39;49m[33;40m+[39;49m[34;49m 8 "goedel6_3_assert" assert  } ix { (| n )  n @ p  n 3 =  n dup @ 4 + =  n @ dup p 7 "goe .. [39;49m[32;49m
0x7fa6de044d69    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de044d6c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044d70    498906                  mov [r14], rax                                         [39;49m
[34;49m .. goedel6_2_assert" assert } ix n @ 6 + [39;49m[33;40m8[39;49m[34;49m "goedel6_3_assert" assert  } ix { (| n )  n @ p  n 3 =  n dup @ 4 + =  n @ dup p 7 "goede .. [39;49m[32;49m
0x7fa6de044d73    48b80800000000000000    mov rax, 0x8                                           [39;49m[32;49m
0x7fa6de044d7d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044d81    498906                  mov [r14], rax                                         [39;49m
[34;49m .. edel6_2_assert" assert } ix n @ 6 + 8 [39;49m[33;40m"goedel6_3_assert"[39;49m[34;49m assert  } ix { (| n )  n @ p  n 3 =  n dup @ 4 + =  n @ dup p 7 "goedel6 .. [39;49m[32;49m
0x7fa6de044d84    48b88e10ffdda67f0000    mov rax, 0x7fa6ddff108e    	< string : '[34;49mgoedel6_3_assert[39;49m' >[39;49m[32;49m
0x7fa6de044d8e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044d92    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ert } ix n @ 6 + 8 "goedel6_3_assert" [39;49m[33;40massert[39;49m[34;49m  } ix { (| n )  n @ p  n 3 =  n dup @ 4 + =  n @ dup p 7 "goedel6_4_assert" assert   .. [39;49m[32;49m
0x7fa6de044d95    49b98da803dea67f0000    mov r9, 0x7fa6de03a88d                                 [39;49m[32;49m
0x7fa6de044d9f    49ffd1                  call r9                    	< System.[34;49massert1[39;49m : 0x00007fa6de03a88d >[39;49m
[34;49m ..  dup p 7 "goedel6_4_assert" assert  } [39;49m[33;40mix[39;49m[34;49m n @ dup p ; ".I" typeSignature ' goedel6 find wdiss 9 goedel6 "goedel6_0_assert" assert  .. [39;49m[32;49m
0x7fa6de044da2    498b4720                mov rax, [r15+0x20]                                    [39;49m[32;49m
0x7fa6de044da6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044daa    498906                  mov [r14], rax                                         [39;49m
[34;49m .. _3_assert" assert  } ix { (| n )  n @ [39;49m[33;40mp[39;49m[34;49m  n 3 =  n dup @ 4 + =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p ; ".I" typeS .. [39;49m[32;49m
0x7fa6de044dad    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de044db7    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. assert" assert  } ix { (| n )  n @ p  [39;49m[33;40mn[39;49m[34;49m 3 =  n dup @ 4 + =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p ; ".I" typeSign .. [39;49m[32;49m
0x7fa6de044dba    498d4720                lea rax, [r15+0x20]                                    [39;49m
[34;49m .. sert" assert  } ix { (| n )  n @ p  n [39;49m[33;40m3[39;49m[34;49m =  n dup @ 4 + =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p ; ".I" typeSignat .. [39;49m[32;49m
0x7fa6de044dbe    48b90300000000000000    mov rcx, 0x3                                           [39;49m
[34;49m .. rt" assert  } ix { (| n )  n @ p  n 3 [39;49m[33;40m=[39;49m[34;49m  n dup @ 4 + =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p ; ".I" typeSignatur .. [39;49m[32;49m
0x7fa6de044dc8    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  assert  } ix { (| n )  n @ p  n 3 =  [39;49m[33;40mn[39;49m[34;49m dup @ 4 + =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p ; ".I" typeSignature ' .. [39;49m[32;49m
0x7fa6de044dcb    498d4720                lea rax, [r15+0x20]                                    [39;49m[32;49m
0x7fa6de044dcf    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de044dd3    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ssert  } ix { (| n )  n @ p  n 3 =  n [39;49m[33;40mdup[39;49m[34;49m @ 4 + =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p ; ".I" typeSignature ' g .. [39;49m[32;49m
0x7fa6de044dd6    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. t  } ix { (| n )  n @ p  n 3 =  n dup [39;49m[33;40m@[39;49m[34;49m 4 + =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p ; ".I" typeSignature ' goede .. [39;49m[32;49m
0x7fa6de044dda    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de044ddd    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de044de0    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  } ix { (| n )  n @ p  n 3 =  n dup @ [39;49m[33;40m4[39;49m[34;49m + =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p ; ".I" typeSignature ' goedel6 .. [39;49m[32;49m
0x7fa6de044de3    48b80400000000000000    mov rax, 0x4                                           [39;49m[32;49m
0x7fa6de044ded    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de044df0    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de044df3    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  ix { (| n )  n @ p  n 3 =  n dup @ 4 [39;49m[33;40m+[39;49m[34;49m =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p ; ".I" typeSignature ' goedel6 f .. [39;49m[32;49m
0x7fa6de044df7    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de044dfa    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de044dfd    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de044e00    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. x { (| n )  n @ p  n 3 =  n dup @ 4 + [39;49m[33;40m=[39;49m[34;49m  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p ; ".I" typeSignature ' goedel6 fin .. [39;49m[32;49m
0x7fa6de044e04    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  (| n )  n @ p  n 3 =  n dup @ 4 + =  [39;49m[33;40mn[39;49m[34;49m @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p ; ".I" typeSignature ' goedel6 find w .. [39;49m[32;49m
0x7fa6de044e07    498b4720                mov rax, [r15+0x20]                                    [39;49m[32;49m
0x7fa6de044e0b    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de044e0f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. n )  n @ p  n 3 =  n dup @ 4 + =  n @ [39;49m[33;40mdup[39;49m[34;49m p 7 "goedel6_4_assert" assert  } ix n @ dup p ; ".I" typeSignature ' goedel6 find wdiss .. [39;49m[32;49m
0x7fa6de044e12    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..  n @ p  n 3 =  n dup @ 4 + =  n @ dup [39;49m[33;40mp[39;49m[34;49m 7 "goedel6_4_assert" assert  } ix n @ dup p ; ".I" typeSignature ' goedel6 find wdiss 9 g .. [39;49m[32;49m
0x7fa6de044e16    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de044e20    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m ..  @ p  n 3 =  n dup @ 4 + =  n @ dup p [39;49m[33;40m7[39;49m[34;49m "goedel6_4_assert" assert  } ix n @ dup p ; ".I" typeSignature ' goedel6 find wdiss 9 goe .. [39;49m[32;49m
0x7fa6de044e23    48b80700000000000000    mov rax, 0x7                                           [39;49m[32;49m
0x7fa6de044e2d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044e31    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  p  n 3 =  n dup @ 4 + =  n @ dup p 7 [39;49m[33;40m"goedel6_4_assert"[39;49m[34;49m assert  } ix n @ dup p ; ".I" typeSignature ' goedel6 find wdiss 9 goede .. [39;49m[32;49m
0x7fa6de044e34    48b8c310ffdda67f0000    mov rax, 0x7fa6ddff10c3    	< string : '[34;49mgoedel6_4_assert[39;49m' >[39;49m[32;49m
0x7fa6de044e3e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044e42    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 4 + =  n @ dup p 7 "goedel6_4_assert" [39;49m[33;40massert[39;49m[34;49m  } ix n @ dup p ; ".I" typeSignature ' goedel6 find wdiss 9 goedel6 "goedel6_0_asser .. [39;49m[32;49m
0x7fa6de044e45    49b98da803dea67f0000    mov r9, 0x7fa6de03a88d                                 [39;49m[32;49m
0x7fa6de044e4f    49ffd1                  call r9                    	< System.[34;49massert1[39;49m : 0x00007fa6de03a88d >[39;49m
[34;49m .. p p 7 "goedel6_4_assert" assert  } ix [39;49m[33;40mn[39;49m[34;49m @ dup p ; ".I" typeSignature ' goedel6 find wdiss 9 goedel6 "goedel6_0_assert" assert "\n .. [39;49m[32;49m
0x7fa6de044e52    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de044e56    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de044e5a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 7 "goedel6_4_assert" assert  } ix n @ [39;49m[33;40mdup[39;49m[34;49m p ; ".I" typeSignature ' goedel6 find wdiss 9 goedel6 "goedel6_0_assert" assert "\ngoed .. [39;49m[32;49m
0x7fa6de044e5d    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fa6de044e61    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de044e6b    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m[32;49m
0x7fa6de044e6e    498b06                  mov rax, [r14]                                         [39;49m
[34;49m .. oedel6_4_assert" assert  } ix n @ dup [39;49m[33;40mp[39;49m[34;49m ; ".I" typeSignature ' goedel6 find wdiss 9 goedel6 "goedel6_0_assert" assert "\ngoedel6  .. [39;49m[32;49m
0x7fa6de044e71    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de044e75    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de044e79    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044e7d    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de044e80    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'goedel6' :: codeSize = 600
Word : 0x00007fa6dd6ebe48 :: Compiled at : 0x00007fa6de044c28
 =============================
::> 'wdiss' was called at namespaces/test/lisp.cft 245.1 <::
 
 goedel6 ::  140354656321096 2 goedel6_1_assert  : ok

 140354665263664 7 goedel6_2_assert  : ok

 goedel6_3_assert  : ok

 140354665720668 7 goedel6_4_assert  : ok

 9 goedel6_0_assert  : ok

 
goedel6 output should read (after ignoring _asserts) : 
 'junk' 2 'junk' 7 'junk' 7 9[39;49m
 
goedel8 output :  140354665779473 2 goedel8_1_assert  : ok

 0 7 goedel8_3_assert  : ok

 goedel8_4_assert  : ok

 140354665721937 10 goedel8_5_assert  : ok

 9 goedel8_6_assert  : ok

 
goedel8 output should read : 
'junk' 2 'junk' 7 'junk' 10 9[39;49m

 =============================
Root.[34;49mgoedel8[39;49m <:> cfrTil compiled word
SourceCode for Root.[34;49mgoedel8[39;49m :> 
[34;49m( :: "\ngoedel8 output : " ps : goedel8 (| n -- TOS -t "V.I" ) n 1 = { 'n var n @ p n 2 = n @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert } ix { 'n var n @ p n 3 = n dup @ 7 + = n @ dup p 10 "goedel8_5_assert" assert } ix n @ 8 + dup p ; goedel8 9 "goedel8_6_assert" assert1 "\ngoedel8 output should read : \n'junk' 2 'junk' 7 'junk' 10 9" ps )[39;49m
Source code file location of [34;49mgoedel8[39;49m : "namespaces/test/lisp.cft" : 267.2 :: we are now at : namespaces/test/lisp.cft : 268.24
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xde044e86 -- code size = 584 bytes
TypeSignature : 
 -----------------------------
Word :: Root.[34;49mgoedel8[39;49m : definition = 0x00007fa6de044e86 : disassembly at namespaces/test/lisp.cft : 268.24 :
[34;49m ..            ( :: "\ngoedel8 output : " [39;49m[33;40mps[39;49m[34;49m  : goedel8 (| n -- TOS -t "V.I" )  n 1 = {  'n var n @ p  n 2 = n @ dup p 2 "goedel8_1_a .. [39;49m[32;49m
0x7fa6de044e86    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de044e8a    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de044e8e    4981c628000000          add r14, 0x28                                          [39;49m
[34;49m .. ps  : goedel8 (| n -- TOS -t "V.I" )  [39;49m[33;40mn[39;49m[34;49m 1 = {  'n var n @ p  n 2 = n @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ .. [39;49m[32;49m
0x7fa6de044e95    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..   : goedel8 (| n -- TOS -t "V.I" )  n [39;49m[33;40m1[39;49m[34;49m = {  'n var n @ p  n 2 = n @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 .. [39;49m[32;49m
0x7fa6de044e99    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. : goedel8 (| n -- TOS -t "V.I" )  n 1 [39;49m[33;40m=[39;49m[34;49m {  'n var n @ p  n 2 = n @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + .. [39;49m[32;49m
0x7fa6de044ea3    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 8 (| n -- TOS -t "V.I" )  n 1 = {  'n [39;49m[33;40mvar[39;49m[34;49m n @ p  n 2 = n @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 .. [39;49m[32;49m
0x7fa6de044ea6    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fa6de044eaa    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044eae    498906                  mov [r14], rax                                         [39;49m
[34;49m .. - TOS -t "V.I" )  n 1 = {  'n var n @ [39;49m[33;40mp[39;49m[34;49m  n 2 = n @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel .. [39;49m[32;49m
0x7fa6de044eb1    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de044ebb    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. OS -t "V.I" )  n 1 = {  'n var n @ p  [39;49m[33;40mn[39;49m[34;49m 2 = n @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3 .. [39;49m[32;49m
0x7fa6de044ebe    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m ..  -t "V.I" )  n 1 = {  'n var n @ p  n [39;49m[33;40m2[39;49m[34;49m = n @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_a .. [39;49m[32;49m
0x7fa6de044ec2    48b90200000000000000    mov rcx, 0x2                                           [39;49m
[34;49m .. t "V.I" )  n 1 = {  'n var n @ p  n 2 [39;49m[33;40m=[39;49m[34;49m n @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_ass .. [39;49m[32;49m
0x7fa6de044ecc    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. "V.I" )  n 1 = {  'n var n @ p  n 2 = [39;49m[33;40mn[39;49m[34;49m @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_asser .. [39;49m[32;49m
0x7fa6de044ecf    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fa6de044ed3    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de044ed7    498906                  mov [r14], rax                                         [39;49m
[34;49m .. " )  n 1 = {  'n var n @ p  n 2 = n @ [39;49m[33;40mdup[39;49m[34;49m p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_assert" a .. [39;49m[32;49m
0x7fa6de044eda    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..  n 1 = {  'n var n @ p  n 2 = n @ dup [39;49m[33;40mp[39;49m[34;49m 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_assert" asser .. [39;49m[32;49m
0x7fa6de044ede    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de044ee8    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m ..  1 = {  'n var n @ p  n 2 = n @ dup p [39;49m[33;40m2[39;49m[34;49m "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_assert" assert  .. [39;49m[32;49m
0x7fa6de044eeb    48b80200000000000000    mov rax, 0x2                                           [39;49m[32;49m
0x7fa6de044ef5    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044ef9    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  = {  'n var n @ p  n 2 = n @ dup p 2 [39;49m[33;40m"goedel8_1_assert"[39;49m[34;49m assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_assert" assert }  .. [39;49m[32;49m
0x7fa6de044efc    48b8bf17ffdda67f0000    mov rax, 0x7fa6ddff17bf    	< string : '[34;49mgoedel8_1_assert[39;49m' >[39;49m[32;49m
0x7fa6de044f06    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044f0a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  n 2 = n @ dup p 2 "goedel8_1_assert" [39;49m[33;40massert[39;49m[34;49m { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goede .. [39;49m[32;49m
0x7fa6de044f0d    49b98da803dea67f0000    mov r9, 0x7fa6de03a88d                                 [39;49m[32;49m
0x7fa6de044f17    49ffd1                  call r9                    	< System.[34;49massert1[39;49m : 0x00007fa6de03a88d >[39;49m
[34;49m .. up p 2 "goedel8_1_assert" assert { 'n [39;49m[33;40mvar[39;49m[34;49m n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" .. [39;49m[32;49m
0x7fa6de044f1a    498b4718                mov rax, [r15+0x18]                                    [39;49m[32;49m
0x7fa6de044f1e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044f22    498906                  mov [r14], rax                                         [39;49m
[34;49m .. goedel8_1_assert" assert { 'n var n @ [39;49m[33;40mp[39;49m[34;49m n 3 = n @ 4 + dup p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  .. [39;49m[32;49m
0x7fa6de044f25    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de044f2f    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. edel8_1_assert" assert { 'n var n @ p [39;49m[33;40mn[39;49m[34;49m 3 = n @ 4 + dup p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } .. [39;49m[32;49m
0x7fa6de044f32    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m .. el8_1_assert" assert { 'n var n @ p n [39;49m[33;40m3[39;49m[34;49m = n @ 4 + dup p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } i .. [39;49m[32;49m
0x7fa6de044f36    48b90300000000000000    mov rcx, 0x3                                           [39;49m
[34;49m .. 8_1_assert" assert { 'n var n @ p n 3 [39;49m[33;40m=[39;49m[34;49m n @ 4 + dup p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix  .. [39;49m[32;49m
0x7fa6de044f40    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 1_assert" assert { 'n var n @ p n 3 = [39;49m[33;40mn[39;49m[34;49m @ 4 + dup p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  .. [39;49m[32;49m
0x7fa6de044f43    498b4718                mov rax, [r15+0x18]                                    [39;49m
[34;49m .. sert" assert { 'n var n @ p n 3 = n @ [39;49m[33;40m4[39;49m[34;49m + dup p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n  .. [39;49m[32;49m
0x7fa6de044f47    48b90400000000000000    mov rcx, 0x4                                           [39;49m
[34;49m .. rt" assert { 'n var n @ p n 3 = n @ 4 [39;49m[33;40m+[39;49m[34;49m dup p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n va .. [39;49m[32;49m
0x7fa6de044f51    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de044f54    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de044f58    498906                  mov [r14], rax                                         [39;49m
[34;49m .. " assert { 'n var n @ p n 3 = n @ 4 + [39;49m[33;40mdup[39;49m[34;49m p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n var  .. [39;49m[32;49m
0x7fa6de044f5b    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. sert { 'n var n @ p n 3 = n @ 4 + dup [39;49m[33;40mp[39;49m[34;49m 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n var n @  .. [39;49m[32;49m
0x7fa6de044f5f    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de044f69    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. rt { 'n var n @ p n 3 = n @ 4 + dup p [39;49m[33;40m7[39;49m[34;49m "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n var n @ p  .. [39;49m[32;49m
0x7fa6de044f6c    48b80700000000000000    mov rax, 0x7                                           [39;49m[32;49m
0x7fa6de044f76    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044f7a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  { 'n var n @ p n 3 = n @ 4 + dup p 7 [39;49m[33;40m"goedel8_3_assert"[39;49m[34;49m assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n var n @ p  n .. [39;49m[32;49m
0x7fa6de044f7d    48b8f417ffdda67f0000    mov rax, 0x7fa6ddff17f4    	< string : '[34;49mgoedel8_3_assert[39;49m' >[39;49m[32;49m
0x7fa6de044f87    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044f8b    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  = n @ 4 + dup p 7 "goedel8_3_assert" [39;49m[33;40massert[39;49m[34;49m } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n var n @ p  n 3 =  n dup @ 7 + = .. [39;49m[32;49m
0x7fa6de044f8e    49b98da803dea67f0000    mov r9, 0x7fa6de03a88d                                 [39;49m[32;49m
0x7fa6de044f98    49ffd1                  call r9                    	< System.[34;49massert1[39;49m : 0x00007fa6de03a88d >[39;49m
[34;49m .. up p 7 "goedel8_3_assert" assert } ix [39;49m[33;40mn[39;49m[34;49m @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n var n @ p  n 3 =  n dup @ 7 + =  n @ dup p  .. [39;49m[32;49m
0x7fa6de044f9b    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  7 "goedel8_3_assert" assert } ix n @ [39;49m[33;40m6[39;49m[34;49m + 8 "goedel8_4_assert" assert  } ix {  'n var n @ p  n 3 =  n dup @ 7 + =  n @ dup p 10 " .. [39;49m[32;49m
0x7fa6de044f9f    48b90600000000000000    mov rcx, 0x6                                           [39;49m
[34;49m ..  "goedel8_3_assert" assert } ix n @ 6 [39;49m[33;40m+[39;49m[34;49m 8 "goedel8_4_assert" assert  } ix {  'n var n @ p  n 3 =  n dup @ 7 + =  n @ dup p 10 "go .. [39;49m[32;49m
0x7fa6de044fa9    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de044fac    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044fb0    498906                  mov [r14], rax                                         [39;49m
[34;49m .. goedel8_3_assert" assert } ix n @ 6 + [39;49m[33;40m8[39;49m[34;49m "goedel8_4_assert" assert  } ix {  'n var n @ p  n 3 =  n dup @ 7 + =  n @ dup p 10 "goed .. [39;49m[32;49m
0x7fa6de044fb3    48b80800000000000000    mov rax, 0x8                                           [39;49m[32;49m
0x7fa6de044fbd    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044fc1    498906                  mov [r14], rax                                         [39;49m
[34;49m .. edel8_3_assert" assert } ix n @ 6 + 8 [39;49m[33;40m"goedel8_4_assert"[39;49m[34;49m assert  } ix {  'n var n @ p  n 3 =  n dup @ 7 + =  n @ dup p 10 "goedel .. [39;49m[32;49m
0x7fa6de044fc4    48b81c18ffdda67f0000    mov rax, 0x7fa6ddff181c    	< string : '[34;49mgoedel8_4_assert[39;49m' >[39;49m[32;49m
0x7fa6de044fce    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044fd2    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ert } ix n @ 6 + 8 "goedel8_4_assert" [39;49m[33;40massert[39;49m[34;49m  } ix {  'n var n @ p  n 3 =  n dup @ 7 + =  n @ dup p 10 "goedel8_5_assert" assert  .. [39;49m[32;49m
0x7fa6de044fd5    49b98da803dea67f0000    mov r9, 0x7fa6de03a88d                                 [39;49m[32;49m
0x7fa6de044fdf    49ffd1                  call r9                    	< System.[34;49massert1[39;49m : 0x00007fa6de03a88d >[39;49m
[34;49m .. "goedel8_4_assert" assert  } ix {  'n [39;49m[33;40mvar[39;49m[34;49m n @ p  n 3 =  n dup @ 7 + =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p .. [39;49m[32;49m
0x7fa6de044fe2    498b4720                mov rax, [r15+0x20]                                    [39;49m[32;49m
0x7fa6de044fe6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de044fea    498906                  mov [r14], rax                                         [39;49m
[34;49m .. _4_assert" assert  } ix {  'n var n @ [39;49m[33;40mp[39;49m[34;49m  n 3 =  n dup @ 7 + =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p ; goede .. [39;49m[32;49m
0x7fa6de044fed    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de044ff7    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m .. assert" assert  } ix {  'n var n @ p  [39;49m[33;40mn[39;49m[34;49m 3 =  n dup @ 7 + =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p ; goedel8  .. [39;49m[32;49m
0x7fa6de044ffa    498d4720                lea rax, [r15+0x20]                                    [39;49m
[34;49m .. sert" assert  } ix {  'n var n @ p  n [39;49m[33;40m3[39;49m[34;49m =  n dup @ 7 + =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p ; goedel8 9  .. [39;49m[32;49m
0x7fa6de044ffe    48b90300000000000000    mov rcx, 0x3                                           [39;49m
[34;49m .. rt" assert  } ix {  'n var n @ p  n 3 [39;49m[33;40m=[39;49m[34;49m  n dup @ 7 + =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p ; goedel8 9 "g .. [39;49m[32;49m
0x7fa6de045008    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  assert  } ix {  'n var n @ p  n 3 =  [39;49m[33;40mn[39;49m[34;49m dup @ 7 + =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p ; goedel8 9 "goed .. [39;49m[32;49m
0x7fa6de04500b    498d4720                lea rax, [r15+0x20]                                    [39;49m[32;49m
0x7fa6de04500f    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de045013    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ssert  } ix {  'n var n @ p  n 3 =  n [39;49m[33;40mdup[39;49m[34;49m @ 7 + =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p ; goedel8 9 "goedel .. [39;49m[32;49m
0x7fa6de045016    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. t  } ix {  'n var n @ p  n 3 =  n dup [39;49m[33;40m@[39;49m[34;49m 7 + =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p ; goedel8 9 "goedel8_6_ .. [39;49m[32;49m
0x7fa6de04501a    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04501d    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de045020    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  } ix {  'n var n @ p  n 3 =  n dup @ [39;49m[33;40m7[39;49m[34;49m + =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p ; goedel8 9 "goedel8_6_as .. [39;49m[32;49m
0x7fa6de045023    48b80700000000000000    mov rax, 0x7                                           [39;49m[32;49m
0x7fa6de04502d    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de045030    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de045033    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  ix {  'n var n @ p  n 3 =  n dup @ 7 [39;49m[33;40m+[39;49m[34;49m =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p ; goedel8 9 "goedel8_6_asse .. [39;49m[32;49m
0x7fa6de045037    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de04503a    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de04503d    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de045040    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. x {  'n var n @ p  n 3 =  n dup @ 7 + [39;49m[33;40m=[39;49m[34;49m  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p ; goedel8 9 "goedel8_6_assert .. [39;49m[32;49m
0x7fa6de045044    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..   'n var n @ p  n 3 =  n dup @ 7 + =  [39;49m[33;40mn[39;49m[34;49m @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p ; goedel8 9 "goedel8_6_assert" a .. [39;49m[32;49m
0x7fa6de045047    498b4720                mov rax, [r15+0x20]                                    [39;49m[32;49m
0x7fa6de04504b    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de04504f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  var n @ p  n 3 =  n dup @ 7 + =  n @ [39;49m[33;40mdup[39;49m[34;49m p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p ; goedel8 9 "goedel8_6_assert" asser .. [39;49m[32;49m
0x7fa6de045052    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..  n @ p  n 3 =  n dup @ 7 + =  n @ dup [39;49m[33;40mp[39;49m[34;49m 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p ; goedel8 9 "goedel8_6_assert" assert1 " .. [39;49m[32;49m
0x7fa6de045056    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de045060    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m ..  @ p  n 3 =  n dup @ 7 + =  n @ dup p [39;49m[33;40m10[39;49m[34;49m "goedel8_5_assert" assert  } ix n @ 8 + dup p ; goedel8 9 "goedel8_6_assert" assert1 "\n .. [39;49m[32;49m
0x7fa6de045063    48b80a00000000000000    mov rax, 0xa                                           [39;49m[32;49m
0x7fa6de04506d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de045071    498906                  mov [r14], rax                                         [39;49m
[34;49m .. p  n 3 =  n dup @ 7 + =  n @ dup p 10 [39;49m[33;40m"goedel8_5_assert"[39;49m[34;49m assert  } ix n @ 8 + dup p ; goedel8 9 "goedel8_6_assert" assert1 "\ngoe .. [39;49m[32;49m
0x7fa6de045074    48b85218ffdda67f0000    mov rax, 0x7fa6ddff1852    	< string : '[34;49mgoedel8_5_assert[39;49m' >[39;49m[32;49m
0x7fa6de04507e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de045082    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  + =  n @ dup p 10 "goedel8_5_assert" [39;49m[33;40massert[39;49m[34;49m  } ix n @ 8 + dup p ; goedel8 9 "goedel8_6_assert" assert1 "\ngoedel8 output should  .. [39;49m[32;49m
0x7fa6de045085    49b98da803dea67f0000    mov r9, 0x7fa6de03a88d                                 [39;49m[32;49m
0x7fa6de04508f    49ffd1                  call r9                    	< System.[34;49massert1[39;49m : 0x00007fa6de03a88d >[39;49m
[34;49m ..  p 10 "goedel8_5_assert" assert  } ix [39;49m[33;40mn[39;49m[34;49m @ 8 + dup p ; goedel8 9 "goedel8_6_assert" assert1 "\ngoedel8 output should read : \n'jun .. [39;49m[32;49m
0x7fa6de045092    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. 0 "goedel8_5_assert" assert  } ix n @ [39;49m[33;40m8[39;49m[34;49m + dup p ; goedel8 9 "goedel8_6_assert" assert1 "\ngoedel8 output should read : \n'junk' 2 .. [39;49m[32;49m
0x7fa6de045096    48b90800000000000000    mov rcx, 0x8                                           [39;49m
[34;49m .. "goedel8_5_assert" assert  } ix n @ 8 [39;49m[33;40m+[39;49m[34;49m dup p ; goedel8 9 "goedel8_6_assert" assert1 "\ngoedel8 output should read : \n'junk' 2 ' .. [39;49m[32;49m
0x7fa6de0450a0    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de0450a3    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de0450a7    498906                  mov [r14], rax                                         [39;49m
[34;49m .. oedel8_5_assert" assert  } ix n @ 8 + [39;49m[33;40mdup[39;49m[34;49m p ; goedel8 9 "goedel8_6_assert" assert1 "\ngoedel8 output should read : \n'junk' 2 'ju .. [39;49m[32;49m
0x7fa6de0450aa    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fa6de0450ae    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de0450b8    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m[32;49m
0x7fa6de0450bb    498b06                  mov rax, [r14]                                         [39;49m
[34;49m .. l8_5_assert" assert  } ix n @ 8 + dup [39;49m[33;40mp[39;49m[34;49m ; goedel8 9 "goedel8_6_assert" assert1 "\ngoedel8 output should read : \n'junk' 2 'junk'  .. [39;49m[32;49m
0x7fa6de0450be    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0450c2    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de0450c6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0450ca    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de0450cd    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'goedel8' :: codeSize = 583
Word : 0x00007fa6dd6f3318 :: Compiled at : 0x00007fa6de044e86
 =============================
::> 'wdiss' was called at namespaces/test/lisp.cft 268.24 <::
[39;49m ( ( 1 2 ) )
[39;49m ( 1 2 )
[39;49m x
[39;49m a
[39;49m x1
[39;49m a1
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ( Its "the" beautiful day don't "let" it get away )
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ( Its a beautiful day don't x1 it get away )
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ( Its a beautiful day don't x it get away )
 testing unquote above line should show : ( Its a beautiful day don't x it get away )
[39;49m ( Its a beautiful day don't x1 it get away )
 testing unquote above line should show : ( Its a beautiful day don't x1 it get away )
[39;49m ( Its "the" beautiful day don't "let" it get away )
[39;49m ( Its a beautiful day don't let it get away )
[34;49m 
ending lisp.cft
total 40
drwxr-xr-x 10 root root 4096 Jan 17 21:16 .
drwxr-xr-x 14 root root 4096 Jan 17 21:17 ..
drwxr-xr-x  2 root root 4096 Jan 18 06:44 bin
drwxr-xr-x  2 root root 4096 Jan 18 06:44 etc
drwxr-xr-x  2 root root 4096 Jan 17 21:16 games
drwxr-xr-x  3 root root 4096 Jan 18 06:40 include
drwxr-xr-x  6 root root 4096 Jan 18 10:27 lib
lrwxrwxrwx  1 root root    9 Jan 18 05:45 man -> share/man
drwxr-xr-x  2 root root 4096 Jan 17 21:16 sbin
drwxr-xr-x  9 root root 4096 Jan 18 06:40 share
drwxr-xr-x  2 root root 4096 Jan 17 21:16 src
[39;49m[39;49m[39;49m
typeChecking is off, optimize is on, inlining is on, infixMode is off, 
prefixMode is off, c_syntax is off, postfixMode is on
Debug is off. Verbosity = 1. Console = 0, NumberBase = 10.
DebugSourceCode on : BigNum off : Lisp off
interpreting : at etc/script : 7.6
version 0.902.200
 7 7 7
version 0.902.200
[39;49m yfac
[39;49m 3628800

[39;49m yfacc
[39;49m 3628800

[39;49m 5040

[34;49m
Increase the verbosity setting to 2 or more for more info here. ( Eg. : verbosity 2 = )[39;49m
ContextSpace                                InUse =     29248 : Unused =      1856
ContextSpace                                InUse =      8768 : Unused =      1472
StringSpace                                 InUse =     16594 : Unused =     85806
HistorySpace                                InUse =         0 : Unused =     10240
BufferSpace                                 InUse =     54360 : Unused =     48040
LispTempSpace                               InUse =    216832 : Unused =     20544
DictionarySpace                             InUse =    784128 : Unused =     50752
SessionObjectsSpace                         InUse =     22453 : Unused =      1440
CodeSpace                                   InUse =     20773 : Unused =    286427
CompilerTempObjectSpace                     InUse =    257119 : Unused =     19457
TempObjectSpace                             InUse =      1423 : Unused =      3796
LispSpace                                   InUse =    155952 : Unused =     15240
InternalObjectSpace                         InUse =     74190 : Unused =     28210
CfrTilInternalSpace                         InUse =    106168 : Unused =     95656
OpenVmTilSpace                              InUse =      5240 : Unused =      3976
Data Stack                                  InUse =         0 : Unused =     16384
Total Accounted Mem                         InUse =   1828504 : Unused =    672912
Mmap_RemainingMemoryAllocated                     =   2614064 : <=: ovt->Mmap_RemainingMemoryAllocated
Total Memory Allocated                            =   2501416
Total Memory leaks                                =         0
RecycledWordCount ::     5 x 560 bytes : Recycled =      2800[39;49m fibc
[39;49m 6765

 =============================
Int.[34;49mfac[39;49m <:> cfrTil compiled word
SourceCode for Int.[34;49mfac[39;49m :> 
[34;49m: fac ( n | rec1 -- TOS ) rec1 1 = { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while rec1 @ ; [39;49m
Source code file location of [34;49mfac[39;49m : "etc/script" : 27.27 :: we are now at : etc/script : 32.17
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0x23f3b3d -- code size = 87 bytes
TypeSignature : 
 -----------------------------
Word :: Int.[34;49mfac[39;49m : definition = 0x00007f52023f3b3d : disassembly at etc/script : 32.17 :
[34;49m ..                                     : [39;49m[33;40mfac[39;49m[34;49m ( n | rec1 -- TOS )  rec1 1 =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  rec1 .. [39;49m[32;49m
0x7f52023f3b3d    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7f52023f3b41    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7f52023f3b45    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..            : fac ( n | rec1 -- TOS )  [39;49m[33;40mrec1[39;49m[34;49m 1 =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  rec1 @  ;  .. [39;49m[32;49m
0x7f52023f3b4c    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..       : fac ( n | rec1 -- TOS )  rec1 [39;49m[33;40m1[39;49m[34;49m =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  rec1 @  ;  .. [39;49m[32;49m
0x7f52023f3b50    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m ..     : fac ( n | rec1 -- TOS )  rec1 1 [39;49m[33;40m=[39;49m[34;49m  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  rec1 @  ;  .. [39;49m[32;49m
0x7f52023f3b5a    488908                  mov [rax], rcx                                         [39;49m
[34;49m   : fac ( n | rec1 -- TOS )  rec1 1 =  { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ rec1 @ * rec1 store n -- } while  rec1 @  ;  .. [39;49m[32;49m
0x7f52023f3b5d    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  n | rec1 -- TOS )  rec1 1 =  { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ rec1 @ * rec1 store n -- } while  rec1 @  ; [39;49m[32;49m
0x7f52023f3b61    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7f52023f3b65    0f8e19000000            jle 0x7f52023f3b84         	< Int.[34;49mfac[39;49m+71 >[39;49m
[34;49m .. ec1 -- TOS )  rec1 1 =  { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ rec1 @ * rec1 store n -- } while  rec1 @  ; [39;49m[32;49m
0x7f52023f3b6b    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. -- TOS )  rec1 1 =  { n @ 1 > } { n @ [39;49m[33;40mrec1[39;49m[34;49m @ * rec1 store n -- } while  rec1 @  ; [39;49m[32;49m
0x7f52023f3b6f    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. )  rec1 1 =  { n @ 1 > } { n @ rec1 @ [39;49m[33;40m*[39;49m[34;49m rec1 store n -- } while  rec1 @  ; [39;49m[32;49m
0x7f52023f3b73    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..  rec1 1 =  { n @ 1 > } { n @ rec1 @ * [39;49m[33;40mrec1[39;49m[34;49m store n -- } while  rec1 @  ; [39;49m[32;49m
0x7f52023f3b77    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  1 =  { n @ 1 > } { n @ rec1 @ * rec1 [39;49m[33;40mstore[39;49m[34;49m n -- } while  rec1 @  ; [39;49m[32;49m
0x7f52023f3b7b    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. n @ 1 > } { n @ rec1 @ * rec1 store n [39;49m[33;40m--[39;49m[34;49m } while  rec1 @  ; [39;49m[32;49m
0x7f52023f3b7e    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  1 > } { n @ rec1 @ * rec1 store n -- [39;49m[33;40m}[39;49m[34;49m while  rec1 @  ; [39;49m[32;49m
0x7f52023f3b82    ebd9                    jmp 0x7f52023f3b5d         	< Int.[34;49mfac[39;49m+32 >[39;49m
[34;49m .. n @ rec1 @ * rec1 store n -- } while  [39;49m[33;40mrec1[39;49m[34;49m @  ; [39;49m[32;49m
0x7f52023f3b84    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  @ * rec1 store n -- } while  rec1 @  [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7f52023f3b88    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7f52023f3b8c    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7f52023f3b90    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7f52023f3b93    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac' :: codeSize = 86
Word : 0x00007f520232b228 :: Compiled at : 0x00007f52023f3b3d
 =============================
::> 'wdiss' was called at etc/script 32.17 <::
 5040
bye
[39;49m[39;49m
typeChecking is off, optimize is on, inlining is on, infixMode is off, 
prefixMode is off, c_syntax is off, postfixMode is on
Debug is off. Verbosity = 1. Console = 0, NumberBase = 10.
DebugSourceCode on : BigNum off : Lisp off
interpreting : at etc/lispScript : 4.6
version 0.902.200
[39;49m 7
[39;49m yfac
[39;49m 3628800

[39;49m yfacc
[39;49m 3628800

[39;49m 5040

[39;49m fibc
[39;49m 6765

 =============================
Int.[34;49mfac[39;49m <:> cfrTil compiled word
SourceCode for Int.[34;49mfac[39;49m :> 
[34;49m: fac ( n | rec1 -- TOS ) rec1 1 = { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while rec1 @ ; [39;49m
Source code file location of [34;49mfac[39;49m : "etc/lispScript" : 22.27 :: we are now at : etc/lispScript : 27.17
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe5b65ab7 -- code size = 87 bytes
TypeSignature : 
 -----------------------------
Word :: Int.[34;49mfac[39;49m : definition = 0x00007f4be5b65ab7 : disassembly at etc/lispScript : 27.17 :
[34;49m ..                                     : [39;49m[33;40mfac[39;49m[34;49m ( n | rec1 -- TOS )  rec1 1 =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  rec1 .. [39;49m[32;49m
0x7f4be5b65ab7    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7f4be5b65abb    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7f4be5b65abf    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..            : fac ( n | rec1 -- TOS )  [39;49m[33;40mrec1[39;49m[34;49m 1 =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  rec1 @  ;  .. [39;49m[32;49m
0x7f4be5b65ac6    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..       : fac ( n | rec1 -- TOS )  rec1 [39;49m[33;40m1[39;49m[34;49m =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  rec1 @  ;  .. [39;49m[32;49m
0x7f4be5b65aca    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m ..     : fac ( n | rec1 -- TOS )  rec1 1 [39;49m[33;40m=[39;49m[34;49m  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  rec1 @  ;  .. [39;49m[32;49m
0x7f4be5b65ad4    488908                  mov [rax], rcx                                         [39;49m
[34;49m   : fac ( n | rec1 -- TOS )  rec1 1 =  { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ rec1 @ * rec1 store n -- } while  rec1 @  ;  .. [39;49m[32;49m
0x7f4be5b65ad7    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  n | rec1 -- TOS )  rec1 1 =  { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ rec1 @ * rec1 store n -- } while  rec1 @  ; [39;49m[32;49m
0x7f4be5b65adb    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7f4be5b65adf    0f8e19000000            jle 0x7f4be5b65afe         	< Int.[34;49mfac[39;49m+71 >[39;49m
[34;49m .. ec1 -- TOS )  rec1 1 =  { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ rec1 @ * rec1 store n -- } while  rec1 @  ; [39;49m[32;49m
0x7f4be5b65ae5    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. -- TOS )  rec1 1 =  { n @ 1 > } { n @ [39;49m[33;40mrec1[39;49m[34;49m @ * rec1 store n -- } while  rec1 @  ; [39;49m[32;49m
0x7f4be5b65ae9    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. )  rec1 1 =  { n @ 1 > } { n @ rec1 @ [39;49m[33;40m*[39;49m[34;49m rec1 store n -- } while  rec1 @  ; [39;49m[32;49m
0x7f4be5b65aed    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..  rec1 1 =  { n @ 1 > } { n @ rec1 @ * [39;49m[33;40mrec1[39;49m[34;49m store n -- } while  rec1 @  ; [39;49m[32;49m
0x7f4be5b65af1    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  1 =  { n @ 1 > } { n @ rec1 @ * rec1 [39;49m[33;40mstore[39;49m[34;49m n -- } while  rec1 @  ; [39;49m[32;49m
0x7f4be5b65af5    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. n @ 1 > } { n @ rec1 @ * rec1 store n [39;49m[33;40m--[39;49m[34;49m } while  rec1 @  ; [39;49m[32;49m
0x7f4be5b65af8    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  1 > } { n @ rec1 @ * rec1 store n -- [39;49m[33;40m}[39;49m[34;49m while  rec1 @  ; [39;49m[32;49m
0x7f4be5b65afc    ebd9                    jmp 0x7f4be5b65ad7         	< Int.[34;49mfac[39;49m+32 >[39;49m
[34;49m .. n @ rec1 @ * rec1 store n -- } while  [39;49m[33;40mrec1[39;49m[34;49m @  ; [39;49m[32;49m
0x7f4be5b65afe    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  @ * rec1 store n -- } while  rec1 @  [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7f4be5b65b02    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7f4be5b65b06    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7f4be5b65b0a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7f4be5b65b0d    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac' :: codeSize = 86
Word : 0x00007f4be5a9d228 :: Compiled at : 0x00007f4be5b65ab7
 =============================
::> 'wdiss' was called at etc/lispScript 27.17 <::
 5040
bye
 3
total 824
drwxrwxr-x  10 dennisj dennisj   4096 Jan 18 10:27 .
drwxrwxrwx 110 dennisj dennisj  20480 Jan 18 10:35 ..
drwxrwxr-x   6 dennisj dennisj   4096 Jan 18 09:06 archive
drwxrwxr-x   2 dennisj dennisj   4096 Jan 18 10:27 bin
drwxrwxr-x   2 dennisj dennisj   4096 Jan 18 03:36 etc
drwxrwxr-x   8 dennisj dennisj   4096 Jan 18 03:36 .git
-rw-rw-r--   1 dennisj dennisj  14962 Jan 18 03:36 init.cft
-rw-rw-r--   1 dennisj dennisj     56 Jan 18 03:36 itestf
drwxrwxr-x   2 dennisj dennisj   4096 Jan 18 03:36 lib
-rw-rw-r--   1 dennisj dennisj   1078 Jan 18 03:36 LICENSE
-rwxrwxr-x   1 dennisj dennisj    260 Jan 18 03:36 m
-rwxrwxr-x   1 dennisj dennisj    685 Jan 18 03:36 m0
-rw-rw-r--   1 dennisj dennisj   7194 Jan 18 03:36 Makefile
-rwxrwxr-x   1 dennisj dennisj    643 Jan 18 03:36 mir
drwxrwxr-x   4 dennisj dennisj   4096 Jan 18 03:36 namespaces
drwxrwxr-x   3 dennisj dennisj   4096 Jan 18 03:36 nbproject
-rw-rw-r--   1 dennisj dennisj     40 Jan 18 03:36 nt.cft
-rwxrwxr-x   1 dennisj dennisj    133 Jan 18 03:36 r
-rw-rw-r--   1 dennisj dennisj  13223 Jan 18 03:36 README.txt
drwxrwxr-x   5 dennisj dennisj   4096 Jan 18 03:36 src
-rw-rw-r--   1 dennisj dennisj 706997 Jan 18 10:35 temp.out
-rw-rw-r--   1 dennisj dennisj     90 Jan 18 03:36 test
-rw-rw-r--   1 dennisj dennisj     90 Jan 18 03:36 test.txt

3
 namespaces/test/lisp.cft 308.9
 =============================
Infix.[34;49mhi[39;49m <:> cfrTil compiled word
SourceCode for Infix.[34;49mhi[39;49m :> 
[34;49m: hi ( | x -- TOS ) x = ( 2 + ( 3 * 4 ) ), x dup p ; [39;49m
Source code file location of [34;49mhi[39;49m : "namespaces/compiler/syntax.cft" : 6.73 :: we are now at : namespaces/compiler/syntax.cft : 7.16
Compiled with : optimizeOn, inlineOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde0451e2 -- code size = 117 bytes
TypeSignature : 
 -----------------------------
Word :: Infix.[34;49mhi[39;49m : definition = 0x00007fa6de0451e2 : disassembly at namespaces/compiler/syntax.cft : 7.16 :
[34;49m ..                                     : [39;49m[33;40mhi[39;49m[34;49m ( | x -- TOS ) x = ( 2 + ( 3 * 4 ) ), x dup p ;  .. [39;49m[32;49m
0x7fa6de0451e2    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de0451e6    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de0451ea    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..             : hi ( | x -- TOS ) x = ( [39;49m[33;40m2[39;49m[34;49m + ( 3 * 4 ) ), x dup p ;  .. [39;49m[32;49m
0x7fa6de0451f1    48b80200000000000000    mov rax, 0x2                                           [39;49m[32;49m
0x7fa6de0451fb    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0451ff    498906                  mov [r14], rax                                         [39;49m
[34;49m ..       : hi ( | x -- TOS ) x = ( 2 + ( [39;49m[33;40m3[39;49m[34;49m * 4 ) ), x dup p ;  .. [39;49m[32;49m
0x7fa6de045202    48b80c00000000000000    mov rax, 0xc                                           [39;49m[32;49m
0x7fa6de04520c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de045210    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : hi ( | x -- TOS ) x = ( 2 + ( 3 * 4 [39;49m[33;40m)[39;49m[34;49m ), x dup p ;  .. [39;49m[32;49m
0x7fa6de045213    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de045216    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04521a    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..           : hi ( | x -- TOS ) x = ( 2 [39;49m[33;40m+[39;49m[34;49m ( 3 * 4 ) ), x dup p ;  .. [39;49m[32;49m
0x7fa6de04521e    4803c1                  add rax, rcx                                           [39;49m
[34;49m ..                   : hi ( | x -- TOS ) [39;49m[33;40mx[39;49m[34;49m = ( 2 + ( 3 * 4 ) ), x dup p ;  .. [39;49m[32;49m
0x7fa6de045221    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..                 : hi ( | x -- TOS ) x [39;49m[33;40mstore[39;49m[34;49m + ( 3 * 4 ) ), x dup p ;  .. [39;49m[32;49m
0x7fa6de045225    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. ( | x -- TOS ) x = ( 2 + ( 3 * 4 ) ), [39;49m[33;40mx[39;49m[34;49m dup p ; [39;49m[32;49m
0x7fa6de045228    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de04522c    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de045230    498906                  mov [r14], rax                                         [39;49m
[34;49m .. | x -- TOS ) x = ( 2 + ( 3 * 4 ) ), x [39;49m[33;40mdup[39;49m[34;49m p ; [39;49m[32;49m
0x7fa6de045233    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. -- TOS ) x = ( 2 + ( 3 * 4 ) ), x dup [39;49m[33;40mp[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de045237    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de045241    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m[32;49m
0x7fa6de045244    498b06                  mov rax, [r14]                                         [39;49m
[34;49m ..  TOS ) x = ( 2 + ( 3 * 4 ) ), x dup p [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de045247    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04524b    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04524f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de045253    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de045256    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'hi' :: codeSize = 116
Word : 0x00007fa6dd60a1e8 :: Compiled at : 0x00007fa6de0451e2
 =============================
::> 'wdiss' was called at namespaces/compiler/syntax.cft 7.16 <::
 14
DataStack at : [34;49mnamespaces/compiler/syntax.cft : 8.15[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fa6ddf73220, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	

 =============================
Infix.[34;49mhi1[39;49m <:> cfrTil compiled word
SourceCode for Infix.[34;49mhi1[39;49m :> 
[34;49m: hi1 ( a b | x -- x ) x = 2 + ( ( a ) / ( b ) ) * ( 3 * 4 ) ; [39;49m
Source code file location of [34;49mhi1[39;49m : "namespaces/compiler/syntax.cft" : 11.63 :: we are now at : namespaces/compiler/syntax.cft : 12.17
Compiled with : optimizeOn, inlineOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04525c -- code size = 140 bytes
TypeSignature : 
 -----------------------------
Word :: Infix.[34;49mhi1[39;49m : definition = 0x00007fa6de04525c : disassembly at namespaces/compiler/syntax.cft : 12.17 :
[34;49m ..                                     : [39;49m[33;40mhi1[39;49m[34;49m ( a b | x -- x ) x = 2 + ( ( a ) / ( b ) ) * ( 3 * 4 ) ;  .. [39;49m[32;49m
0x7fa6de04525c    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de045260    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de045264    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..            : hi1 ( a b | x -- x ) x = [39;49m[33;40m2[39;49m[34;49m + ( ( a ) / ( b ) ) * ( 3 * 4 ) ;  .. [39;49m[32;49m
0x7fa6de04526b    48b80200000000000000    mov rax, 0x2                                           [39;49m
[34;49m ..                : hi1 ( a b | x -- x ) [39;49m[33;40mx[39;49m[34;49m = 2 + ( ( a ) / ( b ) ) * ( 3 * 4 ) ;  .. [39;49m[32;49m
0x7fa6de045275    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..              : hi1 ( a b | x -- x ) x [39;49m[33;40mstore[39;49m[34;49m ( ( a ) / ( b ) ) * ( 3 * 4 ) ;  .. [39;49m[32;49m
0x7fa6de045279    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..    : hi1 ( a b | x -- x ) x = 2 + ( ( [39;49m[33;40ma[39;49m[34;49m ) / ( b ) ) * ( 3 * 4 ) ;  .. [39;49m[32;49m
0x7fa6de04527c    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..  ( a b | x -- x ) x = 2 + ( ( a ) / ( [39;49m[33;40mb[39;49m[34;49m ) ) * ( 3 * 4 ) ; [39;49m[32;49m
0x7fa6de045280    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m   : hi1 ( a b | x -- x ) x = 2 + ( ( a ) [39;49m[33;40m/[39;49m[34;49m ( b ) ) * ( 3 * 4 ) ;  .. [39;49m[32;49m
0x7fa6de045284    48ba0000000000000000    mov rdx, 0x0                                           [39;49m[32;49m
0x7fa6de04528e    48f7f9                  idiv rcx                                               [39;49m[32;49m
0x7fa6de045291    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de045295    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  b | x -- x ) x = 2 + ( ( a ) / ( b ) [39;49m[33;40m)[39;49m[34;49m * ( 3 * 4 ) ; [39;49m[32;49m
0x7fa6de045298    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04529b    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04529f    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..          : hi1 ( a b | x -- x ) x = 2 [39;49m[33;40m+[39;49m[34;49m ( ( a ) / ( b ) ) * ( 3 * 4 ) ;  .. [39;49m[32;49m
0x7fa6de0452a3    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de0452a6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0452aa    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  -- x ) x = 2 + ( ( a ) / ( b ) ) * ( [39;49m[33;40m3[39;49m[34;49m * 4 ) ; [39;49m[32;49m
0x7fa6de0452ad    48b80c00000000000000    mov rax, 0xc                                           [39;49m[32;49m
0x7fa6de0452b7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0452bb    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ) x = 2 + ( ( a ) / ( b ) ) * ( 3 * 4 [39;49m[33;40m)[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de0452be    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de0452c1    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de0452c5    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. - x ) x = 2 + ( ( a ) / ( b ) ) * ( 3 [39;49m[33;40m*[39;49m[34;49m 4 ) ; [39;49m[32;49m
0x7fa6de0452c9    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fa6de0452cd    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0452d1    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de0452d4    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. x = 2 + ( ( a ) / ( b ) ) * ( 3 * 4 ) [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de0452d8    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0452dc    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de0452e0    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..                : hi1 ( a b | x -- x ) [39;49m[33;40mx[39;49m[34;49m = 2 + ( ( a ) / ( b ) ) * ( 3 * 4 ) ;  .. [39;49m[32;49m
0x7fa6de0452e4    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de0452e7    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'hi1' :: codeSize = 139
Word : 0x00007fa6dd60c750 :: Compiled at : 0x00007fa6de04525c
 =============================
::> 'wdiss' was called at namespaces/compiler/syntax.cft 12.17 <::
 48
 =============================
Infix.[34;49mhi1[39;49m <:> cfrTil compiled word
SourceCode for Infix.[34;49mhi1[39;49m :> 
[34;49m: hi1 ( a b | x -- x ) x = ( 2 + ( a / b ) * ( 3 * 4 ) ) ; [39;49m
Source code file location of [34;49mhi1[39;49m : "namespaces/compiler/syntax.cft" : 14.59 :: we are now at : namespaces/compiler/syntax.cft : 15.17
Compiled with : optimizeOn, inlineOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde0452ed -- code size = 140 bytes
TypeSignature : 
 -----------------------------
Word :: Infix.[34;49mhi1[39;49m : definition = 0x00007fa6de0452ed : disassembly at namespaces/compiler/syntax.cft : 15.17 :
[34;49m ..                                     : [39;49m[33;40mhi1[39;49m[34;49m ( a b | x -- x ) x = ( 2 + ( a / b ) * ( 3 * 4 ) ) ;  .. [39;49m[32;49m
0x7fa6de0452ed    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de0452f1    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de0452f5    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..          : hi1 ( a b | x -- x ) x = ( [39;49m[33;40m2[39;49m[34;49m + ( a / b ) * ( 3 * 4 ) ) ;  .. [39;49m[32;49m
0x7fa6de0452fc    48b80200000000000000    mov rax, 0x2                                           [39;49m[32;49m
0x7fa6de045306    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04530a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..    : hi1 ( a b | x -- x ) x = ( 2 + ( [39;49m[33;40ma[39;49m[34;49m / b ) * ( 3 * 4 ) ) ;  .. [39;49m[32;49m
0x7fa6de04530d    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m   : hi1 ( a b | x -- x ) x = ( 2 + ( a / [39;49m[33;40mb[39;49m[34;49m ) * ( 3 * 4 ) ) ;  .. [39;49m[32;49m
0x7fa6de045311    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..  : hi1 ( a b | x -- x ) x = ( 2 + ( a [39;49m[33;40m/[39;49m[34;49m b ) * ( 3 * 4 ) ) ;  .. [39;49m[32;49m
0x7fa6de045315    48ba0000000000000000    mov rdx, 0x0                                           [39;49m[32;49m
0x7fa6de04531f    48f7f9                  idiv rcx                                               [39;49m[32;49m
0x7fa6de045322    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de045326    498906                  mov [r14], rax                                         [39;49m
[34;49m : hi1 ( a b | x -- x ) x = ( 2 + ( a / b [39;49m[33;40m)[39;49m[34;49m * ( 3 * 4 ) ) ;  .. [39;49m[32;49m
0x7fa6de045329    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04532c    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de045330    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..        : hi1 ( a b | x -- x ) x = ( 2 [39;49m[33;40m+[39;49m[34;49m ( a / b ) * ( 3 * 4 ) ) ;  .. [39;49m[32;49m
0x7fa6de045334    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de045337    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04533b    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  b | x -- x ) x = ( 2 + ( a / b ) * ( [39;49m[33;40m3[39;49m[34;49m * 4 ) ) ; [39;49m[32;49m
0x7fa6de04533e    48b80c00000000000000    mov rax, 0xc                                           [39;49m[32;49m
0x7fa6de045348    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04534c    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  -- x ) x = ( 2 + ( a / b ) * ( 3 * 4 [39;49m[33;40m)[39;49m[34;49m ) ; [39;49m[32;49m
0x7fa6de04534f    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de045352    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de045356    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  | x -- x ) x = ( 2 + ( a / b ) * ( 3 [39;49m[33;40m*[39;49m[34;49m 4 ) ) ; [39;49m[32;49m
0x7fa6de04535a    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..                : hi1 ( a b | x -- x ) [39;49m[33;40mx[39;49m[34;49m = ( 2 + ( a / b ) * ( 3 * 4 ) ) ;  .. [39;49m[32;49m
0x7fa6de04535e    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..              : hi1 ( a b | x -- x ) x [39;49m[33;40mstore[39;49m[34;49m + ( a / b ) * ( 3 * 4 ) ) ;  .. [39;49m[32;49m
0x7fa6de045362    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. - x ) x = ( 2 + ( a / b ) * ( 3 * 4 ) [39;49m[33;40m)[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de045365    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. x ) x = ( 2 + ( a / b ) * ( 3 * 4 ) ) [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de045369    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04536d    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de045371    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..                : hi1 ( a b | x -- x ) [39;49m[33;40mx[39;49m[34;49m = ( 2 + ( a / b ) * ( 3 * 4 ) ) ;  .. [39;49m[32;49m
0x7fa6de045375    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de045378    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'hi1' :: codeSize = 139
Word : 0x00007fa6dd60f578 :: Compiled at : 0x00007fa6de0452ed
 =============================
::> 'wdiss' was called at namespaces/compiler/syntax.cft 15.17 <::
 48 48
DataStack at : [34;49mnamespaces/compiler/syntax.cft : 18.27[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fa6ddf73220, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	

 =============================
Infix.[34;49mhi2[39;49m <:> cfrTil compiled word
SourceCode for Infix.[34;49mhi2[39;49m :> 
[34;49m: hi2 ( a b | x -- x ) ( x = ( ( ( ( 2 + ( a / b ) ) * ( ( 3 * 4 ) ) ) ) ) ) ; [39;49m
Source code file location of [34;49mhi2[39;49m : "namespaces/compiler/syntax.cft" : 19.79 :: we are now at : namespaces/compiler/syntax.cft : 20.17
Compiled with : optimizeOn, inlineOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04537e -- code size = 140 bytes
TypeSignature : 
 -----------------------------
Word :: Infix.[34;49mhi2[39;49m : definition = 0x00007fa6de04537e : disassembly at namespaces/compiler/syntax.cft : 20.17 :
[34;49m ..                                     : [39;49m[33;40mhi2[39;49m[34;49m ( a b | x -- x ) ( x = ( ( ( ( 2 + ( a / b ) ) * ( ( 3 * 4 ) ) ) ) ) ) ;  .. [39;49m[32;49m
0x7fa6de04537e    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de045382    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de045386    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..  : hi2 ( a b | x -- x ) ( x = ( ( ( ( [39;49m[33;40m2[39;49m[34;49m + ( a / b ) ) * ( ( 3 * 4 ) ) ) ) ) ) ;  .. [39;49m[32;49m
0x7fa6de04538d    48b80200000000000000    mov rax, 0x2                                           [39;49m[32;49m
0x7fa6de045397    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04539b    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ( a b | x -- x ) ( x = ( ( ( ( 2 + ( [39;49m[33;40ma[39;49m[34;49m / b ) ) * ( ( 3 * 4 ) ) ) ) ) ) ; [39;49m[32;49m
0x7fa6de04539e    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..  b | x -- x ) ( x = ( ( ( ( 2 + ( a / [39;49m[33;40mb[39;49m[34;49m ) ) * ( ( 3 * 4 ) ) ) ) ) ) ; [39;49m[32;49m
0x7fa6de0453a2    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..  a b | x -- x ) ( x = ( ( ( ( 2 + ( a [39;49m[33;40m/[39;49m[34;49m b ) ) * ( ( 3 * 4 ) ) ) ) ) ) ; [39;49m[32;49m
0x7fa6de0453a6    48ba0000000000000000    mov rdx, 0x0                                           [39;49m[32;49m
0x7fa6de0453b0    48f7f9                  idiv rcx                                               [39;49m[32;49m
0x7fa6de0453b3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0453b7    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  | x -- x ) ( x = ( ( ( ( 2 + ( a / b [39;49m[33;40m)[39;49m[34;49m ) * ( ( 3 * 4 ) ) ) ) ) ) ; [39;49m[32;49m
0x7fa6de0453ba    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de0453bd    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de0453c1    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m   : hi2 ( a b | x -- x ) ( x = ( ( ( ( 2 [39;49m[33;40m+[39;49m[34;49m ( a / b ) ) * ( ( 3 * 4 ) ) ) ) ) ) ;  .. [39;49m[32;49m
0x7fa6de0453c5    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de0453c8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0453cc    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ) ( x = ( ( ( ( 2 + ( a / b ) ) * ( ( [39;49m[33;40m3[39;49m[34;49m * 4 ) ) ) ) ) ) ; [39;49m[32;49m
0x7fa6de0453cf    48b80c00000000000000    mov rax, 0xc                                           [39;49m[32;49m
0x7fa6de0453d9    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0453dd    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ( ( ( ( 2 + ( a / b ) ) * ( ( 3 * 4 ) [39;49m[33;40m)[39;49m[34;49m ) ) ) ) ; [39;49m[32;49m
0x7fa6de0453e0    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de0453e3    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de0453e7    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. ( x = ( ( ( ( 2 + ( a / b ) ) * ( ( 3 [39;49m[33;40m*[39;49m[34;49m 4 ) ) ) ) ) ) ; [39;49m[32;49m
0x7fa6de0453eb    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..              : hi2 ( a b | x -- x ) ( [39;49m[33;40mx[39;49m[34;49m = ( ( ( ( 2 + ( a / b ) ) * ( ( 3 * 4 ) ) ) ) ) ) ;  .. [39;49m[32;49m
0x7fa6de0453ef    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..            : hi2 ( a b | x -- x ) ( x [39;49m[33;40mstore[39;49m[34;49m ( ( 2 + ( a / b ) ) * ( ( 3 * 4 ) ) ) ) ) ) ;  .. [39;49m[32;49m
0x7fa6de0453f3    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. 2 + ( a / b ) ) * ( ( 3 * 4 ) ) ) ) ) [39;49m[33;40m)[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de0453f6    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. + ( a / b ) ) * ( ( 3 * 4 ) ) ) ) ) ) [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de0453fa    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0453fe    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de045402    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..              : hi2 ( a b | x -- x ) ( [39;49m[33;40mx[39;49m[34;49m = ( ( ( ( 2 + ( a / b ) ) * ( ( 3 * 4 ) ) ) ) ) ) ;  .. [39;49m[32;49m
0x7fa6de045406    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de045409    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'hi2' :: codeSize = 139
Word : 0x00007fa6dd611f40 :: Compiled at : 0x00007fa6de04537e
 =============================
::> 'wdiss' was called at namespaces/compiler/syntax.cft 20.17 <::
 48
DataStack at : [34;49mnamespaces/compiler/syntax.cft : 21.26[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fa6ddf73220, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	
 48
DataStack at : [34;49mnamespaces/compiler/syntax.cft : 23.27[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fa6ddf73220, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	

 =============================
Infix.[34;49mh3[39;49m <:> cfrTil compiled word
SourceCode for Infix.[34;49mh3[39;49m :> 
[34;49m: h3 ( a b | x -- x ) ( x = ( ( ( ( 2 + ( ( 3 * 4 ) ) - ( (a) / (b) ) ) ) ) ) ) ; [39;49m
Source code file location of [34;49mh3[39;49m : "namespaces/compiler/syntax.cft" : 24.82 :: we are now at : namespaces/compiler/syntax.cft : 25.16
Compiled with : optimizeOn, inlineOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04540f -- code size = 139 bytes
TypeSignature : Any 
 -----------------------------
Word :: Infix.[34;49mh3[39;49m : definition = 0x00007fa6de04540f : disassembly at namespaces/compiler/syntax.cft : 25.16 :
[34;49m ..                                     : [39;49m[33;40mh3[39;49m[34;49m ( a b | x -- x ) ( x = ( ( ( ( 2 + ( ( 3 * 4 ) ) - ( (a) / (b) ) ) ) ) ) ) ;  .. [39;49m[32;49m
0x7fa6de04540f    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de045413    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de045417    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..   : h3 ( a b | x -- x ) ( x = ( ( ( ( [39;49m[33;40m2[39;49m[34;49m + ( ( 3 * 4 ) ) - ( (a) / (b) ) ) ) ) ) ) ;  .. [39;49m[32;49m
0x7fa6de04541e    48b80200000000000000    mov rax, 0x2                                           [39;49m[32;49m
0x7fa6de045428    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04542c    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  a b | x -- x ) ( x = ( ( ( ( 2 + ( ( [39;49m[33;40m3[39;49m[34;49m * 4 ) ) - ( (a) / (b) ) ) ) ) ) ) ; [39;49m[32;49m
0x7fa6de04542f    48b80c00000000000000    mov rax, 0xc                                           [39;49m[32;49m
0x7fa6de045439    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04543d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  -- x ) ( x = ( ( ( ( 2 + ( ( 3 * 4 ) [39;49m[33;40m)[39;49m[34;49m - ( (a) / (b) ) ) ) ) ) ) ; [39;49m[32;49m
0x7fa6de045440    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de045443    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de045447    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. : h3 ( a b | x -- x ) ( x = ( ( ( ( 2 [39;49m[33;40m+[39;49m[34;49m ( ( 3 * 4 ) ) - ( (a) / (b) ) ) ) ) ) ) ;  .. [39;49m[32;49m
0x7fa6de04544b    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de04544e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de045452    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ( x = ( ( ( ( 2 + ( ( 3 * 4 ) ) - ( ([39;49m[33;40ma[39;49m[34;49m) / (b) ) ) ) ) ) ) ; [39;49m[32;49m
0x7fa6de045455    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..  ( ( ( ( 2 + ( ( 3 * 4 ) ) - ( (a) / ([39;49m[33;40mb[39;49m[34;49m) ) ) ) ) ) ) ; [39;49m[32;49m
0x7fa6de045459    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. x = ( ( ( ( 2 + ( ( 3 * 4 ) ) - ( (a) [39;49m[33;40m/[39;49m[34;49m (b) ) ) ) ) ) ) ; [39;49m[32;49m
0x7fa6de04545d    48ba0000000000000000    mov rdx, 0x0                                           [39;49m[32;49m
0x7fa6de045467    48f7f9                  idiv rcx                                               [39;49m[32;49m
0x7fa6de04546a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04546e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ( ( ( 2 + ( ( 3 * 4 ) ) - ( (a) / (b) [39;49m[33;40m)[39;49m[34;49m ) ) ) ) ) ; [39;49m[32;49m
0x7fa6de045471    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de045474    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de045478    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. - x ) ( x = ( ( ( ( 2 + ( ( 3 * 4 ) ) [39;49m[33;40m-[39;49m[34;49m ( (a) / (b) ) ) ) ) ) ) ; [39;49m[32;49m
0x7fa6de04547c    482bc1                  sub rax, rcx                                           [39;49m
[34;49m ..               : h3 ( a b | x -- x ) ( [39;49m[33;40mx[39;49m[34;49m = ( ( ( ( 2 + ( ( 3 * 4 ) ) - ( (a) / (b) ) ) ) ) ) ) ;  .. [39;49m[32;49m
0x7fa6de04547f    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..             : h3 ( a b | x -- x ) ( x [39;49m[33;40mstore[39;49m[34;49m ( ( 2 + ( ( 3 * 4 ) ) - ( (a) / (b) ) ) ) ) ) ) ;  .. [39;49m[32;49m
0x7fa6de045483    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. ( ( 3 * 4 ) ) - ( (a) / (b) ) ) ) ) ) [39;49m[33;40m)[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de045486    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ( 3 * 4 ) ) - ( (a) / (b) ) ) ) ) ) ) [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de04548a    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04548e    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de045492    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..               : h3 ( a b | x -- x ) ( [39;49m[33;40mx[39;49m[34;49m = ( ( ( ( 2 + ( ( 3 * 4 ) ) - ( (a) / (b) ) ) ) ) ) ) ;  .. [39;49m[32;49m
0x7fa6de045496    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de045499    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'h3' :: codeSize = 138
Word : 0x00007fa6dd615ee8 :: Compiled at : 0x00007fa6de04540f
 =============================
::> 'wdiss' was called at namespaces/compiler/syntax.cft 25.16 <::
 12 6 3 h3_assert1  : ok

 12
DataStack at : [34;49mnamespaces/compiler/syntax.cft : 27.26[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fa6ddf73220, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	

 =============================
Infix.[34;49mh4[39;49m <:> cfrTil compiled word
SourceCode for Infix.[34;49mh4[39;49m :> 
[34;49m: h4 ( a b | x -- x ) x = ( 20 - ( 3 * 4 ) - ( a / b ) ) ; [39;49m
Source code file location of [34;49mh4[39;49m : "namespaces/compiler/syntax.cft" : 28.59 :: we are now at : namespaces/compiler/syntax.cft : 29.16
Compiled with : optimizeOn, inlineOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04549f -- code size = 139 bytes
TypeSignature : Any 
 -----------------------------
Word :: Infix.[34;49mh4[39;49m : definition = 0x00007fa6de04549f : disassembly at namespaces/compiler/syntax.cft : 29.16 :
[34;49m ..                                     : [39;49m[33;40mh4[39;49m[34;49m ( a b | x -- x ) x = ( 20 - ( 3 * 4 ) - ( a / b ) ) ;  .. [39;49m[32;49m
0x7fa6de04549f    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de0454a3    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de0454a7    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..           : h4 ( a b | x -- x ) x = ( [39;49m[33;40m20[39;49m[34;49m - ( 3 * 4 ) - ( a / b ) ) ;  .. [39;49m[32;49m
0x7fa6de0454ae    48b81400000000000000    mov rax, 0x14                                          [39;49m[32;49m
0x7fa6de0454b8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0454bc    498906                  mov [r14], rax                                         [39;49m
[34;49m ..    : h4 ( a b | x -- x ) x = ( 20 - ( [39;49m[33;40m3[39;49m[34;49m * 4 ) - ( a / b ) ) ;  .. [39;49m[32;49m
0x7fa6de0454bf    48b80c00000000000000    mov rax, 0xc                                           [39;49m[32;49m
0x7fa6de0454c9    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0454cd    498906                  mov [r14], rax                                         [39;49m
[34;49m : h4 ( a b | x -- x ) x = ( 20 - ( 3 * 4 [39;49m[33;40m)[39;49m[34;49m - ( a / b ) ) ;  .. [39;49m[32;49m
0x7fa6de0454d0    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de0454d3    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de0454d7    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..        : h4 ( a b | x -- x ) x = ( 20 [39;49m[33;40m-[39;49m[34;49m ( 3 * 4 ) - ( a / b ) ) ;  .. [39;49m[32;49m
0x7fa6de0454db    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fa6de0454de    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0454e2    498906                  mov [r14], rax                                         [39;49m
[34;49m .. b | x -- x ) x = ( 20 - ( 3 * 4 ) - ( [39;49m[33;40ma[39;49m[34;49m / b ) ) ; [39;49m[32;49m
0x7fa6de0454e5    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. x -- x ) x = ( 20 - ( 3 * 4 ) - ( a / [39;49m[33;40mb[39;49m[34;49m ) ) ; [39;49m[32;49m
0x7fa6de0454e9    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. | x -- x ) x = ( 20 - ( 3 * 4 ) - ( a [39;49m[33;40m/[39;49m[34;49m b ) ) ; [39;49m[32;49m
0x7fa6de0454ed    48ba0000000000000000    mov rdx, 0x0                                           [39;49m[32;49m
0x7fa6de0454f7    48f7f9                  idiv rcx                                               [39;49m[32;49m
0x7fa6de0454fa    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0454fe    498906                  mov [r14], rax                                         [39;49m
[34;49m .. -- x ) x = ( 20 - ( 3 * 4 ) - ( a / b [39;49m[33;40m)[39;49m[34;49m ) ; [39;49m[32;49m
0x7fa6de045501    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de045504    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de045508    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. ( a b | x -- x ) x = ( 20 - ( 3 * 4 ) [39;49m[33;40m-[39;49m[34;49m ( a / b ) ) ; [39;49m[32;49m
0x7fa6de04550c    482bc1                  sub rax, rcx                                           [39;49m
[34;49m ..                 : h4 ( a b | x -- x ) [39;49m[33;40mx[39;49m[34;49m = ( 20 - ( 3 * 4 ) - ( a / b ) ) ;  .. [39;49m[32;49m
0x7fa6de04550f    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..               : h4 ( a b | x -- x ) x [39;49m[33;40mstore[39;49m[34;49m0 - ( 3 * 4 ) - ( a / b ) ) ;  .. [39;49m[32;49m
0x7fa6de045513    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  x ) x = ( 20 - ( 3 * 4 ) - ( a / b ) [39;49m[33;40m)[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de045516    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  ) x = ( 20 - ( 3 * 4 ) - ( a / b ) ) [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de04551a    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04551e    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de045522    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..                 : h4 ( a b | x -- x ) [39;49m[33;40mx[39;49m[34;49m = ( 20 - ( 3 * 4 ) - ( a / b ) ) ;  .. [39;49m[32;49m
0x7fa6de045526    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de045529    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'h4' :: codeSize = 138
Word : 0x00007fa6dd61a750 :: Compiled at : 0x00007fa6de04549f
 =============================
::> 'wdiss' was called at namespaces/compiler/syntax.cft 29.16 <::
 6
DataStack at : [34;49mnamespaces/compiler/syntax.cft : 30.24[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fa6ddf73220, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	
 6
DataStack at : [34;49mnamespaces/compiler/syntax.cft : 31.25[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fa6ddf73220, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/compiler/syntax.cft : 34.42[39;49m :
DataStack depth =   5 : Dsp (R14) = Top = 0x00007fa6ddf73230, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73230 > = 0x0000000000000000	
  DataStack   [  -1 ] < 0x00007fa6ddf73228 > = 0x0000000000000003	
  DataStack   [  -2 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -3 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	
 3 
above line should read 3
 hi1 hi2 hi3 hi42 hi42
 hi2 hi3 hi42
 hi1 hi2 hi3 hi42
 hi42
 hi42
 hi42 ok ok
hello world! - parse this!?
1234		and this! 
	also this!
Hello world! = 0x000004d2


Hello world! = 42


hello world! - parse this!?
	 
	also this!
DataStack at : [34;49mnamespaces/test/system.cft : 32.18[39;49m :
DataStack depth =   8 : Dsp (R14) = Top = 0x00007fa6ddf73248, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73248 > = 0x00007fa6ddf73230	
  DataStack   [  -1 ] < 0x00007fa6ddf73240 > = 0x00007fa6dde6e9c0	< word : User.[34;49ms[39;49m : value = 0x0000561dbfecef0c > : type signature - [34;49m[39;49m
  DataStack   [  -2 ] < 0x00007fa6ddf73238 > = 0x0000000000000000	
  DataStack   [  -3 ] < 0x00007fa6ddf73230 > = 0x0000000000000000	
  DataStack   [  -4 ] < 0x00007fa6ddf73228 > = 0x00007fa6dde6e9c0	< word : User.[34;49ms[39;49m : value = 0x0000561dbfecef0c > : type signature - [34;49m[39;49m
  DataStack   [  -5 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -6 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -7 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	

Hello world! = 0x000004d2


hello world!
parse this!


 
 and this!

hello world! - parse this!?
	 	 and this!
Hello world! = 0x000004d2


Hello world! = 0x000004d2


yes, Hello world! = 0x000004d2
yes, Hello world! = 0x000004d2 : and more yet
e
	eui 
line above should read... 
i	e
 =============================
Shell.[34;49mhio[39;49m <:> cfrTil compiled word
SourceCode for Shell.[34;49mhio[39;49m :> 
[34;49m: hio if 1 p else 0 p endif ; [39;49m
Source code file location of [34;49mhio[39;49m : "namespaces/test/system.cft" : 63.30 :: we are now at : namespaces/test/system.cft : 64.17
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde046191 -- code size = 82 bytes
 -----------------------------
Word :: Shell.[34;49mhio[39;49m : definition = 0x00007fa6de046191 : disassembly at namespaces/test/system.cft : 64.17 :[32;49m
0x7fa6de046191    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de046194    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..                                 : hio [39;49m[33;40mif[39;49m[34;49m 1 p else 0 p endif ;  .. [39;49m[32;49m
0x7fa6de046198    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de04619b    0f8423000000            jz 0x7fa6de0461c4          	< Shell.[34;49mhio[39;49m+51 >[39;49m
[34;49m ..                              : hio if [39;49m[33;40m1[39;49m[34;49m p else 0 p endif ;  .. [39;49m[32;49m
0x7fa6de0461a1    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de0461ab    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0461af    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                            : hio if 1 [39;49m[33;40mp[39;49m[34;49m else 0 p endif ;  .. [39;49m[32;49m
0x7fa6de0461b2    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de0461bc    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m
[34;49m ..                          : hio if 1 p [39;49m[33;40melse[39;49m[34;49m 0 p endif ;  .. [39;49m[32;49m
0x7fa6de0461bf    e91e000000              jmp 0x7fa6de0461e2         	< Shell.[34;49mhio[39;49m+81 >[39;49m
[34;49m ..                     : hio if 1 p else [39;49m[33;40m0[39;49m[34;49m p endif ;  .. [39;49m[32;49m
0x7fa6de0461c4    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de0461ce    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0461d2    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                   : hio if 1 p else 0 [39;49m[33;40mp[39;49m[34;49m endif ;  .. [39;49m[32;49m
0x7fa6de0461d5    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de0461df    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m
[34;49m ..           : hio if 1 p else 0 p endif [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de0461e2    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'hio' :: codeSize = 81
Word : 0x00007fa6dd796e68 :: Compiled at : 0x00007fa6de046191
 =============================
::> 'wdiss' was called at namespaces/test/system.cft 64.17 <::
 1 0
 876543

 =============================
C.[34;49m$$[39;49m <:> cfrTil compiled word
SourceCode for C.[34;49m$$[39;49m :> 
[34;49m: $$ "" { token dup ";" strcmp } { { dup "." strcmp } { strcat " " strcat } { strcat } if3 } while drop location "$$" ps dup ps _sh return ; [39;49m
Source code file location of [34;49m$$[39;49m : "namespaces/test/system.cft" : 74.5 :: we are now at : namespaces/test/system.cft : 82.15
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04624a -- code size = 367 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49m$$[39;49m : definition = 0x00007fa6de04624a : disassembly at namespaces/test/system.cft : 82.15 :
[34;49m ..                                 : $$  [39;49m[33;40m""[39;49m[34;49m { token dup ";" strcmp }  {  { dup "." strcmp } { strcat " " strcat } { strcat } if3 }  whil[39;49m[32;49m
0x7fa6de04624a    48b85535ffdda67f0000    mov rax, 0x7fa6ddff3555                                [39;49m[32;49m
0x7fa6de046254    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046258    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                            : $$  "" { [39;49m[33;40mtoken[39;49m[34;49m dup ";" strcmp }  {  { dup "." strcmp } { strcat " " strcat } { strcat } if3 }  while dro[39;49m[32;49m
0x7fa6de04625b    49b82015efbf1d560000    mov r8, 0x561dbfef1520                                 [39;49m[32;49m
0x7fa6de046265    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04626f    49ffd1                  call r9                    	< Compiler.[34;49mtoken[39;49m : 0x0000561dbfef1520 >[39;49m
[34;49m ..                      : $$  "" { token [39;49m[33;40mdup[39;49m[34;49m ";" strcmp }  {  { dup "." strcmp } { strcat " " strcat } { strcat } if3 }  while drop loca[39;49m[32;49m
0x7fa6de046272    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de046275    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046279    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                  : $$  "" { token dup [39;49m[33;40m";"[39;49m[34;49m strcmp }  {  { dup "." strcmp } { strcat " " strcat } { strcat } if3 }  while drop location[39;49m[32;49m
0x7fa6de04627c    48b85d35ffdda67f0000    mov rax, 0x7fa6ddff355d    	< string : '[34;49m;[39;49m' >[39;49m[32;49m
0x7fa6de046286    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04628a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..              : $$  "" { token dup ";" [39;49m[33;40mstrcmp[39;49m[34;49m }  {  { dup "." strcmp } { strcat " " strcat } { strcat } if3 }  while drop location "$$[39;49m[32;49m
0x7fa6de04628d    49b855f5eebf1d560000    mov r8, 0x561dbfeef555                                 [39;49m[32;49m
0x7fa6de046297    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de0462a1    49ffd1                  call r9                    	< String.[34;49mstrcmp[39;49m : 0x0000561dbfeef555 >[39;49m
[34;49m ..       : $$  "" { token dup ";" strcmp [39;49m[33;40m}[39;49m[34;49m  {  { dup "." strcmp } { strcat " " strcat } { strcat } if3 }  while drop location "$$" ps du[39;49m[32;49m
0x7fa6de0462a4    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de0462a7    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. strcat " " strcat } { strcat } if3 }  [39;49m[33;40mwhile[39;49m[34;49m drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fa6de0462ab    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de0462ae    0f84a2000000            jz 0x7fa6de046356          	< C.[34;49m$$[39;49m+268 >[39;49m
[34;49m  : $$  "" { token dup ";" strcmp }  {  { [39;49m[33;40mdup[39;49m[34;49m "." strcmp } { strcat " " strcat } { strcat } if3 }  while drop location "$$" ps dup ps _sh ret[39;49m[32;49m
0x7fa6de0462b4    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de0462b7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0462bb    498906                  mov [r14], rax                                         [39;49m
[34;49m .. "" { token dup ";" strcmp }  {  { dup [39;49m[33;40m"."[39;49m[34;49m strcmp } { strcat " " strcat } { strcat } if3 }  while drop location "$$" ps dup ps _sh ret[39;49m[32;49m
0x7fa6de0462be    48b86735ffdda67f0000    mov rax, 0x7fa6ddff3567    	< string : '[34;49m.[39;49m' >[39;49m[32;49m
0x7fa6de0462c8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0462cc    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  token dup ";" strcmp }  {  { dup "." [39;49m[33;40mstrcmp[39;49m[34;49m } { strcat " " strcat } { strcat } if3 }  while drop location "$$" ps dup ps _sh return [39;49m[32;49m
0x7fa6de0462cf    49b855f5eebf1d560000    mov r8, 0x561dbfeef555                                 [39;49m[32;49m
0x7fa6de0462d9    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de0462e3    49ffd1                  call r9                    	< String.[34;49mstrcmp[39;49m : 0x0000561dbfeef555 >[39;49m
[34;49m .. dup ";" strcmp }  {  { dup "." strcmp [39;49m[33;40m}[39;49m[34;49m { strcat " " strcat } { strcat } if3 }  while drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fa6de0462e6    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de0462e9    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. mp } { strcat " " strcat } { strcat } [39;49m[33;40mif3[39;49m[34;49m }  while drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fa6de0462ed    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de0462f0    0f8444000000            jz 0x7fa6de04633a          	< C.[34;49m$$[39;49m+240 >[39;49m
[34;49m .. ";" strcmp }  {  { dup "." strcmp } { [39;49m[33;40mstrcat[39;49m[34;49m " " strcat } { strcat } if3 }  while drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fa6de0462f6    49b8c5f5eebf1d560000    mov r8, 0x561dbfeef5c5                                 [39;49m[32;49m
0x7fa6de046300    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04630a    49ffd1                  call r9                    	< String.[34;49mstrcat[39;49m : 0x0000561dbfeef5c5 >[39;49m
[34;49m .. cmp }  {  { dup "." strcmp } { strcat [39;49m[33;40m" "[39;49m[34;49m strcat } { strcat } if3 }  while drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fa6de04630d    48b87135ffdda67f0000    mov rax, 0x7fa6ddff3571    	< string : '[34;49m [39;49m' >[39;49m[32;49m
0x7fa6de046317    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04631b    498906                  mov [r14], rax                                         [39;49m
[34;49m .. }  {  { dup "." strcmp } { strcat " " [39;49m[33;40mstrcat[39;49m[34;49m } { strcat } if3 }  while drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fa6de04631e    49b8c5f5eebf1d560000    mov r8, 0x561dbfeef5c5                                 [39;49m[32;49m
0x7fa6de046328    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de046332    49ffd1                  call r9                    	< String.[34;49mstrcat[39;49m : 0x0000561dbfeef5c5 >[39;49m
[34;49m ..  dup "." strcmp } { strcat " " strcat [39;49m[33;40m}[39;49m[34;49m { strcat } if3 }  while drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fa6de046335    e917000000              jmp 0x7fa6de046351         	< C.[34;49m$$[39;49m+263 >[39;49m
[34;49m ..  "." strcmp } { strcat " " strcat } { [39;49m[33;40mstrcat[39;49m[34;49m } if3 }  while drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fa6de04633a    49b8c5f5eebf1d560000    mov r8, 0x561dbfeef5c5                                 [39;49m[32;49m
0x7fa6de046344    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04634e    49ffd1                  call r9                    	< String.[34;49mstrcat[39;49m : 0x0000561dbfeef5c5 >[39;49m
[34;49m ..  { strcat " " strcat } { strcat } if3 [39;49m[33;40m}[39;49m[34;49m  while drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fa6de046351    e905ffffff              jmp 0x7fa6de04625b         	< C.[34;49m$$[39;49m+17 >[39;49m
[34;49m ..  " " strcat } { strcat } if3 }  while [39;49m[33;40mdrop[39;49m[34;49m location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fa6de046356    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. strcat } { strcat } if3 }  while drop [39;49m[33;40mlocation[39;49m[34;49m "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fa6de04635a    49b9779f03dea67f0000    mov r9, 0x7fa6de039f77                                 [39;49m[32;49m
0x7fa6de046364    49ffd1                  call r9                    	< System.[34;49mlocation[39;49m : 0x00007fa6de039f77 >[39;49m
[34;49m .. { strcat } if3 }  while drop location [39;49m[33;40m"$$"[39;49m[34;49m ps dup ps _sh return ; [39;49m[32;49m
0x7fa6de046367    48b87c35ffdda67f0000    mov rax, 0x7fa6ddff357c    	< string : '[34;49m$$[39;49m' >[39;49m[32;49m
0x7fa6de046371    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046375    498906                  mov [r14], rax                                         [39;49m
[34;49m .. cat } if3 }  while drop location "$$" [39;49m[33;40mps[39;49m[34;49m dup ps _sh return ; [39;49m[32;49m
0x7fa6de046378    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de046382    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m ..  } if3 }  while drop location "$$" ps [39;49m[33;40mdup[39;49m[34;49m ps _sh return ; [39;49m[32;49m
0x7fa6de046385    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de046388    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04638c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. f3 }  while drop location "$$" ps dup [39;49m[33;40mps[39;49m[34;49m _sh return ; [39;49m[32;49m
0x7fa6de04638f    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de046399    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m .. }  while drop location "$$" ps dup ps [39;49m[33;40m_sh[39;49m[34;49m return ; [39;49m[32;49m
0x7fa6de04639c    49b8e82defbf1d560000    mov r8, 0x561dbfef2de8                                 [39;49m[32;49m
0x7fa6de0463a6    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de0463b0    49ffd1                  call r9                    	< Shell.[34;49m_sh[39;49m : 0x0000561dbfef2de8 >[39;49m
[34;49m .. hile drop location "$$" ps dup ps _sh [39;49m[33;40mreturn[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de0463b3    e900000000              jmp 0x7fa6de0463b8         	< C.[34;49m$$[39;49m+366 >[39;49m
[34;49m .. op location "$$" ps dup ps _sh return [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de0463b8    c3                      ret                                                    [39;49m
Word_Disassemble : word - '$$' :: codeSize = 366
Word : 0x00007fa6dd714a30 :: Compiled at : 0x00007fa6de04624a
 =============================
::> 'wdiss' was called at namespaces/test/system.cft 82.15 <::

 =============================
C_Syntax.[34;49mtestc1[39;49m <:> cfrTil compiled word, prefix
SourceCode for C_Syntax.[34;49mtestc1[39;49m :> 
[34;49mvoid testc1 () { int tdbg = 1, tdbg2 = 2, tdbg3 = 3 ; int tdbg4 = 4, tdbg5 = 5, tdbg6 = 6 ; ps ( "\ntdbg =" ) ; p ( tdbg ) ; ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) ; ps ( "\ntdbg3 =" ) ; p ( tdbg3 ) ; ps ( "\ntdbg4 =" ) ; p ( tdbg4 ) ; ps ( "\ntdbg5 =" ) ; p ( tdbg5 ) ; ps ( "\ntdbg6 =" ) ; p ( tdbg6 ) ; ps ( "\nxhii =" ) ; xhii () ; xhi0(); xhi1 () ; xhi( 4 ); xhi01 ; xhi1 ; xhi2(8) ; xhi2a ( "xhi2a =", 8 ) ; } [39;49m
Source code file location of [34;49mtestc1[39;49m : "namespaces/compiler/interpreter.cft" : 32.10 :: we are now at : namespaces/compiler/interpreter.cft : 44.19
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde046748 -- code size = 1119 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mtestc1[39;49m : definition = 0x00007fa6de046748 : disassembly at namespaces/compiler/interpreter.cft : 44.19 :[32;49m
0x7fa6de046748    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04674c    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de046750    4981c638000000          add r14, 0x38                                          [39;49m[32;49m
0x7fa6de046757    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de046761    498d4f08                lea rcx, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de046765    488901                  mov [rcx], rax                                         [39;49m[32;49m
0x7fa6de046768    48b80200000000000000    mov rax, 0x2                                           [39;49m[32;49m
0x7fa6de046772    498d4f10                lea rcx, [r15+0x10]                                    [39;49m[32;49m
0x7fa6de046776    488901                  mov [rcx], rax                                         [39;49m[32;49m
0x7fa6de046779    48b80300000000000000    mov rax, 0x3                                           [39;49m[32;49m
0x7fa6de046783    498d4f18                lea rcx, [r15+0x18]                                    [39;49m[32;49m
0x7fa6de046787    488901                  mov [rcx], rax                                         [39;49m[32;49m
0x7fa6de04678a    48b80400000000000000    mov rax, 0x4                                           [39;49m[32;49m
0x7fa6de046794    498d4f20                lea rcx, [r15+0x20]                                    [39;49m[32;49m
0x7fa6de046798    488901                  mov [rcx], rax                                         [39;49m[32;49m
0x7fa6de04679b    48b80500000000000000    mov rax, 0x5                                           [39;49m[32;49m
0x7fa6de0467a5    498d4f28                lea rcx, [r15+0x28]                                    [39;49m[32;49m
0x7fa6de0467a9    488901                  mov [rcx], rax                                         [39;49m[32;49m
0x7fa6de0467ac    48b80600000000000000    mov rax, 0x6                                           [39;49m[32;49m
0x7fa6de0467b6    498d4f30                lea rcx, [r15+0x30]                                    [39;49m[32;49m
0x7fa6de0467ba    488901                  mov [rcx], rax                                         [39;49m[32;49m
0x7fa6de0467bd    48b8f338ffdda67f0000    mov rax, 0x7fa6ddff38f3    	< string : '[34;49m\ntdbg =[39;49m' >[39;49m[32;49m
0x7fa6de0467c7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0467cb    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de0467ce    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de0467d8    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m[32;49m
0x7fa6de0467db    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de0467df    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0467e3    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de0467e6    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de0467f0    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m[32;49m
0x7fa6de0467f3    48b81039ffdda67f0000    mov rax, 0x7fa6ddff3910    	< string : '[34;49m\ntdbg2 =[39;49m' >[39;49m[32;49m
0x7fa6de0467fd    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046801    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de046804    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de04680e    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m[32;49m
0x7fa6de046811    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fa6de046815    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046819    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04681c    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de046826    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m[32;49m
0x7fa6de046829    48b82f39ffdda67f0000    mov rax, 0x7fa6ddff392f    	< string : '[34;49m\ntdbg3 =[39;49m' >[39;49m[32;49m
0x7fa6de046833    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046837    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04683a    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de046844    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m[32;49m
0x7fa6de046847    498b4718                mov rax, [r15+0x18]                                    [39;49m[32;49m
0x7fa6de04684b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04684f    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de046852    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de04685c    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m[32;49m
0x7fa6de04685f    48b84e39ffdda67f0000    mov rax, 0x7fa6ddff394e    	< string : '[34;49m\ntdbg4 =[39;49m' >[39;49m[32;49m
0x7fa6de046869    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04686d    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de046870    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de04687a    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m[32;49m
0x7fa6de04687d    498b4720                mov rax, [r15+0x20]                                    [39;49m[32;49m
0x7fa6de046881    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046885    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de046888    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de046892    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m[32;49m
0x7fa6de046895    48b86d39ffdda67f0000    mov rax, 0x7fa6ddff396d    	< string : '[34;49m\ntdbg5 =[39;49m' >[39;49m[32;49m
0x7fa6de04689f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0468a3    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de0468a6    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de0468b0    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m[32;49m
0x7fa6de0468b3    498b4728                mov rax, [r15+0x28]                                    [39;49m[32;49m
0x7fa6de0468b7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0468bb    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de0468be    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de0468c8    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m[32;49m
0x7fa6de0468cb    48b88c39ffdda67f0000    mov rax, 0x7fa6ddff398c    	< string : '[34;49m\ntdbg6 =[39;49m' >[39;49m[32;49m
0x7fa6de0468d5    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0468d9    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de0468dc    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de0468e6    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m[32;49m
0x7fa6de0468e9    498b4730                mov rax, [r15+0x30]                                    [39;49m[32;49m
0x7fa6de0468ed    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0468f1    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de0468f4    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de0468fe    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m[32;49m
0x7fa6de046901    48b8aa39ffdda67f0000    mov rax, 0x7fa6ddff39aa    	< string : '[34;49m\nxhii =[39;49m' >[39;49m[32;49m
0x7fa6de04690b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04690f    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de046912    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de04691c    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m[32;49m
0x7fa6de04691f    48b80300000000000000    mov rax, 0x3                                           [39;49m[32;49m
0x7fa6de046929    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04692d    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de046930    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de04693a    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m[32;49m
0x7fa6de04693d    48b80300000000000000    mov rax, 0x3                                           [39;49m[32;49m
0x7fa6de046947    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04694b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04694e    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de046958    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m[32;49m
0x7fa6de04695b    48b80300000000000000    mov rax, 0x3                                           [39;49m[32;49m
0x7fa6de046965    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046969    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04696c    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de046976    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m[32;49m
0x7fa6de046979    48b80400000000000000    mov rax, 0x4                                           [39;49m[32;49m
0x7fa6de046983    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046987    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04698a    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04698e    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de046992    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046999    48b85d38ffdda67f0000    mov rax, 0x7fa6ddff385d    	< string : '[34;49m\nxhi = [39;49m' >[39;49m[32;49m
0x7fa6de0469a3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0469a7    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de0469aa    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de0469b4    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m[32;49m
0x7fa6de0469b7    48b80300000000000000    mov rax, 0x3                                           [39;49m[32;49m
0x7fa6de0469c1    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0469c5    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de0469c8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0469cc    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de0469cf    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de0469d9    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m[32;49m
0x7fa6de0469dc    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0469e0    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de0469e4    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de0469e8    48b8bf36ffdda67f0000    mov rax, 0x7fa6ddff36bf    	< string : '[34;49mxhi1 =[39;49m' >[39;49m[32;49m
0x7fa6de0469f2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0469f6    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de0469f9    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de046a03    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de046a0d    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m[32;49m
0x7fa6de046a10    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de046a1a    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m[32;49m
0x7fa6de046a1d    48b80300000000000000    mov rax, 0x3                                           [39;49m[32;49m
0x7fa6de046a27    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046a2b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de046a2e    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de046a38    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m[32;49m
0x7fa6de046a3b    48b80800000000000000    mov rax, 0x8                                           [39;49m[32;49m
0x7fa6de046a45    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046a49    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de046a4c    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de046a50    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de046a54    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046a5b    48b8bf36ffdda67f0000    mov rax, 0x7fa6ddff36bf    	< string : '[34;49mxhi1 =[39;49m' >[39;49m[32;49m
0x7fa6de046a65    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046a69    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de046a6c    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de046a70    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de046a74    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046a7b    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de046a7f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046a83    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de046a86    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de046a90    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de046a9a    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m[32;49m
0x7fa6de046a9d    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de046aa7    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m[32;49m
0x7fa6de046aaa    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de046aae    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de046ab2    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de046ab6    48b80300000000000000    mov rax, 0x3                                           [39;49m[32;49m
0x7fa6de046ac0    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de046ac4    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de046ac7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046acb    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de046ace    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de046ad8    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m[32;49m
0x7fa6de046adb    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de046adf    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de046ae3    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de046ae7    48b8ca39ffdda67f0000    mov rax, 0x7fa6ddff39ca    	< string : '[34;49mxhi2a =[39;49m' >[39;49m[32;49m
0x7fa6de046af1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046af5    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de046af8    48b80800000000000000    mov rax, 0x8                                           [39;49m[32;49m
0x7fa6de046b02    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046b06    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de046b09    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de046b0d    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de046b11    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046b18    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de046b1c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046b20    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de046b23    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de046b27    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de046b2b    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046b32    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de046b36    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046b3a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de046b3d    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de046b47    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de046b51    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m[32;49m
0x7fa6de046b54    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de046b5e    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m[32;49m
0x7fa6de046b61    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de046b65    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de046b69    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de046b6d    48b80300000000000000    mov rax, 0x3                                           [39;49m[32;49m
0x7fa6de046b77    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de046b7b    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de046b7e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046b82    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de046b85    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de046b8f    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m[32;49m
0x7fa6de046b92    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de046b96    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de046b9a    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. ; xhi2(8) ; xhi2a ( "xhi2a =", 8 ) ;  [39;49m[33;40m}[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de046b9e    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de046ba2    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de046ba6    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'testc1' :: codeSize = 1118
Word : 0x00007fa6dd720ff0 :: Compiled at : 0x00007fa6de046748
 =============================
::> 'wdiss' was called at namespaces/compiler/interpreter.cft 44.19 <::
 
tdbg = 1 
tdbg2 = 2 
tdbg3 = 3 
tdbg4 = 4 
tdbg5 = 5 
tdbg6 = 6 
xhii = 3 3 3 
xhi =  7
 xhi1 = 3
 xhi1 = 11
 xhi2a = 11
 =============================
C_Syntax.[34;49minterpret2[39;49m <:> cfrTil compiled word
SourceCode for C_Syntax.[34;49minterpret2[39;49m :> 
[34;49mvoid interpret2 ( | atoken aword ) { testc1 ( ) ; xhi01 ; xhi1( ) ; xhi2 ( 8 ) ; xhi2a ( "xhi2a =", 8 ) ; nl( ) ; tab ( ) ; ps ( "interpret2 :> " ) ; nl ( ) ; while ( 1 ) { atoken = token () ; printf ( "\n\ttoken = %s\n", atoken ) ; if ( ( ! atoken ) || ( ! ( strcmp ( atoken, "i2halt" ) ) ) ) { printf ( "\n\n\ttoken = %s :: interpret2 exiting ...", atoken ) ; return ; } else { if ( atoken ) { aword = tokenToWord ( atoken ) ; doWord ( aword ) ; } } } } [39;49m
Source code file location of [34;49minterpret2[39;49m : "namespaces/compiler/interpreter.cft" : 49.30 :: we are now at : namespaces/compiler/interpreter.cft : 73.24
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde046bac -- code size = 993 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49minterpret2[39;49m : definition = 0x00007fa6de046bac : disassembly at namespaces/compiler/interpreter.cft : 73.24 :[32;49m
0x7fa6de046bac    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de046bb0    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de046bb4    4981c618000000          add r14, 0x18                                          [39;49m[32;49m
0x7fa6de046bbb    49b9486704dea67f0000    mov r9, 0x7fa6de046748                                 [39;49m[32;49m
0x7fa6de046bc5    49ffd1                  call r9                    	< C_Syntax.[34;49mtestc1[39;49m : 0x00007fa6de046748 >[39;49m[32;49m
0x7fa6de046bc8    48b8bf36ffdda67f0000    mov rax, 0x7fa6ddff36bf    	< string : '[34;49mxhi1 =[39;49m' >[39;49m[32;49m
0x7fa6de046bd2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046bd6    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de046bd9    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de046be3    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de046bed    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m[32;49m
0x7fa6de046bf0    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de046bfa    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m[32;49m
0x7fa6de046bfd    48b80300000000000000    mov rax, 0x3                                           [39;49m[32;49m
0x7fa6de046c07    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046c0b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de046c0e    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de046c18    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m[32;49m
0x7fa6de046c1b    48b80800000000000000    mov rax, 0x8                                           [39;49m[32;49m
0x7fa6de046c25    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046c29    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de046c2c    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de046c30    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de046c34    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046c3b    48b8bf36ffdda67f0000    mov rax, 0x7fa6ddff36bf    	< string : '[34;49mxhi1 =[39;49m' >[39;49m[32;49m
0x7fa6de046c45    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046c49    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de046c4c    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de046c50    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de046c54    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046c5b    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de046c5f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046c63    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de046c66    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de046c70    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de046c7a    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m[32;49m
0x7fa6de046c7d    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de046c87    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m[32;49m
0x7fa6de046c8a    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de046c8e    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de046c92    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de046c96    48b80300000000000000    mov rax, 0x3                                           [39;49m[32;49m
0x7fa6de046ca0    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de046ca4    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de046ca7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046cab    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de046cae    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de046cb8    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m[32;49m
0x7fa6de046cbb    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de046cbf    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de046cc3    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de046cc7    48b8b03bffdda67f0000    mov rax, 0x7fa6ddff3bb0    	< string : '[34;49mxhi2a =[39;49m' >[39;49m[32;49m
0x7fa6de046cd1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046cd5    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de046cd8    48b80800000000000000    mov rax, 0x8                                           [39;49m[32;49m
0x7fa6de046ce2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046ce6    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de046ce9    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de046ced    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de046cf1    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046cf8    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de046cfc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046d00    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de046d03    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de046d07    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de046d0b    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046d12    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de046d16    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046d1a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de046d1d    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de046d27    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de046d31    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m[32;49m
0x7fa6de046d34    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de046d3e    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m[32;49m
0x7fa6de046d41    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de046d45    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de046d49    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de046d4d    48b80300000000000000    mov rax, 0x3                                           [39;49m[32;49m
0x7fa6de046d57    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de046d5b    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de046d5e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046d62    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de046d65    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de046d6f    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m[32;49m
0x7fa6de046d72    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de046d76    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de046d7a    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. hi2 ( 8 ) ; xhi2a ( "xhi2a =", 8 ) ;  [39;49m[33;40mnl[39;49m[34;49m( ) ; tab ( ) ; ps ( "interpret2 :> " ) ; nl ( ) ; while ( 1 ) {  atoken = token () ;  pr .. [39;49m[32;49m
0x7fa6de046d7e    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de046d88    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de046d92    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m .. ) ; xhi2a ( "xhi2a =", 8 ) ;  nl( ) ; [39;49m[33;40mtab[39;49m[34;49m ( ) ; ps ( "interpret2 :> " ) ; nl ( ) ; while ( 1 ) {  atoken = token () ;  printf ( " .. [39;49m[32;49m
0x7fa6de046d95    49b83510efbf1d560000    mov r8, 0x561dbfef1035                                 [39;49m[32;49m
0x7fa6de046d9f    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de046da9    49ffd1                  call r9                    	< Io.[34;49mtab[39;49m : 0x0000561dbfef1035 >[39;49m
[34;49m .. i2a =", 8 ) ;  nl( ) ; tab ( ) ; ps ( [39;49m[33;40m"interpret2 :> "[39;49m[34;49m ) ; nl ( ) ; while ( 1 ) {  atoken = token () ;  printf ( "\n\ttoken = %s\ .. [39;49m[32;49m
0x7fa6de046dac    48b8d53bffdda67f0000    mov rax, 0x7fa6ddff3bd5    	< string : '[34;49minterpret2 :> [39;49m' >[39;49m[32;49m
0x7fa6de046db6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046dba    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ( "xhi2a =", 8 ) ;  nl( ) ; tab ( ) ; [39;49m[33;40mps[39;49m[34;49m ( "interpret2 :> " ) ; nl ( ) ; while ( 1 ) {  atoken = token () ;  printf ( "\n\ttoken  .. [39;49m[32;49m
0x7fa6de046dbd    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de046dc7    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m .. ; tab ( ) ; ps ( "interpret2 :> " ) ; [39;49m[33;40mnl[39;49m[34;49m ( ) ; while ( 1 ) {  atoken = token () ;  printf ( "\n\ttoken = %s\n", atoken ) ;  if (  .. [39;49m[32;49m
0x7fa6de046dca    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de046dd4    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de046dde    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m .. ( "interpret2 :> " ) ; nl ( ) ; while [39;49m[33;40m([39;49m[34;49m 1 ) {  atoken = token () ;  printf ( "\n\ttoken = %s\n", atoken ) ;  if ( ( ! atoken ) || .. [39;49m[32;49m
0x7fa6de046de1    48b80100000000000000    mov rax, 0x1                                           [39;49m
[34;49m ..  ( atoken ) ; doWord ( aword ) ; }  } [39;49m[33;40m}[39;49m[34;49m }  .. [39;49m[32;49m
0x7fa6de046deb    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de046dee    0f8490010000            jz 0x7fa6de046f84          	< C_Syntax.[34;49minterpret2[39;49m+984 >[39;49m
[34;49m ..  ) ; nl ( ) ; while ( 1 ) {  atoken = [39;49m[33;40mtoken[39;49m[34;49m () ;  printf ( "\n\ttoken = %s\n", atoken ) ;  if ( ( ! atoken ) || ( ! ( strcmp ( at .. [39;49m[32;49m
0x7fa6de046df4    49b82015efbf1d560000    mov r8, 0x561dbfef1520                                 [39;49m[32;49m
0x7fa6de046dfe    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de046e08    49ffd1                  call r9                    	< Compiler.[34;49mtoken[39;49m : 0x0000561dbfef1520 >[39;49m
[34;49m .. ret2 :> " ) ; nl ( ) ; while ( 1 ) {  [39;49m[33;40matoken[39;49m[34;49m = token () ;  printf ( "\n\ttoken = %s\n", atoken ) ;  if ( ( ! atoken ) || ( ! ( st .. [39;49m[32;49m
0x7fa6de046e0b    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de046e0f    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de046e12    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de046e15    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  " ) ; nl ( ) ; while ( 1 ) {  atoken [39;49m[33;40m=[39;49m[34;49m token () ;  printf ( "\n\ttoken = %s\n", atoken ) ;  if ( ( ! atoken ) || ( ! ( strcmp (  .. [39;49m[32;49m
0x7fa6de046e19    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  1 ) {  atoken = token () ;  printf ( [39;49m[33;40m"\n\ttoken = %s\n"[39;49m[34;49m, atoken ) ;  if ( ( ! atoken ) || ( ! ( strcmp ( atoken, "i2halt" ) ) )  .. [39;49m[32;49m
0x7fa6de046e1c    48b896559ddda67f0000    mov rax, 0x7fa6dd9d5596    	< string : '[34;49m\n\ttoken = %s\n[39;49m' >[39;49m[32;49m
0x7fa6de046e26    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. en () ;  printf ( "\n\ttoken = %s\n", [39;49m[33;40matoken[39;49m[34;49m ) ;  if ( ( ! atoken ) || ( ! ( strcmp ( atoken, "i2halt" ) ) ) ) {  printf ( "\n\n\ .. [39;49m[32;49m
0x7fa6de046e29    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de046e2d    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fa6de046e30    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de046e3a    49b84481ebbf1d560000    mov r8, 0x561dbfeb8144                                 [39;49m[32;49m
0x7fa6de046e44    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de046e4e    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000561dbfeb8144 >[39;49m
[34;49m .. \ttoken = %s\n", atoken ) ;  if ( ( ! [39;49m[33;40matoken[39;49m[34;49m ) || ( ! ( strcmp ( atoken, "i2halt" ) ) ) ) {  printf ( "\n\n\ttoken = %s :: interp .. [39;49m[32;49m
0x7fa6de046e51    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. \n\ttoken = %s\n", atoken ) ;  if ( ( [39;49m[33;40m![39;49m[34;49m atoken ) || ( ! ( strcmp ( atoken, "i2halt" ) ) ) ) {  printf ( "\n\n\ttoken = %s :: inte .. [39;49m[32;49m
0x7fa6de046e55    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de046e58    740c                    jz 0xde046e66                                          [39;49m[32;49m
0x7fa6de046e5a    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de046e64    eb0a                    jmp 0x7fa6de046e70         	< C_Syntax.[34;49minterpret2[39;49m+708 >[39;49m[32;49m
0x7fa6de046e66    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de046e70    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046e74    498906                  mov [r14], rax                                         [39;49m
[34;49m ..   if ( ( ! atoken ) || ( ! ( strcmp ( [39;49m[33;40matoken[39;49m[34;49m, "i2halt" ) ) ) ) {  printf ( "\n\n\ttoken = %s :: interpret2 exiting ...", atoken ) .. [39;49m[32;49m
0x7fa6de046e77    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de046e7b    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  ! atoken ) || ( ! ( strcmp ( atoken, [39;49m[33;40m"i2halt"[39;49m[34;49m ) ) ) ) {  printf ( "\n\n\ttoken = %s :: interpret2 exiting ...", atoken ) ; retur .. [39;49m[32;49m
0x7fa6de046e7e    48b8a4559ddda67f0000    mov rax, 0x7fa6dd9d55a4    	< string : '[34;49mi2halt[39;49m' >[39;49m[32;49m
0x7fa6de046e88    488bf0                  mov rsi, rax                                           [39;49m
[34;49m .. token ) ;  if ( ( ! atoken ) || ( ! ( [39;49m[33;40mstrcmp[39;49m[34;49m ( atoken, "i2halt" ) ) ) ) {  printf ( "\n\n\ttoken = %s :: interpret2 exiting ...", .. [39;49m[32;49m
0x7fa6de046e8b    49b880a525dea67f0000    mov r8, 0x7fa6de25a580                                 [39;49m[32;49m
0x7fa6de046e95    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de046e9f    49ffd1                  call r9                    	< libc.[34;49mstrcmp[39;49m : 0x00007fa6de25a580 >[39;49m
[34;49m .. ", atoken ) ;  if ( ( ! atoken ) || ( [39;49m[33;40m![39;49m[34;49m ( strcmp ( atoken, "i2halt" ) ) ) ) {  printf ( "\n\n\ttoken = %s :: interpret2 exiting . .. [39;49m[32;49m
0x7fa6de046ea2    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de046ea5    740c                    jz 0xde046eb3                                          [39;49m[32;49m
0x7fa6de046ea7    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de046eb1    eb0a                    jmp 0x7fa6de046ebd         	< C_Syntax.[34;49minterpret2[39;49m+785 >[39;49m[32;49m
0x7fa6de046eb3    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de046ebd    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046ec1    498906                  mov [r14], rax                                         [39;49m
[34;49m .. | ( ! ( strcmp ( atoken, "i2halt" ) ) [39;49m[33;40m)[39;49m[34;49m ) {  printf ( "\n\n\ttoken = %s :: interpret2 exiting ...", atoken ) ; return ;  } else { .. [39;49m[32;49m
0x7fa6de046ec4    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de046ec7    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de046ecb    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fa6de046ecf    480bc1                  or rax, rcx                                            [39;49m[32;49m
0x7fa6de046ed2    4885c0                  test rax, rax                                          [39;49m
[34;49m .. rd ( atoken ) ; doWord ( aword ) ; }  [39;49m[33;40m}[39;49m[34;49m } }  .. [39;49m[32;49m
0x7fa6de046ed5    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de046ed8    0f843f000000            jz 0x7fa6de046f1d          	< C_Syntax.[34;49minterpret2[39;49m+881 >[39;49m
[34;49m ..  atoken, "i2halt" ) ) ) ) {  printf ( [39;49m[33;40m"\n\n\ttoken = %s :: interpret2 exiting ..."[39;49m[34;49m, atoken ) ; return ;  } else { if ( atoken ) { .. [39;49m[32;49m
0x7fa6de046ede    48b8ab559ddda67f0000    mov rax, 0x7fa6dd9d55ab    	< string : '[34;49m\n\n\ttoken = %s :: interpret2 exiting ...[39;49m' >[39;49m[32;49m
0x7fa6de046ee8    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. oken = %s :: interpret2 exiting ...", [39;49m[33;40matoken[39;49m[34;49m ) ; return ;  } else { if ( atoken ) {  aword = tokenToWord ( atoken ) ; doWord ( aw .. [39;49m[32;49m
0x7fa6de046eeb    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de046eef    488bf0                  mov rsi, rax                                           [39;49m
[34;49m .. ; while ( 1 ) {  atoken = token () ;  [39;49m[33;40mprintf[39;49m[34;49m ( "\n\ttoken = %s\n", atoken ) ;  if ( ( ! atoken ) || ( ! ( strcmp ( atoken, "i2hal .. [39;49m[32;49m
0x7fa6de046ef2    48b80000000000000000    mov rax, 0x0                                           [39;49m
[34;49m ..  strcmp ( atoken, "i2halt" ) ) ) ) {  [39;49m[33;40mprintf[39;49m[34;49m ( "\n\n\ttoken = %s :: interpret2 exiting ...", atoken ) ; return ;  } else { if ( a .. [39;49m[32;49m
0x7fa6de046efc    49b84481ebbf1d560000    mov r8, 0x561dbfeb8144                                 [39;49m[32;49m
0x7fa6de046f06    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de046f10    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000561dbfeb8144 >[39;49m
[34;49m .. : interpret2 exiting ...", atoken ) ; [39;49m[33;40mreturn[39;49m[34;49m ;  } else { if ( atoken ) {  aword = tokenToWord ( atoken ) ; doWord ( aword ) ; }   .. [39;49m[32;49m
0x7fa6de046f13    e96c000000              jmp 0x7fa6de046f84         	< C_Syntax.[34;49minterpret2[39;49m+984 >[39;49m
[34;49m .. t2 exiting ...", atoken ) ; return ;  [39;49m[33;40m}[39;49m[34;49m else { if ( atoken ) {  aword = tokenToWord ( atoken ) ; doWord ( aword ) ; }  } } }  .. [39;49m[32;49m
0x7fa6de046f18    e962000000              jmp 0x7fa6de046f7f         	< C_Syntax.[34;49minterpret2[39;49m+979 >[39;49m
[34;49m .. ..", atoken ) ; return ;  } else { if [39;49m[33;40m([39;49m[34;49m atoken ) {  aword = tokenToWord ( atoken ) ; doWord ( aword ) ; }  } } }  .. [39;49m[32;49m
0x7fa6de046f1d    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. oWord ( atoken ) ; doWord ( aword ) ; [39;49m[33;40m}[39;49m[34;49m  } } }  .. [39;49m[32;49m
0x7fa6de046f21    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de046f24    0f8455000000            jz 0x7fa6de046f7f          	< C_Syntax.[34;49minterpret2[39;49m+979 >[39;49m
[34;49m .. f ( atoken ) {  aword = tokenToWord ( [39;49m[33;40matoken[39;49m[34;49m ) ; doWord ( aword ) ; }  } } }  .. [39;49m[32;49m
0x7fa6de046f2a    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  ) ; return ;  } else { if ( atoken ) [39;49m[33;40m{[39;49m[34;49m  aword = tokenToWord ( atoken ) ; doWord ( aword ) ; }  } } }  .. [39;49m[32;49m
0x7fa6de046f2e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046f32    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ;  } else { if ( atoken ) {  aword = [39;49m[33;40mtokenToWord[39;49m[34;49m ( atoken ) ; doWord ( aword ) ; }  } } }  .. [39;49m[32;49m
0x7fa6de046f35    49b8171cefbf1d560000    mov r8, 0x561dbfef1c17                                 [39;49m[32;49m
0x7fa6de046f3f    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de046f49    49ffd1                  call r9                    	< Interpreter.[34;49mtokenToWord[39;49m : 0x0000561dbfef1c17 >[39;49m
[34;49m .. ; return ;  } else { if ( atoken ) {  [39;49m[33;40maword[39;49m[34;49m = tokenToWord ( atoken ) ; doWord ( aword ) ; }  } } }  .. [39;49m[32;49m
0x7fa6de046f4c    498d4710                lea rax, [r15+0x10]                                    [39;49m[32;49m
0x7fa6de046f50    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de046f53    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de046f56    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. rn ;  } else { if ( atoken ) {  aword [39;49m[33;40m=[39;49m[34;49m tokenToWord ( atoken ) ; doWord ( aword ) ; }  } } }  .. [39;49m[32;49m
0x7fa6de046f5a    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. d = tokenToWord ( atoken ) ; doWord ( [39;49m[33;40maword[39;49m[34;49m ) ; }  } } }  .. [39;49m[32;49m
0x7fa6de046f5d    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fa6de046f61    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de046f65    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ) {  aword = tokenToWord ( atoken ) ; [39;49m[33;40mdoWord[39;49m[34;49m ( aword ) ; }  } } }  .. [39;49m[32;49m
0x7fa6de046f68    49b8fc16efbf1d560000    mov r8, 0x561dbfef16fc                                 [39;49m[32;49m
0x7fa6de046f72    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de046f7c    49ffd1                  call r9                    	< Interpreter.[34;49mdoWord[39;49m : 0x0000561dbfef16fc >[39;49m[32;49m
0x7fa6de046f7f    e95dfeffff              jmp 0x7fa6de046de1         	< C_Syntax.[34;49minterpret2[39;49m+565 >[39;49m
[34;49m ..  atoken ) ; doWord ( aword ) ; }  } } [39;49m[33;40m}[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de046f84    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de046f88    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de046f8c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'interpret2' :: codeSize = 992
Word : 0x00007fa6dd72ce78 :: Compiled at : 0x00007fa6de046bac
 =============================
::> 'wdiss' was called at namespaces/compiler/interpreter.cft 73.24 <::
 
tdbg = 1 
tdbg2 = 2 
tdbg3 = 3 
tdbg4 = 4 
tdbg5 = 5 
tdbg6 = 6 
xhii = 3 3 3 
xhi =  7
 xhi1 = 3
 xhi1 = 11
 xhi2a = 11
 xhi1 = 3
 xhi1 = 11
 xhi2a = 11
	 interpret2 :> 

	token = using

Using Namespaces :> libc void C_Syntax C Root Infix PrefixCombinators Dlsym Interpreter System Shell String Compiler User locals_-1 Int Debug Class Logic Control Bits DObject Lexer Combinators testD a112 DLLNodeAlloc DLLNode Buffer int64 cta ct Ar3 Ar2 Ar1 DLLNodeAlloc4 DLListClone DLList byte Integer Pointer int OpenVmTil Word Namespace StartupMacros Io Compiling Reserved Macro PreProcessor List Stack Memory Colors File Asm Locals C_Typedef Forth Experimental 

	token = //

	token = c_syntaxOff

	token = sp

	token = User

	token = #

	token = :

	token = 1

	token = 2

	token = +

	token = p

	token = ;

	token = hi1
 3
	token = :

	token = hi1

	token = hi1

	token = ;

	token = :

	token = hey1

	token = hey1

	token = hey1

	token = ;

	token = nl


	token = heey1
 3 3 3 3 3 3
	token = #

	token = i2halt


	token = i2halt :: interpret2 exiting ... hi
DataStack at : [34;49mnamespaces/test/stack.cft : 2.6[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fa6ddf73220, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/test/stack.cft : 2.27[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fa6ddf73220, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/test/stack.cft : 2.45[39;49m :
DataStack depth =   9 : Dsp (R14) = Top = 0x00007fa6ddf73250, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73250 > = 0x0000000000000000	
  DataStack   [  -1 ] < 0x00007fa6ddf73248 > = 0x0000000000000001	
  DataStack   [  -2 ] < 0x00007fa6ddf73240 > = 0x0000000000000002	
  DataStack   [  -3 ] < 0x00007fa6ddf73238 > = 0x0000000000000003	
  DataStack   [  -4 ] < 0x00007fa6ddf73230 > = 0x0000000000000004	
  DataStack   [  -5 ] < 0x00007fa6ddf73228 > = 0x0000000000000005	
  DataStack   [  -6 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -7 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -8 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/test/stack.cft : 2.53[39;49m :
DataStack depth =  10 : Dsp (R14) = Top = 0x00007fa6ddf73258, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73258 > = 0x0000000000000003	
  DataStack   [  -1 ] < 0x00007fa6ddf73250 > = 0x0000000000000000	
  DataStack   [  -2 ] < 0x00007fa6ddf73248 > = 0x0000000000000001	
  DataStack   [  -3 ] < 0x00007fa6ddf73240 > = 0x0000000000000002	
  DataStack   [  -4 ] < 0x00007fa6ddf73238 > = 0x0000000000000003	
  DataStack   [  -5 ] < 0x00007fa6ddf73230 > = 0x0000000000000004	
  DataStack   [  -6 ] < 0x00007fa6ddf73228 > = 0x0000000000000005	
  DataStack   [  -7 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -8 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -9 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	
3
DataStack at : [34;49mnamespaces/test/stack.cft : 2.81[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fa6ddf73220, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/test/stack.cft : 3.59[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fa6ddf73220, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	

 1
DataStack at : [34;49mnamespaces/test/stack.cft : 3.59[39;49m :
DataStack depth =   4 : Dsp (R14) = Top = 0x00007fa6ddf73228, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73228 > = 0x0000000000000001	
  DataStack   [  -1 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -3 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	
 
testpick : above line should read 1
 namespaces/compiler/c_syntax.cft 6.9
hello 7
 CObj.size = 104
Dump at : namespaces/compiler/c_syntax.cft : 44.24 :
Dump : Address = 0x00007fa6dd739528 : Number = 104 :: (little endian dump)
0x00007fa6dd739528 : 0x00000000000004d2 0x0000000000000000  d2 04 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd739538 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd739548 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd739558 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd739568 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd739578 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd739588 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

	chey.hi = 1234
Dump at : namespaces/compiler/c_syntax.cft : 49.24 :
Dump : Address = 0x00007fa6dd739528 : Number = 104 :: (little endian dump)
0x00007fa6dd739528 : 0x00000000000004d2 0x0000000000ff0000  d2 04 00 00 00 00 00 00  00 00 ff 00 00 00 00 00  ........ ........ 
0x00007fa6dd739538 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd739548 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd739558 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd739568 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd739578 : 0x0000000000000000 0x0123456789abcdef  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fa6dd739588 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

	chey.heey = 4d2
Dump at : namespaces/compiler/c_syntax.cft : 52.24 :
Dump : Address = 0x00007fa6dd739528 : Number = 104 :: (little endian dump)
0x00007fa6dd739528 : 0x00000000000004d2 0x0000000000ff0000  d2 04 00 00 00 00 00 00  00 00 ff 00 00 00 00 00  ........ ........ 
0x00007fa6dd739538 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd739548 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd739558 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd739568 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd739578 : 0x0000000000000000 0x0123456789abcdef  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fa6dd739588 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

Dump at : namespaces/compiler/c_syntax.cft : 60.24 :
Dump : Address = 0x00007fa6dd739528 : Number = 104 :: (little endian dump)
0x00007fa6dd739528 : 0x00000000000004d2 0x0000000000ff0000  d2 04 00 00 00 00 00 00  00 00 ff 00 00 00 00 00  ........ ........ 
0x00007fa6dd739538 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd739548 : 0x0000000000000000 0x0123456789abcdef  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fa6dd739558 : 0x0123456789abcdef 0x0000000000000000  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
0x00007fa6dd739568 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd739578 : 0x0000000000000000 0x0123456789abcdef  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fa6dd739588 : 0x0123456789abcdef 0x0000000000000000  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 

	chey.hey = 4d2
Dump at : namespaces/compiler/c_syntax.cft : 66.24 :
Dump : Address = 0x00007fa6dd739528 : Number = 104 :: (little endian dump)
0x00007fa6dd739528 : 0x00000000000004d2 0x0000000000ff0000  d2 04 00 00 00 00 00 00  00 00 ff 00 00 00 00 00  ........ ........ 
0x00007fa6dd739538 : 0x0000000000000000 0xff00000000160000  00 00 00 00 00 00 00 00  00 00 16 00 00 00 00 ff  ........ ........ 
0x00007fa6dd739548 : 0x0000000000000000 0x0123456789abcdef  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fa6dd739558 : 0x0123456789abcdef 0x0000000000000000  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
0x00007fa6dd739568 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd739578 : 0x0000000000000000 0x0123456789abcdef  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fa6dd739588 : 0x0123456789abcdef 0x0000000000000000  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 

cobj.size = 104

chey = 7fa6dd739528

chey.hey = 4d2

&chey.hey = 7fa6dd739528 0x0123456789abcdef 0x00007fa6dd739550
	hoot
Dump at : namespaces/compiler/c_syntax.cft : 83.24 :
Dump : Address = 0x00007fa6dd739528 : Number = 104 :: (little endian dump)
0x00007fa6dd739528 : 0x00000000000004d2 0x000000006c6c6577  d2 04 00 00 00 00 00 00  77 65 6c 6c 00 00 00 00  ........ well.... 
0x00007fa6dd739538 : 0x0000000000000000 0x746f6f68090a0000  00 00 00 00 00 00 00 00  00 00 0a 09 68 6f 6f 74  ........ ....hoot 
0x00007fa6dd739548 : 0x0000000000000000 0x0123456789abcdef  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fa6dd739558 : 0x0123456789abcdef 0x0000000000000000  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
0x00007fa6dd739568 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd739578 : 0x0000000000000000 0x0123456789abcdef  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fa6dd739588 : 0x0123456789abcdef 0x0000000000000000  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 

Dump at : namespaces/compiler/c_syntax.cft : 86.24 :
Dump : Address = 0x00007fa6dd739528 : Number = 104 :: (little endian dump)
0x00007fa6dd739528 : 0x00000000000004d2 0x000000006c6c6577  d2 04 00 00 00 00 00 00  77 65 6c 6c 00 00 00 00  ........ well.... 
0x00007fa6dd739538 : 0x0000000000000000 0x746f6f68090a0000  00 00 00 00 00 00 00 00  00 00 0a 09 68 6f 6f 74  ........ ....hoot 
0x00007fa6dd739548 : 0x00000074276e6f64 0x0123456789abcdef  64 6f 6e 27 74 00 00 00  ef cd ab 89 67 45 23 01  don't... ....gE#. 
0x00007fa6dd739558 : 0x0123456789abcdef 0x0000000000000000  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
0x00007fa6dd739568 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd739578 : 0x0000000000000000 0x0123456789abcdef  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fa6dd739588 : 0x0123456789abcdef 0x0000000000000000  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 

Dump at : namespaces/compiler/c_syntax.cft : 88.24 :
Dump : Address = 0x00007fa6dd739528 : Number = 104 :: (little endian dump)
0x00007fa6dd739528 : 0x00000000000004d2 0x00000000746f6f68  d2 04 00 00 00 00 00 00  68 6f 6f 74 00 00 00 00  ........ hoot.... 
0x00007fa6dd739538 : 0x0000000000000000 0x746f6f68090a0000  00 00 00 00 00 00 00 00  00 00 0a 09 68 6f 6f 74  ........ ....hoot 
0x00007fa6dd739548 : 0x00000074276e6f64 0x0123456789abcdef  64 6f 6e 27 74 00 00 00  ef cd ab 89 67 45 23 01  don't... ....gE#. 
0x00007fa6dd739558 : 0x0123456789abcdef 0x0000000000000000  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
0x00007fa6dd739568 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd739578 : 0x0000000000000000 0x0123456789abcdef  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fa6dd739588 : 0x0123456789abcdef 0x0000000000000000  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 

Dump at : namespaces/compiler/c_syntax.cft : 90.24 :
Dump : Address = 0x00007fa6dd739528 : Number = 104 :: (little endian dump)
0x00007fa6dd739528 : 0x00000000000004d2 0x276e6f6420216b6f  d2 04 00 00 00 00 00 00  6f 6b 21 20 64 6f 6e 27  ........ ok! don' 
0x00007fa6dd739538 : 0x0000746f6f682074 0x746f6f68090a0000  74 20 68 6f 6f 74 00 00  00 00 0a 09 68 6f 6f 74  t hoot.. ....hoot 
0x00007fa6dd739548 : 0x00000074276e6f64 0x0123456789abcdef  64 6f 6e 27 74 00 00 00  ef cd ab 89 67 45 23 01  don't... ....gE#. 
0x00007fa6dd739558 : 0x0123456789abcdef 0x0000000000000000  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
0x00007fa6dd739568 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd739578 : 0x0000000000000000 0x0123456789abcdef  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fa6dd739588 : 0x0123456789abcdef 0x0000000000000000  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 

Dump at : namespaces/compiler/c_syntax.cft : 92.24 :
Dump : Address = 0x00007fa6dd739528 : Number = 104 :: (little endian dump)
0x00007fa6dd739528 : 0x00000000000004d2 0x6f64202c6c6c6577  d2 04 00 00 00 00 00 00  77 65 6c 6c 2c 20 64 6f  ........ well, do 
0x00007fa6dd739538 : 0x276e6f6420726f20 0x7400746f6f682074  20 6f 72 20 64 6f 6e 27  74 20 68 6f 6f 74 00 74   or don' t hoot.t 
0x00007fa6dd739548 : 0x00000074276e6f64 0x0123456789abcdef  64 6f 6e 27 74 00 00 00  ef cd ab 89 67 45 23 01  don't... ....gE#. 
0x00007fa6dd739558 : 0x0123456789abcdef 0x0000000000000000  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
0x00007fa6dd739568 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd739578 : 0x0000000000000000 0x0123456789abcdef  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fa6dd739588 : 0x0123456789abcdef 0x0000000000000000  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 

	don't

	hoot

Dump at : namespaces/compiler/c_syntax.cft : 96.24 :
Dump : Address = 0x00007fa6dd739528 : Number = 104 :: (little endian dump)
0x00007fa6dd739528 : 0x00000000000004d2 0x6f64202c6c6c6577  d2 04 00 00 00 00 00 00  77 65 6c 6c 2c 20 64 6f  ........ well, do 
0x00007fa6dd739538 : 0x276e6f6420726f20 0x7400746f6f682074  20 6f 72 20 64 6f 6e 27  74 20 68 6f 6f 74 00 74   or don' t hoot.t 
0x00007fa6dd739548 : 0x00000074276e6f64 0x0123456789abcdef  64 6f 6e 27 74 00 00 00  ef cd ab 89 67 45 23 01  don't... ....gE#. 
0x00007fa6dd739558 : 0x0123456789abcdef 0x0000000000000000  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
0x00007fa6dd739568 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd739578 : 0x0000000000000000 0x0123456789abcdef  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fa6dd739588 : 0x0123456789abcdef 0x0000000000000000  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 

 =============================
C_Syntax.[34;49mchi[39;49m <:> cfrTil compiled word, prefix
SourceCode for C_Syntax.[34;49mchi[39;49m :> 
[34;49mvoid chi ( CObj chey0, d | a b c ) { c = 1 + 2 ; b = c + 2 ; a = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a should be 8" assert dump ( &chey0, cobj.size ) ; d = cobj.chey0.hey ; hex p ( d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &cobj.chey0.chars, "\n\t\they = %lx", d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &cobj.chey0.chars2, "\n\t\they hey = %lx", cobj.chey0.hey ) ; printf ( "\n cobj.chey0.chars = %s\n", &cobj.chey0.chars ) ; printf ( "\n cobj.chey0.chars2 = %s\n", &cobj.chey0.chars2 ) ; printf ( "\n chi : d = %lx\n", d ) ; d = cobj.chey0.hey ; printf ( "\n%lx\n", d ) ; printf ( "\n chi : d = %lx\n", d ) ; _assert ( d #x0123456789abcdef ) ; printf ( "\n%x\n", cobj.chey0.hey ) ; sprintf ( &chey0.chars [ 24 ], "%s", "hoot" ) ; dump ( &chey0, cobj.size ) ; } [39;49m
Source code file location of [34;49mchi[39;49m : "namespaces/compiler/c_syntax.cft" : 101.29 :: we are now at : namespaces/compiler/c_syntax.cft : 128.20
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde047784 -- code size = 1287 bytes
TypeSignature : Object 
 -----------------------------
Word :: C_Syntax.[34;49mchi[39;49m : definition = 0x00007fa6de047784 : disassembly at namespaces/compiler/c_syntax.cft : 128.20 :
[34;49m ..                                  void [39;49m[33;40mchi[39;49m[34;49m ( CObj chey0, d | a b c ) { c = 1 + 2 ; b = c + 2 ; a = b + c ; nl p ( c ) ; c 3 "c sho .. [39;49m[32;49m
0x7fa6de047784    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de047788    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04778c    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m void chi ( CObj chey0, d | a b c ) { c = [39;49m[33;40m1[39;49m[34;49m + 2 ; b = c + 2 ; a = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b sh .. [39;49m[32;49m
0x7fa6de047793    48b80300000000000000    mov rax, 0x3                                           [39;49m
[34;49m ..  void chi ( CObj chey0, d | a b c ) { [39;49m[33;40mc[39;49m[34;49m = 1 + 2 ; b = c + 2 ; a = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 " .. [39;49m[32;49m
0x7fa6de04779d    498d4f18                lea rcx, [r15+0x18]                                    [39;49m
[34;49m   void chi ( CObj chey0, d | a b c ) { c [39;49m[33;40mstore[39;49m[34;49m 2 ; b = c + 2 ; a = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b  .. [39;49m[32;49m
0x7fa6de0477a1    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  chey0, d | a b c ) { c = 1 + 2 ; b = [39;49m[33;40mc[39;49m[34;49m + 2 ; a = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" a .. [39;49m[32;49m
0x7fa6de0477a4    498b4718                mov rax, [r15+0x18]                                    [39;49m
[34;49m .. y0, d | a b c ) { c = 1 + 2 ; b = c + [39;49m[33;40m2[39;49m[34;49m ; a = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" asser .. [39;49m[32;49m
0x7fa6de0477a8    48b90200000000000000    mov rcx, 0x2                                           [39;49m
[34;49m .. hey0, d | a b c ) { c = 1 + 2 ; b = c [39;49m[33;40m+[39;49m[34;49m 2 ; a = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" ass .. [39;49m[32;49m
0x7fa6de0477b2    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. CObj chey0, d | a b c ) { c = 1 + 2 ; [39;49m[33;40mb[39;49m[34;49m = c + 2 ; a = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be  .. [39;49m[32;49m
0x7fa6de0477b5    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m .. bj chey0, d | a b c ) { c = 1 + 2 ; b [39;49m[33;40m=[39;49m[34;49m c + 2 ; a = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" .. [39;49m[32;49m
0x7fa6de0477b9    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. a b c ) { c = 1 + 2 ; b = c + 2 ; a = [39;49m[33;40mb[39;49m[34;49m + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a  .. [39;49m[32;49m
0x7fa6de0477bc    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m .. c ) { c = 1 + 2 ; b = c + 2 ; a = b + [39;49m[33;40mc[39;49m[34;49m ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ;  .. [39;49m[32;49m
0x7fa6de0477c0    498b4f18                mov rcx, [r15+0x18]                                    [39;49m
[34;49m .. b c ) { c = 1 + 2 ; b = c + 2 ; a = b [39;49m[33;40m+[39;49m[34;49m c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a )  .. [39;49m[32;49m
0x7fa6de0477c4    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. d | a b c ) { c = 1 + 2 ; b = c + 2 ; [39;49m[33;40ma[39;49m[34;49m = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p  .. [39;49m[32;49m
0x7fa6de0477c7    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m .. | a b c ) { c = 1 + 2 ; b = c + 2 ; a [39;49m[33;40m=[39;49m[34;49m b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p (  .. [39;49m[32;49m
0x7fa6de0477cb    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. { c = 1 + 2 ; b = c + 2 ; a = b + c ; [39;49m[33;40mnl[39;49m[34;49m p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8  .. [39;49m[32;49m
0x7fa6de0477ce    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de0477d8    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de0477e2    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m ..  + 2 ; b = c + 2 ; a = b + c ; nl p ( [39;49m[33;40mc[39;49m[34;49m ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a shou .. [39;49m[32;49m
0x7fa6de0477e5    498b4718                mov rax, [r15+0x18]                                    [39;49m[32;49m
0x7fa6de0477e9    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0477ed    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  = 1 + 2 ; b = c + 2 ; a = b + c ; nl [39;49m[33;40mp[39;49m[34;49m ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a  .. [39;49m[32;49m
0x7fa6de0477f0    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de0477fa    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m
[34;49m ..  b = c + 2 ; a = b + c ; nl p ( c ) ; [39;49m[33;40mc[39;49m[34;49m 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a should be  .. [39;49m[32;49m
0x7fa6de0477fd    498b4718                mov rax, [r15+0x18]                                    [39;49m[32;49m
0x7fa6de047801    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de047805    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  = c + 2 ; a = b + c ; nl p ( c ) ; c [39;49m[33;40m3[39;49m[34;49m "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a should be 8" .. [39;49m[32;49m
0x7fa6de047808    48b80300000000000000    mov rax, 0x3                                           [39;49m[32;49m
0x7fa6de047812    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de047816    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  c + 2 ; a = b + c ; nl p ( c ) ; c 3 [39;49m[33;40m"c should be 3"[39;49m[34;49m assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a should be 8" a .. [39;49m[32;49m
0x7fa6de047819    48b84e47ffdda67f0000    mov rax, 0x7fa6ddff474e    	< string : '[34;49mc should be 3[39;49m' >[39;49m[32;49m
0x7fa6de047823    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de047827    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  c ; nl p ( c ) ; c 3 "c should be 3" [39;49m[33;40massert[39;49m[34;49m p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a should be 8" assert dump ( &ch .. [39;49m[32;49m
0x7fa6de04782a    49b98da803dea67f0000    mov r9, 0x7fa6de03a88d                                 [39;49m[32;49m
0x7fa6de047834    49ffd1                  call r9                    	< System.[34;49massert1[39;49m : 0x00007fa6de03a88d >[39;49m
[34;49m ..  c ) ; c 3 "c should be 3" assert p ( [39;49m[33;40mb[39;49m[34;49m ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a should be 8" assert dump ( &chey0, cobj.s .. [39;49m[32;49m
0x7fa6de047837    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fa6de04783b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04783f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  p ( c ) ; c 3 "c should be 3" assert [39;49m[33;40mp[39;49m[34;49m ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a should be 8" assert dump ( &chey0, co .. [39;49m[32;49m
0x7fa6de047842    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de04784c    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m
[34;49m ..  c 3 "c should be 3" assert p ( b ) ; [39;49m[33;40mb[39;49m[34;49m 5 "b should be 5" assert p ( a ) ; a 8 "a should be 8" assert dump ( &chey0, cobj.size )  .. [39;49m[32;49m
0x7fa6de04784f    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fa6de047853    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de047857    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  3 "c should be 3" assert p ( b ) ; b [39;49m[33;40m5[39;49m[34;49m "b should be 5" assert p ( a ) ; a 8 "a should be 8" assert dump ( &chey0, cobj.size ) ;  .. [39;49m[32;49m
0x7fa6de04785a    48b80500000000000000    mov rax, 0x5                                           [39;49m[32;49m
0x7fa6de047864    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de047868    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  "c should be 3" assert p ( b ) ; b 5 [39;49m[33;40m"b should be 5"[39;49m[34;49m assert p ( a ) ; a 8 "a should be 8" assert dump ( &chey0, cobj.size ) ;  d .. [39;49m[32;49m
0x7fa6de04786b    48b87e47ffdda67f0000    mov rax, 0x7fa6ddff477e    	< string : '[34;49mb should be 5[39;49m' >[39;49m[32;49m
0x7fa6de047875    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de047879    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  assert p ( b ) ; b 5 "b should be 5" [39;49m[33;40massert[39;49m[34;49m p ( a ) ; a 8 "a should be 8" assert dump ( &chey0, cobj.size ) ;  d = cobj.chey0.he .. [39;49m[32;49m
0x7fa6de04787c    49b98da803dea67f0000    mov r9, 0x7fa6de03a88d                                 [39;49m[32;49m
0x7fa6de047886    49ffd1                  call r9                    	< System.[34;49massert1[39;49m : 0x00007fa6de03a88d >[39;49m
[34;49m ..  b ) ; b 5 "b should be 5" assert p ( [39;49m[33;40ma[39;49m[34;49m ) ; a 8 "a should be 8" assert dump ( &chey0, cobj.size ) ;  d = cobj.chey0.hey ; hex p ( .. [39;49m[32;49m
0x7fa6de047889    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de04788d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de047891    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  p ( b ) ; b 5 "b should be 5" assert [39;49m[33;40mp[39;49m[34;49m ( a ) ; a 8 "a should be 8" assert dump ( &chey0, cobj.size ) ;  d = cobj.chey0.hey ; hex .. [39;49m[32;49m
0x7fa6de047894    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de04789e    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m
[34;49m ..  b 5 "b should be 5" assert p ( a ) ; [39;49m[33;40ma[39;49m[34;49m 8 "a should be 8" assert dump ( &chey0, cobj.size ) ;  d = cobj.chey0.hey ; hex p ( d ) ; .. [39;49m[32;49m
0x7fa6de0478a1    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de0478a5    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0478a9    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  5 "b should be 5" assert p ( a ) ; a [39;49m[33;40m8[39;49m[34;49m "a should be 8" assert dump ( &chey0, cobj.size ) ;  d = cobj.chey0.hey ; hex p ( d ) ; p .. [39;49m[32;49m
0x7fa6de0478ac    48b80800000000000000    mov rax, 0x8                                           [39;49m[32;49m
0x7fa6de0478b6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0478ba    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  "b should be 5" assert p ( a ) ; a 8 [39;49m[33;40m"a should be 8"[39;49m[34;49m assert dump ( &chey0, cobj.size ) ;  d = cobj.chey0.hey ; hex p ( d ) ; pri .. [39;49m[32;49m
0x7fa6de0478bd    48b8ae47ffdda67f0000    mov rax, 0x7fa6ddff47ae    	< string : '[34;49ma should be 8[39;49m' >[39;49m[32;49m
0x7fa6de0478c7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0478cb    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  assert p ( a ) ; a 8 "a should be 8" [39;49m[33;40massert[39;49m[34;49m dump ( &chey0, cobj.size ) ;  d = cobj.chey0.hey ; hex p ( d ) ; printf ( "\n chi :  .. [39;49m[32;49m
0x7fa6de0478ce    49b98da803dea67f0000    mov r9, 0x7fa6de03a88d                                 [39;49m[32;49m
0x7fa6de0478d8    49ffd1                  call r9                    	< System.[34;49massert1[39;49m : 0x00007fa6de03a88d >[39;49m
[34;49m ..  ; a 8 "a should be 8" assert dump ( &[39;49m[33;40mchey0[39;49m[34;49m, cobj.size ) ;  d = cobj.chey0.hey ; hex p ( d ) ; printf ( "\n chi : d = %lx\n", d ) .. [39;49m[32;49m
0x7fa6de0478db    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de0478df    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de0478e6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0478ea    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ould be 8" assert dump ( &chey0, cobj.[39;49m[33;40msize[39;49m[34;49m ) ;  d = cobj.chey0.hey ; hex p ( d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( .. [39;49m[32;49m
0x7fa6de0478ed    48b8e8826adda67f0000    mov rax, 0x7fa6dd6a82e8    	< string : '[34;49mh[39;49m' >[39;49m[32;49m
0x7fa6de0478f7    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de0478fa    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0478fe    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  p ( a ) ; a 8 "a should be 8" assert [39;49m[33;40mdump[39;49m[34;49m ( &chey0, cobj.size ) ;  d = cobj.chey0.hey ; hex p ( d ) ; printf ( "\n chi : d = %lx .. [39;49m[32;49m
0x7fa6de047901    49b87431efbf1d560000    mov r8, 0x561dbfef3174                                 [39;49m[32;49m
0x7fa6de04790b    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de047915    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000561dbfef3174 >[39;49m
[34;49m .. ump ( &chey0, cobj.size ) ;  d = cobj.[39;49m[33;40mchey0[39;49m[34;49m.hey ; hex p ( d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &cobj.chey0.chars, .. [39;49m[32;49m
0x7fa6de047918    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de04791c    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fa6de047923    488b00                  mov rax, [rax]                                         [39;49m
[34;49m ..  assert dump ( &chey0, cobj.size ) ;  [39;49m[33;40md[39;49m[34;49m = cobj.chey0.hey ; hex p ( d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &cobj.che .. [39;49m[32;49m
0x7fa6de047926    498d4ff8                lea rcx, [r15-0x8]                                     [39;49m
[34;49m .. ssert dump ( &chey0, cobj.size ) ;  d [39;49m[33;40m=[39;49m[34;49m cobj.chey0.hey ; hex p ( d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &cobj.chey0 .. [39;49m[32;49m
0x7fa6de04792a    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. , cobj.size ) ;  d = cobj.chey0.hey ; [39;49m[33;40mhex[39;49m[34;49m p ( d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &cobj.chey0.chars, "\n\t\they  .. [39;49m[32;49m
0x7fa6de04792d    49b80531efbf1d560000    mov r8, 0x561dbfef3105                                 [39;49m[32;49m
0x7fa6de047937    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de047941    49ffd1                  call r9                    	< System.[34;49mhex[39;49m : 0x0000561dbfef3105 >[39;49m
[34;49m .. ize ) ;  d = cobj.chey0.hey ; hex p ( [39;49m[33;40md[39;49m[34;49m ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &cobj.chey0.chars, "\n\t\they = %lx",  .. [39;49m[32;49m
0x7fa6de047944    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de047948    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04794c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. bj.size ) ;  d = cobj.chey0.hey ; hex [39;49m[33;40mp[39;49m[34;49m ( d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &cobj.chey0.chars, "\n\t\they = %l .. [39;49m[32;49m
0x7fa6de04794f    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de047959    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m
[34;49m .. bj.chey0.hey ; hex p ( d ) ; printf ( [39;49m[33;40m"\n chi : d = %lx\n"[39;49m[34;49m, d ) ; sprintf ( &cobj.chey0.chars, "\n\t\they = %lx", d ) ; printf (  .. [39;49m[32;49m
0x7fa6de04795c    48b86cca84dda67f0000    mov rax, 0x7fa6dd84ca6c    	< string : '[34;49m\n chi : d = %lx\n[39;49m' >[39;49m[32;49m
0x7fa6de047966    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  d ) ; printf ( "\n chi : d = %lx\n", [39;49m[33;40md[39;49m[34;49m ) ; sprintf ( &cobj.chey0.chars, "\n\t\they = %lx", d ) ; printf ( "\n chi : d = %lx\n",  .. [39;49m[32;49m
0x7fa6de047969    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04796d    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fa6de047970    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de04797a    49b84481ebbf1d560000    mov r8, 0x561dbfeb8144                                 [39;49m[32;49m
0x7fa6de047984    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04798e    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000561dbfeb8144 >[39;49m
[34;49m .. i : d = %lx\n", d ) ; sprintf ( &cobj.[39;49m[33;40mchey0[39;49m[34;49m.chars, "\n\t\they = %lx", d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &cobj. .. [39;49m[32;49m
0x7fa6de047991    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de047995    4881c008000000          add rax, 0x8                                           [39;49m[32;49m
0x7fa6de04799c    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. ", d ) ; sprintf ( &cobj.chey0.chars, [39;49m[33;40m"\n\t\they = %lx"[39;49m[34;49m, d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &cobj.chey0.chars2, .. [39;49m[32;49m
0x7fa6de04799f    48b87dca84dda67f0000    mov rax, 0x7fa6dd84ca7d    	< string : '[34;49m\n\t\they = %lx[39;49m' >[39;49m[32;49m
0x7fa6de0479a9    488bf0                  mov rsi, rax                                           [39;49m
[34;49m .. &cobj.chey0.chars, "\n\t\they = %lx", [39;49m[33;40md[39;49m[34;49m ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &cobj.chey0.chars2, "\n\t\they hey = % .. [39;49m[32;49m
0x7fa6de0479ac    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0479b0    488bd0                  mov rdx, rax                                           [39;49m[32;49m
0x7fa6de0479b3    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de0479bd    49b85089eabf1d560000    mov r8, 0x561dbfea8950                                 [39;49m[32;49m
0x7fa6de0479c7    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de0479d1    49ffd1                  call r9                    	< C.[34;49msprintf[39;49m : 0x0000561dbfea8950 >[39;49m
[34;49m .. rs, "\n\t\they = %lx", d ) ; printf ( [39;49m[33;40m"\n chi : d = %lx\n"[39;49m[34;49m, d ) ; sprintf ( &cobj.chey0.chars2, "\n\t\they hey = %lx", cobj.chey0 .. [39;49m[32;49m
0x7fa6de0479d4    48b88aca84dda67f0000    mov rax, 0x7fa6dd84ca8a    	< string : '[34;49m\n chi : d = %lx\n[39;49m' >[39;49m[32;49m
0x7fa6de0479de    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  d ) ; printf ( "\n chi : d = %lx\n", [39;49m[33;40md[39;49m[34;49m ) ; sprintf ( &cobj.chey0.chars2, "\n\t\they hey = %lx", cobj.chey0.hey ) ; printf ( "\n  .. [39;49m[32;49m
0x7fa6de0479e1    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0479e5    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fa6de0479e8    48b80000000000000000    mov rax, 0x0                                           [39;49m
[34;49m .. chey0.chars, "\n\t\they = %lx", d ) ; [39;49m[33;40mprintf[39;49m[34;49m ( "\n chi : d = %lx\n", d ) ; sprintf ( &cobj.chey0.chars2, "\n\t\they hey = %lx", c .. [39;49m[32;49m
0x7fa6de0479f2    49b84481ebbf1d560000    mov r8, 0x561dbfeb8144                                 [39;49m[32;49m
0x7fa6de0479fc    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de047a06    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000561dbfeb8144 >[39;49m
[34;49m .. s2, "\n\t\they hey = %lx", cobj.chey0.[39;49m[33;40mhey[39;49m[34;49m ) ; printf ( "\n cobj.chey0.chars = %s\n", &cobj.chey0.chars ) ; printf ( "\n cobj.chey .. [39;49m[32;49m
0x7fa6de047a09    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de047a0d    4881c038000000          add rax, 0x38                                          [39;49m[32;49m
0x7fa6de047a14    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. , d ) ; sprintf ( &cobj.chey0.chars2, [39;49m[33;40m"\n\t\they hey = %lx"[39;49m[34;49m, cobj.chey0.hey ) ; printf ( "\n cobj.chey0.chars = %s\n", &cobj.chey .. [39;49m[32;49m
0x7fa6de047a17    48b89bca84dda67f0000    mov rax, 0x7fa6dd84ca9b    	< string : '[34;49m\n\t\they hey = %lx[39;49m' >[39;49m[32;49m
0x7fa6de047a21    488bf0                  mov rsi, rax                                           [39;49m
[34;49m .. 0.chars2, "\n\t\they hey = %lx", cobj.[39;49m[33;40mchey0[39;49m[34;49m.hey ) ; printf ( "\n cobj.chey0.chars = %s\n", &cobj.chey0.chars ) ; printf ( "\n cob .. [39;49m[32;49m
0x7fa6de047a24    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de047a28    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de047a2f    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de047a32    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de047a36    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de047a39    498b16                  mov rdx, [r14]                                         [39;49m[32;49m
0x7fa6de047a3c    48b80000000000000000    mov rax, 0x0                                           [39;49m
[34;49m ..  printf ( "\n chi : d = %lx\n", d ) ; [39;49m[33;40msprintf[39;49m[34;49m ( &cobj.chey0.chars2, "\n\t\they hey = %lx", cobj.chey0.hey ) ; printf ( "\n cobj.c .. [39;49m[32;49m
0x7fa6de047a46    49b85089eabf1d560000    mov r8, 0x561dbfea8950                                 [39;49m[32;49m
0x7fa6de047a50    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de047a5a    49ffd1                  call r9                    	< C.[34;49msprintf[39;49m : 0x0000561dbfea8950 >[39;49m
[34;49m .. y = %lx", cobj.chey0.hey ) ; printf ( [39;49m[33;40m"\n cobj.chey0.chars = %s\n"[39;49m[34;49m, &cobj.chey0.chars ) ; printf ( "\n cobj.chey0.chars2 = %s\n", .. [39;49m[32;49m
0x7fa6de047a5d    48b8acca84dda67f0000    mov rax, 0x7fa6dd84caac    	< string : '[34;49m\n cobj.chey0.chars = %s\n[39;49m' >[39;49m[32;49m
0x7fa6de047a67    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. ( "\n cobj.chey0.chars = %s\n", &cobj.[39;49m[33;40mchey0[39;49m[34;49m.chars ) ; printf ( "\n cobj.chey0.chars2 = %s\n", &cobj.chey0.chars2 ) ; printf ( "\n .. [39;49m[32;49m
0x7fa6de047a6a    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de047a6e    4881c008000000          add rax, 0x8                                           [39;49m[32;49m
0x7fa6de047a75    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fa6de047a78    48b80000000000000000    mov rax, 0x0                                           [39;49m
[34;49m .. t\they hey = %lx", cobj.chey0.hey ) ; [39;49m[33;40mprintf[39;49m[34;49m ( "\n cobj.chey0.chars = %s\n", &cobj.chey0.chars ) ; printf ( "\n cobj.chey0.chars2 .. [39;49m[32;49m
0x7fa6de047a82    49b84481ebbf1d560000    mov r8, 0x561dbfeb8144                                 [39;49m[32;49m
0x7fa6de047a8c    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de047a96    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000561dbfeb8144 >[39;49m
[34;49m .. %s\n", &cobj.chey0.chars ) ; printf ( [39;49m[33;40m"\n cobj.chey0.chars2 = %s\n"[39;49m[34;49m, &cobj.chey0.chars2 ) ; printf ( "\n chi : d = %lx\n", d ) ;  .. [39;49m[32;49m
0x7fa6de047a99    48b8c5ca84dda67f0000    mov rax, 0x7fa6dd84cac5    	< string : '[34;49m\n cobj.chey0.chars2 = %s\n[39;49m' >[39;49m[32;49m
0x7fa6de047aa3    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  "\n cobj.chey0.chars2 = %s\n", &cobj.[39;49m[33;40mchey0[39;49m[34;49m.chars2 ) ; printf ( "\n chi : d = %lx\n", d ) ; d = cobj.chey0.hey ; printf ( "\n%lx\ .. [39;49m[32;49m
0x7fa6de047aa6    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de047aaa    4881c038000000          add rax, 0x38                                          [39;49m[32;49m
0x7fa6de047ab1    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fa6de047ab4    48b80000000000000000    mov rax, 0x0                                           [39;49m
[34;49m .. .chars = %s\n", &cobj.chey0.chars ) ; [39;49m[33;40mprintf[39;49m[34;49m ( "\n cobj.chey0.chars2 = %s\n", &cobj.chey0.chars2 ) ; printf ( "\n chi : d = %lx\n .. [39;49m[32;49m
0x7fa6de047abe    49b84481ebbf1d560000    mov r8, 0x561dbfeb8144                                 [39;49m[32;49m
0x7fa6de047ac8    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de047ad2    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000561dbfeb8144 >[39;49m
[34;49m .. s\n", &cobj.chey0.chars2 ) ; printf ( [39;49m[33;40m"\n chi : d = %lx\n"[39;49m[34;49m, d ) ; d = cobj.chey0.hey ; printf ( "\n%lx\n", d ) ; printf ( "\n chi .. [39;49m[32;49m
0x7fa6de047ad5    48b8dfca84dda67f0000    mov rax, 0x7fa6dd84cadf    	< string : '[34;49m\n chi : d = %lx\n[39;49m' >[39;49m[32;49m
0x7fa6de047adf    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. s2 ) ; printf ( "\n chi : d = %lx\n", [39;49m[33;40md[39;49m[34;49m ) ; d = cobj.chey0.hey ; printf ( "\n%lx\n", d ) ; printf ( "\n chi : d = %lx\n", d ) ; _ .. [39;49m[32;49m
0x7fa6de047ae2    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de047ae6    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fa6de047ae9    48b80000000000000000    mov rax, 0x0                                           [39;49m
[34;49m .. hars2 = %s\n", &cobj.chey0.chars2 ) ; [39;49m[33;40mprintf[39;49m[34;49m ( "\n chi : d = %lx\n", d ) ; d = cobj.chey0.hey ; printf ( "\n%lx\n", d ) ; printf  .. [39;49m[32;49m
0x7fa6de047af3    49b84481ebbf1d560000    mov r8, 0x561dbfeb8144                                 [39;49m[32;49m
0x7fa6de047afd    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de047b07    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000561dbfeb8144 >[39;49m
[34;49m ..  "\n chi : d = %lx\n", d ) ; d = cobj.[39;49m[33;40mchey0[39;49m[34;49m.hey ; printf ( "\n%lx\n", d ) ; printf ( "\n chi : d = %lx\n", d ) ; _assert ( d #x01 .. [39;49m[32;49m
0x7fa6de047b0a    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de047b0e    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fa6de047b15    488b00                  mov rax, [rax]                                         [39;49m
[34;49m ..  printf ( "\n chi : d = %lx\n", d ) ; [39;49m[33;40md[39;49m[34;49m = cobj.chey0.hey ; printf ( "\n%lx\n", d ) ; printf ( "\n chi : d = %lx\n", d ) ; _assert .. [39;49m[32;49m
0x7fa6de047b18    498d4ff8                lea rcx, [r15-0x8]                                     [39;49m
[34;49m .. rintf ( "\n chi : d = %lx\n", d ) ; d [39;49m[33;40m=[39;49m[34;49m cobj.chey0.hey ; printf ( "\n%lx\n", d ) ; printf ( "\n chi : d = %lx\n", d ) ; _assert ( .. [39;49m[32;49m
0x7fa6de047b1c    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. , d ) ; d = cobj.chey0.hey ; printf ( [39;49m[33;40m"\n%lx\n"[39;49m[34;49m, d ) ; printf ( "\n chi : d = %lx\n", d ) ; _assert ( d #x0123456789abcdef ) ;  p .. [39;49m[32;49m
0x7fa6de047b1f    48b8f0ca84dda67f0000    mov rax, 0x7fa6dd84caf0    	< string : '[34;49m\n%lx\n[39;49m' >[39;49m[32;49m
0x7fa6de047b29    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  cobj.chey0.hey ; printf ( "\n%lx\n", [39;49m[33;40md[39;49m[34;49m ) ; printf ( "\n chi : d = %lx\n", d ) ; _assert ( d #x0123456789abcdef ) ;  printf ( "\n .. [39;49m[32;49m
0x7fa6de047b2c    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de047b30    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fa6de047b33    48b80000000000000000    mov rax, 0x0                                           [39;49m
[34;49m ..  = %lx\n", d ) ; d = cobj.chey0.hey ; [39;49m[33;40mprintf[39;49m[34;49m ( "\n%lx\n", d ) ; printf ( "\n chi : d = %lx\n", d ) ; _assert ( d #x0123456789abcd .. [39;49m[32;49m
0x7fa6de047b3d    49b84481ebbf1d560000    mov r8, 0x561dbfeb8144                                 [39;49m[32;49m
0x7fa6de047b47    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de047b51    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000561dbfeb8144 >[39;49m
[34;49m ..  ; printf ( "\n%lx\n", d ) ; printf ( [39;49m[33;40m"\n chi : d = %lx\n"[39;49m[34;49m, d ) ; _assert ( d #x0123456789abcdef ) ;  printf ( "\n%x\n", cobj.che .. [39;49m[32;49m
0x7fa6de047b54    48b8f6ca84dda67f0000    mov rax, 0x7fa6dd84caf6    	< string : '[34;49m\n chi : d = %lx\n[39;49m' >[39;49m[32;49m
0x7fa6de047b5e    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  d ) ; printf ( "\n chi : d = %lx\n", [39;49m[33;40md[39;49m[34;49m ) ; _assert ( d #x0123456789abcdef ) ;  printf ( "\n%x\n", cobj.chey0.hey ) ; sprintf ( & .. [39;49m[32;49m
0x7fa6de047b61    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de047b65    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fa6de047b68    48b80000000000000000    mov rax, 0x0                                           [39;49m
[34;49m .. chey0.hey ; printf ( "\n%lx\n", d ) ; [39;49m[33;40mprintf[39;49m[34;49m ( "\n chi : d = %lx\n", d ) ; _assert ( d #x0123456789abcdef ) ;  printf ( "\n%x\n", .. [39;49m[32;49m
0x7fa6de047b72    49b84481ebbf1d560000    mov r8, 0x561dbfeb8144                                 [39;49m[32;49m
0x7fa6de047b7c    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de047b86    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000561dbfeb8144 >[39;49m
[34;49m .. "\n chi : d = %lx\n", d ) ; _assert ( [39;49m[33;40md[39;49m[34;49m #x0123456789abcdef ) ;  printf ( "\n%x\n", cobj.chey0.hey ) ; sprintf ( &chey0.chars [ 24 .. [39;49m[32;49m
0x7fa6de047b89    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de047b8d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de047b91    498906                  mov [r14], rax                                         [39;49m
[34;49m .. n chi : d = %lx\n", d ) ; _assert ( d [39;49m[33;40m#x0123456789abcdef[39;49m[34;49m ) ;  printf ( "\n%x\n", cobj.chey0.hey ) ; sprintf ( &chey0.chars [ 24 ] .. [39;49m[32;49m
0x7fa6de047b94    48b8efcdab8967452301    mov rax, 0x123456789abcdef                              [39;49m[32;49m
0x7fa6de047b9e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de047ba2    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  printf ( "\n chi : d = %lx\n", d ) ; [39;49m[33;40m_assert[39;49m[34;49m ( d #x0123456789abcdef ) ;  printf ( "\n%x\n", cobj.chey0.hey ) ; sprintf ( &chey0. .. [39;49m[32;49m
0x7fa6de047ba5    49b941aa03dea67f0000    mov r9, 0x7fa6de03aa41                                 [39;49m[32;49m
0x7fa6de047baf    49ffd1                  call r9                    	< System.[34;49m_assert[39;49m : 0x00007fa6de03aa41 >[39;49m
[34;49m .. ef ) ;  printf ( "\n%x\n", cobj.chey0.[39;49m[33;40mhey[39;49m[34;49m ) ; sprintf ( &chey0.chars [ 24 ], "%s", "hoot" ) ; dump ( &chey0, cobj.size ) ;  }  .. [39;49m[32;49m
0x7fa6de047bb2    48b807cb84dda67f0000    mov rax, 0x7fa6dd84cb07    	< string : '[34;49m\n%x\n[39;49m' >[39;49m[32;49m
0x7fa6de047bbc    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. 89abcdef ) ;  printf ( "\n%x\n", cobj.[39;49m[33;40mchey0[39;49m[34;49m.hey ) ; sprintf ( &chey0.chars [ 24 ], "%s", "hoot" ) ; dump ( &chey0, cobj.size ) ;  .. [39;49m[32;49m
0x7fa6de047bbf    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de047bc3    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de047bca    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de047bcd    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de047bd1    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de047bd4    498b36                  mov rsi, [r14]                                         [39;49m
[34;49m .. ;  d = cobj.chey0.hey ; hex p ( d ) ; [39;49m[33;40mprintf[39;49m[34;49m ( "\n chi : d = %lx\n", d ) ; sprintf ( &cobj.chey0.chars, "\n\t\they = %lx", d ) ;  .. [39;49m[32;49m
0x7fa6de047bd7    48b80000000000000000    mov rax, 0x0                                           [39;49m
[34;49m .. ; _assert ( d #x0123456789abcdef ) ;  [39;49m[33;40mprintf[39;49m[34;49m ( "\n%x\n", cobj.chey0.hey ) ; sprintf ( &chey0.chars [ 24 ], "%s", "hoot" ) ; dump  .. [39;49m[32;49m
0x7fa6de047be1    49b84481ebbf1d560000    mov r8, 0x561dbfeb8144                                 [39;49m[32;49m
0x7fa6de047beb    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de047bf5    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000561dbfeb8144 >[39;49m
[34;49m .. hey0.hey ) ; sprintf ( &chey0.chars [ [39;49m[33;40m24[39;49m[34;49m ], "%s", "hoot" ) ; dump ( &chey0, cobj.size ) ;  }  .. [39;49m[32;49m
0x7fa6de047bf8    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de047bfc    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fa6de047c03    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. ey ) ; sprintf ( &chey0.chars [ 24 ], [39;49m[33;40m"%s"[39;49m[34;49m, "hoot" ) ; dump ( &chey0, cobj.size ) ;  }  .. [39;49m[32;49m
0x7fa6de047c06    48b80ccb84dda67f0000    mov rax, 0x7fa6dd84cb0c    	< string : '[34;49m%s[39;49m' >[39;49m[32;49m
0x7fa6de047c10    488bf0                  mov rsi, rax                                           [39;49m
[34;49m ..  sprintf ( &chey0.chars [ 24 ], "%s", [39;49m[33;40m"hoot"[39;49m[34;49m ) ; dump ( &chey0, cobj.size ) ;  }  .. [39;49m[32;49m
0x7fa6de047c13    48b80fcb84dda67f0000    mov rax, 0x7fa6dd84cb0f    	< string : '[34;49mhoot[39;49m' >[39;49m[32;49m
0x7fa6de047c1d    488bd0                  mov rdx, rax                                           [39;49m
[34;49m ..  printf ( "\n chi : d = %lx\n", d ) ; [39;49m[33;40msprintf[39;49m[34;49m ( &cobj.chey0.chars, "\n\t\they = %lx", d ) ; printf ( "\n chi : d = %lx\n", d ) ;  .. [39;49m[32;49m
0x7fa6de047c20    48b80000000000000000    mov rax, 0x0                                           [39;49m
[34;49m .. printf ( "\n%x\n", cobj.chey0.hey ) ; [39;49m[33;40msprintf[39;49m[34;49m ( &chey0.chars [ 24 ], "%s", "hoot" ) ; dump ( &chey0, cobj.size ) ;  }  .. [39;49m[32;49m
0x7fa6de047c2a    49b85089eabf1d560000    mov r8, 0x561dbfea8950                                 [39;49m[32;49m
0x7fa6de047c34    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de047c3e    49ffd1                  call r9                    	< C.[34;49msprintf[39;49m : 0x0000561dbfea8950 >[39;49m
[34;49m .. hars [ 24 ], "%s", "hoot" ) ; dump ( &[39;49m[33;40mchey0[39;49m[34;49m, cobj.size ) ;  }  .. [39;49m[32;49m
0x7fa6de047c41    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de047c45    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de047c4c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de047c50    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  "%s", "hoot" ) ; dump ( &chey0, cobj.[39;49m[33;40msize[39;49m[34;49m ) ;  }  .. [39;49m[32;49m
0x7fa6de047c53    48b8e8826adda67f0000    mov rax, 0x7fa6dd6a82e8    	< string : '[34;49mh[39;49m' >[39;49m[32;49m
0x7fa6de047c5d    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de047c60    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de047c64    498906                  mov [r14], rax                                         [39;49m
[34;49m .. &chey0.chars [ 24 ], "%s", "hoot" ) ; [39;49m[33;40mdump[39;49m[34;49m ( &chey0, cobj.size ) ;  }  .. [39;49m[32;49m
0x7fa6de047c67    49b87431efbf1d560000    mov r8, 0x561dbfef3174                                 [39;49m[32;49m
0x7fa6de047c71    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de047c7b    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000561dbfef3174 >[39;49m
[34;49m .. ot" ) ; dump ( &chey0, cobj.size ) ;  [39;49m[33;40m}[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de047c7e    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de047c82    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de047c86    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fa6de047c8a    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'chi' :: codeSize = 1286
Word : 0x00007fa6dd6b20b8 :: Compiled at : 0x00007fa6de047784
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.cft 128.20 <::

 3 c should be 3  : ok

 5 b should be 5  : ok

 8 a should be 8  : ok


Dump at : namespaces/compiler/c_syntax.cft : 129.15 :
Dump : Address = 0x00007fa6dd739528 : Number = 104 :: (little endian dump)
0x00007fa6dd739528 : 0x00000000000004d2 0x6f64202c6c6c6577  d2 04 00 00 00 00 00 00  77 65 6c 6c 2c 20 64 6f  ........ well, do 
0x00007fa6dd739538 : 0x276e6f6420726f20 0x7400746f6f682074  20 6f 72 20 64 6f 6e 27  74 20 68 6f 6f 74 00 74   or don' t hoot.t 
0x00007fa6dd739548 : 0x00000074276e6f64 0x0123456789abcdef  64 6f 6e 27 74 00 00 00  ef cd ab 89 67 45 23 01  don't... ....gE#. 
0x00007fa6dd739558 : 0x0123456789abcdef 0x0000000000000000  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
0x00007fa6dd739568 : 0x0000000000000000 0x0000000000000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fa6dd739578 : 0x0000000000000000 0x0123456789abcdef  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fa6dd739588 : 0x0123456789abcdef 0x0000000000000000  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
 0x0123456789abcdef
 chi : d = 123456789abcdef

 chi : d = 123456789abcdef

 cobj.chey0.chars = 
		hey = 123456789abcdef

 cobj.chey0.chars2 = 
		hey hey = 4d2

 chi : d = 123456789abcdef

123456789abcdef

 chi : d = 123456789abcdef

4d2

Dump at : namespaces/compiler/c_syntax.cft : 129.15 :
Dump : Address = 0x00007fa6dd739528 : Number = 0x0000000000000068 :: (little endian dump)
0x00007fa6dd739528 : 0x00000000000004d2 0x3d2079656809090a  d2 04 00 00 00 00 00 00  0a 09 09 68 65 79 20 3d  ........ ...hey = 
0x00007fa6dd739538 : 0x3736353433323120 0x6665646362613938  20 31 32 33 34 35 36 37  38 39 61 62 63 64 65 66   1234567 89abcdef 
0x00007fa6dd739548 : 0x00000000746f6f68 0x0123456789abcdef  68 6f 6f 74 00 00 00 00  ef cd ab 89 67 45 23 01  hoot.... ....gE#. 
0x00007fa6dd739558 : 0x0123456789abcdef 0x682079656809090a  ef cd ab 89 67 45 23 01  0a 09 09 68 65 79 20 68  ....gE#. ...hey h 
0x00007fa6dd739568 : 0x326434203d207965 0x0000000000000000  65 79 20 3d 20 34 64 32  00 00 00 00 00 00 00 00  ey = 4d2 ........ 
0x00007fa6dd739578 : 0x0000000000000000 0x0123456789abcdef  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fa6dd739588 : 0x0123456789abcdef 0x0000000000000000  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 

 =============================
C_Syntax.[34;49minterpret2[39;49m <:> cfrTil compiled word
SourceCode for C_Syntax.[34;49minterpret2[39;49m :> 
[34;49mvoid interpret2 ( | atoken aword ) { nl tab () ; ps ( "interpret2 :> " ) ; nl while ( 1 ) { atoken = token () ; if ( (! atoken) || ! ( strcmp ( atoken, "i2halt" ) ) ) { return ; } else { if ( atoken ) { aword = tokenToWord ( atoken ) ; doWord ( aword ) ; } } } } [39;49m
Source code file location of [34;49minterpret2[39;49m : "namespaces/compiler/c_syntax.cft" : 133.30 :: we are now at : namespaces/compiler/c_syntax.cft : 177.27
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde047c90 -- code size = 428 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49minterpret2[39;49m : definition = 0x00007fa6de047c90 : disassembly at namespaces/compiler/c_syntax.cft : 177.27 :
[34;49m ..                                  void [39;49m[33;40minterpret2[39;49m[34;49m ( | atoken aword )  { nl tab () ; ps ( "interpret2 :> " ) ; nl while ( 1 ) {  at .. [39;49m[32;49m
0x7fa6de047c90    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de047c94    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de047c98    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m .. void interpret2 ( | atoken aword )  { [39;49m[33;40mnl[39;49m[34;49m tab () ; ps ( "interpret2 :> " ) ; nl while ( 1 ) {  atoken = token () ;  if ( (! atoken .. [39;49m[32;49m
0x7fa6de047c9f    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de047ca9    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de047cb3    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m void interpret2 ( | atoken aword )  { nl [39;49m[33;40mtab[39;49m[34;49m () ; ps ( "interpret2 :> " ) ; nl while ( 1 ) {  atoken = token () ;  if ( (! atoken) | .. [39;49m[32;49m
0x7fa6de047cb6    49b83510efbf1d560000    mov r8, 0x561dbfef1035                                 [39;49m[32;49m
0x7fa6de047cc0    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de047cca    49ffd1                  call r9                    	< Io.[34;49mtab[39;49m : 0x0000561dbfef1035 >[39;49m
[34;49m ..  | atoken aword )  { nl tab () ; ps ( [39;49m[33;40m"interpret2 :> "[39;49m[34;49m ) ; nl while ( 1 ) {  atoken = token () ;  if ( (! atoken) || ! ( strcmp ( .. [39;49m[32;49m
0x7fa6de047ccd    48b80c4fffdda67f0000    mov rax, 0x7fa6ddff4f0c    	< string : '[34;49minterpret2 :> [39;49m' >[39;49m[32;49m
0x7fa6de047cd7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de047cdb    498906                  mov [r14], rax                                         [39;49m
[34;49m .. et2 ( | atoken aword )  { nl tab () ; [39;49m[33;40mps[39;49m[34;49m ( "interpret2 :> " ) ; nl while ( 1 ) {  atoken = token () ;  if ( (! atoken) || ! ( str .. [39;49m[32;49m
0x7fa6de047cde    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de047ce8    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m .. nl tab () ; ps ( "interpret2 :> " ) ; [39;49m[33;40mnl[39;49m[34;49m while ( 1 ) {  atoken = token () ;  if ( (! atoken) || ! ( strcmp ( atoken, "i2halt" ) ) .. [39;49m[32;49m
0x7fa6de047ceb    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de047cf5    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de047cff    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m ..  ; ps ( "interpret2 :> " ) ; nl while [39;49m[33;40m([39;49m[34;49m 1 ) {  atoken = token () ;  if ( (! atoken) || ! ( strcmp ( atoken, "i2halt" ) ) )  {  re .. [39;49m[32;49m
0x7fa6de047d02    48b80100000000000000    mov rax, 0x1                                           [39;49m
[34;49m ..  ( atoken ) ; doWord ( aword ) ; }  } [39;49m[33;40m}[39;49m[34;49m }  .. [39;49m[32;49m
0x7fa6de047d0c    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de047d0f    0f841e010000            jz 0x7fa6de047e33          	< C_Syntax.[34;49minterpret2[39;49m+419 >[39;49m
[34;49m .. 2 :> " ) ; nl while ( 1 ) {  atoken = [39;49m[33;40mtoken[39;49m[34;49m () ;  if ( (! atoken) || ! ( strcmp ( atoken, "i2halt" ) ) )  {  return ;  } else { i .. [39;49m[32;49m
0x7fa6de047d15    49b82015efbf1d560000    mov r8, 0x561dbfef1520                                 [39;49m[32;49m
0x7fa6de047d1f    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de047d29    49ffd1                  call r9                    	< Compiler.[34;49mtoken[39;49m : 0x0000561dbfef1520 >[39;49m
[34;49m .. interpret2 :> " ) ; nl while ( 1 ) {  [39;49m[33;40matoken[39;49m[34;49m = token () ;  if ( (! atoken) || ! ( strcmp ( atoken, "i2halt" ) ) )  {  return ;  } .. [39;49m[32;49m
0x7fa6de047d2c    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de047d30    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de047d33    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de047d36    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. et2 :> " ) ; nl while ( 1 ) {  atoken [39;49m[33;40m=[39;49m[34;49m token () ;  if ( (! atoken) || ! ( strcmp ( atoken, "i2halt" ) ) )  {  return ;  } else { .. [39;49m[32;49m
0x7fa6de047d3a    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. ( 1 ) {  atoken = token () ;  if ( (! [39;49m[33;40matoken[39;49m[34;49m) || ! ( strcmp ( atoken, "i2halt" ) ) )  {  return ;  } else { if ( atoken ) {  awor .. [39;49m[32;49m
0x7fa6de047d3d    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. e ( 1 ) {  atoken = token () ;  if ( ([39;49m[33;40m![39;49m[34;49m atoken) || ! ( strcmp ( atoken, "i2halt" ) ) )  {  return ;  } else { if ( atoken ) {  aw .. [39;49m[32;49m
0x7fa6de047d41    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de047d44    740c                    jz 0xde047d52                                          [39;49m[32;49m
0x7fa6de047d46    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de047d50    eb0a                    jmp 0x7fa6de047d5c         	< C_Syntax.[34;49minterpret2[39;49m+204 >[39;49m[32;49m
0x7fa6de047d52    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de047d5c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de047d60    498906                  mov [r14], rax                                         [39;49m
[34;49m .. () ;  if ( (! atoken) || ! ( strcmp ( [39;49m[33;40matoken[39;49m[34;49m, "i2halt" ) ) )  {  return ;  } else { if ( atoken ) {  aword = tokenToWord ( atoken .. [39;49m[32;49m
0x7fa6de047d63    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de047d67    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  ( (! atoken) || ! ( strcmp ( atoken, [39;49m[33;40m"i2halt"[39;49m[34;49m ) ) )  {  return ;  } else { if ( atoken ) {  aword = tokenToWord ( atoken ) ; doW .. [39;49m[32;49m
0x7fa6de047d6a    48b8dccb66dda67f0000    mov rax, 0x7fa6dd66cbdc    	< string : '[34;49mi2halt[39;49m' >[39;49m[32;49m
0x7fa6de047d74    488bf0                  mov rsi, rax                                           [39;49m
[34;49m ..  = token () ;  if ( (! atoken) || ! ( [39;49m[33;40mstrcmp[39;49m[34;49m ( atoken, "i2halt" ) ) )  {  return ;  } else { if ( atoken ) {  aword = tokenToWord .. [39;49m[32;49m
0x7fa6de047d77    49b880a525dea67f0000    mov r8, 0x7fa6de25a580                                 [39;49m[32;49m
0x7fa6de047d81    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de047d8b    49ffd1                  call r9                    	< libc.[34;49mstrcmp[39;49m : 0x00007fa6de25a580 >[39;49m
[34;49m .. oken = token () ;  if ( (! atoken) || [39;49m[33;40m![39;49m[34;49m ( strcmp ( atoken, "i2halt" ) ) )  {  return ;  } else { if ( atoken ) {  aword = tokenTo .. [39;49m[32;49m
0x7fa6de047d8e    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de047d91    740c                    jz 0xde047d9f                                          [39;49m[32;49m
0x7fa6de047d93    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de047d9d    eb0a                    jmp 0x7fa6de047da9         	< C_Syntax.[34;49minterpret2[39;49m+281 >[39;49m[32;49m
0x7fa6de047d9f    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de047da9    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de047dac    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de047daf    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de047db3    480bc1                  or rax, rcx                                            [39;49m[32;49m
0x7fa6de047db6    4885c0                  test rax, rax                                          [39;49m
[34;49m .. rd ( atoken ) ; doWord ( aword ) ; }  [39;49m[33;40m}[39;49m[34;49m } }  .. [39;49m[32;49m
0x7fa6de047db9    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de047dbc    0f840a000000            jz 0x7fa6de047dcc          	< C_Syntax.[34;49minterpret2[39;49m+316 >[39;49m
[34;49m .. ( strcmp ( atoken, "i2halt" ) ) )  {  [39;49m[33;40mreturn[39;49m[34;49m ;  } else { if ( atoken ) {  aword = tokenToWord ( atoken ) ; doWord ( aword ) ; }   .. [39;49m[32;49m
0x7fa6de047dc2    e96c000000              jmp 0x7fa6de047e33         	< C_Syntax.[34;49minterpret2[39;49m+419 >[39;49m
[34;49m ..  atoken, "i2halt" ) ) )  {  return ;  [39;49m[33;40m}[39;49m[34;49m else { if ( atoken ) {  aword = tokenToWord ( atoken ) ; doWord ( aword ) ; }  } } }  .. [39;49m[32;49m
0x7fa6de047dc7    e962000000              jmp 0x7fa6de047e2e         	< C_Syntax.[34;49minterpret2[39;49m+414 >[39;49m
[34;49m .. halt" ) ) )  {  return ;  } else { if [39;49m[33;40m([39;49m[34;49m atoken ) {  aword = tokenToWord ( atoken ) ; doWord ( aword ) ; }  } } }  .. [39;49m[32;49m
0x7fa6de047dcc    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. oWord ( atoken ) ; doWord ( aword ) ; [39;49m[33;40m}[39;49m[34;49m  } } }  .. [39;49m[32;49m
0x7fa6de047dd0    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de047dd3    0f8455000000            jz 0x7fa6de047e2e          	< C_Syntax.[34;49minterpret2[39;49m+414 >[39;49m
[34;49m .. f ( atoken ) {  aword = tokenToWord ( [39;49m[33;40matoken[39;49m[34;49m ) ; doWord ( aword ) ; }  } } }  .. [39;49m[32;49m
0x7fa6de047dd9    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..   {  return ;  } else { if ( atoken ) [39;49m[33;40m{[39;49m[34;49m  aword = tokenToWord ( atoken ) ; doWord ( aword ) ; }  } } }  .. [39;49m[32;49m
0x7fa6de047ddd    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de047de1    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ;  } else { if ( atoken ) {  aword = [39;49m[33;40mtokenToWord[39;49m[34;49m ( atoken ) ; doWord ( aword ) ; }  } } }  .. [39;49m[32;49m
0x7fa6de047de4    49b8171cefbf1d560000    mov r8, 0x561dbfef1c17                                 [39;49m[32;49m
0x7fa6de047dee    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de047df8    49ffd1                  call r9                    	< Interpreter.[34;49mtokenToWord[39;49m : 0x0000561dbfef1c17 >[39;49m
[34;49m ..   return ;  } else { if ( atoken ) {  [39;49m[33;40maword[39;49m[34;49m = tokenToWord ( atoken ) ; doWord ( aword ) ; }  } } }  .. [39;49m[32;49m
0x7fa6de047dfb    498d4710                lea rax, [r15+0x10]                                    [39;49m[32;49m
0x7fa6de047dff    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de047e02    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de047e05    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. rn ;  } else { if ( atoken ) {  aword [39;49m[33;40m=[39;49m[34;49m tokenToWord ( atoken ) ; doWord ( aword ) ; }  } } }  .. [39;49m[32;49m
0x7fa6de047e09    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. d = tokenToWord ( atoken ) ; doWord ( [39;49m[33;40maword[39;49m[34;49m ) ; }  } } }  .. [39;49m[32;49m
0x7fa6de047e0c    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fa6de047e10    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de047e14    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ) {  aword = tokenToWord ( atoken ) ; [39;49m[33;40mdoWord[39;49m[34;49m ( aword ) ; }  } } }  .. [39;49m[32;49m
0x7fa6de047e17    49b8fc16efbf1d560000    mov r8, 0x561dbfef16fc                                 [39;49m[32;49m
0x7fa6de047e21    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de047e2b    49ffd1                  call r9                    	< Interpreter.[34;49mdoWord[39;49m : 0x0000561dbfef16fc >[39;49m[32;49m
0x7fa6de047e2e    e9cffeffff              jmp 0x7fa6de047d02         	< C_Syntax.[34;49minterpret2[39;49m+114 >[39;49m
[34;49m ..  atoken ) ; doWord ( aword ) ; }  } } [39;49m[33;40m}[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de047e33    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de047e37    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de047e3b    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'interpret2' :: codeSize = 427
Word : 0x00007fa6dd686e38 :: Compiled at : 0x00007fa6de047c90
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.cft 177.27 <::

	 interpret2 :> 

Using Namespaces :> C Root libc void C_Syntax Infix PrefixCombinators Dlsym CObj _CObj Class User String Combinators Interpreter System Shell Compiler locals_-1 Int Debug Logic Control Bits DObject Lexer testD a112 DLLNodeAlloc DLLNode Buffer int64 cta ct Ar3 Ar2 Ar1 DLLNodeAlloc4 DLListClone DLList byte Integer Pointer int OpenVmTil Word Namespace StartupMacros Io Compiling Reserved Macro PreProcessor List Stack Memory Colors File Asm Locals Forth Experimental 

 =============================
C_Syntax.[34;49mfac4[39;49m <:> cfrTil compiled word, prefix
SourceCode for C_Syntax.[34;49mfac4[39;49m :> 
[34;49mint fac4 ( n | facc -- TOS ) { int facc = 1 ; while ( n > 1 ) facc = n -- * facc ; return facc ; } [39;49m
Source code file location of [34;49mfac4[39;49m : "namespaces/compiler/c_syntax.cft" : 186.26 :: we are now at : namespaces/compiler/c_syntax.cft : 196.21
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde047e41 -- code size = 87 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfac4[39;49m : definition = 0x00007fa6de047e41 : disassembly at namespaces/compiler/c_syntax.cft : 196.21 :
[34;49m ..                                   int [39;49m[33;40mfac4[39;49m[34;49m ( n | facc -- TOS )  {  int facc = 1 ; while ( n > 1 ) facc = n -- * facc ; return fac .. [39;49m[32;49m
0x7fa6de047e41    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de047e45    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de047e49    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m .. c4 ( n | facc -- TOS )  {  int facc = [39;49m[33;40m1[39;49m[34;49m ; while ( n > 1 ) facc = n -- * facc ; return facc ; } [39;49m[32;49m
0x7fa6de047e50    48b80100000000000000    mov rax, 0x1                                           [39;49m
[34;49m ..  int fac4 ( n | facc -- TOS )  {  int [39;49m[33;40mfacc[39;49m[34;49m = 1 ; while ( n > 1 ) facc = n -- * facc ; return facc ; }  .. [39;49m[32;49m
0x7fa6de047e5a    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49mint fac4 ( n | facc -- TOS )  {  int facc [39;49m[33;40mstore[39;49m[34;49m while ( n > 1 ) facc = n -- * facc ; return facc ; }  .. [39;49m[32;49m
0x7fa6de047e5e    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. c -- TOS )  {  int facc = 1 ; while ( [39;49m[33;40mn[39;49m[34;49m > 1 ) facc = n -- * facc ; return facc ; } [39;49m[32;49m
0x7fa6de047e61    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. -- TOS )  {  int facc = 1 ; while ( n [39;49m[33;40m>[39;49m[34;49m 1 ) facc = n -- * facc ; return facc ; } [39;49m[32;49m
0x7fa6de047e65    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fa6de047e69    0f8e19000000            jle 0x7fa6de047e88         	< C_Syntax.[34;49mfac4[39;49m+71 >[39;49m
[34;49m .. int facc = 1 ; while ( n > 1 ) facc = [39;49m[33;40mn[39;49m[34;49m -- * facc ; return facc ; } [39;49m[32;49m
0x7fa6de047e6f    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. c = 1 ; while ( n > 1 ) facc = n -- * [39;49m[33;40mfacc[39;49m[34;49m ; return facc ; } [39;49m[32;49m
0x7fa6de047e73    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. acc = 1 ; while ( n > 1 ) facc = n -- [39;49m[33;40m*[39;49m[34;49m facc ; return facc ; } [39;49m[32;49m
0x7fa6de047e77    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..  )  {  int facc = 1 ; while ( n > 1 ) [39;49m[33;40mfacc[39;49m[34;49m = n -- * facc ; return facc ; } [39;49m[32;49m
0x7fa6de047e7b    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..   int facc = 1 ; while ( n > 1 ) facc [39;49m[33;40m=[39;49m[34;49m n -- * facc ; return facc ; } [39;49m[32;49m
0x7fa6de047e7f    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. t facc = 1 ; while ( n > 1 ) facc = n [39;49m[33;40m--[39;49m[34;49m * facc ; return facc ; } [39;49m[32;49m
0x7fa6de047e82    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  ; while ( n > 1 ) facc = n -- * facc [39;49m[33;40m;[39;49m[34;49m return facc ; } [39;49m[32;49m
0x7fa6de047e86    ebd9                    jmp 0x7fa6de047e61         	< C_Syntax.[34;49mfac4[39;49m+32 >[39;49m
[34;49m ..  while ( n > 1 ) facc = n -- * facc ; [39;49m[33;40mreturn[39;49m[34;49m facc ; } [39;49m[32;49m
0x7fa6de047e88    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  ) facc = n -- * facc ; return facc ; [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fa6de047e8c    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de047e90    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. ( n > 1 ) facc = n -- * facc ; return [39;49m[33;40mfacc[39;49m[34;49m ; } [39;49m[32;49m
0x7fa6de047e94    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de047e97    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac4' :: codeSize = 86
Word : 0x00007fa6dd68ca50 :: Compiled at : 0x00007fa6de047e41
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.cft 196.21 <::
 5040
 =============================
 -----------------------------
WordDisassemble : word = 0x0000000000000000
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.cft 200.18 <::

Words :
 - <namespace> ':>' <word list>
 - User :> [32;49m heey1[39;49m[32;49m hey1[39;49m[32;49m hi1[39;49m[32;49m t3[39;49m[32;49m t1[39;49m[32;49m t0[39;49m[32;49m caseSwitchExample[39;49m[32;49m goedel7[39;49m[32;49m goedel6[39;49m[32;49m goedel5[39;49m[32;49m goedel4[39;49m[32;49m goedel2[39;49m[32;49m goedel[39;49m[32;49m localsT[39;49m[32;49m _localsT[39;49m[32;49m sp[39;49m[32;49m doTest[39;49m[32;49m tcd[39;49m[32;49m tL2[39;49m[32;49m tL[39;49m[32;49m aTest[39;49m[32;49m aoTest[39;49m[32;49m test1[39;49m[32;49m test0[39;49m[32;49m tdemo[39;49m[32;49m demo[39;49m[32;49m odemo[39;49m[32;49m demo![39;49m[32;49m dtestAll[39;49m[32;49m testIt[39;49m[32;49m testAll[39;49m[32;49m testBasic[39;49m[32;49m _basicT[39;49m[32;49m basicT[39;49m[32;49m lT[39;49m[32;49m ppT[39;49m[32;49m cST[39;49m[32;49m oT[39;49m[32;49m cntT[39;49m[32;49m cT[39;49m[32;49m aT[39;49m[32;49m locT[39;49m[32;49m bT[39;49m[32;49m stT[39;49m[32;49m oldL[39;49m[32;49m lispTest[39;49m[32;49m sysT[39;49m[32;49m sT[39;49m[32;49m fT[39;49m[32;49m mT[39;49m[32;49m dT2[39;49m[32;49m dT[39;49m[32;49m loT[39;49m[32;49m dT3[39;49m[32;49m dT2[39;49m[32;49m dT0[39;49m[32;49m test[39;49m[32;49m preprocessorTest[39;49m[32;49m syntaxTest[39;49m[32;49m c_SyntaxTest[39;49m[32;49m objectTest[39;49m[32;49m controlTest[39;49m[32;49m stackTest[39;49m[32;49m bigNumTest[39;49m[32;49m localsTest[39;49m[32;49m arrayTest[39;49m[32;49m classTest[39;49m[32;49m itest[39;49m[32;49m interpT[39;49m[32;49m iinc[39;49m[32;49m _TestDone_[39;49m[32;49m sp[39;49m[32;49m demo0[39;49m[32;49m sp[39;49m[32;49m def[39;49m[32;49m istring[39;49m[32;49m s[39;49m[32;49m opOn[39;49m[32;49m vck[39;49m[32;49m opOn1[39;49m[32;49m opOff[39;49m[32;49m pause[39;49m[32;49m _SMN_[39;49m[32;49m mp[39;49m[32;49m Is_DebugOn[39;49m[32;49m dbgOff[39;49m[32;49m dbgOn[39;49m[32;49m dbOn[39;49m[32;49m dbgOnVar[39;49m[32;49m p[39;49m[32;49m s[39;49m[32;49m ts[39;49m[32;49m wdis[39;49m[32;49m _var[39;49m[32;49m var[39;49m[32;49m _const[39;49m[32;49m const[39;49m
 - Root :> [32;49m x1[39;49m[32;49m get[39;49m[32;49m set[39;49m[32;49m goedel8[39;49m[32;49m goedel6[39;49m[32;49m hio[39;49m[32;49m hioo[39;49m[32;49m doInitTest[39;49m[32;49m mct[39;49m[32;49m _doDemo[39;49m[32;49m doScript2[39;49m[32;49m doScript[39;49m[32;49m doTX64[39;49m[32;49m doX64[39;49m[32;49m todo[39;49m[32;49m TODO[39;49m[32;49m bx[39;49m[32;49m x64[39;49m[32;49m tc[39;49m[32;49m tCfrTil[39;49m[32;49m rtw[39;49m[32;49m sh[39;49m[32;49m license[39;49m[32;49m purgeAll[39;49m[32;49m purge[39;49m[32;49m ri[39;49m[32;49m fr[39;49m[32;49m bnOn[39;49m[32;49m bnOff[39;49m[32;49m bigNumOff[39;49m[32;49m log[39;49m[32;49m C_Off[39;49m[32;49m C_On[39;49m[32;49m forth[39;49m[32;49m ndrop[39;49m[32;49m tick[39;49m[32;49m findAny[39;49m[32;49m find[39;49m[32;49m '[39;49m
 - C :> [32;49m x7[39;49m[32;49m cobj[39;49m[32;49m sp[39;49m[32;49m sp[39;49m[32;49m $[39;49m[32;49m streol[39;49m[32;49m $$[39;49m[32;49m sp[39;49m[32;49m hip[39;49m[32;49m hi[39;49m[32;49m sp[39;49m[32;49m goedel3[39;49m[32;49m bexp44[39;49m[32;49m bexp43[39;49m[32;49m heeeey2[39;49m[32;49m heeey2[39;49m[32;49m heey2[39;49m[32;49m heey[39;49m[32;49m hey2[39;49m[32;49m hey1[39;49m[32;49m hey[39;49m[32;49m a1234[39;49m[32;49m a123[39;49m[32;49m heey[39;49m[32;49m hey[39;49m[32;49m hi[39;49m[32;49m hey[39;49m[32;49m hi[39;49m[32;49m a1234[39;49m[32;49m a123[39;49m[32;49m heey[39;49m[32;49m hey[39;49m[32;49m hi[39;49m[32;49m sp[39;49m[32;49m tnarr2a[39;49m[32;49m tnarr2[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m t64bitSub3[39;49m[32;49m t64bitSub3[39;49m[32;49m t64bitSub2[39;49m[32;49m t64bitSub[39;49m[32;49m t64bitAdd2[39;49m[32;49m t64bitAdd[39;49m[32;49m moe3[39;49m[32;49m moe2[39;49m[32;49m moe[39;49m[32;49m moe[39;49m[32;49m moe[39;49m[32;49m moe[39;49m[32;49m hi[39;49m[32;49m hi[39;49m[32;49m hi[39;49m[32;49m hi[39;49m[32;49m t+[39;49m[32;49m t*[39;49m[32;49m t+[39;49m[32;49m t*[39;49m[32;49m sp[39;49m[32;49m sp[39;49m[32;49m factorial[39;49m[32;49m factorial[39;49m[32;49m sp[39;49m[32;49m test[39;49m[32;49m include1[39;49m[32;49m allot[39;49m[32;49m logAppend[39;49m[32;49m logWrite[39;49m[32;49m ;;[39;49m[32;49m ,[39;49m[32;49m rax_return[39;49m[32;49m void_return[39;49m[32;49m c_return[39;49m[32;49m c_prefix[39;49m[32;49m c_rtl[39;49m[32;49m cfactorial3_O3[39;49m[32;49m cfactorial2_O3[39;49m[32;49m cfactorial_O3[39;49m[32;49m cfib2_O3[39;49m[32;49m cfib_O3[39;49m[32;49m ctct[39;49m[32;49m cfactorial3[39;49m[32;49m cfactorial2[39;49m[32;49m cfactorial[39;49m[32;49m cfib[39;49m[32;49m --[39;49m[32;49m ++[39;49m[32;49m ?<[39;49m[32;49m >:<[39;49m[32;49m >?[39;49m[32;49m switch[39;49m[32;49m case[39;49m[32;49m }fi[39;49m[32;49m }else{[39;49m[32;49m if{[39;49m[32;49m (|[39;49m[32;49m ([39;49m[32;49m sprintf[39;49m[32;49m printf[39;49m[32;49m _Printf[39;49m
 - int :> [32;49m this[39;49m[32;49m size[39;49m
 - libc :> [32;49m testpick[39;49m[32;49m x[39;49m[32;49m xc[39;49m[32;49m tprintf2[39;49m[32;49m tprintf1[39;49m[32;49m tprintf[39;49m[32;49m memset[39;49m[32;49m strcat[39;49m[32;49m sprintf[39;49m[32;49m strcmp[39;49m[32;49m printf[39;49m
 - void :> [32;49m this[39;49m[32;49m size[39;49m
 - Dlsym :> 
 - CObj :> [32;49m chey[39;49m[32;49m heey1[39;49m[32;49m heey[39;49m[32;49m chars2[39;49m[32;49m heey2[39;49m[32;49m hey[39;49m[32;49m chars[39;49m[32;49m hi[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - _CObj :> [32;49m chey[39;49m[32;49m heey1[39;49m[32;49m heey[39;49m[32;49m chars2[39;49m[32;49m heey2[39;49m[32;49m hey[39;49m[32;49m chars[39;49m[32;49m hi[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - Class :> [32;49m sp[39;49m[32;49m hey[39;49m[32;49m hi[39;49m[32;49m tbb[39;49m[32;49m sp[39;49m[32;49m .[39;49m[32;49m [[39;49m[32;49m ][39;49m[32;49m clone[39;49m[32;49m new[39;49m[32;49m class[39;49m[32;49m :{[39;49m[32;49m +:{[39;49m[32;49m };[39;49m
 - String :> [32;49m hi[39;49m[32;49m hi[39;49m[32;49m stricmp[39;49m[32;49m strcpy[39;49m[32;49m strcat[39;49m[32;49m strcmp[39;49m[32;49m Strlen[39;49m
 - Combinators :> [32;49m startupMacros[39;49m[32;49m ifElse[39;49m[32;49m ifte[39;49m[32;49m qEval[39;49m[32;49m ix[39;49m[32;49m ?[39;49m[32;49m for[39;49m[32;49m loop[39;49m[32;49m _[39;49m[32;49m _run[39;49m[32;49m _call[39;49m[32;49m run[39;49m[32;49m call[39;49m[32;49m doWhileDo[39;49m[32;49m doWhile[39;49m[32;49m while[39;49m[32;49m if3[39;49m[32;49m if2[39;49m[32;49m if[39;49m[32;49m if1[39;49m[32;49m tf3[39;49m[32;49m tf2[39;49m
 - Interpreter :> [32;49m xhi1[39;49m[32;49m xhi01[39;49m[32;49m xhi2a[39;49m[32;49m xhi2[39;49m[32;49m xhe12[39;49m[32;49m xhe1[39;49m[32;49m xhe0[39;49m[32;49m thi42[39;49m[32;49m thi3[39;49m[32;49m thi2[39;49m[32;49m defined[39;49m[32;49m _defined[39;49m[32;49m :[39;49m[32;49m word[39;49m[32;49m ;[39;49m[32;49m semi[39;49m[32;49m _semi[39;49m[32;49m xt@[39;49m[32;49m }[39;49m[32;49m end[39;49m[32;49m {[39;49m[32;49m #[39;49m[32;49m _lx_[39;49m[32;49m l:[39;49m[32;49m interpretFile[39;49m[32;49m interpret[39;49m[32;49m interpreterDone[39;49m[32;49m interpreterIsDone[39;49m[32;49m interpreterStop[39;49m[32;49m interpreterInit[39;49m[32;49m interpreterRun[39;49m[32;49m interpretNextToken[39;49m[32;49m interpretString[39;49m[32;49m tokenToWord[39;49m[32;49m doWord[39;49m[32;49m eval[39;49m[32;49m /*[39;49m[32;49m */[39;49m[32;49m #![39;49m[32;49m //[39;49m[32;49m compileModeOff[39;49m[32;49m asmModeOff[39;49m[32;49m asmModeOn[39;49m[32;49m compileModeOn[39;49m[32;49m finishDebugInfo[39;49m[32;49m compileMode[39;49m
 - System :> [32;49m assertStkChk[39;49m[32;49m _assertStkChk[39;49m[32;49m _assert[39;49m[32;49m assert1[39;49m[32;49m assert[39;49m[32;49m assert0[39;49m[32;49m assert1s[39;49m[32;49m _assert[39;49m[32;49m _assert0[39;49m[32;49m ctloc[39;49m[32;49m _assert1[39;49m[32;49m dbgTest[39;49m[32;49m ddps[39;49m[32;49m adps[39;49m[32;49m ahOff[39;49m[32;49m ahOn[39;49m[32;49m sOn[39;49m[32;49m sOff[39;49m[32;49m vb0[39;49m[32;49m vb1[39;49m[32;49m vb2[39;49m[32;49m vb3[39;49m[32;49m vb4[39;49m[32;49m vb[39;49m[32;49m ahalt[39;49m[32;49m ti[39;49m[32;49m stk[39;49m[32;49m aw[39;49m[32;49m sys[39;49m[32;49m fload[39;49m[32;49m pwi[39;49m[32;49m pwdiss[39;49m[32;49m wi[39;49m[32;49m wdissl[39;49m[32;49m wdiss[39;49m[32;49m _wdiss[39;49m[32;49m _source[39;49m[32;49m pel[39;49m[32;49m pdl[39;49m[32;49m location[39;49m[32;49m F[39;49m[32;49m T[39;49m[32;49m false[39;49m[32;49m true[39;49m[32;49m Default[39;49m[32;49m White[39;49m[32;49m Cyan[39;49m[32;49m Magenta[39;49m[32;49m Blue[39;49m[32;49m Yellow[39;49m[32;49m Green[39;49m[32;49m Red[39;49m[32;49m Black[39;49m[32;49m saveCpu2State[39;49m[32;49m restoreCpu2State[39;49m[32;49m saveCpuState[39;49m[32;49m restoreCpuState[39;49m[32;49m call_ToAddressThruR8_TestAlignRSP[39;49m[32;49m lcOff[39;49m[32;49m lcOn[39;49m[32;49m registers[39;49m[32;49m _pause[39;49m[32;49m pause[39;49m[32;49m location[39;49m[32;49m showTypeWordStack[39;49m[32;49m cpuStateShow[39;49m[32;49m console[39;49m[32;49m ok[39;49m[32;49m warmInit[39;49m[32;49m fr[39;49m[32;49m fullRestart[39;49m[32;49m ri[39;49m[32;49m restartInit[39;49m[32;49m restart[39;49m[32;49m exit[39;49m[32;49m systemBreak[39;49m[32;49m quit[39;49m[32;49m abort[39;49m[32;49m bye[39;49m[32;49m resetAll[39;49m[32;49m mem[39;49m[32;49m freeSessionMem[39;49m[32;49m allocateMem[39;49m[32;49m returnFromFile[39;49m[32;49m system3[39;49m[32;49m system2[39;49m[32;49m system1[39;49m[32;49m system0[39;49m[32;49m shell[39;49m[32;49m time[39;49m[32;49m timerInit[39;49m[32;49m timeInit[39;49m[32;49m echo[39;49m[32;49m jcc8_Off[39;49m[32;49m jcc8_On[39;49m[32;49m echoOff[39;49m[32;49m echoOn[39;49m[32;49m echoOff[39;49m[32;49m variables[39;49m[32;49m state[39;49m[32;49m binary[39;49m[32;49m hex[39;49m[32;49m decimal[39;49m[32;49m version[39;49m[32;49m charNumber[39;49m[32;49m lineNumber[39;49m[32;49m throw[39;49m[32;49m filename[39;49m[32;49m stackDepth[39;49m[32;49m stackInit[39;49m[32;49m reset[39;49m[32;49m include[39;49m
 - Shell :> [32;49m hio[39;49m[32;49m $[39;49m[32;49m _sh[39;49m[32;49m endif[39;49m[32;49m else[39;49m[32;49m if[39;49m
 - Compiler :> [32;49m vckf1[39;49m[32;49m vckf[39;49m[32;49m sl[39;49m[32;49m >;[39;49m[32;49m mod[39;49m[32;49m nstrcat:[39;49m[32;49m Zenfone2[39;49m[32;49m x[39;49m[32;49m doLisp[39;49m[32;49m COMBINATOR_TOOKIT[39;49m[32;49m doLisp[39;49m[32;49m doTest[39;49m[32;49m doDemo[39;49m[32;49m doInit1[39;49m[32;49m streamLine[39;49m[32;49m classTestRead[39;49m[32;49m DebugFlag[39;49m[32;49m var:[39;49m[32;49m swap[39;49m[32;49m compileCall[39;49m[32;49m compileWord[39;49m[32;49m immediate[39;49m[32;49m '[39;49m[32;49m )[39;49m[32;49m sourceCodeOn[39;49m[32;49m sourceCodeInit[39;49m[32;49m getStringToEndOfLine[39;49m[32;49m ftoken[39;49m[32;49m token[39;49m[32;49m _tick[39;49m[32;49m quote[39;49m[32;49m store[39;49m[32;49m set[39;49m[32;49m poke[39;49m[32;49m =[39;49m[32;49m ![39;49m[32;49m @=[39;49m[32;49m get[39;49m[32;49m peek[39;49m[32;49m load[39;49m[32;49m @[39;49m[32;49m debugWord[39;49m[32;49m prefixOff[39;49m[32;49m prefixOn[39;49m[32;49m infixOff[39;49m[32;49m infixOn[39;49m[32;49m nprefix[39;49m[32;49m prefix[39;49m[32;49m _prefix[39;49m[32;49m typeSignature[39;49m[32;49m inline[39;49m[32;49m ?immediate[39;49m[32;49m _immediate[39;49m[32;49m code[39;49m[32;49m Here[39;49m[32;49m begin[39;49m[32;49m _end[39;49m[32;49m _literal[39;49m[32;49m literal[39;49m[32;49m constant[39;49m[32;49m _constant[39;49m[32;49m variable[39;49m[32;49m _variable[39;49m[32;49m macro[39;49m[32;49m noop[39;49m[32;49m break[39;49m[32;49m return[39;49m[32;49m continue[39;49m[32;49m goto[39;49m[32;49m postfixOn[39;49m[32;49m c_syntaxOff[39;49m[32;49m c_syntaxOn[39;49m
 - locals_-1 :> [32;49m x[39;49m
 - Int :> [32;49m sp[39;49m[32;49m mt5[39;49m[32;49m mt5v[39;49m[32;49m mt4[39;49m[32;49m mt3[39;49m[32;49m mt2[39;49m[32;49m mt1a[39;49m[32;49m mta[39;49m[32;49m mt1[39;49m[32;49m mt[39;49m[32;49m _ClassTest_[39;49m[32;49m ppxe[39;49m[32;49m ppx[39;49m[32;49m apause[39;49m[32;49m _logAppend[39;49m[32;49m _logWrite[39;49m[32;49m nl[39;49m[32;49m print[39;49m[32;49m hp[39;49m[32;49m _hp[39;49m[32;49m p[39;49m[32;49m _p[39;49m[32;49m pn[39;49m[32;49m prints[39;49m[32;49m ps[39;49m[32;49m _ps[39;49m[32;49m hexIntPrint[39;49m[32;49m intPrint[39;49m[32;49m /=[39;49m[32;49m *=[39;49m[32;49m %[39;49m[32;49m modulo[39;49m[32;49m /[39;49m[32;49m ^[39;49m[32;49m pow_03[39;49m[32;49m pow[39;49m[32;49m **[39;49m[32;49m *[39;49m[32;49m -=[39;49m[32;49m +=[39;49m[32;49m -[39;49m[32;49m +[39;49m
 - Debug :> [32;49m rdi[39;49m[32;49m slp[39;49m[32;49m dcm[39;49m[32;49m sinit[39;49m[32;49m s[39;49m[32;49m _s[39;49m[32;49m dbiOff[39;49m[32;49m dbiOn[39;49m[32;49m DebugFlag[39;49m[32;49m v1[39;49m[32;49m v4[39;49m[32;49m tcOnv[39;49m[32;49m scOff[39;49m[32;49m scOn[39;49m[32;49m dscOff[39;49m[32;49m dscOn[39;49m[32;49m nt[39;49m[32;49m tcOff[39;49m[32;49m tcOn[39;49m[32;49m ;t[39;49m[32;49m t:[39;49m[32;49m regs[39;49m[32;49m locals[39;49m[32;49m dbrk[39;49m[32;49m OptimizeOn[39;49m[32;49m d:[39;49m[32;49m _startDirectory_[39;49m[32;49m <dbg>[39;49m[32;49m saveCpuState[39;49m[32;49m restoreCpuState[39;49m[32;49m stop[39;49m[32;49m localsShow[39;49m[32;49m info[39;49m[32;49m _info[39;49m[32;49m xtDbg[39;49m[32;49m ;d[39;49m[32;49m _dbgOff[39;49m[32;49m _dbgOn[39;49m[32;49m scOn[39;49m[32;49m scOff[39;49m[32;49m dbgTypecheckOff[39;49m[32;49m dbgTypecheckOn[39;49m[32;49m dbgSourceCodeOff[39;49m[32;49m dbgSourceCodeOn[39;49m[32;49m ndstack[39;49m[32;49m dstack[39;49m[32;49m nrstack[39;49m[32;49m rstack[39;49m[32;49m stackDepthPrint[39;49m[32;49m stack[39;49m[32;49m setSourceCodeWord[39;49m[32;49m sourceDontAdd[39;49m[32;49m source[39;49m[32;49m sourceAdd[39;49m[32;49m wordDisassemble[39;49m[32;49m dis[39;49m[32;49m dump[39;49m
 - Logic :> [32;49m nt[39;49m[32;49m >=[39;49m[32;49m <=[39;49m[32;49m !=[39;49m[32;49m equal[39;49m[32;49m ==[39;49m[32;49m >[39;49m[32;49m <[39;49m[32;49m &&[39;49m[32;49m and[39;49m[32;49m not[39;49m[32;49m ![39;49m[32;49m ^^[39;49m[32;49m xor[39;49m[32;49m or[39;49m[32;49m ||[39;49m
 - Control :> [32;49m hic2[39;49m[32;49m ct2[39;49m[32;49m ct1[39;49m[32;49m ct0[39;49m[32;49m ct00[39;49m[32;49m leaving[39;49m[32;49m abrk0[39;49m[32;49m abrkcon[39;49m[32;49m x[39;49m
 - Bits :> [32;49m tcmp[39;49m[32;49m tNotAnd[39;49m[32;49m tAnd[39;49m[32;49m tnot3[39;49m[32;49m tnot2[39;49m[32;49m tnot[39;49m[32;49m lt10[39;49m[32;49m lt9[39;49m[32;49m lt8[39;49m[32;49m lt7b[39;49m[32;49m lt7[39;49m[32;49m lnt5[39;49m[32;49m lnt5[39;49m[32;49m lnt5[39;49m[32;49m lnt5[39;49m[32;49m lnt5[39;49m[32;49m lnt2[39;49m[32;49m lnt[39;49m[32;49m lnt2[39;49m[32;49m lnt[39;49m[32;49m lnt4[39;49m[32;49m lnt3[39;49m[32;49m lnt2[39;49m[32;49m lnt[39;49m[32;49m lt2[39;49m[32;49m lt[39;49m[32;49m sp[39;49m[32;49m |=[39;49m[32;49m &=[39;49m[32;49m >>=[39;49m[32;49m <<=[39;49m[32;49m neg[39;49m[32;49m ~[39;49m[32;49m ^[39;49m[32;49m |[39;49m[32;49m &[39;49m[32;49m >>[39;49m[32;49m <<[39;49m
 - DObject :> [32;49m sp[39;49m[32;49m new[39;49m[32;49m clone[39;49m[32;49m dobject[39;49m
 - Lexer :> [32;49m sp[39;49m[32;49m heey[39;49m[32;49m hey[39;49m[32;49m hi[39;49m[32;49m ofile[39;49m[32;49m orpfile[39;49m[32;49m %[39;49m[32;49m "[39;49m
 - testD :> [32;49m testC[39;49m
 - a112 :> [32;49m b113[39;49m
 - DLLNodeAlloc :> [32;49m testB2[39;49m[32;49m testA2[39;49m[32;49m testB1[39;49m[32;49m testA1[39;49m[32;49m tna2x[39;49m[32;49m testnx[39;49m[32;49m tnax1[39;49m[32;49m testn5[39;49m[32;49m tna3[39;49m[32;49m testn4[39;49m[32;49m tna[39;49m[32;49m testnarr2[39;49m[32;49m testna[39;49m[32;49m sp[39;49m[32;49m nodes[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - DLLNode :> [32;49m sp[39;49m[32;49m testNode[39;49m[32;49m BeforeReference[39;49m[32;49m AfterReference[39;49m[32;49m BeforeReference[39;49m[32;49m someJunkForTesting[39;49m[32;49m AfterReference[39;49m[32;49m BeforeReference[39;49m[32;49m AfterReference[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - Buffer :> [32;49m buf[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - int64 :> [32;49m this[39;49m[32;49m size[39;49m
 - cta :> [32;49m caba[39;49m[32;49m cadump[39;49m[32;49m tcta[39;49m[32;49m aba[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - ct :> [32;49m ac[39;49m[32;49m tct[39;49m[32;49m ab[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - Ar3 :> [32;49m a7[39;49m[32;49m a8[39;49m[32;49m a6x[39;49m[32;49m a6[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - Ar2 :> [32;49m a5[39;49m[32;49m a4[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - Ar1 :> [32;49m a3[39;49m[32;49m arr2[39;49m[32;49m arr1[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - DLLNodeAlloc4 :> [32;49m testna5[39;49m[32;49m testna5[39;49m[32;49m testna4[39;49m[32;49m nodes[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - DLListClone :> [32;49m testClone[39;49m[32;49m init[39;49m[32;49m Accum[39;49m[32;49m Four[39;49m[32;49m Three[39;49m[32;49m Twelve[39;49m[32;49m Sum[39;49m[32;49m Prototype[39;49m[32;49m Category[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - DLList :> [32;49m testList[39;49m[32;49m init[39;49m[32;49m TailNode[39;49m[32;49m HeadNode[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - byte :> [32;49m this[39;49m[32;49m size[39;49m
 - Integer :> 
 - Pointer :> [32;49m this[39;49m[32;49m size[39;49m
 - OpenVmTil :> [32;49m lispOn[39;49m[32;49m lispOff[39;49m[32;49m recycleDebugInfo[39;49m[32;49m showAllocated[39;49m[32;49m addToHistoryOff[39;49m[32;49m addToHistoryOn[39;49m[32;49m historyReset[39;49m[32;49m addToHistory[39;49m[32;49m historySize[39;49m[32;49m dataStackSize[39;49m[32;49m dictionarySize[39;49m[32;49m sessionObjectsSize[39;49m[32;49m compilerTempObjectsSize[39;49m[32;49m objectsSize[39;49m[32;49m codeSize[39;49m[32;49m dbi[39;49m[32;49m verbosity[39;49m[32;49m debugOn[39;49m[32;49m debugOff[39;49m[32;49m inlineOn[39;49m[32;49m inlineOff[39;49m[32;49m stringMacrosOff[39;49m[32;49m stringMacrosOn[39;49m[32;49m optimizeOff[39;49m[32;49m optimizeOn[39;49m[32;49m t{[39;49m[32;49m }t[39;49m[32;49m typecheckOff[39;49m[32;49m typecheckOn[39;49m[32;49m inlining[39;49m[32;49m optimize[39;49m[32;49m autoVarOff[39;49m[32;49m autoVarOn[39;49m[32;49m autoVar[39;49m
 - Word :> [32;49m code[39;49m[32;49m purgeWordIfContainsName[39;49m[32;49m purgeWordName[39;49m[32;49m addrToWord[39;49m[32;49m codeSize[39;49m[32;49m codeStart[39;49m[32;49m wordAdd[39;49m[32;49m wordFinish[39;49m[32;49m xt=[39;49m[32;49m xt[39;49m[32;49m value[39;49m[32;49m definition[39;49m[32;49m run[39;49m[32;49m wordRun[39;49m[32;49m wordEval[39;49m[32;49m wNamespace[39;49m[32;49m wordNew[39;49m[32;49m name[39;49m
 - Namespace :> [32;49m usingLast:[39;49m[32;49m notUsing:[39;49m[32;49m using:[39;49m[32;49m _findAny[39;49m[32;49m _find[39;49m[32;49m namespace[39;49m[32;49m namespaceWords[39;49m[32;49m _namespaceWords[39;49m[32;49m allWords[39;49m[32;49m words[39;49m[32;49m namespaceTreeWithWords[39;49m[32;49m namespaceTree[39;49m[32;49m namespaces[39;49m[32;49m notUsing[39;49m[32;49m usingLast[39;49m[32;49m usingFirst[39;49m[32;49m using[39;49m[32;49m in[39;49m
 - StartupMacros :> [32;49m namespaces[39;49m[32;49m Delimiters[39;49m
 - Io :> [32;49m logOff[39;49m[32;49m logOn[39;49m[32;49m logWrite[39;49m[32;49m logAppend[39;49m[32;49m space[39;49m[32;49m tab[39;49m[32;49m cr[39;49m[32;49m newline[39;49m[32;49m kbhit[39;49m[32;49m key[39;49m[32;49m emit[39;49m[32;49m printString[39;49m
 - Compiling :> [32;49m pokeRegAtAddress[39;49m[32;49m pokeRegWithValue[39;49m[32;49m peekReg[39;49m[32;49m _compileWord[39;49m[32;49m _compileCall[39;49m[32;49m compileInt64[39;49m[32;49m compileInt32[39;49m[32;49m compileInt16[39;49m[32;49m compileByte[39;49m
 - Reserved :> [32;49m {|[39;49m[32;49m |}[39;49m[32;49m swap[39;49m[32;49m keyword[39;49m[32;49m dlsym:[39;49m[32;49m syntactic[39;49m[32;49m immediate[39;49m[32;49m end[39;49m[32;49m {[39;49m[32;49m }[39;49m[32;49m ;[39;49m[32;49m semi[39;49m[32;49m :[39;49m[32;49m word[39;49m
 - Macro :> [32;49m tm:[39;49m[32;49m alias[39;49m[32;49m sm:[39;49m
 - PreProcessor :> [32;49m define[39;49m[32;49m elif[39;49m[32;49m if[39;49m[32;49m else[39;49m[32;49m endif[39;49m[32;49m ![39;49m
 - List :> [32;49m lcRestoreStack[39;49m[32;49m dupList[39;49m[32;49m printList[39;49m[32;49m eval[39;49m[32;49m _([39;49m[32;49m lisp[39;49m
 - Stack :> [32;49m stackCheck[39;49m[32;49m dsp[39;49m[32;49m _swap[39;49m[32;49m pick[39;49m[32;49m _ndrop[39;49m[32;49m dropN[39;49m[32;49m drop[39;49m[32;49m ndup[39;49m[32;49m dup[39;49m[32;49m _dup[39;49m
 - Memory :> [32;49m freeAllTempMem[39;49m[32;49m freeSessionMem[39;49m[32;49m freeLispTempMem[39;49m[32;49m freeCompilerTempMem[39;49m[32;49m freeTemporayMem[39;49m
 - Colors :> [32;49m alertColors[39;49m[32;49m userColors[39;49m[32;49m defaultColors[39;49m[32;49m noticeColors[39;49m[32;49m debugColors[39;49m[32;49m setNoticeColors[39;49m[32;49m setDebugColors[39;49m[32;49m setAlertColors[39;49m[32;49m setDefaultColors[39;49m[32;49m setUserColors[39;49m[32;49m setNoticeRGB[39;49m[32;49m setUserRGB[39;49m[32;49m setDebugRGB[39;49m[32;49m setAlertRGB[39;49m[32;49m setDefaultRGB[39;49m
 - File :> [32;49m freadToString[39;49m[32;49m fexists[39;49m[32;49m fsize[39;49m[32;49m ftell[39;49m[32;49m fseek[39;49m[32;49m fread[39;49m[32;49m fwrite[39;49m[32;49m fclose[39;49m[32;49m fopen[39;49m
 - Asm :> [32;49m jmp[39;49m[32;49m goto:[39;49m[32;49m label:[39;49m[32;49m goto[39;49m[32;49m label[39;49m[32;49m jcc[39;49m[32;49m Jcc[39;49m[32;49m jmpHere[39;49m[32;49m Jmp[39;49m[32;49m if_[39;49m[32;49m _else_[39;49m[32;49m _fi[39;49m
 - Locals :> [32;49m (|[39;49m[32;49m ([39;49m
 - Forth :> [32;49m n,[39;49m[32;49m 8,[39;49m[32;49m 4,[39;49m[32;49m ,[39;49m[32;49m 2,[39;49m[32;49m 1,[39;49m[32;49m '[39;49m
 - Experimental :> [32;49m <do[39;49m[32;49m does>[39;49m[32;49m do>[39;49m[32;49m locationPrint[39;49m[32;49m locationPush[39;49m
1058 words on the 'using' Namespaces List ::
 3 3 3 3 3 3
 =============================
C_Syntax.[34;49mfaccs2[39;49m <:> cfrTil compiled word, prefix
SourceCode for C_Syntax.[34;49mfaccs2[39;49m :> 
[34;49mint faccs2 ( n | rec ) { for ( rec = 1 ; n > 1 ; n-- ) { rec = rec * n ; } return rec ; } [39;49m
Source code file location of [34;49mfaccs2[39;49m : "namespaces/compiler/c_syntax.cft" : 215.19 :: we are now at : namespaces/compiler/c_syntax.cft : 223.20
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde047f3b -- code size = 87 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfaccs2[39;49m : definition = 0x00007fa6de047f3b : disassembly at namespaces/compiler/c_syntax.cft : 223.20 :
[34;49m ..                                   int [39;49m[33;40mfaccs2[39;49m[34;49m ( n | rec )  { for ( rec = 1 ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fa6de047f3b    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de047f3f    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de047f43    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m .. int faccs2 ( n | rec )  { for ( rec = [39;49m[33;40m1[39;49m[34;49m ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fa6de047f4a    48b80100000000000000    mov rax, 0x1                                           [39;49m
[34;49m ..       int faccs2 ( n | rec )  { for ( [39;49m[33;40mrec[39;49m[34;49m = 1 ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fa6de047f54    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..   int faccs2 ( n | rec )  { for ( rec [39;49m[33;40mstore[39;49m[34;49m n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fa6de047f58    488901                  mov [rcx], rax                                         [39;49m
[34;49mint faccs2 ( n | rec )  { for ( rec = 1 ; [39;49m[33;40mn[39;49m[34;49m > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fa6de047f5b    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. ccs2 ( n | rec )  { for ( rec = 1 ; n [39;49m[33;40m>[39;49m[34;49m 1 ; n-- ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fa6de047f5f    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fa6de047f63    0f8e19000000            jle 0x7fa6de047f82         	< C_Syntax.[34;49mfaccs2[39;49m+71 >[39;49m
[34;49m .. or ( rec = 1 ; n > 1 ; n-- ) {  rec = [39;49m[33;40mrec[39;49m[34;49m * n ;  }  return rec ; } [39;49m[32;49m
0x7fa6de047f69    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ec = 1 ; n > 1 ; n-- ) {  rec = rec * [39;49m[33;40mn[39;49m[34;49m ;  }  return rec ; } [39;49m[32;49m
0x7fa6de047f6d    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..  rec = 1 ; n > 1 ; n-- ) {  rec = rec [39;49m[33;40m*[39;49m[34;49m n ;  }  return rec ; } [39;49m[32;49m
0x7fa6de047f71    480fafc1                imul rax, rcx                                          [39;49m
[34;49m .. )  { for ( rec = 1 ; n > 1 ; n-- ) {  [39;49m[33;40mrec[39;49m[34;49m = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fa6de047f75    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  for ( rec = 1 ; n > 1 ; n-- ) {  rec [39;49m[33;40m=[39;49m[34;49m rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fa6de047f79    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. n | rec )  { for ( rec = 1 ; n > 1 ; n[39;49m[33;40m--[39;49m[34;49m ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fa6de047f7c    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  rec )  { for ( rec = 1 ; n > 1 ; n-- [39;49m[33;40m)[39;49m[34;49m {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fa6de047f80    ebd9                    jmp 0x7fa6de047f5b         	< C_Syntax.[34;49mfaccs2[39;49m+32 >[39;49m
[34;49m ..  n > 1 ; n-- ) {  rec = rec * n ;  }  [39;49m[33;40mreturn[39;49m[34;49m rec ; } [39;49m[32;49m
0x7fa6de047f82    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ) {  rec = rec * n ;  }  return rec ; [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fa6de047f86    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de047f8a    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. ; n-- ) {  rec = rec * n ;  }  return [39;49m[33;40mrec[39;49m[34;49m ; } [39;49m[32;49m
0x7fa6de047f8e    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de047f91    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'faccs2' :: codeSize = 86
Word : 0x00007fa6dd691da8 :: Compiled at : 0x00007fa6de047f3b
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.cft 223.20 <::
 5040

	token = c_syntaxOn :: interpret4 exiting ...
 =============================
C_Syntax.[34;49mfaccs3[39;49m <:> cfrTil compiled word
SourceCode for C_Syntax.[34;49mfaccs3[39;49m :> 
[34;49mint faccs3 ( n | rec ) { for ( rec = 1 ; n > 1 ; n-- ) { rec = rec * n ; } return rec ; } [39;49m
Source code file location of [34;49mfaccs3[39;49m : "namespaces/compiler/c_syntax.cft" : 252.19 :: we are now at : namespaces/compiler/c_syntax.cft : 260.20
Compiled with : optimizeOff, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04810c -- code size = 183 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfaccs3[39;49m : definition = 0x00007fa6de04810c : disassembly at namespaces/compiler/c_syntax.cft : 260.20 :
[34;49m ..                                   int [39;49m[33;40mfaccs3[39;49m[34;49m ( n | rec )  { for ( rec = 1 ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fa6de04810c    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de048110    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de048114    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m .. int faccs3 ( n | rec )  { for ( rec = [39;49m[33;40m1[39;49m[34;49m ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fa6de04811b    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de048125    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de048129    498906                  mov [r14], rax                                         [39;49m
[34;49m ..       int faccs3 ( n | rec )  { for ( [39;49m[33;40mrec[39;49m[34;49m = 1 ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fa6de04812c    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de048130    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de048133    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fa6de048136    4983ee08                sub r14, 0x8                                           [39;49m
[34;49mint faccs3 ( n | rec )  { for ( rec = 1 ; [39;49m[33;40mn[39;49m[34;49m > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fa6de04813a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04813e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de048142    498906                  mov [r14], rax                                         [39;49m
[34;49m .. s3 ( n | rec )  { for ( rec = 1 ; n > [39;49m[33;40m1[39;49m[34;49m ; n-- ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fa6de048145    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de04814f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de048153    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de048156    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de048159    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04815d    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. ccs3 ( n | rec )  { for ( rec = 1 ; n [39;49m[33;40m>[39;49m[34;49m 1 ; n-- ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fa6de048161    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fa6de048164    0f8e49000000            jle 0x7fa6de0481b3         	< C_Syntax.[34;49mfaccs3[39;49m+167 >[39;49m
[34;49m .. or ( rec = 1 ; n > 1 ; n-- ) {  rec = [39;49m[33;40mrec[39;49m[34;49m * n ;  }  return rec ; } [39;49m[32;49m
0x7fa6de04816a    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de04816e    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..  ( n | rec )  { for ( rec = 1 ; n > 1 [39;49m[33;40m;[39;49m[34;49m n-- ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fa6de048172    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ec = 1 ; n > 1 ; n-- ) {  rec = rec * [39;49m[33;40mn[39;49m[34;49m ;  }  return rec ; } [39;49m[32;49m
0x7fa6de048175    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de048179    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04817d    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de048180    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de048183    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  rec = 1 ; n > 1 ; n-- ) {  rec = rec [39;49m[33;40m*[39;49m[34;49m n ;  }  return rec ; } [39;49m[32;49m
0x7fa6de048187    49f726                  mul qword [r14]                                        [39;49m[32;49m
0x7fa6de04818a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. )  { for ( rec = 1 ; n > 1 ; n-- ) {  [39;49m[33;40mrec[39;49m[34;49m = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fa6de04818d    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de048191    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de048194    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fa6de048197    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  n | rec )  { for ( rec = 1 ; n > 1 ; [39;49m[33;40mn[39;49m[34;49m-- ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fa6de04819b    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04819f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0481a3    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  n | rec )  { for ( rec = 1 ; n > 1 ; [39;49m[33;40mn[39;49m[34;49m-- ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fa6de0481a6    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. n | rec )  { for ( rec = 1 ; n > 1 ; n[39;49m[33;40m--[39;49m[34;49m ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fa6de0481aa    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fa6de0481ad    498947f8                mov [r15-0x8], rax                                     [39;49m
[34;49m ..  rec )  { for ( rec = 1 ; n > 1 ; n-- [39;49m[33;40m)[39;49m[34;49m {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fa6de0481b1    eb87                    jmp 0x7fa6de04813a         	< C_Syntax.[34;49mfaccs3[39;49m+46 >[39;49m
[34;49m ..  n > 1 ; n-- ) {  rec = rec * n ;  }  [39;49m[33;40mreturn[39;49m[34;49m rec ; } [39;49m[32;49m
0x7fa6de0481b3    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ) {  rec = rec * n ;  }  return rec ; [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fa6de0481b7    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0481bb    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. ; n-- ) {  rec = rec * n ;  }  return [39;49m[33;40mrec[39;49m[34;49m ; } [39;49m[32;49m
0x7fa6de0481bf    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de0481c2    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'faccs3' :: codeSize = 182
Word : 0x00007fa6dd69a5b8 :: Compiled at : 0x00007fa6de04810c
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.cft 260.20 <::
 5040[34;49m[34;49m
Apparent TypeMismatch : [c]  :: [34;49mnamespaces/compiler/c_syntax.cft[34;49m : 281.031 : Compiler :> [33;40mtoken[34;49m <: cprimitive :> [34;49mhile ( atoken = [34;49m[33;40mtoken[34;49m[34;49m () ) [34;49m [39;49m
TypeError : Wrong data sizes :: lvalue : size : size == 8 :: rvalue : atoken : size == 44
apparent type mismatch :: Infix.= :: type expected : TypeVariable . Any  :: type recorded : Byte . Undefined  : at namespaces/compiler/c_syntax.cft : 281.31
 =============================
C_Syntax.[34;49m$[39;49m <:> cfrTil compiled word
SourceCode for C_Syntax.[34;49m$[39;49m :> 
[34;49mvoid $ ( | atoken, buffer, CBuffer buffer0 ) { buffer = &buffer0.buf ; memset ( buffer, 0, CBuffer.size ) ; while ( atoken = token () ) { printf ( "\n\ttoken = %s\n", atoken ) ; if ( ! strcmp ( atoken, ";" ) ) { printf ( "\n\tbuffer = %s\n", buffer ) ; sh ( buffer ) ; break ; } else { if ( strcmp ( atoken, "." ) ) { strcat ( buffer, " " ) ; } strcat ( buffer, atoken ) ; } } } [39;49m
Source code file location of [34;49m$[39;49m : "namespaces/compiler/c_syntax.cft" : 277.40 :: we are now at : namespaces/compiler/c_syntax.cft : 301.19
Compiled with : optimizeOff, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde0481c8 -- code size = 571 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49m$[39;49m : definition = 0x00007fa6de0481c8 : disassembly at namespaces/compiler/c_syntax.cft : 301.19 :
[34;49m ..                                  void [39;49m[33;40m$[39;49m[34;49m ( | atoken, buffer, CBuffer buffer0 )  { buffer = &buffer0.buf ; memset ( buffer, 0, CBuf .. [39;49m[32;49m
0x7fa6de0481c8    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de0481cc    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de0481d0    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m .. buffer, CBuffer buffer0 )  { buffer = [39;49m[33;40m&[39;49m[34;49mbuffer0.buf ; memset ( buffer, 0, CBuffer.size ) ;  while ( atoken = token () )  {  printf .. [39;49m[32;49m
0x7fa6de0481d7    48bf80d857dda67f0000    mov rdi, 0x7fa6dd57d880                                [39;49m[32;49m
0x7fa6de0481e1    498d7718                lea rsi, [r15+0x18]                                    [39;49m[32;49m
0x7fa6de0481e5    48ba0001000000000000    mov rdx, 0x100                                         [39;49m[32;49m
0x7fa6de0481ef    49b81708ebbf1d560000    mov r8, 0x561dbfeb0817                                 [39;49m[32;49m
0x7fa6de0481f9    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de048203    49ffd1                  call r9                    	< C compiler code >        [39;49m
[34;49m .. uffer, CBuffer buffer0 )  { buffer = &[39;49m[33;40mbuffer0[39;49m[34;49m.buf ; memset ( buffer, 0, CBuffer.size ) ;  while ( atoken = token () )  {  printf  .. [39;49m[32;49m
0x7fa6de048206    498b4718                mov rax, [r15+0x18]                                    [39;49m[32;49m
0x7fa6de04820a    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fa6de048211    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de048215    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  atoken, buffer, CBuffer buffer0 )  { [39;49m[33;40mbuffer[39;49m[34;49m = &buffer0.buf ; memset ( buffer, 0, CBuffer.size ) ;  while ( atoken = token () )   .. [39;49m[32;49m
0x7fa6de048218    498d4710                lea rax, [r15+0x10]                                    [39;49m[32;49m
0x7fa6de04821c    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04821f    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fa6de048222    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. )  { buffer = &buffer0.buf ; memset ( [39;49m[33;40mbuffer[39;49m[34;49m, 0, CBuffer.size ) ;  while ( atoken = token () )  {  printf ( "\n\ttoken = %s\n", a .. [39;49m[32;49m
0x7fa6de048226    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fa6de04822a    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. fer = &buffer0.buf ; memset ( buffer, [39;49m[33;40m0[39;49m[34;49m, CBuffer.size ) ;  while ( atoken = token () )  {  printf ( "\n\ttoken = %s\n", atoken )  .. [39;49m[32;49m
0x7fa6de04822d    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de048237    488bf0                  mov rsi, rax                                           [39;49m
[34;49m .. er0.buf ; memset ( buffer, 0, CBuffer.[39;49m[33;40msize[39;49m[34;49m ) ;  while ( atoken = token () )  {  printf ( "\n\ttoken = %s\n", atoken ) ; if ( ! st .. [39;49m[32;49m
0x7fa6de04823a    48b81819efdda67f0000    mov rax, 0x7fa6ddef1918                                [39;49m[32;49m
0x7fa6de048244    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de048247    488bd0                  mov rdx, rax                                           [39;49m
[34;49m ..  buffer0 )  { buffer = &buffer0.buf ; [39;49m[33;40mmemset[39;49m[34;49m ( buffer, 0, CBuffer.size ) ;  while ( atoken = token () )  {  printf ( "\n\ttoken = .. [39;49m[32;49m
0x7fa6de04824a    49b8d0c026dea67f0000    mov r8, 0x7fa6de26c0d0                                 [39;49m[32;49m
0x7fa6de048254    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04825e    49ffd1                  call r9                    	< libc.[34;49mmemset[39;49m : 0x00007fa6de26c0d0 >[39;49m
[34;49m .. 0, CBuffer.size ) ;  while ( atoken = [39;49m[33;40mtoken[39;49m[34;49m () )  {  printf ( "\n\ttoken = %s\n", atoken ) ; if ( ! strcmp ( atoken, ";" ) )  {   .. [39;49m[32;49m
0x7fa6de048261    49b82015efbf1d560000    mov r8, 0x561dbfef1520                                 [39;49m[32;49m
0x7fa6de04826b    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de048275    49ffd1                  call r9                    	< Compiler.[34;49mtoken[39;49m : 0x0000561dbfef1520 >[39;49m
[34;49m ..  buffer, 0, CBuffer.size ) ;  while ( [39;49m[33;40matoken[39;49m[34;49m = token () )  {  printf ( "\n\ttoken = %s\n", atoken ) ; if ( ! strcmp ( atoken, ";" .. [39;49m[32;49m
0x7fa6de048278    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de04827c    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04827f    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fa6de048282    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. r.size ) ;  while ( atoken = token () [39;49m[33;40m)[39;49m[34;49m  {  printf ( "\n\ttoken = %s\n", atoken ) ; if ( ! strcmp ( atoken, ";" ) )  {  printf (  .. [39;49m[32;49m
0x7fa6de048286    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de048289    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. " ) ; } strcat ( buffer, atoken ) ; } [39;49m[33;40m}[39;49m[34;49m }  .. [39;49m[32;49m
0x7fa6de04828d    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de048290    0f8464010000            jz 0x7fa6de0483fa          	< C_Syntax.[34;49m$[39;49m+562 >[39;49m
[34;49m .. le ( atoken = token () )  {  printf ( [39;49m[33;40m"\n\ttoken = %s\n"[39;49m[34;49m, atoken ) ; if ( ! strcmp ( atoken, ";" ) )  {  printf ( "\n\tbuffer = % .. [39;49m[32;49m
0x7fa6de048296    48b8a2345fdda67f0000    mov rax, 0x7fa6dd5f34a2    	< string : '[34;49m\n\ttoken = %s\n[39;49m' >[39;49m[32;49m
0x7fa6de0482a0    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. () )  {  printf ( "\n\ttoken = %s\n", [39;49m[33;40matoken[39;49m[34;49m ) ; if ( ! strcmp ( atoken, ";" ) )  {  printf ( "\n\tbuffer = %s\n", buffer ) ; sh  .. [39;49m[32;49m
0x7fa6de0482a3    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de0482a7    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fa6de0482aa    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de0482b4    49b84481ebbf1d560000    mov r8, 0x561dbfeb8144                                 [39;49m[32;49m
0x7fa6de0482be    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de0482c8    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000561dbfeb8144 >[39;49m
[34;49m .. n = %s\n", atoken ) ; if ( ! strcmp ( [39;49m[33;40matoken[39;49m[34;49m, ";" ) )  {  printf ( "\n\tbuffer = %s\n", buffer ) ; sh ( buffer ) ; break ;  } els .. [39;49m[32;49m
0x7fa6de0482cb    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de0482cf    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. ", atoken ) ; if ( ! strcmp ( atoken, [39;49m[33;40m";"[39;49m[34;49m ) )  {  printf ( "\n\tbuffer = %s\n", buffer ) ; sh ( buffer ) ; break ;  } else  {  if .. [39;49m[32;49m
0x7fa6de0482d2    48b8b0345fdda67f0000    mov rax, 0x7fa6dd5f34b0    	< string : '[34;49m;[39;49m' >[39;49m[32;49m
0x7fa6de0482dc    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fa6de0482df    49b880a525dea67f0000    mov r8, 0x7fa6de25a580                                 [39;49m[32;49m
0x7fa6de0482e9    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de0482f3    49ffd1                  call r9                    	< libc.[34;49mstrcmp[39;49m : 0x00007fa6de25a580 >[39;49m[32;49m
0x7fa6de0482f6    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de0482f9    740c                    jz 0xde048307                                          [39;49m[32;49m
0x7fa6de0482fb    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de048305    eb0a                    jmp 0x7fa6de048311         	< C_Syntax.[34;49m$[39;49m+329 >[39;49m[32;49m
0x7fa6de048307    48b80100000000000000    mov rax, 0x1                                           [39;49m
[34;49m .. " " ) ; } strcat ( buffer, atoken ) ; [39;49m[33;40m}[39;49m[34;49m } }  .. [39;49m[32;49m
0x7fa6de048311    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de048314    0f8457000000            jz 0x7fa6de048371          	< C_Syntax.[34;49m$[39;49m+425 >[39;49m
[34;49m .. strcmp ( atoken, ";" ) )  {  printf ( [39;49m[33;40m"\n\tbuffer = %s\n"[39;49m[34;49m, buffer ) ; sh ( buffer ) ; break ;  } else  {  if ( strcmp ( atoken, " .. [39;49m[32;49m
0x7fa6de04831a    48b8b2345fdda67f0000    mov rax, 0x7fa6dd5f34b2    	< string : '[34;49m\n\tbuffer = %s\n[39;49m' >[39;49m[32;49m
0x7fa6de048324    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. ) )  {  printf ( "\n\tbuffer = %s\n", [39;49m[33;40mbuffer[39;49m[34;49m ) ; sh ( buffer ) ; break ;  } else  {  if ( strcmp ( atoken, "." ) ) { strcat ( buf .. [39;49m[32;49m
0x7fa6de048327    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fa6de04832b    488bf0                  mov rsi, rax                                           [39;49m
[34;49m ..  ) ;  while ( atoken = token () )  {  [39;49m[33;40mprintf[39;49m[34;49m ( "\n\ttoken = %s\n", atoken ) ; if ( ! strcmp ( atoken, ";" ) )  {  printf ( "\n\tb .. [39;49m[32;49m
0x7fa6de04832e    48b80000000000000000    mov rax, 0x0                                           [39;49m
[34;49m .. ; if ( ! strcmp ( atoken, ";" ) )  {  [39;49m[33;40mprintf[39;49m[34;49m ( "\n\tbuffer = %s\n", buffer ) ; sh ( buffer ) ; break ;  } else  {  if ( strcmp (  .. [39;49m[32;49m
0x7fa6de048338    49b84481ebbf1d560000    mov r8, 0x561dbfeb8144                                 [39;49m[32;49m
0x7fa6de048342    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04834c    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000561dbfeb8144 >[39;49m
[34;49m ..  "\n\tbuffer = %s\n", buffer ) ; sh ( [39;49m[33;40mbuffer[39;49m[34;49m ) ; break ;  } else  {  if ( strcmp ( atoken, "." ) ) { strcat ( buffer, " " ) ; } s .. [39;49m[32;49m
0x7fa6de04834f    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fa6de048353    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de048357    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ntf ( "\n\tbuffer = %s\n", buffer ) ; [39;49m[33;40msh[39;49m[34;49m ( buffer ) ; break ;  } else  {  if ( strcmp ( atoken, "." ) ) { strcat ( buffer, " " )  .. [39;49m[32;49m
0x7fa6de04835a    49b94cb703dea67f0000    mov r9, 0x7fa6de03b74c                                 [39;49m[32;49m
0x7fa6de048364    49ffd1                  call r9                    	< Root.[34;49msh[39;49m : 0x00007fa6de03b74c >[39;49m
[34;49m .. r = %s\n", buffer ) ; sh ( buffer ) ; [39;49m[33;40mbreak[39;49m[34;49m ;  } else  {  if ( strcmp ( atoken, "." ) ) { strcat ( buffer, " " ) ; } strcat ( buf .. [39;49m[32;49m
0x7fa6de048367    e98e000000              jmp 0x7fa6de0483fa         	< C_Syntax.[34;49m$[39;49m+562 >[39;49m
[34;49m .. , buffer ) ; sh ( buffer ) ; break ;  [39;49m[33;40m}[39;49m[34;49m else  {  if ( strcmp ( atoken, "." ) ) { strcat ( buffer, " " ) ; } strcat ( buffer, atok .. [39;49m[32;49m
0x7fa6de04836c    e984000000              jmp 0x7fa6de0483f5         	< C_Syntax.[34;49m$[39;49m+557 >[39;49m
[34;49m .. ) ; break ;  } else  {  if ( strcmp ( [39;49m[33;40matoken[39;49m[34;49m, "." ) ) { strcat ( buffer, " " ) ; } strcat ( buffer, atoken ) ; } } }  .. [39;49m[32;49m
0x7fa6de048371    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de048375    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. k ;  } else  {  if ( strcmp ( atoken, [39;49m[33;40m"."[39;49m[34;49m ) ) { strcat ( buffer, " " ) ; } strcat ( buffer, atoken ) ; } } }  .. [39;49m[32;49m
0x7fa6de048378    48b8c1345fdda67f0000    mov rax, 0x7fa6dd5f34c1    	< string : '[34;49m.[39;49m' >[39;49m[32;49m
0x7fa6de048382    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fa6de048385    49b880a525dea67f0000    mov r8, 0x7fa6de25a580                                 [39;49m[32;49m
0x7fa6de04838f    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de048399    49ffd1                  call r9                    	< libc.[34;49mstrcmp[39;49m : 0x00007fa6de25a580 >[39;49m
[34;49m .. n, "." ) ) { strcat ( buffer, " " ) ; [39;49m[33;40m}[39;49m[34;49m strcat ( buffer, atoken ) ; } } }  .. [39;49m[32;49m
0x7fa6de04839c    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de04839f    0f842b000000            jz 0x7fa6de0483d0          	< C_Syntax.[34;49m$[39;49m+520 >[39;49m
[34;49m .. ( strcmp ( atoken, "." ) ) { strcat ( [39;49m[33;40mbuffer[39;49m[34;49m, " " ) ; } strcat ( buffer, atoken ) ; } } }  .. [39;49m[32;49m
0x7fa6de0483a5    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m .. lse  {  if ( strcmp ( atoken, "." ) ) [39;49m[33;40m{[39;49m[34;49m strcat ( buffer, " " ) ; } strcat ( buffer, atoken ) ; } } }  .. [39;49m[32;49m
0x7fa6de0483a9    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  ( atoken, "." ) ) { strcat ( buffer, [39;49m[33;40m" "[39;49m[34;49m ) ; } strcat ( buffer, atoken ) ; } } }  .. [39;49m[32;49m
0x7fa6de0483ac    48b8c3345fdda67f0000    mov rax, 0x7fa6dd5f34c3    	< string : '[34;49m [39;49m' >[39;49m[32;49m
0x7fa6de0483b6    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fa6de0483b9    49b8209d26dea67f0000    mov r8, 0x7fa6de269d20                                 [39;49m[32;49m
0x7fa6de0483c3    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de0483cd    49ffd1                  call r9                    	< libc.[34;49mstrcat[39;49m : 0x00007fa6de269d20 >[39;49m
[34;49m .. { strcat ( buffer, " " ) ; } strcat ( [39;49m[33;40mbuffer[39;49m[34;49m, atoken ) ; } } }  .. [39;49m[32;49m
0x7fa6de0483d0    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fa6de0483d4    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  ( buffer, " " ) ; } strcat ( buffer, [39;49m[33;40matoken[39;49m[34;49m ) ; } } }  .. [39;49m[32;49m
0x7fa6de0483d7    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de0483db    488bf0                  mov rsi, rax                                           [39;49m
[34;49m ..  "." ) ) { strcat ( buffer, " " ) ; } [39;49m[33;40mstrcat[39;49m[34;49m ( buffer, atoken ) ; } } }  .. [39;49m[32;49m
0x7fa6de0483de    49b8209d26dea67f0000    mov r8, 0x7fa6de269d20                                 [39;49m[32;49m
0x7fa6de0483e8    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de0483f2    49ffd1                  call r9                    	< libc.[34;49mstrcat[39;49m : 0x00007fa6de269d20 >[39;49m[32;49m
0x7fa6de0483f5    e967feffff              jmp 0x7fa6de048261         	< C_Syntax.[34;49m$[39;49m+153 >[39;49m
[34;49m .. ) ; } strcat ( buffer, atoken ) ; } } [39;49m[33;40m}[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de0483fa    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0483fe    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de048402    c3                      ret                                                    [39;49m
Word_Disassemble : word - '$' :: codeSize = 570
Word : 0x00007fa6dd57dae8 :: Compiled at : 0x00007fa6de0481c8
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.cft 301.19 <::
 

new $ test
total 1076
drwxrwxr-x  10 dennisj dennisj   4096 Jan 18 10:27 .
drwxrwxrwx 110 dennisj dennisj  20480 Jan 18 10:35 ..
drwxrwxr-x   6 dennisj dennisj   4096 Jan 18 09:06 archive
drwxrwxr-x   2 dennisj dennisj   4096 Jan 18 10:27 bin
drwxrwxr-x   2 dennisj dennisj   4096 Jan 18 03:36 etc
drwxrwxr-x   8 dennisj dennisj   4096 Jan 18 03:36 .git
-rw-rw-r--   1 dennisj dennisj  14962 Jan 18 03:36 init.cft
-rw-rw-r--   1 dennisj dennisj     56 Jan 18 03:36 itestf
drwxrwxr-x   2 dennisj dennisj   4096 Jan 18 03:36 lib
-rw-rw-r--   1 dennisj dennisj   1078 Jan 18 03:36 LICENSE
-rwxrwxr-x   1 dennisj dennisj    260 Jan 18 03:36 m
-rwxrwxr-x   1 dennisj dennisj    685 Jan 18 03:36 m0
-rw-rw-r--   1 dennisj dennisj   7194 Jan 18 03:36 Makefile
-rwxrwxr-x   1 dennisj dennisj    643 Jan 18 03:36 mir
drwxrwxr-x   4 dennisj dennisj   4096 Jan 18 03:36 namespaces
drwxrwxr-x   3 dennisj dennisj   4096 Jan 18 03:36 nbproject
-rw-rw-r--   1 dennisj dennisj     40 Jan 18 03:36 nt.cft
-rwxrwxr-x   1 dennisj dennisj    133 Jan 18 03:36 r
-rw-rw-r--   1 dennisj dennisj  13223 Jan 18 03:36 README.txt
drwxrwxr-x   5 dennisj dennisj   4096 Jan 18 03:36 src
-rw-rw-r--   1 dennisj dennisj 965313 Jan 18 10:35 temp.out
-rw-rw-r--   1 dennisj dennisj     90 Jan 18 03:36 test
-rw-rw-r--   1 dennisj dennisj     90 Jan 18 03:36 test.txt
[39;49m[39;49m
typeChecking is off, optimize is on, inlining is on, infixMode is off, 
prefixMode is off, c_syntax is off, postfixMode is on
Debug is off. Verbosity = 1. Console = 0, NumberBase = 10.
DebugSourceCode on : BigNum off : Lisp off
interpreting : at etc/script : 7.6
version 0.902.200
 7 7 7
version 0.902.200
[39;49m yfac
[39;49m 3628800

[39;49m yfacc
[39;49m 3628800

[39;49m 5040

[34;49m
Increase the verbosity setting to 2 or more for more info here. ( Eg. : verbosity 2 = )[39;49m
ContextSpace                                InUse =     29248 : Unused =      1856
ContextSpace                                InUse =      8768 : Unused =      1472
StringSpace                                 InUse =     16594 : Unused =     85806
HistorySpace                                InUse =         0 : Unused =     10240
BufferSpace                                 InUse =     54360 : Unused =     48040
LispTempSpace                               InUse =    216832 : Unused =     20544
DictionarySpace                             InUse =    784128 : Unused =     50752
SessionObjectsSpace                         InUse =     22453 : Unused =      1440
CodeSpace                                   InUse =     20773 : Unused =    286427
CompilerTempObjectSpace                     InUse =    257119 : Unused =     19457
TempObjectSpace                             InUse =      1423 : Unused =      3796
LispSpace                                   InUse =    155952 : Unused =     15240
InternalObjectSpace                         InUse =     74190 : Unused =     28210
CfrTilInternalSpace                         InUse =    106168 : Unused =     95656
OpenVmTilSpace                              InUse =      5240 : Unused =      3976
Data Stack                                  InUse =         0 : Unused =     16384
Total Accounted Mem                         InUse =   1828504 : Unused =    672912
Mmap_RemainingMemoryAllocated                     =   2614064 : <=: ovt->Mmap_RemainingMemoryAllocated
Total Memory Allocated                            =   2501416
Total Memory leaks                                =         0
RecycledWordCount ::     5 x 560 bytes : Recycled =      2800[39;49m fibc
[39;49m 6765

 =============================
Int.[34;49mfac[39;49m <:> cfrTil compiled word
SourceCode for Int.[34;49mfac[39;49m :> 
[34;49m: fac ( n | rec1 -- TOS ) rec1 1 = { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while rec1 @ ; [39;49m
Source code file location of [34;49mfac[39;49m : "etc/script" : 27.27 :: we are now at : etc/script : 32.17
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xf52d5b3d -- code size = 87 bytes
TypeSignature : 
 -----------------------------
Word :: Int.[34;49mfac[39;49m : definition = 0x00007f26f52d5b3d : disassembly at etc/script : 32.17 :
[34;49m ..                                     : [39;49m[33;40mfac[39;49m[34;49m ( n | rec1 -- TOS )  rec1 1 =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  rec1 .. [39;49m[32;49m
0x7f26f52d5b3d    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7f26f52d5b41    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7f26f52d5b45    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..            : fac ( n | rec1 -- TOS )  [39;49m[33;40mrec1[39;49m[34;49m 1 =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  rec1 @  ;  .. [39;49m[32;49m
0x7f26f52d5b4c    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..       : fac ( n | rec1 -- TOS )  rec1 [39;49m[33;40m1[39;49m[34;49m =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  rec1 @  ;  .. [39;49m[32;49m
0x7f26f52d5b50    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m ..     : fac ( n | rec1 -- TOS )  rec1 1 [39;49m[33;40m=[39;49m[34;49m  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  rec1 @  ;  .. [39;49m[32;49m
0x7f26f52d5b5a    488908                  mov [rax], rcx                                         [39;49m
[34;49m   : fac ( n | rec1 -- TOS )  rec1 1 =  { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ rec1 @ * rec1 store n -- } while  rec1 @  ;  .. [39;49m[32;49m
0x7f26f52d5b5d    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  n | rec1 -- TOS )  rec1 1 =  { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ rec1 @ * rec1 store n -- } while  rec1 @  ; [39;49m[32;49m
0x7f26f52d5b61    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7f26f52d5b65    0f8e19000000            jle 0x7f26f52d5b84         	< Int.[34;49mfac[39;49m+71 >[39;49m
[34;49m .. ec1 -- TOS )  rec1 1 =  { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ rec1 @ * rec1 store n -- } while  rec1 @  ; [39;49m[32;49m
0x7f26f52d5b6b    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. -- TOS )  rec1 1 =  { n @ 1 > } { n @ [39;49m[33;40mrec1[39;49m[34;49m @ * rec1 store n -- } while  rec1 @  ; [39;49m[32;49m
0x7f26f52d5b6f    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. )  rec1 1 =  { n @ 1 > } { n @ rec1 @ [39;49m[33;40m*[39;49m[34;49m rec1 store n -- } while  rec1 @  ; [39;49m[32;49m
0x7f26f52d5b73    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..  rec1 1 =  { n @ 1 > } { n @ rec1 @ * [39;49m[33;40mrec1[39;49m[34;49m store n -- } while  rec1 @  ; [39;49m[32;49m
0x7f26f52d5b77    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  1 =  { n @ 1 > } { n @ rec1 @ * rec1 [39;49m[33;40mstore[39;49m[34;49m n -- } while  rec1 @  ; [39;49m[32;49m
0x7f26f52d5b7b    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. n @ 1 > } { n @ rec1 @ * rec1 store n [39;49m[33;40m--[39;49m[34;49m } while  rec1 @  ; [39;49m[32;49m
0x7f26f52d5b7e    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  1 > } { n @ rec1 @ * rec1 store n -- [39;49m[33;40m}[39;49m[34;49m while  rec1 @  ; [39;49m[32;49m
0x7f26f52d5b82    ebd9                    jmp 0x7f26f52d5b5d         	< Int.[34;49mfac[39;49m+32 >[39;49m
[34;49m .. n @ rec1 @ * rec1 store n -- } while  [39;49m[33;40mrec1[39;49m[34;49m @  ; [39;49m[32;49m
0x7f26f52d5b84    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  @ * rec1 store n -- } while  rec1 @  [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7f26f52d5b88    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7f26f52d5b8c    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7f26f52d5b90    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7f26f52d5b93    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac' :: codeSize = 86
Word : 0x00007f26f520d228 :: Compiled at : 0x00007f26f52d5b3d
 =============================
::> 'wdiss' was called at etc/script 32.17 <::
 5040
bye
 namespaces/compiler/c_syntax.cft 308.20 $$ etc/lispScript [39;49m[39;49m
typeChecking is off, optimize is on, inlining is on, infixMode is off, 
prefixMode is off, c_syntax is off, postfixMode is on
Debug is off. Verbosity = 1. Console = 0, NumberBase = 10.
DebugSourceCode on : BigNum off : Lisp off
interpreting : at etc/lispScript : 4.6
version 0.902.200
[39;49m 7
[39;49m yfac
[39;49m 3628800

[39;49m yfacc
[39;49m 3628800

[39;49m 5040

[39;49m fibc
[39;49m 6765

 =============================
Int.[34;49mfac[39;49m <:> cfrTil compiled word
SourceCode for Int.[34;49mfac[39;49m :> 
[34;49m: fac ( n | rec1 -- TOS ) rec1 1 = { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while rec1 @ ; [39;49m
Source code file location of [34;49mfac[39;49m : "etc/lispScript" : 22.27 :: we are now at : etc/lispScript : 27.17
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xd421eab7 -- code size = 87 bytes
TypeSignature : 
 -----------------------------
Word :: Int.[34;49mfac[39;49m : definition = 0x00007f85d421eab7 : disassembly at etc/lispScript : 27.17 :
[34;49m ..                                     : [39;49m[33;40mfac[39;49m[34;49m ( n | rec1 -- TOS )  rec1 1 =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  rec1 .. [39;49m[32;49m
0x7f85d421eab7    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7f85d421eabb    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7f85d421eabf    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..            : fac ( n | rec1 -- TOS )  [39;49m[33;40mrec1[39;49m[34;49m 1 =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  rec1 @  ;  .. [39;49m[32;49m
0x7f85d421eac6    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..       : fac ( n | rec1 -- TOS )  rec1 [39;49m[33;40m1[39;49m[34;49m =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  rec1 @  ;  .. [39;49m[32;49m
0x7f85d421eaca    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m ..     : fac ( n | rec1 -- TOS )  rec1 1 [39;49m[33;40m=[39;49m[34;49m  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  rec1 @  ;  .. [39;49m[32;49m
0x7f85d421ead4    488908                  mov [rax], rcx                                         [39;49m
[34;49m   : fac ( n | rec1 -- TOS )  rec1 1 =  { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ rec1 @ * rec1 store n -- } while  rec1 @  ;  .. [39;49m[32;49m
0x7f85d421ead7    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  n | rec1 -- TOS )  rec1 1 =  { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ rec1 @ * rec1 store n -- } while  rec1 @  ; [39;49m[32;49m
0x7f85d421eadb    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7f85d421eadf    0f8e19000000            jle 0x7f85d421eafe         	< Int.[34;49mfac[39;49m+71 >[39;49m
[34;49m .. ec1 -- TOS )  rec1 1 =  { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ rec1 @ * rec1 store n -- } while  rec1 @  ; [39;49m[32;49m
0x7f85d421eae5    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. -- TOS )  rec1 1 =  { n @ 1 > } { n @ [39;49m[33;40mrec1[39;49m[34;49m @ * rec1 store n -- } while  rec1 @  ; [39;49m[32;49m
0x7f85d421eae9    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. )  rec1 1 =  { n @ 1 > } { n @ rec1 @ [39;49m[33;40m*[39;49m[34;49m rec1 store n -- } while  rec1 @  ; [39;49m[32;49m
0x7f85d421eaed    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..  rec1 1 =  { n @ 1 > } { n @ rec1 @ * [39;49m[33;40mrec1[39;49m[34;49m store n -- } while  rec1 @  ; [39;49m[32;49m
0x7f85d421eaf1    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  1 =  { n @ 1 > } { n @ rec1 @ * rec1 [39;49m[33;40mstore[39;49m[34;49m n -- } while  rec1 @  ; [39;49m[32;49m
0x7f85d421eaf5    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. n @ 1 > } { n @ rec1 @ * rec1 store n [39;49m[33;40m--[39;49m[34;49m } while  rec1 @  ; [39;49m[32;49m
0x7f85d421eaf8    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  1 > } { n @ rec1 @ * rec1 store n -- [39;49m[33;40m}[39;49m[34;49m while  rec1 @  ; [39;49m[32;49m
0x7f85d421eafc    ebd9                    jmp 0x7f85d421ead7         	< Int.[34;49mfac[39;49m+32 >[39;49m
[34;49m .. n @ rec1 @ * rec1 store n -- } while  [39;49m[33;40mrec1[39;49m[34;49m @  ; [39;49m[32;49m
0x7f85d421eafe    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  @ * rec1 store n -- } while  rec1 @  [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7f85d421eb02    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7f85d421eb06    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7f85d421eb0a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7f85d421eb0d    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac' :: codeSize = 86
Word : 0x00007f85d4156228 :: Compiled at : 0x00007f85d421eab7
 =============================
::> 'wdiss' was called at etc/lispScript 27.17 <::
 5040
bye
 namespaces/compiler/c_syntax.cft 309.22 $$ ls -al /usr/local total 40
drwxr-xr-x 10 root root 4096 Jan 17 21:16 .
drwxr-xr-x 14 root root 4096 Jan 17 21:17 ..
drwxr-xr-x  2 root root 4096 Jan 18 06:44 bin
drwxr-xr-x  2 root root 4096 Jan 18 06:44 etc
drwxr-xr-x  2 root root 4096 Jan 17 21:16 games
drwxr-xr-x  3 root root 4096 Jan 18 06:40 include
drwxr-xr-x  6 root root 4096 Jan 18 10:27 lib
lrwxrwxrwx  1 root root    9 Jan 18 05:45 man -> share/man
drwxr-xr-x  2 root root 4096 Jan 17 21:16 sbin
drwxr-xr-x  9 root root 4096 Jan 18 06:40 share
drwxr-xr-x  2 root root 4096 Jan 17 21:16 src
 namespaces/compiler/c_syntax.cft 310.14 $$ ls -al .total 1092
drwxrwxr-x  10 dennisj dennisj   4096 Jan 18 10:27 .
drwxrwxrwx 110 dennisj dennisj  20480 Jan 18 10:35 ..
drwxrwxr-x   6 dennisj dennisj   4096 Jan 18 09:06 archive
drwxrwxr-x   2 dennisj dennisj   4096 Jan 18 10:27 bin
drwxrwxr-x   2 dennisj dennisj   4096 Jan 18 03:36 etc
drwxrwxr-x   8 dennisj dennisj   4096 Jan 18 03:36 .git
-rw-rw-r--   1 dennisj dennisj  14962 Jan 18 03:36 init.cft
-rw-rw-r--   1 dennisj dennisj     56 Jan 18 03:36 itestf
drwxrwxr-x   2 dennisj dennisj   4096 Jan 18 03:36 lib
-rw-rw-r--   1 dennisj dennisj   1078 Jan 18 03:36 LICENSE
-rwxrwxr-x   1 dennisj dennisj    260 Jan 18 03:36 m
-rwxrwxr-x   1 dennisj dennisj    685 Jan 18 03:36 m0
-rw-rw-r--   1 dennisj dennisj   7194 Jan 18 03:36 Makefile
-rwxrwxr-x   1 dennisj dennisj    643 Jan 18 03:36 mir
drwxrwxr-x   4 dennisj dennisj   4096 Jan 18 03:36 namespaces
drwxrwxr-x   3 dennisj dennisj   4096 Jan 18 03:36 nbproject
-rw-rw-r--   1 dennisj dennisj     40 Jan 18 03:36 nt.cft
-rwxrwxr-x   1 dennisj dennisj    133 Jan 18 03:36 r
-rw-rw-r--   1 dennisj dennisj  13223 Jan 18 03:36 README.txt
drwxrwxr-x   5 dennisj dennisj   4096 Jan 18 03:36 src
-rw-rw-r--   1 dennisj dennisj 980614 Jan 18 10:35 temp.out
-rw-rw-r--   1 dennisj dennisj     90 Jan 18 03:36 test
-rw-rw-r--   1 dennisj dennisj     90 Jan 18 03:36 test.txt

should read 3 : 3 
bt.size = 18
Dump at : namespaces/compiler/c_syntax.cft : 334.119 :
Dump : Address = 0x00007fa6dd743bd0 : Number = 18 :: (little endian dump)
0x00007fa6dd743bd0 : 0x0000000000000001 0x047fffffff030200  01 00 00 00 00 00 00 00  00 02 03 ff ff ff 7f 04  ........ ........ 
0x00007fa6dd743be0 : 0x0000000000001234 0x0000000000000000  34 12 00 00 00 00 00 00  00 00 00 00 00 00 00 00  4....... ........ 
btt = 1
Dump at : namespaces/compiler/c_syntax.cft : 337.36 :
Dump : Address = 0x00007fa6dd743bd0 : Number = 18 :: (little endian dump)
0x00007fa6dd743bd0 : 0x00000000000000ff 0x047fffffff030200  ff 00 00 00 00 00 00 00  00 02 03 ff ff ff 7f 04  ........ ........ 
0x00007fa6dd743be0 : 0x0000000000001234 0x0000000000000000  34 12 00 00 00 00 00 00  00 00 00 00 00 00 00 00  4....... ........ 
 
  
 0111 1011  0 123 0 0
Dump at : namespaces/compiler/c_syntax.cft : 342.20 :
Dump : Address = 0x00007fa6dd744f92 : Number = 18 :: (little endian dump)
0x00007fa6dd744f92 : 0x23456789abcdef01 0x047fffffff030201  01 ef cd ab 89 67 45 23  01 02 03 ff ff ff 7f 04  .....gE# ........ 
0x00007fa6dd744fa2 : 0x00000000000004d2 0x0000000000000000  d2 04 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

 =============================
C_Syntax.[34;49mfac5[39;49m <:> cfrTil compiled word
SourceCode for C_Syntax.[34;49mfac5[39;49m :> 
[34;49mint fac5 ( REG n | REG facc ) { facc = 1 ; while ( n > 1 ) { facc *= n -- ; } return facc ; } [39;49m
Source code file location of [34;49mfac5[39;49m : "namespaces/compiler/c_syntax.cft" : 350.27 :: we are now at : namespaces/compiler/c_syntax.cft : 360.21
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde048504 -- code size = 39 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfac5[39;49m : definition = 0x00007fa6de048504 : disassembly at namespaces/compiler/c_syntax.cft : 360.21 :
[34;49m ..                                   int [39;49m[33;40mfac5[39;49m[34;49m ( REG n | REG facc )  {  facc = 1 ; while ( n > 1 )  { facc *= n -- ; } return facc ;  .. [39;49m[32;49m
0x7fa6de048504    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m int fac5 ( REG n | REG facc )  {  facc = [39;49m[33;40m1[39;49m[34;49m ; while ( n > 1 )  { facc *= n -- ; } return facc ; }  .. [39;49m[32;49m
0x7fa6de048507    48be0100000000000000    mov rsi, 0x1                                           [39;49m
[34;49m .. | REG facc )  {  facc = 1 ; while ( n [39;49m[33;40m>[39;49m[34;49m 1 )  { facc *= n -- ; } return facc ; } [39;49m[32;49m
0x7fa6de048511    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fa6de048515    0f8e0c000000            jle 0x7fa6de048527         	< C_Syntax.[34;49mfac5[39;49m+35 >[39;49m
[34;49m .. c )  {  facc = 1 ; while ( n > 1 )  { [39;49m[33;40mfacc[39;49m[34;49m *= n -- ; } return facc ; } [39;49m[32;49m
0x7fa6de04851b    488bde                  mov rbx, rsi                                           [39;49m
[34;49m .. {  facc = 1 ; while ( n > 1 )  { facc [39;49m[33;40m*=[39;49m[34;49m n -- ; } return facc ; } [39;49m[32;49m
0x7fa6de04851e    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. cc = 1 ; while ( n > 1 )  { facc *= n [39;49m[33;40m--[39;49m[34;49m ; } return facc ; } [39;49m[32;49m
0x7fa6de048522    48ffcf                  dec rdi                                                [39;49m
[34;49m .. cc = 1 ; while ( n > 1 )  { facc *= n [39;49m[33;40m--[39;49m[34;49m ; } return facc ; } [39;49m[32;49m
0x7fa6de048525    ebea                    jmp 0x7fa6de048511         	< C_Syntax.[34;49mfac5[39;49m+13 >[39;49m
[34;49m ..  ( n > 1 )  { facc *= n -- ; } return [39;49m[33;40mfacc[39;49m[34;49m ; } [39;49m[32;49m
0x7fa6de048527    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fa6de04852a    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac5' :: codeSize = 38
Word : 0x00007fa6dd588010 :: Compiled at : 0x00007fa6de048504
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.cft 360.21 <::
 5040
 =============================
Logic.[34;49mtx1[39;49m <:> cfrTil compiled word
SourceCode for Logic.[34;49mtx1[39;49m :> 
[34;49m: tx1 0 ! ! 8 2 / 2 / 3 & 4 | 1 + + ; [39;49m
Source code file location of [34;49mtx1[39;49m : "namespaces/test/dev0.cft" : 25.38 :: we are now at : namespaces/test/dev0.cft : 26.17
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde0485b1 -- code size = 164 bytes
TypeSignature : 
 -----------------------------
Word :: Logic.[34;49mtx1[39;49m : definition = 0x00007fa6de0485b1 : disassembly at namespaces/test/dev0.cft : 26.17 :
[34;49m ..                                 : tx1 [39;49m[33;40m0[39;49m[34;49m ! ! 8 2 / 2 / 3 & 4 | 1 + + ;  .. [39;49m[32;49m
0x7fa6de0485b1    48b80000000000000000    mov rax, 0x0                                           [39;49m
[34;49m ..                               : tx1 0 [39;49m[33;40m![39;49m[34;49m ! 8 2 / 2 / 3 & 4 | 1 + + ;  .. [39;49m[32;49m
0x7fa6de0485bb    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de0485be    740c                    jz 0xde0485cc                                          [39;49m[32;49m
0x7fa6de0485c0    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de0485ca    eb0a                    jmp 0x7fa6de0485d6         	< Logic.[34;49mtx1[39;49m+37 >[39;49m[32;49m
0x7fa6de0485cc    48b80100000000000000    mov rax, 0x1                                           [39;49m
[34;49m ..                             : tx1 0 ! [39;49m[33;40m![39;49m[34;49m 8 2 / 2 / 3 & 4 | 1 + + ;  .. [39;49m[32;49m
0x7fa6de0485d6    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de0485d9    740c                    jz 0xde0485e7                                          [39;49m[32;49m
0x7fa6de0485db    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de0485e5    eb0a                    jmp 0x7fa6de0485f1         	< Logic.[34;49mtx1[39;49m+64 >[39;49m[32;49m
0x7fa6de0485e7    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de0485f1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0485f5    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                           : tx1 0 ! ! [39;49m[33;40m8[39;49m[34;49m 2 / 2 / 3 & 4 | 1 + + ;  .. [39;49m[32;49m
0x7fa6de0485f8    48b80400000000000000    mov rax, 0x4                                           [39;49m
[34;49m ..                     : tx1 0 ! ! 8 2 / [39;49m[33;40m2[39;49m[34;49m / 3 & 4 | 1 + + ;  .. [39;49m[32;49m
0x7fa6de048602    48b90200000000000000    mov rcx, 0x2                                           [39;49m
[34;49m ..                   : tx1 0 ! ! 8 2 / 2 [39;49m[33;40m/[39;49m[34;49m 3 & 4 | 1 + + ;  .. [39;49m[32;49m
0x7fa6de04860c    48ba0000000000000000    mov rdx, 0x0                                           [39;49m[32;49m
0x7fa6de048616    48f7f9                  idiv rcx                                               [39;49m
[34;49m ..                 : tx1 0 ! ! 8 2 / 2 / [39;49m[33;40m3[39;49m[34;49m & 4 | 1 + + ;  .. [39;49m[32;49m
0x7fa6de048619    48b90300000000000000    mov rcx, 0x3                                           [39;49m
[34;49m ..               : tx1 0 ! ! 8 2 / 2 / 3 [39;49m[33;40m&[39;49m[34;49m 4 | 1 + + ;  .. [39;49m[32;49m
0x7fa6de048623    4823c1                  and rax, rcx                                           [39;49m
[34;49m ..             : tx1 0 ! ! 8 2 / 2 / 3 & [39;49m[33;40m4[39;49m[34;49m | 1 + + ;  .. [39;49m[32;49m
0x7fa6de048626    48b90400000000000000    mov rcx, 0x4                                           [39;49m
[34;49m ..           : tx1 0 ! ! 8 2 / 2 / 3 & 4 [39;49m[33;40m|[39;49m[34;49m 1 + + ;  .. [39;49m[32;49m
0x7fa6de048630    480bc1                  or rax, rcx                                            [39;49m
[34;49m ..         : tx1 0 ! ! 8 2 / 2 / 3 & 4 | [39;49m[33;40m1[39;49m[34;49m + + ;  .. [39;49m[32;49m
0x7fa6de048633    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m ..       : tx1 0 ! ! 8 2 / 2 / 3 & 4 | 1 [39;49m[33;40m+[39;49m[34;49m + ;  .. [39;49m[32;49m
0x7fa6de04863d    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de048640    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de048643    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de048646    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..     : tx1 0 ! ! 8 2 / 2 / 3 & 4 | 1 + [39;49m[33;40m+[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fa6de04864a    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de04864d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de048651    498906                  mov [r14], rax                                         [39;49m
[34;49m ..   : tx1 0 ! ! 8 2 / 2 / 3 & 4 | 1 + + [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de048654    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tx1' :: codeSize = 163
Word : 0x00007fa6dd58c418 :: Compiled at : 0x00007fa6de0485b1
 =============================
::> 'wdiss' was called at namespaces/test/dev0.cft 26.17 <::

 =============================
C_Syntax.[34;49mfactoriali[39;49m <:> cfrTil compiled word, prefix
SourceCode for C_Syntax.[34;49mfactoriali[39;49m :> 
[34;49mint factoriali ( REG n | REG res ) { res = 1; while ( n >= 2 ) { res = res * n-- ; } return res; } [39;49m
Source code file location of [34;49mfactoriali[39;49m : "namespaces/test/dev0.cft" : 34.34 :: we are now at : namespaces/test/dev0.cft : 51.27
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde048669 -- code size = 36 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfactoriali[39;49m : definition = 0x00007fa6de048669 : disassembly at namespaces/test/dev0.cft : 51.27 :
[34;49m ..                                   int [39;49m[33;40mfactoriali[39;49m[34;49m ( REG n | REG res ) { res = 1; while ( n >= 2 ) { res = res * n-- ;  } return re .. [39;49m[32;49m
0x7fa6de048669    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m .. actoriali ( REG n | REG res ) { res = [39;49m[33;40m1[39;49m[34;49m; while ( n >= 2 ) { res = res * n-- ;  } return res; } [39;49m[32;49m
0x7fa6de04866c    48be0100000000000000    mov rsi, 0x1                                           [39;49m
[34;49m .. EG n | REG res ) { res = 1; while ( n [39;49m[33;40m>=[39;49m[34;49m 2 ) { res = res * n-- ;  } return res; } [39;49m[32;49m
0x7fa6de048676    4883ff02                cmp rdi, 0x2                                           [39;49m[32;49m
0x7fa6de04867a    0f8c09000000            jl 0x7fa6de048689          	< C_Syntax.[34;49mfactoriali[39;49m+32 >[39;49m
[34;49m .. res = 1; while ( n >= 2 ) { res = res [39;49m[33;40m*[39;49m[34;49m n-- ;  } return res; } [39;49m[32;49m
0x7fa6de048680    480faff7                imul rsi, rdi                                          [39;49m
[34;49m ..  = 1; while ( n >= 2 ) { res = res * n[39;49m[33;40m--[39;49m[34;49m ;  } return res; } [39;49m[32;49m
0x7fa6de048684    48ffcf                  dec rdi                                                [39;49m
[34;49m .. while ( n >= 2 ) { res = res * n-- ;  [39;49m[33;40m}[39;49m[34;49m return res; } [39;49m[32;49m
0x7fa6de048687    ebed                    jmp 0x7fa6de048676         	< C_Syntax.[34;49mfactoriali[39;49m+13 >[39;49m
[34;49m ..  >= 2 ) { res = res * n-- ;  } return [39;49m[33;40mres[39;49m[34;49m; } [39;49m[32;49m
0x7fa6de048689    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fa6de04868c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factoriali' :: codeSize = 35
Word : 0x00007fa6dd58d9f8 :: Compiled at : 0x00007fa6de048669
 =============================
::> 'wdiss' was called at namespaces/test/dev0.cft 51.27 <::
 5040
 =============================
C.[34;49mfactorial[39;49m <:> cfrTil compiled word
SourceCode for C.[34;49mfactorial[39;49m :> 
[34;49m: factorial ( REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ; [39;49m
Source code file location of [34;49mfactorial[39;49m : "namespaces/test/bigNum.cft" : 12.101 :: we are now at : namespaces/test/dev0.cft : 62.28
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde03cb27 -- code size = 36 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mfactorial[39;49m : definition = 0x00007fa6de03cb27 : disassembly at namespaces/test/dev0.cft : 62.28 :
[34;49m ..                           : factorial [39;49m[33;40m([39;49m[34;49m REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fa6de03cb27    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m ..   : factorial ( REG n | REG rec ) rec [39;49m[33;40m1[39;49m[34;49m = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fa6de03cb2a    48be0100000000000000    mov rsi, 0x1                                           [39;49m
[34;49m .. l ( REG n | REG rec ) rec 1 = { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { rec @ n @ * rec store n -- } while return rec ; [39;49m[32;49m
0x7fa6de03cb34    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fa6de03cb38    0f8e09000000            jle 0x7fa6de03cb47         	< C.[34;49mfactorial[39;49m+32 >[39;49m
[34;49m .. rec ) rec 1 = { n @ 1 > } { rec @ n @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while return rec ; [39;49m[32;49m
0x7fa6de03cb3e    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. { n @ 1 > } { rec @ n @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while return rec ; [39;49m[32;49m
0x7fa6de03cb42    48ffcf                  dec rdi                                                [39;49m
[34;49m ..  @ 1 > } { rec @ n @ * rec store n -- [39;49m[33;40m}[39;49m[34;49m while return rec ; [39;49m[32;49m
0x7fa6de03cb45    ebed                    jmp 0x7fa6de03cb34         	< C.[34;49mfactorial[39;49m+13 >[39;49m
[34;49m .. @ * rec store n -- } while return rec [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de03cb47    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fa6de03cb4a    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factorial' :: codeSize = 35
Word : 0x00007fa6ddded708 :: Compiled at : 0x00007fa6de03cb27
 =============================
::> 'wdiss' was called at namespaces/test/dev0.cft 62.28 <::
 5040
 =============================
C.[34;49mfac[39;49m <:> cfrTil compiled word
SourceCode for C.[34;49mfac[39;49m :> 
[34;49m: fac ( n | rec -- TOS ) rec 1 = { n @ 1 > } { n @ rec @ * rec store n -- } while rec @ ; [39;49m
Source code file location of [34;49mfac[39;49m : "namespaces/test/dev0.cft" : 65.26 :: we are now at : namespaces/test/dev0.cft : 70.17
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde0486cd -- code size = 87 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mfac[39;49m : definition = 0x00007fa6de0486cd : disassembly at namespaces/test/dev0.cft : 70.17 :
[34;49m ..                                     : [39;49m[33;40mfac[39;49m[34;49m ( n | rec -- TOS )  rec 1 =  { n @ 1 > } { n @ rec @ * rec store n -- } while  rec @  ; .. [39;49m[32;49m
0x7fa6de0486cd    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de0486d1    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de0486d5    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..             : fac ( n | rec -- TOS )  [39;49m[33;40mrec[39;49m[34;49m 1 =  { n @ 1 > } { n @ rec @ * rec store n -- } while  rec @  ;  .. [39;49m[32;49m
0x7fa6de0486dc    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..         : fac ( n | rec -- TOS )  rec [39;49m[33;40m1[39;49m[34;49m =  { n @ 1 > } { n @ rec @ * rec store n -- } while  rec @  ;  .. [39;49m[32;49m
0x7fa6de0486e0    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m ..       : fac ( n | rec -- TOS )  rec 1 [39;49m[33;40m=[39;49m[34;49m  { n @ 1 > } { n @ rec @ * rec store n -- } while  rec @  ;  .. [39;49m[32;49m
0x7fa6de0486ea    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  : fac ( n | rec -- TOS )  rec 1 =  { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ rec @ * rec store n -- } while  rec @  ;  .. [39;49m[32;49m
0x7fa6de0486ed    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  ( n | rec -- TOS )  rec 1 =  { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ rec @ * rec store n -- } while  rec @  ; [39;49m[32;49m
0x7fa6de0486f1    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fa6de0486f5    0f8e19000000            jle 0x7fa6de048714         	< C.[34;49mfac[39;49m+71 >[39;49m
[34;49m ..  rec -- TOS )  rec 1 =  { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ rec @ * rec store n -- } while  rec @  ; [39;49m[32;49m
0x7fa6de0486fb    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  -- TOS )  rec 1 =  { n @ 1 > } { n @ [39;49m[33;40mrec[39;49m[34;49m @ * rec store n -- } while  rec @  ; [39;49m[32;49m
0x7fa6de0486ff    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. S )  rec 1 =  { n @ 1 > } { n @ rec @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while  rec @  ; [39;49m[32;49m
0x7fa6de048703    480fafc1                imul rax, rcx                                          [39;49m
[34;49m .. )  rec 1 =  { n @ 1 > } { n @ rec @ * [39;49m[33;40mrec[39;49m[34;49m store n -- } while  rec @  ; [39;49m[32;49m
0x7fa6de048707    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m .. ec 1 =  { n @ 1 > } { n @ rec @ * rec [39;49m[33;40mstore[39;49m[34;49m n -- } while  rec @  ; [39;49m[32;49m
0x7fa6de04870b    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. { n @ 1 > } { n @ rec @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while  rec @  ; [39;49m[32;49m
0x7fa6de04870e    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  @ 1 > } { n @ rec @ * rec store n -- [39;49m[33;40m}[39;49m[34;49m while  rec @  ; [39;49m[32;49m
0x7fa6de048712    ebd9                    jmp 0x7fa6de0486ed         	< C.[34;49mfac[39;49m+32 >[39;49m
[34;49m .. { n @ rec @ * rec store n -- } while  [39;49m[33;40mrec[39;49m[34;49m @  ; [39;49m[32;49m
0x7fa6de048714    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ec @ * rec store n -- } while  rec @  [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de048718    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04871c    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de048720    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de048723    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac' :: codeSize = 86
Word : 0x00007fa6dd594368 :: Compiled at : 0x00007fa6de0486cd
 =============================
::> 'wdiss' was called at namespaces/test/dev0.cft 70.17 <::
 5040
 =============================
C.[34;49mfactorial[39;49m <:> cfrTil compiled word
SourceCode for C.[34;49mfactorial[39;49m :> 
[34;49m: factorial ( REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ; [39;49m
Source code file location of [34;49mfactorial[39;49m : "namespaces/test/dev0.cft" : 73.101 :: we are now at : namespaces/test/dev0.cft : 74.22
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde048738 -- code size = 36 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mfactorial[39;49m : definition = 0x00007fa6de048738 : disassembly at namespaces/test/dev0.cft : 74.22 :
[34;49m ..                           : factorial [39;49m[33;40m([39;49m[34;49m REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fa6de048738    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m ..   : factorial ( REG n | REG rec ) rec [39;49m[33;40m1[39;49m[34;49m = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fa6de04873b    48be0100000000000000    mov rsi, 0x1                                           [39;49m
[34;49m .. l ( REG n | REG rec ) rec 1 = { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { rec @ n @ * rec store n -- } while return rec ; [39;49m[32;49m
0x7fa6de048745    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fa6de048749    0f8e09000000            jle 0x7fa6de048758         	< C.[34;49mfactorial[39;49m+32 >[39;49m
[34;49m .. rec ) rec 1 = { n @ 1 > } { rec @ n @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while return rec ; [39;49m[32;49m
0x7fa6de04874f    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. { n @ 1 > } { rec @ n @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while return rec ; [39;49m[32;49m
0x7fa6de048753    48ffcf                  dec rdi                                                [39;49m
[34;49m ..  @ 1 > } { rec @ n @ * rec store n -- [39;49m[33;40m}[39;49m[34;49m while return rec ; [39;49m[32;49m
0x7fa6de048756    ebed                    jmp 0x7fa6de048745         	< C.[34;49mfactorial[39;49m+13 >[39;49m
[34;49m .. @ * rec store n -- } while return rec [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de048758    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fa6de04875b    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factorial' :: codeSize = 35
Word : 0x00007fa6dd5973c0 :: Compiled at : 0x00007fa6de048738
 =============================
::> 'wdiss' was called at namespaces/test/dev0.cft 74.22 <::
 5040 factorial  : ok


 namespaces/test/dev0.cft 76.12[34;49m 
starting Lisp
 stack is ...[39;49m
DataStack at : [34;49mnamespaces/test/dev0.cft : 76.52[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fa6ddf73220, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	
[39;49m g23
[39;49m 7
[39;49m 7
[39;49m q1x0
[39;49m 7
[39;49m h01
[39;49m 7
[39;49m 7
[39;49m average

 =============================
LispDefines.[34;49maverage[39;49m <:> variable
SourceCode for LispDefines.[34;49maverage[39;49m :> 
[34;49m(define average (/\ ( n0 n1 )(/ ( + n0 n1 ) 2 )))[39;49m
Source code file location of [34;49maverage[39;49m : "namespaces/test/dev0.cft" : 89.49 :: we are now at : namespaces/test/dev0.cft : 90.24
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xde048761 -- code size = 75 bytes
 -----------------------------
Word :: LispDefines.[34;49maverage[39;49m : definition = 0x00007fa6de048761 : disassembly at namespaces/test/dev0.cft : 90.24 :
[34;49m ..                               (define [39;49m[33;40maverage[39;49m[34;49m (/\ ( n0 n1 )(/ ( + n0 n1 ) 2 ))) .. [39;49m[32;49m
0x7fa6de048761    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de048765    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de048769    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..   (define average (/\ ( n0 n1 )(/ ( + [39;49m[33;40mn0[39;49m[34;49m n1 ) 2 ))) .. [39;49m[32;49m
0x7fa6de048770    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m   (define average (/\ ( n0 n1 )(/ ( + n0 [39;49m[33;40mn1[39;49m[34;49m ) 2 ))) .. [39;49m[32;49m
0x7fa6de048774    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..     (define average (/\ ( n0 n1 )(/ ( [39;49m[33;40m+[39;49m[34;49m n0 n1 ) 2 ))) .. [39;49m[32;49m
0x7fa6de048778    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. e average (/\ ( n0 n1 )(/ ( + n0 n1 ) [39;49m[33;40m2[39;49m[34;49m )))[39;49m[32;49m
0x7fa6de04877b    48b90200000000000000    mov rcx, 0x2                                           [39;49m
[34;49m ..         (define average (/\ ( n0 n1 )([39;49m[33;40m/[39;49m[34;49m ( + n0 n1 ) 2 ))) .. [39;49m[32;49m
0x7fa6de048785    48ba0000000000000000    mov rdx, 0x0                                           [39;49m[32;49m
0x7fa6de04878f    48f7f9                  idiv rcx                                               [39;49m[32;49m
0x7fa6de048792    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de048796    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de048799    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04879c    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0487a0    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de0487a4    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de0487a8    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de0487ab    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'average' :: codeSize = 74
Word : 0x00007fa6dd6c9aa8 :: Compiled at : 0x00007fa6de048761
 =============================
::> 'wdiss' was called at namespaces/test/dev0.cft 90.24 <::
[39;49m 77
  : should show 77[39;49m 7
[39;49m fib

 =============================
LispDefines.[34;49mfib[39;49m <:> variable
SourceCode for LispDefines.[34;49mfib[39;49m :> 
[34;49m(define fib (lambda (n) ( ifElse (< n 2) n (+ (fib (- n 1)) (fib (- n 2))))))[39;49m
Source code file location of [34;49mfib[39;49m : "namespaces/test/dev0.cft" : 94.77 :: we are now at : namespaces/test/dev0.cft : 95.20
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xde0487b1 -- code size = 139 bytes
 -----------------------------
Word :: LispDefines.[34;49mfib[39;49m : definition = 0x00007fa6de0487b1 : disassembly at namespaces/test/dev0.cft : 95.20 :
[34;49m ..                               (define [39;49m[33;40mfib[39;49m[34;49m (lambda (n) ( ifElse (< n 2) n (+ (fib (- n 1)) (fib (- n 2)))))) .. [39;49m[32;49m
0x7fa6de0487b1    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de0487b5    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de0487b9    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..   (define fib (lambda (n) ( ifElse (< [39;49m[33;40mn[39;49m[34;49m 2) n (+ (fib (- n 1)) (fib (- n 2)))))) .. [39;49m[32;49m
0x7fa6de0487c0    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..     (define fib (lambda (n) ( ifElse ([39;49m[33;40m<[39;49m[34;49m n 2) n (+ (fib (- n 1)) (fib (- n 2)))))) .. [39;49m[32;49m
0x7fa6de0487c4    4883f802                cmp rax, 0x2                                           [39;49m[32;49m
0x7fa6de0487c8    0f8d10000000            jge 0x7fa6de0487de         	< LispDefines.[34;49mfib[39;49m+45 >[39;49m
[34;49m (define fib (lambda (n) ( ifElse (< n 2) [39;49m[33;40mn[39;49m[34;49m (+ (fib (- n 1)) (fib (- n 2)))))) .. [39;49m[32;49m
0x7fa6de0487ce    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0487d2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0487d6    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de0487d9    e94f000000              jmp 0x7fa6de04882d         	< LispDefines.[34;49mfib[39;49m+124 >[39;49m
[34;49m .. bda (n) ( ifElse (< n 2) n (+ (fib (- [39;49m[33;40mn[39;49m[34;49m 1)) (fib (- n 2))))))[39;49m[32;49m
0x7fa6de0487de    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. a (n) ( ifElse (< n 2) n (+ (fib (- n [39;49m[33;40m1[39;49m[34;49m)) (fib (- n 2))))))[39;49m[32;49m
0x7fa6de0487e2    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. Else (< n 2) n (+ (fib (- n 1)) (fib ([39;49m[33;40m-[39;49m[34;49m n 2))))))[39;49m[32;49m
0x7fa6de0487ec    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fa6de0487ef    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0487f3    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                               (define [39;49m[33;40mfib[39;49m[34;49m (lambda (n) ( ifElse (< n 2) n (+ (fib (- n 1)) (fib (- n 2)))))) .. [39;49m[32;49m
0x7fa6de0487f6    e8b6ffffff              call 0x7fa6de0487b1        	< LispDefines.[34;49mfib[39;49m : 0x00007fa6de0487b1 >[39;49m
[34;49m .. se (< n 2) n (+ (fib (- n 1)) (fib (- [39;49m[33;40mn[39;49m[34;49m 2))))))[39;49m[32;49m
0x7fa6de0487fb    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  (< n 2) n (+ (fib (- n 1)) (fib (- n [39;49m[33;40m2[39;49m[34;49m))))))[39;49m[32;49m
0x7fa6de0487ff    48b90200000000000000    mov rcx, 0x2                                           [39;49m
[34;49m .. Else (< n 2) n (+ (fib (- n 1)) (fib ([39;49m[33;40m-[39;49m[34;49m n 2))))))[39;49m[32;49m
0x7fa6de048809    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fa6de04880c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de048810    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                               (define [39;49m[33;40mfib[39;49m[34;49m (lambda (n) ( ifElse (< n 2) n (+ (fib (- n 1)) (fib (- n 2)))))) .. [39;49m[32;49m
0x7fa6de048813    e899ffffff              call 0x7fa6de0487b1        	< LispDefines.[34;49mfib[39;49m : 0x00007fa6de0487b1 >[39;49m[32;49m
0x7fa6de048818    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04881b    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04881f    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. e fib (lambda (n) ( ifElse (< n 2) n ([39;49m[33;40m+[39;49m[34;49m (fib (- n 1)) (fib (- n 2))))))[39;49m[32;49m
0x7fa6de048823    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de048826    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04882a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04882d    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de048830    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de048834    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de048838    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04883b    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fib' :: codeSize = 138
Word : 0x00007fa6dd50f7e8 :: Compiled at : 0x00007fa6de0487b1
 =============================
::> 'wdiss' was called at namespaces/test/dev0.cft 95.20 <::
[39;49m 6765
[39;49m fib2
[39;49m 6765
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m g
[39;49m h
[39;49m g1
[39;49m g2
[39;49m 7
[39;49m 7
[39;49m j
[39;49m h
[39;49m k

[39;49m 77
[39;49m 777
[39;49m 77
[39;49m 77
[39;49m 777
[34;49m 
before fib[39;49m 6765
typeChecking is on, optimize is on, inlining is on, infixMode is off, 
prefixMode is off, c_syntax is off, postfixMode is on
Debug is off. Verbosity = 1. Console = 0, NumberBase = 10.
DebugSourceCode on : BigNum off : Lisp on
interpreting : at namespaces/test/dev0.cft : 129.6[39;49m fibbc

 =============================
LispDefines.[34;49mfibbc[39;49m <:> variable
SourceCode for LispDefines.[34;49mfibbc[39;49m :> 
[34;49m(define fibbc (lambda ( n ) (ifElse (< n 2) n (+ (fibbc (- n 1)) (fibbc (- n 2))))))[39;49m
Source code file location of [34;49mfibbc[39;49m : "namespaces/test/dev0.cft" : 130.84 :: we are now at : namespaces/test/dev0.cft : 131.22
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xde048a0d -- code size = 139 bytes
 -----------------------------
Word :: LispDefines.[34;49mfibbc[39;49m : definition = 0x00007fa6de048a0d : disassembly at namespaces/test/dev0.cft : 131.22 :
[34;49m ..                               (define [39;49m[33;40mfibbc[39;49m[34;49m (lambda ( n ) (ifElse (< n 2) n (+ (fibbc (- n 1)) (fibbc (- n 2)))))) .. [39;49m[32;49m
0x7fa6de048a0d    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de048a11    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de048a15    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m   (define fibbc (lambda ( n ) (ifElse (< [39;49m[33;40mn[39;49m[34;49m 2) n (+ (fibbc (- n 1)) (fibbc (- n 2)))))) .. [39;49m[32;49m
0x7fa6de048a1c    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  (define fibbc (lambda ( n ) (ifElse ([39;49m[33;40m<[39;49m[34;49m n 2) n (+ (fibbc (- n 1)) (fibbc (- n 2)))))) .. [39;49m[32;49m
0x7fa6de048a20    4883f802                cmp rax, 0x2                                           [39;49m[32;49m
0x7fa6de048a24    0f8d10000000            jge 0x7fa6de048a3a         	< LispDefines.[34;49mfibbc[39;49m+45 >[39;49m
[34;49m .. e fibbc (lambda ( n ) (ifElse (< n 2) [39;49m[33;40mn[39;49m[34;49m (+ (fibbc (- n 1)) (fibbc (- n 2))))))[39;49m[32;49m
0x7fa6de048a2a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de048a2e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de048a32    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de048a35    e94f000000              jmp 0x7fa6de048a89         	< LispDefines.[34;49mfibbc[39;49m+124 >[39;49m
[34;49m ..  ( n ) (ifElse (< n 2) n (+ (fibbc (- [39;49m[33;40mn[39;49m[34;49m 1)) (fibbc (- n 2))))))[39;49m[32;49m
0x7fa6de048a3a    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  n ) (ifElse (< n 2) n (+ (fibbc (- n [39;49m[33;40m1[39;49m[34;49m)) (fibbc (- n 2))))))[39;49m[32;49m
0x7fa6de048a3e    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m ..  (< n 2) n (+ (fibbc (- n 1)) (fibbc ([39;49m[33;40m-[39;49m[34;49m n 2))))))[39;49m[32;49m
0x7fa6de048a48    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fa6de048a4b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de048a4f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                               (define [39;49m[33;40mfibbc[39;49m[34;49m (lambda ( n ) (ifElse (< n 2) n (+ (fibbc (- n 1)) (fibbc (- n 2)))))) .. [39;49m[32;49m
0x7fa6de048a52    e8b6ffffff              call 0x7fa6de048a0d        	< LispDefines.[34;49mfibbc[39;49m : 0x00007fa6de048a0d >[39;49m
[34;49m .. < n 2) n (+ (fibbc (- n 1)) (fibbc (- [39;49m[33;40mn[39;49m[34;49m 2))))))[39;49m[32;49m
0x7fa6de048a57    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. n 2) n (+ (fibbc (- n 1)) (fibbc (- n [39;49m[33;40m2[39;49m[34;49m))))))[39;49m[32;49m
0x7fa6de048a5b    48b90200000000000000    mov rcx, 0x2                                           [39;49m
[34;49m ..  (< n 2) n (+ (fibbc (- n 1)) (fibbc ([39;49m[33;40m-[39;49m[34;49m n 2))))))[39;49m[32;49m
0x7fa6de048a65    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fa6de048a68    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de048a6c    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                               (define [39;49m[33;40mfibbc[39;49m[34;49m (lambda ( n ) (ifElse (< n 2) n (+ (fibbc (- n 1)) (fibbc (- n 2)))))) .. [39;49m[32;49m
0x7fa6de048a6f    e899ffffff              call 0x7fa6de048a0d        	< LispDefines.[34;49mfibbc[39;49m : 0x00007fa6de048a0d >[39;49m[32;49m
0x7fa6de048a74    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de048a77    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de048a7b    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. ibbc (lambda ( n ) (ifElse (< n 2) n ([39;49m[33;40m+[39;49m[34;49m (fibbc (- n 1)) (fibbc (- n 2))))))[39;49m[32;49m
0x7fa6de048a7f    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de048a82    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de048a86    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de048a89    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de048a8c    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de048a90    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de048a94    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de048a97    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fibbc' :: codeSize = 138
Word : 0x00007fa6dd4b2f08 :: Compiled at : 0x00007fa6de048a0d
 =============================
::> 'wdiss' was called at namespaces/test/dev0.cft 131.22 <::
[39;49m 6765
[39;49m fibcc

 =============================
LispDefines.[34;49mfibcc[39;49m <:> variable
SourceCode for LispDefines.[34;49mfibcc[39;49m :> 
[34;49m(define fibcc (lambda ( n ) (ifElse (< n 2) n (+ (fibcc (- n 1)) (fibcc (- n 2))))))[39;49m
Source code file location of [34;49mfibcc[39;49m : "namespaces/test/dev0.cft" : 134.84 :: we are now at : namespaces/test/dev0.cft : 135.22
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xde048a9d -- code size = 139 bytes
 -----------------------------
Word :: LispDefines.[34;49mfibcc[39;49m : definition = 0x00007fa6de048a9d : disassembly at namespaces/test/dev0.cft : 135.22 :
[34;49m ..                               (define [39;49m[33;40mfibcc[39;49m[34;49m (lambda ( n ) (ifElse (< n 2) n (+ (fibcc (- n 1)) (fibcc (- n 2)))))) .. [39;49m[32;49m
0x7fa6de048a9d    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de048aa1    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de048aa5    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m   (define fibcc (lambda ( n ) (ifElse (< [39;49m[33;40mn[39;49m[34;49m 2) n (+ (fibcc (- n 1)) (fibcc (- n 2)))))) .. [39;49m[32;49m
0x7fa6de048aac    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  (define fibcc (lambda ( n ) (ifElse ([39;49m[33;40m<[39;49m[34;49m n 2) n (+ (fibcc (- n 1)) (fibcc (- n 2)))))) .. [39;49m[32;49m
0x7fa6de048ab0    4883f802                cmp rax, 0x2                                           [39;49m[32;49m
0x7fa6de048ab4    0f8d10000000            jge 0x7fa6de048aca         	< LispDefines.[34;49mfibcc[39;49m+45 >[39;49m
[34;49m .. e fibcc (lambda ( n ) (ifElse (< n 2) [39;49m[33;40mn[39;49m[34;49m (+ (fibcc (- n 1)) (fibcc (- n 2))))))[39;49m[32;49m
0x7fa6de048aba    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de048abe    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de048ac2    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de048ac5    e94f000000              jmp 0x7fa6de048b19         	< LispDefines.[34;49mfibcc[39;49m+124 >[39;49m
[34;49m ..  ( n ) (ifElse (< n 2) n (+ (fibcc (- [39;49m[33;40mn[39;49m[34;49m 1)) (fibcc (- n 2))))))[39;49m[32;49m
0x7fa6de048aca    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  n ) (ifElse (< n 2) n (+ (fibcc (- n [39;49m[33;40m1[39;49m[34;49m)) (fibcc (- n 2))))))[39;49m[32;49m
0x7fa6de048ace    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m ..  (< n 2) n (+ (fibcc (- n 1)) (fibcc ([39;49m[33;40m-[39;49m[34;49m n 2))))))[39;49m[32;49m
0x7fa6de048ad8    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fa6de048adb    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de048adf    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                               (define [39;49m[33;40mfibcc[39;49m[34;49m (lambda ( n ) (ifElse (< n 2) n (+ (fibcc (- n 1)) (fibcc (- n 2)))))) .. [39;49m[32;49m
0x7fa6de048ae2    e8b6ffffff              call 0x7fa6de048a9d        	< LispDefines.[34;49mfibcc[39;49m : 0x00007fa6de048a9d >[39;49m
[34;49m .. < n 2) n (+ (fibcc (- n 1)) (fibcc (- [39;49m[33;40mn[39;49m[34;49m 2))))))[39;49m[32;49m
0x7fa6de048ae7    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. n 2) n (+ (fibcc (- n 1)) (fibcc (- n [39;49m[33;40m2[39;49m[34;49m))))))[39;49m[32;49m
0x7fa6de048aeb    48b90200000000000000    mov rcx, 0x2                                           [39;49m
[34;49m ..  (< n 2) n (+ (fibcc (- n 1)) (fibcc ([39;49m[33;40m-[39;49m[34;49m n 2))))))[39;49m[32;49m
0x7fa6de048af5    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fa6de048af8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de048afc    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                               (define [39;49m[33;40mfibcc[39;49m[34;49m (lambda ( n ) (ifElse (< n 2) n (+ (fibcc (- n 1)) (fibcc (- n 2)))))) .. [39;49m[32;49m
0x7fa6de048aff    e899ffffff              call 0x7fa6de048a9d        	< LispDefines.[34;49mfibcc[39;49m : 0x00007fa6de048a9d >[39;49m[32;49m
0x7fa6de048b04    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de048b07    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de048b0b    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. ibcc (lambda ( n ) (ifElse (< n 2) n ([39;49m[33;40m+[39;49m[34;49m (fibcc (- n 1)) (fibcc (- n 2))))))[39;49m[32;49m
0x7fa6de048b0f    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de048b12    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de048b16    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de048b19    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de048b1c    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de048b20    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de048b24    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de048b27    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fibcc' :: codeSize = 138
Word : 0x00007fa6dd4b8f48 :: Compiled at : 0x00007fa6de048a9d
 =============================
::> 'wdiss' was called at namespaces/test/dev0.cft 135.22 <::
[39;49m 6765
[34;49m 
after fib[39;49m

 =============================
C.[34;49m_fib2[39;49m <:> cfrTil compiled word
SourceCode for C.[34;49m_fib2[39;49m :> 
[34;49m: _fib2 dup 2 < ? : dup -- _fib2 swap 2 - _fib2 + ; [39;49m
Source code file location of [34;49m_fib2[39;49m : "namespaces/test/dev0.cft" : 142.52 :: we are now at : namespaces/test/dev0.cft : 143.19
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde048b3c -- code size = 157 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49m_fib2[39;49m : definition = 0x00007fa6de048b3c : disassembly at namespaces/test/dev0.cft : 143.19 :
[34;49m ..                               : _fib2 [39;49m[33;40mdup[39;49m[34;49m 2 < ? : dup -- _fib2 swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fa6de048b3c    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de048b3f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de048b43    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                           : _fib2 dup [39;49m[33;40m2[39;49m[34;49m < ? : dup -- _fib2 swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fa6de048b46    48b80200000000000000    mov rax, 0x2                                           [39;49m[32;49m
0x7fa6de048b50    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de048b53    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de048b56    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..                         : _fib2 dup 2 [39;49m[33;40m<[39;49m[34;49m ? : dup -- _fib2 swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fa6de048b5a    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fa6de048b5d    0f9cc0                  setl al                                                [39;49m[32;49m
0x7fa6de048b60    480fb6c0                movzx rax, al                                          [39;49m[32;49m
0x7fa6de048b64    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de048b67    0f8405000000            jz 0x7fa6de048b72          	< C.[34;49m_fib2[39;49m+54 >[39;49m[32;49m
0x7fa6de048b6d    e966000000              jmp 0x7fa6de048bd8         	< C.[34;49m_fib2[39;49m+156 >[39;49m
[34;49m ..                   : _fib2 dup 2 < ? : [39;49m[33;40mdup[39;49m[34;49m -- _fib2 swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fa6de048b72    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de048b75    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de048b79    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de048b7c    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de048b7f    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..               : _fib2 dup 2 < ? : dup [39;49m[33;40m--[39;49m[34;49m _fib2 swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fa6de048b83    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fa6de048b86    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de048b8a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..            : _fib2 dup 2 < ? : dup -- [39;49m[33;40m_fib2[39;49m[34;49m swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fa6de048b8d    e8aaffffff              call 0x7fa6de048b3c        	< C.[34;49m_fib2[39;49m : 0x00007fa6de048b3c >[39;49m
[34;49m ..      : _fib2 dup 2 < ? : dup -- _fib2 [39;49m[33;40mswap[39;49m[34;49m 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fa6de048b92    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de048b95    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de048b99    49894ef8                mov [r14-0x8], rcx                                     [39;49m[32;49m
0x7fa6de048b9d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : _fib2 dup 2 < ? : dup -- _fib2 swap [39;49m[33;40m2[39;49m[34;49m - _fib2 + ;  .. [39;49m[32;49m
0x7fa6de048ba0    48b80200000000000000    mov rax, 0x2                                           [39;49m[32;49m
0x7fa6de048baa    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de048bad    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de048bb0    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m  : _fib2 dup 2 < ? : dup -- _fib2 swap 2 [39;49m[33;40m-[39;49m[34;49m _fib2 + ;  .. [39;49m[32;49m
0x7fa6de048bb4    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fa6de048bb7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de048bbb    498906                  mov [r14], rax                                         [39;49m
[34;49m: _fib2 dup 2 < ? : dup -- _fib2 swap 2 - [39;49m[33;40m_fib2[39;49m[34;49m + ;  .. [39;49m[32;49m
0x7fa6de048bbe    e879ffffff              call 0x7fa6de048b3c        	< C.[34;49m_fib2[39;49m : 0x00007fa6de048b3c >[39;49m[32;49m
0x7fa6de048bc3    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de048bc6    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de048bca    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. p 2 < ? : dup -- _fib2 swap 2 - _fib2 [39;49m[33;40m+[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de048bce    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de048bd1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de048bd5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 2 < ? : dup -- _fib2 swap 2 - _fib2 + [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de048bd8    c3                      ret                                                    [39;49m
Word_Disassemble : word - '_fib2' :: codeSize = 156
Word : 0x00007fa6dd532170 :: Compiled at : 0x00007fa6de048b3c
 =============================
::> 'wdiss' was called at namespaces/test/dev0.cft 143.19 <::

 6765 6765 6765
 =============================
C.[34;49mfibPTC?[39;49m <:> cfrTil compiled word
SourceCode for C.[34;49mfibPTC?[39;49m :> 
[34;49m: fibPTC? ( n | fn fn1 fn2 -- TOS ) { fn 0 = fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = } { fn1 fn2 @ = fn2 fn @ = fn fn1 @ fn2 @ + = } for fn @ ; [39;49m
Source code file location of [34;49mfibPTC?[39;49m : "namespaces/test/dev0.cft" : 154.36 :: we are now at : namespaces/test/dev0.cft : 164.21
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde048cf1 -- code size = 195 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mfibPTC?[39;49m : definition = 0x00007fa6de048cf1 : disassembly at namespaces/test/dev0.cft : 164.21 :
[34;49m ..                                     : [39;49m[33;40mfibPTC?[39;49m[34;49m ( n | fn fn1 fn2 -- TOS )  { fn 0 = fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  f .. [39;49m[32;49m
0x7fa6de048cf1    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de048cf5    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de048cf9    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m   : fibPTC? ( n | fn fn1 fn2 -- TOS )  { [39;49m[33;40mfn[39;49m[34;49m 0 = fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2  .. [39;49m[32;49m
0x7fa6de048d00    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m: fibPTC? ( n | fn fn1 fn2 -- TOS )  { fn [39;49m[33;40m0[39;49m[34;49m = fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + .. [39;49m[32;49m
0x7fa6de048d04    48b90000000000000000    mov rcx, 0x0                                           [39;49m
[34;49m .. TC? ( n | fn fn1 fn2 -- TOS )  { fn 0 [39;49m[33;40m=[39;49m[34;49m fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + = .. [39;49m[32;49m
0x7fa6de048d0e    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. ? ( n | fn fn1 fn2 -- TOS )  { fn 0 = [39;49m[33;40mfn1[39;49m[34;49m 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =   .. [39;49m[32;49m
0x7fa6de048d11    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. n | fn fn1 fn2 -- TOS )  { fn 0 = fn1 [39;49m[33;40m0[39;49m[34;49m = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } fo .. [39;49m[32;49m
0x7fa6de048d15    48b90000000000000000    mov rcx, 0x0                                           [39;49m
[34;49m .. | fn fn1 fn2 -- TOS )  { fn 0 = fn1 0 [39;49m[33;40m=[39;49m[34;49m fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for  .. [39;49m[32;49m
0x7fa6de048d1f    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. fn fn1 fn2 -- TOS )  { fn 0 = fn1 0 = [39;49m[33;40mfn2[39;49m[34;49m 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for fn .. [39;49m[32;49m
0x7fa6de048d22    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m .. n1 fn2 -- TOS )  { fn 0 = fn1 0 = fn2 [39;49m[33;40m1[39;49m[34;49m = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for fn @ ; .. [39;49m[32;49m
0x7fa6de048d26    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m ..  fn2 -- TOS )  { fn 0 = fn1 0 = fn2 1 [39;49m[33;40m=[39;49m[34;49m } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de048d30    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. - TOS )  { fn 0 = fn1 0 = fn2 1 = } { [39;49m[33;40mn[39;49m[34;49m @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de048d33    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } [39;49m[33;40mfor[39;49m[34;49m fn @ ;  .. [39;49m[32;49m
0x7fa6de048d37    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de048d3a    0f8464000000            jz 0x7fa6de048da4          	< C.[34;49mfibPTC?[39;49m+179 >[39;49m
[34;49m .. fn2 1 = } { n @ } { n n @ 1 - = }  {  [39;49m[33;40mfn1[39;49m[34;49m fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de048d40    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. 1 = } { n @ } { n n @ 1 - = }  {  fn1 [39;49m[33;40mfn2[39;49m[34;49m @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de048d44    498b4f18                mov rcx, [r15+0x18]                                    [39;49m
[34;49m .. { n @ } { n n @ 1 - = }  {  fn1 fn2 @ [39;49m[33;40m=[39;49m[34;49m  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de048d48    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  @ } { n n @ 1 - = }  {  fn1 fn2 @ =  [39;49m[33;40mfn2[39;49m[34;49m fn @ =  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de048d4b    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m ..  { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 [39;49m[33;40mfn[39;49m[34;49m @ =  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de048d4f    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ [39;49m[33;40m=[39;49m[34;49m  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de048d53    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  [39;49m[33;40mfn[39;49m[34;49m fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de048d56    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de048d5a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de048d5e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn [39;49m[33;40mfn1[39;49m[34;49m @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de048d61    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ [39;49m[33;40mfn2[39;49m[34;49m @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de048d65    498b4f18                mov rcx, [r15+0x18]                                    [39;49m
[34;49m .. 1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ [39;49m[33;40m+[39;49m[34;49m =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de048d69    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de048d6c    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de048d6f    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de048d72    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + [39;49m[33;40m=[39;49m[34;49m  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de048d76    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  { fn 0 = fn1 0 = fn2 1 = } { n @ } { [39;49m[33;40mn[39;49m[34;49m n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de048d79    498d47f8                lea rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de048d7d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de048d81    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  fn 0 = fn1 0 = fn2 1 = } { n @ } { n [39;49m[33;40mn[39;49m[34;49m @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de048d84    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 0 = fn1 0 = fn2 1 = } { n @ } { n n @ [39;49m[33;40m1[39;49m[34;49m - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de048d88    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. = fn1 0 = fn2 1 = } { n @ } { n n @ 1 [39;49m[33;40m-[39;49m[34;49m = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de048d92    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fa6de048d95    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de048d98    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de048d9b    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. fn1 0 = fn2 1 = } { n @ } { n n @ 1 - [39;49m[33;40m=[39;49m[34;49m }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de048d9f    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 1 0 = fn2 1 = } { n @ } { n n @ 1 - = [39;49m[33;40m}[39;49m[34;49m  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de048da2    eb8f                    jmp 0x7fa6de048d33         	< C.[34;49mfibPTC?[39;49m+66 >[39;49m
[34;49m .. fn2 fn @ =  fn fn1 @ fn2 @ + =  } for [39;49m[33;40mfn[39;49m[34;49m @ ;  .. [39;49m[32;49m
0x7fa6de048da4    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. n @ =  fn fn1 @ fn2 @ + =  } for fn @ [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de048da8    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de048dac    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de048db0    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de048db3    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fibPTC?' :: codeSize = 194
Word : 0x00007fa6dd5395d0 :: Compiled at : 0x00007fa6de048cf1
 =============================
::> 'wdiss' was called at namespaces/test/dev0.cft 164.21 <::
 6765
 =============================
C_Syntax.[34;49mfibPTC2?[39;49m <:> cfrTil compiled word
SourceCode for C_Syntax.[34;49mfibPTC2?[39;49m :> 
[34;49mint fibPTC2? ( n ) { int fn, fn1, fn2 ; for ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n -- ) { fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ; } return fn ; } [39;49m
Source code file location of [34;49mfibPTC2?[39;49m : "namespaces/test/dev0.cft" : 183.33 :: we are now at : namespaces/test/dev0.cft : 194.22
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde048ef5 -- code size = 141 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfibPTC2?[39;49m : definition = 0x00007fa6de048ef5 : disassembly at namespaces/test/dev0.cft : 194.22 :
[34;49m ..                                   int [39;49m[33;40mfibPTC2?[39;49m[34;49m ( n ) { int fn, fn1, fn2 ; for ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ;[39;49m[32;49m
0x7fa6de048ef5    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de048ef9    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de048efd    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m .. ( n ) { int fn, fn1, fn2 ; for ( fn = [39;49m[33;40m0[39;49m[34;49m, fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de048f04    48b80000000000000000    mov rax, 0x0                                           [39;49m
[34;49m .. TC2? ( n ) { int fn, fn1, fn2 ; for ( [39;49m[33;40mfn[39;49m[34;49m = 0, fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn [39;49m[32;49m
0x7fa6de048f0e    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m .. ? ( n ) { int fn, fn1, fn2 ; for ( fn [39;49m[33;40m=[39;49m[34;49m 0, fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; }[39;49m[32;49m
0x7fa6de048f12    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. nt fn, fn1, fn2 ; for ( fn = 0, fn1 = [39;49m[33;40m0[39;49m[34;49m, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de048f15    48b80000000000000000    mov rax, 0x0                                           [39;49m
[34;49m ..  ) { int fn, fn1, fn2 ; for ( fn = 0, [39;49m[33;40mfn1[39;49m[34;49m = 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de048f1f    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m ..  int fn, fn1, fn2 ; for ( fn = 0, fn1 [39;49m[33;40m=[39;49m[34;49m 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de048f23    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. 1, fn2 ; for ( fn = 0, fn1 = 0, fn2 = [39;49m[33;40m1[39;49m[34;49m ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de048f26    48b80100000000000000    mov rax, 0x1                                           [39;49m
[34;49m .. fn, fn1, fn2 ; for ( fn = 0, fn1 = 0, [39;49m[33;40mfn2[39;49m[34;49m = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de048f30    498d4f18                lea rcx, [r15+0x18]                                    [39;49m
[34;49m .. fn1, fn2 ; for ( fn = 0, fn1 = 0, fn2 [39;49m[33;40m=[39;49m[34;49m 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de048f34    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  fn2 ; for ( fn = 0, fn1 = 0, fn2 = 1 [39;49m[33;40m;[39;49m[34;49m n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de048f37    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  [39;49m[33;40m}[39;49m[34;49m return fn ; } [39;49m[32;49m
0x7fa6de048f3b    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de048f3e    0f842e000000            jz 0x7fa6de048f72          	< C_Syntax.[34;49mfibPTC2?[39;49m+125 >[39;49m
[34;49m .. 1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 = [39;49m[33;40mfn2[39;49m[34;49m ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de048f44    498b4718                mov rax, [r15+0x18]                                    [39;49m
[34;49m ..  0, fn1 = 0, fn2 = 1 ; n ; n -- )  {  [39;49m[33;40mfn1[39;49m[34;49m = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de048f48    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m .. fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 [39;49m[33;40m=[39;49m[34;49m fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de048f4c    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = [39;49m[33;40mfn[39;49m[34;49m ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de048f4f    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; [39;49m[33;40mfn2[39;49m[34;49m = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de048f53    498d4f18                lea rcx, [r15+0x18]                                    [39;49m
[34;49m ..  = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 [39;49m[33;40m=[39;49m[34;49m fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de048f57    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  -- )  {  fn1 = fn2 ; fn2 = fn ; fn = [39;49m[33;40mfn1[39;49m[34;49m + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de048f5a    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + [39;49m[33;40mfn2[39;49m[34;49m ;  } return fn ; } [39;49m[32;49m
0x7fa6de048f5e    498b4f18                mov rcx, [r15+0x18]                                    [39;49m
[34;49m .. )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 [39;49m[33;40m+[39;49m[34;49m fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de048f62    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; [39;49m[33;40mfn[39;49m[34;49m = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de048f65    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  n -- )  {  fn1 = fn2 ; fn2 = fn ; fn [39;49m[33;40m=[39;49m[34;49m fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de048f69    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. or ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n [39;49m[33;40m--[39;49m[34;49m )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de048f6c    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m .. ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n -- [39;49m[33;40m)[39;49m[34;49m  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de048f70    ebc5                    jmp 0x7fa6de048f37         	< C_Syntax.[34;49mfibPTC2?[39;49m+66 >[39;49m
[34;49m ..  fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } [39;49m[33;40mreturn[39;49m[34;49m fn ; } [39;49m[32;49m
0x7fa6de048f72    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  fn ; fn = fn1 + fn2 ;  } return fn ; [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fa6de048f76    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de048f7a    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. fn2 = fn ; fn = fn1 + fn2 ;  } return [39;49m[33;40mfn[39;49m[34;49m ; } [39;49m[32;49m
0x7fa6de048f7e    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de048f81    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fibPTC2?' :: codeSize = 140
Word : 0x00007fa6dd4fcb98 :: Compiled at : 0x00007fa6de048ef5
 =============================
::> 'wdiss' was called at namespaces/test/dev0.cft 194.22 <::
 6765 9.0000000000000000  : should be 9
 
fib 200.0000000000000000 = 280594712998212601106502055196939618615296.0000000000000000

 locals fibBN :  1.0000000000000000 :  1.0000000000000000, 2.0000000000000000 :  1.0000000000000000, 3.0000000000000000 :  2.0000000000000000, 4.0000000000000000 :  3.0000000000000000, 5.0000000000000000 :  5.0000000000000000, 6.0000000000000000 :  8.0000000000000000, 7.0000000000000000 :  13.0000000000000000, 8.0000000000000000 :  21.0000000000000000, 9.0000000000000000 :  34.0000000000000000, 10.0000000000000000 :  55.0000000000000000, 11.0000000000000000 :  89.0000000000000000, 12.0000000000000000 :  144.0000000000000000, 13.0000000000000000 :  233.0000000000000000, 14.0000000000000000 :  377.0000000000000000, 15.0000000000000000 :  610.0000000000000000, 16.0000000000000000 :  987.0000000000000000, 17.0000000000000000 :  1597.0000000000000000, 18.0000000000000000 :  2584.0000000000000000, 19.0000000000000000 :  4181.0000000000000000, 20.0000000000000000 :  6765.0000000000000000, 21.0000000000000000 :  10946.0000000000000000, 22.0000000000000000 :  17711.0000000000000000, 23.0000000000000000 :  28657.0000000000000000, 24.0000000000000000 :  46368.0000000000000000, 25.0000000000000000 :  75024.0000000000000000, 26.0000000000000000 :  121392.0000000000000000, 27.0000000000000000 :  196416.0000000000000000, 28.0000000000000000 :  317808.0000000000000000, 29.0000000000000000 :  514224.0000000000000000, 30.0000000000000000 :  832032.0000000000000000, 31.0000000000000000 :  1346240.0000000000000000, 32.0000000000000000 :  2178304.0000000000000000, 33.0000000000000000 :  3524544.0000000000000000, 34.0000000000000000 :  5702912.0000000000000000, 35.0000000000000000 :  9227520.0000000000000000, 36.0000000000000000 :  14930432.0000000000000000, 37.0000000000000000 :  24158208.0000000000000000, 38.0000000000000000 :  39088128.0000000000000000, 39.0000000000000000 :  63246336.0000000000000000, 40.0000000000000000 :  102334464.0000000000000000, 41.0000000000000000 :  165580800.0000000000000000, 42.0000000000000000 :  267915264.0000000000000000, 43.0000000000000000 :  433496064.0000000000000000, 44.0000000000000000 :  701415424.0000000000000000, 45.0000000000000000 :  1134919680.0000000000000000, 46.0000000000000000 :  1836318720.0000000000000000, 47.0000000000000000 :  2971271168.0000000000000000, 48.0000000000000000 :  4807589888.0000000000000000, 49.0000000000000000 :  7778861056.0000000000000000, 50.0000000000000000 :  12586582016.0000000000000000, 51.0000000000000000 :  20365443072.0000000000000000, 52.0000000000000000 :  32952025088.0000000000000000, 53.0000000000000000 :  53317992448.0000000000000000, 54.0000000000000000 :  86270541824.0000000000000000, 55.0000000000000000 :  139586437120.0000000000000000, 56.0000000000000000 :  225854881792.0000000000000000, 57.0000000000000000 :  365441318912.0000000000000000, 58.0000000000000000 :  591296200704.0000000000000000, 59.0000000000000000 :  956737519616.0000000000000000, 60.0000000000000000 :  1548033720320.0000000000000000, 61.0000000000000000 :  2504771239936.0000000000000000, 62.0000000000000000 :  4052838514688.0000000000000000, 63.0000000000000000 :  6557609754624.0000000000000000, 64.0000000000000000 :  10610448269312.0000000000000000, 65.0000000000000000 :  17168058023936.0000000000000000, 66.0000000000000000 :  27778774728704.0000000000000000, 67.0000000000000000 :  44946832752640.0000000000000000, 68.0000000000000000 :  72726681223168.0000000000000000, 69.0000000000000000 :  117673513975808.0000000000000000, 70.0000000000000000 :  190400195198976.0000000000000000, 71.0000000000000000 :  308069414207488.0000000000000000, 72.0000000000000000 :  498473904373760.0000000000000000, 73.0000000000000000 :  806543318581248.0000000000000000, 74.0000000000000000 :  1305017222955008.0000000000000000, 75.0000000000000000 :  2111543361667072.0000000000000000, 76.0000000000000000 :  3416594944360448.0000000000000000, 77.0000000000000000 :  5528069586550784.0000000000000000, 78.0000000000000000 :  8944664530911232.0000000000000000, 79.0000000000000000 :  14472871556415488.0000000000000000, 80.0000000000000000 :  23417398648373248.0000000000000000, 81.0000000000000000 :  37890270204788736.0000000000000000, 82.0000000000000000 :  61307668853161984.0000000000000000, 83.0000000000000000 :  99197939057950720.0000000000000000, 84.0000000000000000 :  160506707422740480.0000000000000000, 85.0000000000000000 :  259704646480691200.0000000000000000, 86.0000000000000000 :  420206955856920576.0000000000000000, 87.0000000000000000 :  679902806244589568.0000000000000000, 88.0000000000000000 :  1100109762101510144.0000000000000000, 89.0000000000000000 :  1780012568346099712.0000000000000000, 90.0000000000000000 :  2880122330447609856.0000000000000000, 91.0000000000000000 :  4660099714421620736.0000000000000000, 92.0000000000000000 :  7540151676125052928.0000000000000000

 locals fibBN :  1.0000000000000000 :  1.0000000000000000, 2.0000000000000000 :  1.0000000000000000, 3.0000000000000000 :  2.0000000000000000, 4.0000000000000000 :  3.0000000000000000, 5.0000000000000000 :  5.0000000000000000, 6.0000000000000000 :  8.0000000000000000, 7.0000000000000000 :  13.0000000000000000, 8.0000000000000000 :  21.0000000000000000, 9.0000000000000000 :  34.0000000000000000, 10.0000000000000000 :  55.0000000000000000, 11.0000000000000000 :  89.0000000000000000, 12.0000000000000000 :  144.0000000000000000, 13.0000000000000000 :  233.0000000000000000, 14.0000000000000000 :  377.0000000000000000, 15.0000000000000000 :  610.0000000000000000, 16.0000000000000000 :  987.0000000000000000, 17.0000000000000000 :  1597.0000000000000000, 18.0000000000000000 :  2584.0000000000000000, 19.0000000000000000 :  4181.0000000000000000, 20.0000000000000000 :  6765.0000000000000000, 21.0000000000000000 :  10946.0000000000000000, 22.0000000000000000 :  17711.0000000000000000, 23.0000000000000000 :  28657.0000000000000000, 24.0000000000000000 :  46368.0000000000000000, 25.0000000000000000 :  75024.0000000000000000, 26.0000000000000000 :  121392.0000000000000000, 27.0000000000000000 :  196416.0000000000000000, 28.0000000000000000 :  317808.0000000000000000, 29.0000000000000000 :  514224.0000000000000000, 30.0000000000000000 :  832032.0000000000000000, 31.0000000000000000 :  1346240.0000000000000000, 32.0000000000000000 :  2178304.0000000000000000, 33.0000000000000000 :  3524544.0000000000000000, 34.0000000000000000 :  5702912.0000000000000000, 35.0000000000000000 :  9227520.0000000000000000, 36.0000000000000000 :  14930432.0000000000000000, 37.0000000000000000 :  24158208.0000000000000000, 38.0000000000000000 :  39088128.0000000000000000, 39.0000000000000000 :  63246336.0000000000000000, 40.0000000000000000 :  102334464.0000000000000000, 41.0000000000000000 :  165580800.0000000000000000, 42.0000000000000000 :  267915264.0000000000000000, 43.0000000000000000 :  433496064.0000000000000000, 44.0000000000000000 :  701415424.0000000000000000, 45.0000000000000000 :  1134919680.0000000000000000, 46.0000000000000000 :  1836318720.0000000000000000, 47.0000000000000000 :  2971271168.0000000000000000, 48.0000000000000000 :  4807589888.0000000000000000, 49.0000000000000000 :  7778861056.0000000000000000, 50.0000000000000000 :  12586582016.0000000000000000, 51.0000000000000000 :  20365443072.0000000000000000, 52.0000000000000000 :  32952025088.0000000000000000, 53.0000000000000000 :  53317992448.0000000000000000, 54.0000000000000000 :  86270541824.0000000000000000, 55.0000000000000000 :  139586437120.0000000000000000, 56.0000000000000000 :  225854881792.0000000000000000, 57.0000000000000000 :  365441318912.0000000000000000, 58.0000000000000000 :  591296200704.0000000000000000, 59.0000000000000000 :  956737519616.0000000000000000, 60.0000000000000000 :  1548033720320.0000000000000000, 61.0000000000000000 :  2504771239936.0000000000000000, 62.0000000000000000 :  4052838514688.0000000000000000, 63.0000000000000000 :  6557609754624.0000000000000000, 64.0000000000000000 :  10610448269312.0000000000000000, 65.0000000000000000 :  17168058023936.0000000000000000, 66.0000000000000000 :  27778774728704.0000000000000000, 67.0000000000000000 :  44946832752640.0000000000000000, 68.0000000000000000 :  72726681223168.0000000000000000, 69.0000000000000000 :  117673513975808.0000000000000000, 70.0000000000000000 :  190400195198976.0000000000000000, 71.0000000000000000 :  308069414207488.0000000000000000, 72.0000000000000000 :  498473904373760.0000000000000000, 73.0000000000000000 :  806543318581248.0000000000000000, 74.0000000000000000 :  1305017222955008.0000000000000000, 75.0000000000000000 :  2111543361667072.0000000000000000, 76.0000000000000000 :  3416594944360448.0000000000000000, 77.0000000000000000 :  5528069586550784.0000000000000000, 78.0000000000000000 :  8944664530911232.0000000000000000, 79.0000000000000000 :  14472871556415488.0000000000000000, 80.0000000000000000 :  23417398648373248.0000000000000000, 81.0000000000000000 :  37890270204788736.0000000000000000, 82.0000000000000000 :  61307668853161984.0000000000000000, 83.0000000000000000 :  99197939057950720.0000000000000000, 84.0000000000000000 :  160506707422740480.0000000000000000, 85.0000000000000000 :  259704646480691200.0000000000000000, 86.0000000000000000 :  420206955856920576.0000000000000000, 87.0000000000000000 :  679902806244589568.0000000000000000, 88.0000000000000000 :  1100109762101510144.0000000000000000, 89.0000000000000000 :  1780012568346099712.0000000000000000, 90.0000000000000000 :  2880122330447609856.0000000000000000, 91.0000000000000000 :  4660099714421620736.0000000000000000, 92.0000000000000000 :  7540151676125052928.0000000000000000[39;49m fibc2
[39;49m 6765
[39;49m fibbc
[39;49m 6765
[39;49m x7

[39;49m ( 1 2 3 x7 )

[39;49m ( 1 2 3 ( 7 8 9 45 ) )

[39;49m ( 1 2 3 ( 7 8 9 45 ) )

[39;49m ( 1 2 3 7 8 9 45 )

[39;49m ( 1 2 3 7 8 9 45 )

[39;49m 77
[39;49m 77
[39;49m 77
[39;49m alist
[39;49m ( 1 2 3 7 8 9 45 )
[39;49m yfac
[39;49m3628800.0000000000000000

[39;49m yfacc
[39;49m3628800.0000000000000000

[39;49m2432928961198555136.0000000000000000

[39;49m yfac
[39;49m3628800.0000000000000000

[39;49m yfacc
[39;49m3628800.0000000000000000

[39;49m2432928961198555136.0000000000000000

[39;49m yfac
[39;49m2432928961198555136.0000000000000000

[39;49m yfacc
[39;49m3628800.0000000000000000

[39;49m5040.0000000000000000

[39;49m yfac
[39;49m2432928961198555136.0000000000000000

[39;49m yfacc
[39;49m3628800.0000000000000000

[39;49m5040.0000000000000000

[39;49m yfac

 =============================
LispDefines.[34;49myfac[39;49m <:> variable
SourceCode for LispDefines.[34;49myfac[39;49m :> 
[34;49m(define yfac (lambda (yy n) (if* (< n 2) 1 (* n (yy yy (- n 1))))))[39;49m
Source code file location of [34;49myfac[39;49m : "namespaces/test/dev0.cft" : 286.126 :: we are now at : namespaces/test/dev0.cft : 287.21
Lambda Calculus word : interpreted not compiled
 -----------------------------
Word :: LispDefines.[34;49myfac[39;49m : definition = 0x0000000000000000 : disassembly at namespaces/test/dev0.cft : 287.21 :
Word : 0x00007fa6dd16d9a8 :: Compiled at : 0x0000000000000000
 =============================
::> 'wdiss' was called at namespaces/test/dev0.cft 287.21 <::
[39;49m 2432902008176640000

[39;49m yfacc
[39;49m 3628800

[39;49m 5040

[39;49m yfac
[39;49m 2432902008176640000

[39;49m yfacc
[39;49m 3628800

[39;49m 5040

[39;49m x
[39;49m a
[39;49m x1
[39;49m a1
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ( Its a beautiful day don't x1 it get away )
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ( Its a beautiful day don't x it get away )
[39;49m ( Its a beautiful day don't x1 it get away )
[39;49m ( Its a beautiful day don't "let" it get away )
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ff
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m h36
[39;49m ( n09 my6 n09 my6 n09 n09 my6 my6 )
 
 should show : ( n09 my6 n09 my6 n09 n09 my6 my6 )
[39;49m n09
[39;49m my6
[39;49m ( kl0 op9 kl0 op9 kl0 kl0 op9 op9 )
 
 should show : ( kl0 op9 kl0 op9 kl0 kl0 op9 op9 )
[39;49m id
[39;49m ( "the" "the" b b )
[39;49m id1
[39;49m ( 7 7 11 11 7 7 )
[39;49m swch
[39;49m ( 11 7 )
[39;49m swch2
[39;49m ( ( 7 11 ) ( 7 11 ) )
[39;49m id2
[39;49m ( ( ( 11 7 ) ( 11 7 ) ) ( ( 11 7 ) ( 11 7 ) ) )
[39;49m id3
[39;49m ( 7 7 11 7 11 11 7 7 )
[39;49m swch3
[39;49m id4
[39;49m ( 7 7 ( ( ( 11 7 ) ( 11 7 ) ) ( ( 11 7 ) ( 11 7 ) ) ) 11 11 7 7 )
[39;49m x
[39;49m ( ( 3 4 ) ( 3 4 ) )
[39;49m x
[39;49m 7
[39;49m x
[39;49m 11
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
 7 ( ( lambda ( a b ) ( + a b ) ) 3 4 )
DataStack at : [34;49mnamespaces/test/dev0.cft : 354.67[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fa6ddf73220, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	

 =============================
Root.[34;49mbexp3[39;49m <:> cfrTil compiled word
SourceCode for Root.[34;49mbexp3[39;49m :> 
[34;49m: bexp3 ( n ) { n @ 1 > } { n @ n @ -- bexp3 * } { 1 } ifElse ; [39;49m
Source code file location of [34;49mbexp3[39;49m : "namespaces/test/dev0.cft" : 355.64 :: we are now at : namespaces/test/dev0.cft : 356.18
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde049481 -- code size = 115 bytes
TypeSignature : 
 -----------------------------
Word :: Root.[34;49mbexp3[39;49m : definition = 0x00007fa6de049481 : disassembly at namespaces/test/dev0.cft : 356.18 :
[34;49m ..                                     : [39;49m[33;40mbexp3[39;49m[34;49m ( n ) { n @ 1 > } { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de049481    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de049485    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de049489    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                       : bexp3 ( n ) { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de049490    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                 : bexp3 ( n ) { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de049494    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fa6de049498    0f8e39000000            jle 0x7fa6de0494d7         	< Root.[34;49mbexp3[39;49m+86 >[39;49m
[34;49m ..           : bexp3 ( n ) { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de04949e    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0494a2    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..               : bexp3 ( n ) { n @ 1 > [39;49m[33;40m}[39;49m[34;49m { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de0494a6    498906                  mov [r14], rax                                         [39;49m
[34;49m ..       : bexp3 ( n ) { n @ 1 > } { n @ [39;49m[33;40mn[39;49m[34;49m @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de0494a9    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..   : bexp3 ( n ) { n @ 1 > } { n @ n @ [39;49m[33;40m--[39;49m[34;49m bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de0494ad    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fa6de0494b0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0494b4    498906                  mov [r14], rax                                         [39;49m
[34;49m   : bexp3 ( n ) { n @ 1 > } { n @ n @ -- [39;49m[33;40mbexp3[39;49m[34;49m * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de0494b7    e8c5ffffff              call 0x7fa6de049481        	< Root.[34;49mbexp3[39;49m : 0x00007fa6de049481 >[39;49m[32;49m
0x7fa6de0494bc    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de0494bf    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de0494c3    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  ( n ) { n @ 1 > } { n @ n @ -- bexp3 [39;49m[33;40m*[39;49m[34;49m } { 1 } ifElse ; [39;49m[32;49m
0x7fa6de0494c7    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fa6de0494cb    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0494cf    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  n ) { n @ 1 > } { n @ n @ -- bexp3 * [39;49m[33;40m}[39;49m[34;49m { 1 } ifElse ; [39;49m[32;49m
0x7fa6de0494d2    e911000000              jmp 0x7fa6de0494e8         	< Root.[34;49mbexp3[39;49m+103 >[39;49m
[34;49m ..  { n @ 1 > } { n @ n @ -- bexp3 * } { [39;49m[33;40m1[39;49m[34;49m } ifElse ; [39;49m[32;49m
0x7fa6de0494d7    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de0494e1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0494e5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. } { n @ n @ -- bexp3 * } { 1 } ifElse [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de0494e8    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0494ec    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de0494f0    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de0494f3    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp3' :: codeSize = 114
Word : 0x00007fa6dd38c858 :: Compiled at : 0x00007fa6de049481
 =============================
::> 'wdiss' was called at namespaces/test/dev0.cft 356.18 <::
 5040
 =============================
C_Syntax.[34;49mfac5[39;49m <:> cfrTil compiled word, prefix
SourceCode for C_Syntax.[34;49mfac5[39;49m :> 
[34;49mint fac5 ( REG n | REG facc ) { facc = 1 ; while ( n > 1 ) { facc = facc * (n --) ; } return facc ; } [39;49m
Source code file location of [34;49mfac5[39;49m : "namespaces/test/dev0.cft" : 359.27 :: we are now at : namespaces/test/dev0.cft : 372.21
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde049508 -- code size = 36 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfac5[39;49m : definition = 0x00007fa6de049508 : disassembly at namespaces/test/dev0.cft : 372.21 :
[34;49m ..                                   int [39;49m[33;40mfac5[39;49m[34;49m ( REG n | REG facc )  {  facc = 1 ; while ( n > 1 )  { facc = facc * (n --) ; } return .. [39;49m[32;49m
0x7fa6de049508    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m int fac5 ( REG n | REG facc )  {  facc = [39;49m[33;40m1[39;49m[34;49m ; while ( n > 1 )  { facc = facc * (n --) ; } return facc ; }  .. [39;49m[32;49m
0x7fa6de04950b    48be0100000000000000    mov rsi, 0x1                                           [39;49m
[34;49m .. | REG facc )  {  facc = 1 ; while ( n [39;49m[33;40m>[39;49m[34;49m 1 )  { facc = facc * (n --) ; } return facc ; } [39;49m[32;49m
0x7fa6de049515    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fa6de049519    0f8e09000000            jle 0x7fa6de049528         	< C_Syntax.[34;49mfac5[39;49m+32 >[39;49m
[34;49m ..  = 1 ; while ( n > 1 )  { facc = facc [39;49m[33;40m*[39;49m[34;49m (n --) ; } return facc ; } [39;49m[32;49m
0x7fa6de04951f    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. ; while ( n > 1 )  { facc = facc * (n [39;49m[33;40m--[39;49m[34;49m) ; } return facc ; } [39;49m[32;49m
0x7fa6de049523    48ffcf                  dec rdi                                                [39;49m
[34;49m .. e ( n > 1 )  { facc = facc * (n --) ; [39;49m[33;40m}[39;49m[34;49m return facc ; } [39;49m[32;49m
0x7fa6de049526    ebed                    jmp 0x7fa6de049515         	< C_Syntax.[34;49mfac5[39;49m+13 >[39;49m
[34;49m ..  )  { facc = facc * (n --) ; } return [39;49m[33;40mfacc[39;49m[34;49m ; } [39;49m[32;49m
0x7fa6de049528    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fa6de04952b    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac5' :: codeSize = 35
Word : 0x00007fa6dd38f220 :: Compiled at : 0x00007fa6de049508
 =============================
::> 'wdiss' was called at namespaces/test/dev0.cft 372.21 <::
 5040
 =============================
C_Syntax.[34;49mcpow[39;49m <:> cfrTil compiled word
SourceCode for C_Syntax.[34;49mcpow[39;49m :> 
[34;49mint cpow ( base power | out ) { for ( out = 1 ; power ; (power -= 1) ) { out *= base ; } return out ; } [39;49m
Source code file location of [34;49mcpow[39;49m : "namespaces/test/dev0.cft" : 379.103 :: we are now at : namespaces/test/dev0.cft : 380.17
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde049531 -- code size = 110 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mcpow[39;49m : definition = 0x00007fa6de049531 : disassembly at namespaces/test/dev0.cft : 380.17 :
[34;49m ..                                   int [39;49m[33;40mcpow[39;49m[34;49m ( base power | out ) { for ( out = 1 ; power ; (power -= 1) ) { out *= base ; } return .. [39;49m[32;49m
0x7fa6de049531    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de049535    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de049539    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m .. ow ( base power | out ) { for ( out = [39;49m[33;40m1[39;49m[34;49m ; power ; (power -= 1) ) { out *= base ; } return out ; } [39;49m[32;49m
0x7fa6de049540    48b80100000000000000    mov rax, 0x1                                           [39;49m
[34;49m .. int cpow ( base power | out ) { for ( [39;49m[33;40mout[39;49m[34;49m = 1 ; power ; (power -= 1) ) { out *= base ; } return out ; }  .. [39;49m[32;49m
0x7fa6de04954a    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49mint cpow ( base power | out ) { for ( out [39;49m[33;40m=[39;49m[34;49m 1 ; power ; (power -= 1) ) { out *= base ; } return out ; }  .. [39;49m[32;49m
0x7fa6de04954e    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  ( base power | out ) { for ( out = 1 [39;49m[33;40m;[39;49m[34;49m power ; (power -= 1) ) { out *= base ; } return out ; } [39;49m[32;49m
0x7fa6de049551    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. ower ; (power -= 1) ) { out *= base ; [39;49m[33;40m}[39;49m[34;49m return out ; } [39;49m[32;49m
0x7fa6de049555    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de049558    0f842d000000            jz 0x7fa6de04958b          	< C_Syntax.[34;49mcpow[39;49m+90 >[39;49m[32;49m
0x7fa6de04955e    498d5f08                lea rbx, [r15+0x8]                                     [39;49m
[34;49m ..  ( out = 1 ; power ; (power -= 1) ) { [39;49m[33;40mout[39;49m[34;49m *= base ; } return out ; } [39;49m[32;49m
0x7fa6de049562    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. = 1 ; power ; (power -= 1) ) { out *= [39;49m[33;40mbase[39;49m[34;49m ; } return out ; } [39;49m[32;49m
0x7fa6de049566    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de04956a    480fafc1                imul rax, rcx                                          [39;49m
[34;49m .. ut = 1 ; power ; (power -= 1) ) { out [39;49m[33;40m*=[39;49m[34;49m base ; } return out ; } [39;49m[32;49m
0x7fa6de04956e    488903                  mov [rbx], rax                                         [39;49m
[34;49m .. wer | out ) { for ( out = 1 ; power ; [39;49m[33;40m([39;49m[34;49mpower -= 1) ) { out *= base ; } return out ; } [39;49m[32;49m
0x7fa6de049571    498d5ff8                lea rbx, [r15-0x8]                                     [39;49m
[34;49m .. er | out ) { for ( out = 1 ; power ; ([39;49m[33;40mpower[39;49m[34;49m -= 1) ) { out *= base ; } return out ; } [39;49m[32;49m
0x7fa6de049575    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. ) { for ( out = 1 ; power ; (power -= [39;49m[33;40m1[39;49m[34;49m) ) { out *= base ; } return out ; } [39;49m[32;49m
0x7fa6de049579    48b90100000000000000    mov rcx, 0x1                                           [39;49m[32;49m
0x7fa6de049583    482bc1                  sub rax, rcx                                           [39;49m
[34;49m .. ut ) { for ( out = 1 ; power ; (power [39;49m[33;40m-=[39;49m[34;49m 1) ) { out *= base ; } return out ; } [39;49m[32;49m
0x7fa6de049586    488903                  mov [rbx], rax                                         [39;49m
[34;49m ..  for ( out = 1 ; power ; (power -= 1) [39;49m[33;40m)[39;49m[34;49m { out *= base ; } return out ; } [39;49m[32;49m
0x7fa6de049589    ebc6                    jmp 0x7fa6de049551         	< C_Syntax.[34;49mcpow[39;49m+32 >[39;49m
[34;49m .. er ; (power -= 1) ) { out *= base ; } [39;49m[33;40mreturn[39;49m[34;49m out ; } [39;49m[32;49m
0x7fa6de04958b    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. = 1) ) { out *= base ; } return out ; [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fa6de04958f    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de049593    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de049597    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. ower -= 1) ) { out *= base ; } return [39;49m[33;40mout[39;49m[34;49m ; } [39;49m[32;49m
0x7fa6de04959b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04959e    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cpow' :: codeSize = 109
Word : 0x00007fa6dd392d68 :: Compiled at : 0x00007fa6de049531
 =============================
::> 'wdiss' was called at namespaces/test/dev0.cft 380.17 <::
 2 ^ 30 :  1073741824 1073741824 1073741824[39;49m yfac
 
yfac : 50 factorial = [39;49m30412909425645649954907174559648843415335213860333137200913842176.0000000000000000
[39;49m yfacc
[39;49m 3628800

[39;49m 5040

[39;49m yfac
[39;49m2432928961198555136.0000000000000000
[39;49m yfacc
[39;49m 3628800

[39;49m 5040

[39;49m fib
[39;49m fib2
[39;49m 6765
[39;49m 6765
[39;49m x
[39;49m a
[39;49m x1
[39;49m a1
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ( Its "the" beautiful day don't "let" it get away )
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ( Its a beautiful day don't x1 it get away )
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ( Its a beautiful day don't x it get away )
 testing unquote above line should show : ( Its a beautiful day don't x it get away )
[39;49m ( Its a beautiful day don't x1 it get away )
 testing unquote above line should show : ( Its a beautiful day don't x1 it get away )
[39;49m ( Its "the" beautiful day don't "let" it get away )
[39;49m ( Its a beautiful day don't let it get away )
 6765 6765 6765 6765 6765 6765 6765
 namespaces/test/dev0.cft 533.12 
ending Lisp

DataStack at : [34;49mnamespaces/test/dev0.cft : 533.35[39;49m :
DataStack depth =   2 : Dsp (R14) = Top = 0x00007fa6ddf73218, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	

 =============================
C_Syntax.[34;49m_Compile_ImmOrDispData[39;49m <:> cfrTil compiled word, prefix
SourceCode for C_Syntax.[34;49m_Compile_ImmOrDispData[39;49m :> 
[34;49mvoid _Compile_ImmOrDispData ( immOrDisp, immSize, forceFlag ) { if ( immSize > 0 ) { if ( immSize == BYTE ) compileByte (immOrDisp) ; else if ( immSize == 4 ) compileInt32 (immOrDisp) ; else if ( immSize == CELL ) compileInt64 (immOrDisp) ; } else { if ( immOrDisp >= 0x100000000 ) compileInt64 (immOrDisp) ; else { if ( immOrDisp >= 0x100 ) compileInt32 (immOrDisp) ; else if ( immOrDisp || forceFlag ) compileByte (immOrDisp) ; } } } [39;49m
Source code file location of [34;49m_Compile_ImmOrDispData[39;49m : "namespaces/compiler/x64.cft" : 135.57 :: we are now at : namespaces/compiler/x64.cft : 155.35
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04a07f -- code size = 376 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49m_Compile_ImmOrDispData[39;49m : definition = 0x00007fa6de04a07f : disassembly at namespaces/compiler/x64.cft : 155.35 :
[34;49m ..                                  void [39;49m[33;40m_Compile_ImmOrDispData[39;49m[34;49m ( immOrDisp, immSize, forceFlag ) { if ( immSize > 0 ) { if ( immSiz .. [39;49m[32;49m
0x7fa6de04a07f    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04a083    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04a087    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m .. mmOrDisp, immSize, forceFlag ) { if ( [39;49m[33;40mimmSize[39;49m[34;49m > 0 ) { if ( immSize == BYTE ) compileByte (immOrDisp) ;  else if ( immSize == 4 )  .. [39;49m[32;49m
0x7fa6de04a08e    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. , immSize, forceFlag ) { if ( immSize [39;49m[33;40m>[39;49m[34;49m 0 ) { if ( immSize == BYTE ) compileByte (immOrDisp) ;  else if ( immSize == 4 ) compileI .. [39;49m[32;49m
0x7fa6de04a092    4883f800                cmp rax, 0x0                                           [39;49m[32;49m
0x7fa6de04a096    0f8e9f000000            jle 0x7fa6de04a13b         	< C_Syntax.[34;49m_Compile_ImmOrDispData[39;49m+188 >[39;49m
[34;49m .. rceFlag ) { if ( immSize > 0 ) { if ( [39;49m[33;40mimmSize[39;49m[34;49m == BYTE ) compileByte (immOrDisp) ;  else if ( immSize == 4 ) compileInt32 (immOrDi .. [39;49m[32;49m
0x7fa6de04a09c    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. ) { if ( immSize > 0 ) { if ( immSize [39;49m[33;40m==[39;49m[34;49m BYTE ) compileByte (immOrDisp) ;  else if ( immSize == 4 ) compileInt32 (immOrDisp) ;  e .. [39;49m[32;49m
0x7fa6de04a0a0    4883f801                cmp rax, 0x1                                           [39;49m
[34;49m .. mSize, forceFlag ) { if ( immSize > 0 [39;49m[33;40m)[39;49m[34;49m { if ( immSize == BYTE ) compileByte (immOrDisp) ;  else if ( immSize == 4 ) compileInt32 .. [39;49m[32;49m
0x7fa6de04a0a4    0f8527000000            jnz 0x7fa6de04a0d1         	< C_Syntax.[34;49m_Compile_ImmOrDispData[39;49m+82 >[39;49m
[34;49m .. { if ( immSize == BYTE ) compileByte ([39;49m[33;40mimmOrDisp[39;49m[34;49m) ;  else if ( immSize == 4 ) compileInt32 (immOrDisp) ;  else if ( immSize == CEL .. [39;49m[32;49m
0x7fa6de04a0aa    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fa6de04a0ae    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..  immSize > 0 ) { if ( immSize == BYTE [39;49m[33;40m)[39;49m[34;49m compileByte (immOrDisp) ;  else if ( immSize == 4 ) compileInt32 (immOrDisp) ;  else if ( .. [39;49m[32;49m
0x7fa6de04a0b2    498906                  mov [r14], rax                                         [39;49m
[34;49m .. mmSize > 0 ) { if ( immSize == BYTE ) [39;49m[33;40mcompileByte[39;49m[34;49m (immOrDisp) ;  else if ( immSize == 4 ) compileInt32 (immOrDisp) ;  else if ( i .. [39;49m[32;49m
0x7fa6de04a0b5    49b8f433efbf1d560000    mov r8, 0x561dbfef33f4                                 [39;49m[32;49m
0x7fa6de04a0bf    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04a0c9    49ffd1                  call r9                    	< Compiling.[34;49mcompileByte[39;49m : 0x0000561dbfef33f4 >[39;49m
[34;49m .. ize == BYTE ) compileByte (immOrDisp) [39;49m[33;40m;[39;49m[34;49m  else if ( immSize == 4 ) compileInt32 (immOrDisp) ;  else if ( immSize == CELL ) compile .. [39;49m[32;49m
0x7fa6de04a0cc    e965000000              jmp 0x7fa6de04a136         	< C_Syntax.[34;49m_Compile_ImmOrDispData[39;49m+183 >[39;49m
[34;49m ..  compileByte (immOrDisp) ;  else if ( [39;49m[33;40mimmSize[39;49m[34;49m == 4 ) compileInt32 (immOrDisp) ;  else if ( immSize == CELL ) compileInt64 (immOrD .. [39;49m[32;49m
0x7fa6de04a0d1    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. Byte (immOrDisp) ;  else if ( immSize [39;49m[33;40m==[39;49m[34;49m 4 ) compileInt32 (immOrDisp) ;  else if ( immSize == CELL ) compileInt64 (immOrDisp) ;   .. [39;49m[32;49m
0x7fa6de04a0d5    4883f804                cmp rax, 0x4                                           [39;49m[32;49m
0x7fa6de04a0d9    0f8527000000            jnz 0x7fa6de04a106         	< C_Syntax.[34;49m_Compile_ImmOrDispData[39;49m+135 >[39;49m
[34;49m .. lse if ( immSize == 4 ) compileInt32 ([39;49m[33;40mimmOrDisp[39;49m[34;49m) ;  else if ( immSize == CELL ) compileInt64 (immOrDisp) ;  } else { if ( immOrDi .. [39;49m[32;49m
0x7fa6de04a0df    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fa6de04a0e3    4983c608                add r14, 0x8                                           [39;49m
[34;49m .. (immOrDisp) ;  else if ( immSize == 4 [39;49m[33;40m)[39;49m[34;49m compileInt32 (immOrDisp) ;  else if ( immSize == CELL ) compileInt64 (immOrDisp) ;  } els .. [39;49m[32;49m
0x7fa6de04a0e7    498906                  mov [r14], rax                                         [39;49m
[34;49m .. mmOrDisp) ;  else if ( immSize == 4 ) [39;49m[33;40mcompileInt32[39;49m[34;49m (immOrDisp) ;  else if ( immSize == CELL ) compileInt64 (immOrDisp) ;  } else  .. [39;49m[32;49m
0x7fa6de04a0ea    49b88833efbf1d560000    mov r8, 0x561dbfef3388                                 [39;49m[32;49m
0x7fa6de04a0f4    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04a0fe    49ffd1                  call r9                    	< Compiling.[34;49mcompileInt32[39;49m : 0x0000561dbfef3388 >[39;49m
[34;49m .. mSize == 4 ) compileInt32 (immOrDisp) [39;49m[33;40m;[39;49m[34;49m  else if ( immSize == CELL ) compileInt64 (immOrDisp) ;  } else { if ( immOrDisp >= 0x100 .. [39;49m[32;49m
0x7fa6de04a101    e930000000              jmp 0x7fa6de04a136         	< C_Syntax.[34;49m_Compile_ImmOrDispData[39;49m+183 >[39;49m
[34;49m .. compileInt32 (immOrDisp) ;  else if ( [39;49m[33;40mimmSize[39;49m[34;49m == CELL ) compileInt64 (immOrDisp) ;  } else { if ( immOrDisp >= 0x100000000 ) comp .. [39;49m[32;49m
0x7fa6de04a106    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. nt32 (immOrDisp) ;  else if ( immSize [39;49m[33;40m==[39;49m[34;49m CELL ) compileInt64 (immOrDisp) ;  } else { if ( immOrDisp >= 0x100000000 ) compileInt64 .. [39;49m[32;49m
0x7fa6de04a10a    4883f808                cmp rax, 0x8                                           [39;49m[32;49m
0x7fa6de04a10e    0f8522000000            jnz 0x7fa6de04a136         	< C_Syntax.[34;49m_Compile_ImmOrDispData[39;49m+183 >[39;49m
[34;49m .. ze == CELL ) compileInt64 (immOrDisp) [39;49m[33;40m;[39;49m[34;49m  } else { if ( immOrDisp >= 0x100000000 ) compileInt64 (immOrDisp) ; else  { if ( immOrDi .. [39;49m[32;49m
0x7fa6de04a114    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fa6de04a118    4983c608                add r14, 0x8                                           [39;49m
[34;49m .. mOrDisp) ;  else if ( immSize == CELL [39;49m[33;40m)[39;49m[34;49m compileInt64 (immOrDisp) ;  } else { if ( immOrDisp >= 0x100000000 ) compileInt64 (immOrD .. [39;49m[32;49m
0x7fa6de04a11c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. rDisp) ;  else if ( immSize == CELL ) [39;49m[33;40mcompileInt64[39;49m[34;49m (immOrDisp) ;  } else { if ( immOrDisp >= 0x100000000 ) compileInt64 (immOrDis .. [39;49m[32;49m
0x7fa6de04a11f    49b85d33efbf1d560000    mov r8, 0x561dbfef335d                                 [39;49m
[34;49m ..  4 ) compileInt32 (immOrDisp) ;  else [39;49m[33;40m{[39;49m[34;49mf ( immSize == CELL ) compileInt64 (immOrDisp) ;  } else { if ( immOrDisp >= 0x100000000 ) .. [39;49m[32;49m
0x7fa6de04a129    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04a133    49ffd1                  call r9                    	< Compiling.[34;49mcompileInt64[39;49m : 0x0000561dbfef335d >[39;49m
[34;49m .. == CELL ) compileInt64 (immOrDisp) ;  [39;49m[33;40m}[39;49m[34;49m else { if ( immOrDisp >= 0x100000000 ) compileInt64 (immOrDisp) ; else  { if ( immOrDisp  .. [39;49m[32;49m
0x7fa6de04a136    e9af000000              jmp 0x7fa6de04a1ea         	< C_Syntax.[34;49m_Compile_ImmOrDispData[39;49m+363 >[39;49m
[34;49m .. ileInt64 (immOrDisp) ;  } else { if ( [39;49m[33;40mimmOrDisp[39;49m[34;49m >= 0x100000000 ) compileInt64 (immOrDisp) ; else  { if ( immOrDisp >= 0x100 ) com .. [39;49m[32;49m
0x7fa6de04a13b    498b47e8                mov rax, [r15-0x18]                                    [39;49m
[34;49m .. immOrDisp) ;  } else { if ( immOrDisp [39;49m[33;40m>=[39;49m[34;49m 0x100000000 ) compileInt64 (immOrDisp) ; else  { if ( immOrDisp >= 0x100 ) compileInt32  .. [39;49m[32;49m
0x7fa6de04a13f    49b90000000001000000    mov r9, 0x100000000                                    [39;49m[32;49m
0x7fa6de04a149    4c3bc8                  cmp r9, rax                                            [39;49m[32;49m
0x7fa6de04a14c    0f8c27000000            jl 0x7fa6de04a179          	< C_Syntax.[34;49m_Compile_ImmOrDispData[39;49m+250 >[39;49m
[34;49m .. OrDisp >= 0x100000000 ) compileInt64 ([39;49m[33;40mimmOrDisp[39;49m[34;49m) ; else  { if ( immOrDisp >= 0x100 ) compileInt32 (immOrDisp) ; else if ( immOrDi .. [39;49m[32;49m
0x7fa6de04a152    498b47e8                mov rax, [r15-0x18]                                    [39;49m
[34;49m .. e (immOrDisp) ;  else if ( immSize == [39;49m[33;40m4[39;49m[34;49m ) compileInt32 (immOrDisp) ;  else if ( immSize == CELL ) compileInt64 (immOrDisp) ;  } e .. [39;49m[32;49m
0x7fa6de04a156    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..  else { if ( immOrDisp >= 0x100000000 [39;49m[33;40m)[39;49m[34;49m compileInt64 (immOrDisp) ; else  { if ( immOrDisp >= 0x100 ) compileInt32 (immOrDisp) ; e .. [39;49m[32;49m
0x7fa6de04a15a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. lse { if ( immOrDisp >= 0x100000000 ) [39;49m[33;40mcompileInt64[39;49m[34;49m (immOrDisp) ; else  { if ( immOrDisp >= 0x100 ) compileInt32 (immOrDisp) ; els .. [39;49m[32;49m
0x7fa6de04a15d    49b85d33efbf1d560000    mov r8, 0x561dbfef335d                                 [39;49m[32;49m
0x7fa6de04a167    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04a171    49ffd1                  call r9                    	< Compiling.[34;49mcompileInt64[39;49m : 0x0000561dbfef335d >[39;49m
[34;49m .. x100000000 ) compileInt64 (immOrDisp) [39;49m[33;40m;[39;49m[34;49m else  { if ( immOrDisp >= 0x100 ) compileInt32 (immOrDisp) ; else if ( immOrDisp || force .. [39;49m[32;49m
0x7fa6de04a174    e971000000              jmp 0x7fa6de04a1ea         	< C_Syntax.[34;49m_Compile_ImmOrDispData[39;49m+363 >[39;49m
[34;49m .. mpileInt64 (immOrDisp) ; else  { if ( [39;49m[33;40mimmOrDisp[39;49m[34;49m >= 0x100 ) compileInt32 (immOrDisp) ; else if ( immOrDisp || forceFlag ) compileB .. [39;49m[32;49m
0x7fa6de04a179    498b47e8                mov rax, [r15-0x18]                                    [39;49m
[34;49m ..  (immOrDisp) ; else  { if ( immOrDisp [39;49m[33;40m>=[39;49m[34;49m 0x100 ) compileInt32 (immOrDisp) ; else if ( immOrDisp || forceFlag ) compileByte (immOr .. [39;49m[32;49m
0x7fa6de04a17d    4881f800010000          cmp rax, 0x100                                         [39;49m
[34;49m .. mmOrDisp) ; else  { if ( immOrDisp >= [39;49m[33;40m0x100[39;49m[34;49m ) compileInt32 (immOrDisp) ; else if ( immOrDisp || forceFlag ) compileByte (immOrDis .. [39;49m[32;49m
0x7fa6de04a184    0f8c27000000            jl 0x7fa6de04a1b1          	< C_Syntax.[34;49m_Compile_ImmOrDispData[39;49m+306 >[39;49m
[34;49m ..  ( immOrDisp >= 0x100 ) compileInt32 ([39;49m[33;40mimmOrDisp[39;49m[34;49m) ; else if ( immOrDisp || forceFlag ) compileByte (immOrDisp) ; } } }  .. [39;49m[32;49m
0x7fa6de04a18a    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fa6de04a18e    4983c608                add r14, 0x8                                           [39;49m
[34;49m .. sp) ; else  { if ( immOrDisp >= 0x100 [39;49m[33;40m)[39;49m[34;49m compileInt32 (immOrDisp) ; else if ( immOrDisp || forceFlag ) compileByte (immOrDisp) ; } .. [39;49m[32;49m
0x7fa6de04a192    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ) ; else  { if ( immOrDisp >= 0x100 ) [39;49m[33;40mcompileInt32[39;49m[34;49m (immOrDisp) ; else if ( immOrDisp || forceFlag ) compileByte (immOrDisp) ; } } .. [39;49m[32;49m
0x7fa6de04a195    49b88833efbf1d560000    mov r8, 0x561dbfef3388                                 [39;49m[32;49m
0x7fa6de04a19f    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04a1a9    49ffd1                  call r9                    	< Compiling.[34;49mcompileInt32[39;49m : 0x0000561dbfef3388 >[39;49m
[34;49m .. p >= 0x100 ) compileInt32 (immOrDisp) [39;49m[33;40m;[39;49m[34;49m else if ( immOrDisp || forceFlag ) compileByte (immOrDisp) ; } } }  .. [39;49m[32;49m
0x7fa6de04a1ac    e939000000              jmp 0x7fa6de04a1ea         	< C_Syntax.[34;49m_Compile_ImmOrDispData[39;49m+363 >[39;49m
[34;49m ..  compileInt32 (immOrDisp) ; else if ( [39;49m[33;40mimmOrDisp[39;49m[34;49m || forceFlag ) compileByte (immOrDisp) ; } } }  .. [39;49m[32;49m
0x7fa6de04a1b1    498b47e8                mov rax, [r15-0x18]                                    [39;49m
[34;49m ..  (immOrDisp) ; else if ( immOrDisp || [39;49m[33;40mforceFlag[39;49m[34;49m ) compileByte (immOrDisp) ; } } }  .. [39;49m[32;49m
0x7fa6de04a1b5    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04a1b9    480bc1                  or rax, rcx                                            [39;49m
[34;49m .. == CELL ) compileInt64 (immOrDisp) ;  [39;49m[33;40m}[39;49m[34;49m else { if ( immOrDisp >= 0x100000000 ) compileInt64 (immOrDisp) ; else  { if ( immOrDisp  .. [39;49m[32;49m
0x7fa6de04a1bc    4885c0                  test rax, rax                                          [39;49m
[34;49m .. | forceFlag ) compileByte (immOrDisp) [39;49m[33;40m;[39;49m[34;49m } } }  .. [39;49m[32;49m
0x7fa6de04a1bf    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de04a1c2    0f8422000000            jz 0x7fa6de04a1ea          	< C_Syntax.[34;49m_Compile_ImmOrDispData[39;49m+363 >[39;49m
[34;49m .. immOrDisp || forceFlag ) compileByte ([39;49m[33;40mimmOrDisp[39;49m[34;49m) ; } } }  .. [39;49m[32;49m
0x7fa6de04a1c8    498b47e8                mov rax, [r15-0x18]                                    [39;49m
[34;49m .. ) ; else if ( immOrDisp || forceFlag )[39;49m[33;40m{[39;49m[34;49mcompileByte (immOrDisp) ; } } }  .. [39;49m[32;49m
0x7fa6de04a1cc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a1d0    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ; else if ( immOrDisp || forceFlag ) [39;49m[33;40mcompileByte[39;49m[34;49m (immOrDisp) ; } } }  .. [39;49m[32;49m
0x7fa6de04a1d3    49b8f433efbf1d560000    mov r8, 0x561dbfef33f4                                 [39;49m[32;49m
0x7fa6de04a1dd    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04a1e7    49ffd1                  call r9                    	< Compiling.[34;49mcompileByte[39;49m : 0x0000561dbfef33f4 >[39;49m
[34;49m .. eFlag ) compileByte (immOrDisp) ; } } [39;49m[33;40m}[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de04a1ea    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04a1ee    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04a1f2    4983ee18                sub r14, 0x18                                          [39;49m[32;49m
0x7fa6de04a1f6    c3                      ret                                                    [39;49m
Word_Disassemble : word - '_Compile_ImmOrDispData' :: codeSize = 375
Word : 0x00007fa6dd3d4388 :: Compiled at : 0x00007fa6de04a07f
 =============================
::> 'wdiss' was called at namespaces/compiler/x64.cft 155.35 <::

 =============================
C_Syntax.[34;49m_Compile_Write_Instruction_X64[39;49m <:> cfrTil compiled word, prefix
SourceCode for C_Syntax.[34;49m_Compile_Write_Instruction_X64[39;49m :> 
[34;49mvoid _Compile_Write_Instruction_X64 ( rex, opCode0, opCode1, modRm, controlFlags, sib, disp, dispSize, imm, immSize ) { if ( rex ) compileByte ( rex ) ; if ( opCode0 ) compileByte ( opCode0 ) ; if ( opCode1 ) compileByte ( opCode1 ) ; if ( controlFlags Bits.& MODRM_B ) compileByte ( modRm ) ; if ( sib && ( controlFlags Bits.& SIB_B ) ) compileByte ( sib ) ; if ( disp && ( controlFlags Bits.& DISP_B ) ) _Compile_ImmOrDispData ( disp, dispSize, ( controlFlags Bits.& DISP_B ) ) ; if ( imm || ( controlFlags Bits.& IMM_B ) ) _Compile_ImmOrDispData ( imm, immSize, ( controlFlags Bits.& IMM_B ) ) ; } [39;49m
Source code file location of [34;49m_Compile_Write_Instruction_X64[39;49m : "namespaces/compiler/x64.cft" : 182.112 :: we are now at : namespaces/compiler/x64.cft : 202.43
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04a1fc -- code size = 610 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49m_Compile_Write_Instruction_X64[39;49m : definition = 0x00007fa6de04a1fc : disassembly at namespaces/compiler/x64.cft : 202.43 :
[34;49m ..                                  void [39;49m[33;40m_Compile_Write_Instruction_X64[39;49m[34;49m ( rex, opCode0, opCode1, modRm, controlFlags, sib, disp, dis .. [39;49m[32;49m
0x7fa6de04a1fc    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04a200    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04a204    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m .. , disp, dispSize, imm, immSize ) { if [39;49m[33;40m([39;49m[34;49m rex ) compileByte ( rex ) ;  if ( opCode0 ) compileByte ( opCode0 ) ;  if ( opCode1 ) com .. [39;49m[32;49m
0x7fa6de04a20b    498b47b0                mov rax, [r15-0x50]                                    [39;49m
[34;49m .. ze ) { if ( rex ) compileByte ( rex ) [39;49m[33;40m;[39;49m[34;49m  if ( opCode0 ) compileByte ( opCode0 ) ;  if ( opCode1 ) compileByte ( opCode1 ) ;  if ( .. [39;49m[32;49m
0x7fa6de04a20f    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de04a212    0f8422000000            jz 0x7fa6de04a23a          	< C_Syntax.[34;49m_Compile_Write_Instruction_X64[39;49m+62 >[39;49m
[34;49m ..  immSize ) { if ( rex ) compileByte ( [39;49m[33;40mrex[39;49m[34;49m ) ;  if ( opCode0 ) compileByte ( opCode0 ) ;  if ( opCode1 ) compileByte ( opCode1 ) ; .. [39;49m[32;49m
0x7fa6de04a218    498b47b0                mov rax, [r15-0x50]                                    [39;49m[32;49m
0x7fa6de04a21c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a220    498906                  mov [r14], rax                                         [39;49m
[34;49m .. dispSize, imm, immSize ) { if ( rex ) [39;49m[33;40mcompileByte[39;49m[34;49m ( rex ) ;  if ( opCode0 ) compileByte ( opCode0 ) ;  if ( opCode1 ) compileByte .. [39;49m[32;49m
0x7fa6de04a223    49b8f433efbf1d560000    mov r8, 0x561dbfef33f4                                 [39;49m[32;49m
0x7fa6de04a22d    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04a237    49ffd1                  call r9                    	< Compiling.[34;49mcompileByte[39;49m : 0x0000561dbfef33f4 >[39;49m
[34;49m ..  if ( rex ) compileByte ( rex ) ;  if [39;49m[33;40m([39;49m[34;49m opCode0 ) compileByte ( opCode0 ) ;  if ( opCode1 ) compileByte ( opCode1 ) ;  if ( contr .. [39;49m[32;49m
0x7fa6de04a23a    498b47b8                mov rax, [r15-0x48]                                    [39;49m
[34;49m .. f ( opCode0 ) compileByte ( opCode0 ) [39;49m[33;40m;[39;49m[34;49m  if ( opCode1 ) compileByte ( opCode1 ) ;  if ( controlFlags Bits.& MODRM_B ) compileByte .. [39;49m[32;49m
0x7fa6de04a23e    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de04a241    0f8422000000            jz 0x7fa6de04a269          	< C_Syntax.[34;49m_Compile_Write_Instruction_X64[39;49m+109 >[39;49m
[34;49m .. rex ) ;  if ( opCode0 ) compileByte ( [39;49m[33;40mopCode0[39;49m[34;49m ) ;  if ( opCode1 ) compileByte ( opCode1 ) ;  if ( controlFlags Bits.& MODRM_B ) c .. [39;49m[32;49m
0x7fa6de04a247    498b47b8                mov rax, [r15-0x48]                                    [39;49m[32;49m
0x7fa6de04a24b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a24f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. compileByte ( rex ) ;  if ( opCode0 ) [39;49m[33;40mcompileByte[39;49m[34;49m ( opCode0 ) ;  if ( opCode1 ) compileByte ( opCode1 ) ;  if ( controlFlags Bits .. [39;49m[32;49m
0x7fa6de04a252    49b8f433efbf1d560000    mov r8, 0x561dbfef33f4                                 [39;49m[32;49m
0x7fa6de04a25c    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04a266    49ffd1                  call r9                    	< Compiling.[34;49mcompileByte[39;49m : 0x0000561dbfef33f4 >[39;49m
[34;49m .. Code0 ) compileByte ( opCode0 ) ;  if [39;49m[33;40m([39;49m[34;49m opCode1 ) compileByte ( opCode1 ) ;  if ( controlFlags Bits.& MODRM_B ) compileByte ( mod .. [39;49m[32;49m
0x7fa6de04a269    498b47c0                mov rax, [r15-0x40]                                    [39;49m
[34;49m .. f ( opCode1 ) compileByte ( opCode1 ) [39;49m[33;40m;[39;49m[34;49m  if ( controlFlags Bits.& MODRM_B ) compileByte ( modRm ) ; if ( sib && ( controlFlags Bi .. [39;49m[32;49m
0x7fa6de04a26d    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de04a270    0f8422000000            jz 0x7fa6de04a298          	< C_Syntax.[34;49m_Compile_Write_Instruction_X64[39;49m+156 >[39;49m
[34;49m .. de0 ) ;  if ( opCode1 ) compileByte ( [39;49m[33;40mopCode1[39;49m[34;49m ) ;  if ( controlFlags Bits.& MODRM_B ) compileByte ( modRm ) ; if ( sib && ( contr .. [39;49m[32;49m
0x7fa6de04a276    498b47c0                mov rax, [r15-0x40]                                    [39;49m[32;49m
0x7fa6de04a27a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a27e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ileByte ( opCode0 ) ;  if ( opCode1 ) [39;49m[33;40mcompileByte[39;49m[34;49m ( opCode1 ) ;  if ( controlFlags Bits.& MODRM_B ) compileByte ( modRm ) ; if (  .. [39;49m[32;49m
0x7fa6de04a281    49b8f433efbf1d560000    mov r8, 0x561dbfef33f4                                 [39;49m[32;49m
0x7fa6de04a28b    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04a295    49ffd1                  call r9                    	< Compiling.[34;49mcompileByte[39;49m : 0x0000561dbfef33f4 >[39;49m
[34;49m .. de1 ) compileByte ( opCode1 ) ;  if ( [39;49m[33;40mcontrolFlags[39;49m[34;49m Bits.& MODRM_B ) compileByte ( modRm ) ; if ( sib && ( controlFlags Bits.& SIB .. [39;49m[32;49m
0x7fa6de04a298    498b47d0                mov rax, [r15-0x30]                                    [39;49m
[34;49m .. opCode1 ) ;  if ( controlFlags Bits.& [39;49m[33;40mMODRM_B[39;49m[34;49m ) compileByte ( modRm ) ; if ( sib && ( controlFlags Bits.& SIB_B ) ) compileByte ( .. [39;49m[32;49m
0x7fa6de04a29c    48b90200000000000000    mov rcx, 0x2                                           [39;49m[32;49m
0x7fa6de04a2a6    4823c1                  and rax, rcx                                           [39;49m
[34;49m .. its.& MODRM_B ) compileByte ( modRm ) [39;49m[33;40m;[39;49m[34;49m if ( sib && ( controlFlags Bits.& SIB_B ) ) compileByte ( sib ) ; if ( disp && ( controlF .. [39;49m[32;49m
0x7fa6de04a2a9    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de04a2ac    0f8422000000            jz 0x7fa6de04a2d4          	< C_Syntax.[34;49m_Compile_Write_Instruction_X64[39;49m+216 >[39;49m
[34;49m .. lFlags Bits.& MODRM_B ) compileByte ( [39;49m[33;40mmodRm[39;49m[34;49m ) ; if ( sib && ( controlFlags Bits.& SIB_B ) ) compileByte ( sib ) ; if ( disp && (  .. [39;49m[32;49m
0x7fa6de04a2b2    498b47c8                mov rax, [r15-0x38]                                    [39;49m[32;49m
0x7fa6de04a2b6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a2ba    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ;  if ( controlFlags Bits.& MODRM_B ) [39;49m[33;40mcompileByte[39;49m[34;49m ( modRm ) ; if ( sib && ( controlFlags Bits.& SIB_B ) ) compileByte ( sib ) ; i .. [39;49m[32;49m
0x7fa6de04a2bd    49b8f433efbf1d560000    mov r8, 0x561dbfef33f4                                 [39;49m[32;49m
0x7fa6de04a2c7    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04a2d1    49ffd1                  call r9                    	< Compiling.[34;49mcompileByte[39;49m : 0x0000561dbfef33f4 >[39;49m
[34;49m .. ODRM_B ) compileByte ( modRm ) ; if ( [39;49m[33;40msib[39;49m[34;49m && ( controlFlags Bits.& SIB_B ) ) compileByte ( sib ) ; if ( disp && ( controlFlags Bi .. [39;49m[32;49m
0x7fa6de04a2d4    498b47d8                mov rax, [r15-0x28]                                    [39;49m[32;49m
0x7fa6de04a2d8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a2dc    498906                  mov [r14], rax                                         [39;49m
[34;49m .. compileByte ( modRm ) ; if ( sib && ( [39;49m[33;40mcontrolFlags[39;49m[34;49m Bits.& SIB_B ) ) compileByte ( sib ) ; if ( disp && ( controlFlags Bits.& DISP .. [39;49m[32;49m
0x7fa6de04a2df    498b47d0                mov rax, [r15-0x30]                                    [39;49m
[34;49m .. ) ; if ( sib && ( controlFlags Bits.& [39;49m[33;40mSIB_B[39;49m[34;49m ) ) compileByte ( sib ) ; if ( disp && ( controlFlags Bits.& DISP_B ) ) _Compile_ImmO .. [39;49m[32;49m
0x7fa6de04a2e3    48b90400000000000000    mov rcx, 0x4                                           [39;49m
[34;49m .. m ) ; if ( sib && ( controlFlags Bits.[39;49m[33;40m&[39;49m[34;49m SIB_B ) ) compileByte ( sib ) ; if ( disp && ( controlFlags Bits.& DISP_B ) ) _Compile_Im .. [39;49m[32;49m
0x7fa6de04a2ed    4823c1                  and rax, rcx                                           [39;49m[32;49m
0x7fa6de04a2f0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a2f4    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ( sib && ( controlFlags Bits.& SIB_B [39;49m[33;40m)[39;49m[34;49m ) compileByte ( sib ) ; if ( disp && ( controlFlags Bits.& DISP_B ) ) _Compile_ImmOrDispD .. [39;49m[32;49m
0x7fa6de04a2f7    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04a2fa    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04a2fe    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fa6de04a302    4885c9                  test rcx, rcx                                          [39;49m[32;49m
0x7fa6de04a305    7405                    jz 0xde04a30c                                          [39;49m
[34;49m .. _B ) compileByte ( modRm ) ; if ( sib [39;49m[33;40m&&[39;49m[34;49m ( controlFlags Bits.& SIB_B ) ) compileByte ( sib ) ; if ( disp && ( controlFlags Bits.& .. [39;49m[32;49m
0x7fa6de04a307    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de04a30a    750c                    jnz 0xde04a318                                         [39;49m[32;49m
0x7fa6de04a30c    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de04a316    eb0a                    jmp 0x7fa6de04a322         	< C_Syntax.[34;49m_Compile_Write_Instruction_X64[39;49m+294 >[39;49m[32;49m
0x7fa6de04a318    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de04a322    0f8422000000            jz 0x7fa6de04a34a          	< C_Syntax.[34;49m_Compile_Write_Instruction_X64[39;49m+334 >[39;49m
[34;49m .. lFlags Bits.& SIB_B ) ) compileByte ( [39;49m[33;40msib[39;49m[34;49m ) ; if ( disp && ( controlFlags Bits.& DISP_B ) ) _Compile_ImmOrDispData ( disp, dispSi .. [39;49m[32;49m
0x7fa6de04a328    498b47d8                mov rax, [r15-0x28]                                    [39;49m[32;49m
0x7fa6de04a32c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a330    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ib && ( controlFlags Bits.& SIB_B ) ) [39;49m[33;40mcompileByte[39;49m[34;49m ( sib ) ; if ( disp && ( controlFlags Bits.& DISP_B ) ) _Compile_ImmOrDispData  .. [39;49m[32;49m
0x7fa6de04a333    49b8f433efbf1d560000    mov r8, 0x561dbfef33f4                                 [39;49m[32;49m
0x7fa6de04a33d    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04a347    49ffd1                  call r9                    	< Compiling.[34;49mcompileByte[39;49m : 0x0000561dbfef33f4 >[39;49m
[34;49m ..  SIB_B ) ) compileByte ( sib ) ; if ( [39;49m[33;40mdisp[39;49m[34;49m && ( controlFlags Bits.& DISP_B ) ) _Compile_ImmOrDispData ( disp, dispSize, ( control .. [39;49m[32;49m
0x7fa6de04a34a    498b47e0                mov rax, [r15-0x20]                                    [39;49m[32;49m
0x7fa6de04a34e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a352    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  compileByte ( sib ) ; if ( disp && ( [39;49m[33;40mcontrolFlags[39;49m[34;49m Bits.& DISP_B ) ) _Compile_ImmOrDispData ( disp, dispSize, ( controlFlags Bits .. [39;49m[32;49m
0x7fa6de04a355    498b47d0                mov rax, [r15-0x30]                                    [39;49m
[34;49m ..  ; if ( disp && ( controlFlags Bits.& [39;49m[33;40mDISP_B[39;49m[34;49m ) ) _Compile_ImmOrDispData ( disp, dispSize, ( controlFlags Bits.& DISP_B ) ) ; if ( .. [39;49m[32;49m
0x7fa6de04a359    48b90800000000000000    mov rcx, 0x8                                           [39;49m
[34;49m ..  ) ; if ( disp && ( controlFlags Bits.[39;49m[33;40m&[39;49m[34;49m DISP_B ) ) _Compile_ImmOrDispData ( disp, dispSize, ( controlFlags Bits.& DISP_B ) ) ; if .. [39;49m[32;49m
0x7fa6de04a363    4823c1                  and rax, rcx                                           [39;49m[32;49m
0x7fa6de04a366    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a36a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  disp && ( controlFlags Bits.& DISP_B [39;49m[33;40m)[39;49m[34;49m ) _Compile_ImmOrDispData ( disp, dispSize, ( controlFlags Bits.& DISP_B ) ) ; if ( imm || .. [39;49m[32;49m
0x7fa6de04a36d    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04a370    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04a374    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fa6de04a378    4885c9                  test rcx, rcx                                          [39;49m[32;49m
0x7fa6de04a37b    7405                    jz 0xde04a382                                          [39;49m
[34;49m .. B ) ) compileByte ( sib ) ; if ( disp [39;49m[33;40m&&[39;49m[34;49m ( controlFlags Bits.& DISP_B ) ) _Compile_ImmOrDispData ( disp, dispSize, ( controlFlags .. [39;49m[32;49m
0x7fa6de04a37d    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de04a380    750c                    jnz 0xde04a38e                                         [39;49m[32;49m
0x7fa6de04a382    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de04a38c    eb0a                    jmp 0x7fa6de04a398         	< C_Syntax.[34;49m_Compile_Write_Instruction_X64[39;49m+412 >[39;49m[32;49m
0x7fa6de04a38e    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de04a398    0f843b000000            jz 0x7fa6de04a3d9          	< C_Syntax.[34;49m_Compile_Write_Instruction_X64[39;49m+477 >[39;49m
[34;49m .. & DISP_B ) ) _Compile_ImmOrDispData ( [39;49m[33;40mdisp[39;49m[34;49m, dispSize, ( controlFlags Bits.& DISP_B ) ) ; if ( imm || ( controlFlags Bits.& IMM_B  .. [39;49m[32;49m
0x7fa6de04a39e    498b47e0                mov rax, [r15-0x20]                                    [39;49m[32;49m
0x7fa6de04a3a2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a3a6    498906                  mov [r14], rax                                         [39;49m
[34;49m .. _B ) ) _Compile_ImmOrDispData ( disp, [39;49m[33;40mdispSize[39;49m[34;49m, ( controlFlags Bits.& DISP_B ) ) ; if ( imm || ( controlFlags Bits.& IMM_B ) ) _C .. [39;49m[32;49m
0x7fa6de04a3a9    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fa6de04a3ad    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a3b1    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ile_ImmOrDispData ( disp, dispSize, ( [39;49m[33;40mcontrolFlags[39;49m[34;49m Bits.& DISP_B ) ) ; if ( imm || ( controlFlags Bits.& IMM_B ) ) _Compile_ImmOr .. [39;49m[32;49m
0x7fa6de04a3b4    498b47d0                mov rax, [r15-0x30]                                    [39;49m
[34;49m .. disp, dispSize, ( controlFlags Bits.& [39;49m[33;40mDISP_B[39;49m[34;49m ) ) ; if ( imm || ( controlFlags Bits.& IMM_B ) ) _Compile_ImmOrDispData ( imm, immS .. [39;49m[32;49m
0x7fa6de04a3b8    48b90800000000000000    mov rcx, 0x8                                           [39;49m
[34;49m .. ( disp, dispSize, ( controlFlags Bits.[39;49m[33;40m&[39;49m[34;49m DISP_B ) ) ; if ( imm || ( controlFlags Bits.& IMM_B ) ) _Compile_ImmOrDispData ( imm, im .. [39;49m[32;49m
0x7fa6de04a3c2    4823c1                  and rax, rcx                                           [39;49m[32;49m
0x7fa6de04a3c5    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a3c9    498906                  mov [r14], rax                                         [39;49m
[34;49m .. p && ( controlFlags Bits.& DISP_B ) ) [39;49m[33;40m_Compile_ImmOrDispData[39;49m[34;49m ( disp, dispSize, ( controlFlags Bits.& DISP_B ) ) ; if ( imm || ( c .. [39;49m[32;49m
0x7fa6de04a3cc    49b97fa004dea67f0000    mov r9, 0x7fa6de04a07f                                 [39;49m[32;49m
0x7fa6de04a3d6    49ffd1                  call r9                    	< C_Syntax.[34;49m_Compile_ImmOrDispData[39;49m : 0x00007fa6de04a07f >[39;49m
[34;49m .. controlFlags Bits.& DISP_B ) ) ; if ( [39;49m[33;40mimm[39;49m[34;49m || ( controlFlags Bits.& IMM_B ) ) _Compile_ImmOrDispData ( imm, immSize, ( controlFlag .. [39;49m[32;49m
0x7fa6de04a3d9    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de04a3dd    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a3e1    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ags Bits.& DISP_B ) ) ; if ( imm || ( [39;49m[33;40mcontrolFlags[39;49m[34;49m Bits.& IMM_B ) ) _Compile_ImmOrDispData ( imm, immSize, ( controlFlags Bits.&  .. [39;49m[32;49m
0x7fa6de04a3e4    498b47d0                mov rax, [r15-0x30]                                    [39;49m
[34;49m .. ) ; if ( imm || ( controlFlags Bits.& [39;49m[33;40mIMM_B[39;49m[34;49m ) ) _Compile_ImmOrDispData ( imm, immSize, ( controlFlags Bits.& IMM_B ) ) ; }  .. [39;49m[32;49m
0x7fa6de04a3e8    48b91000000000000000    mov rcx, 0x10                                          [39;49m
[34;49m .. ) ) ; if ( imm || ( controlFlags Bits.[39;49m[33;40m&[39;49m[34;49m IMM_B ) ) _Compile_ImmOrDispData ( imm, immSize, ( controlFlags Bits.& IMM_B ) ) ; }  .. [39;49m[32;49m
0x7fa6de04a3f2    4823c1                  and rax, rcx                                           [39;49m[32;49m
0x7fa6de04a3f5    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a3f9    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ( imm || ( controlFlags Bits.& IMM_B [39;49m[33;40m)[39;49m[34;49m ) _Compile_ImmOrDispData ( imm, immSize, ( controlFlags Bits.& IMM_B ) ) ; }  .. [39;49m[32;49m
0x7fa6de04a3fc    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04a3ff    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04a403    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fa6de04a407    480bc1                  or rax, rcx                                            [39;49m[32;49m
0x7fa6de04a40a    4885c0                  test rax, rax                                          [39;49m
[34;49m .. Size, ( controlFlags Bits.& IMM_B ) ) [39;49m[33;40m;[39;49m[34;49m }  .. [39;49m[32;49m
0x7fa6de04a40d    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de04a410    0f843b000000            jz 0x7fa6de04a451          	< C_Syntax.[34;49m_Compile_Write_Instruction_X64[39;49m+597 >[39;49m
[34;49m .. .& IMM_B ) ) _Compile_ImmOrDispData ( [39;49m[33;40mimm[39;49m[34;49m, immSize, ( controlFlags Bits.& IMM_B ) ) ; }  .. [39;49m[32;49m
0x7fa6de04a416    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de04a41a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a41e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. M_B ) ) _Compile_ImmOrDispData ( imm, [39;49m[33;40mimmSize[39;49m[34;49m, ( controlFlags Bits.& IMM_B ) ) ; }  .. [39;49m[32;49m
0x7fa6de04a421    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04a425    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a429    498906                  mov [r14], rax                                         [39;49m
[34;49m .. mpile_ImmOrDispData ( imm, immSize, ( [39;49m[33;40mcontrolFlags[39;49m[34;49m Bits.& IMM_B ) ) ; }  .. [39;49m[32;49m
0x7fa6de04a42c    498b47d0                mov rax, [r15-0x30]                                    [39;49m
[34;49m .. ( imm, immSize, ( controlFlags Bits.& [39;49m[33;40mIMM_B[39;49m[34;49m ) ) ; }  .. [39;49m[32;49m
0x7fa6de04a430    48b91000000000000000    mov rcx, 0x10                                          [39;49m
[34;49m .. a ( imm, immSize, ( controlFlags Bits.[39;49m[33;40m&[39;49m[34;49m IMM_B ) ) ; }  .. [39;49m[32;49m
0x7fa6de04a43a    4823c1                  and rax, rcx                                           [39;49m[32;49m
0x7fa6de04a43d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a441    498906                  mov [r14], rax                                         [39;49m
[34;49m .. mm || ( controlFlags Bits.& IMM_B ) ) [39;49m[33;40m_Compile_ImmOrDispData[39;49m[34;49m ( imm, immSize, ( controlFlags Bits.& IMM_B ) ) ; }  .. [39;49m[32;49m
0x7fa6de04a444    49b97fa004dea67f0000    mov r9, 0x7fa6de04a07f                                 [39;49m[32;49m
0x7fa6de04a44e    49ffd1                  call r9                    	< C_Syntax.[34;49m_Compile_ImmOrDispData[39;49m : 0x00007fa6de04a07f >[39;49m
[34;49m .. ze, ( controlFlags Bits.& IMM_B ) ) ; [39;49m[33;40m}[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de04a451    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04a455    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04a459    4983ee50                sub r14, 0x50                                          [39;49m[32;49m
0x7fa6de04a45d    c3                      ret                                                    [39;49m
Word_Disassemble : word - '_Compile_Write_Instruction_X64' :: codeSize = 609
Word : 0x00007fa6dd3de140 :: Compiled at : 0x00007fa6de04a1fc
 =============================
::> 'wdiss' was called at namespaces/compiler/x64.cft 202.43 <::

 =============================
C_Syntax.[34;49mCompile_CalculateWrite_Instruction_X64[39;49m <:> cfrTil compiled word, prefix
SourceCode for C_Syntax.[34;49mCompile_CalculateWrite_Instruction_X64[39;49m :> 
[34;49mvoid Compile_CalculateWrite_Instruction_X64 ( code0, code1, mod, reg, rm, controlFlags, sib, disp, dispSize, imm, immSize ) { byte rex = CalculateRex ( reg, rm, ( immSize == 8 ) || ( controlFlags Bits.& REX_W ) ) ; byte modRm = CalculateModRmByte ( mod, reg, rm, sib, disp ) ; _Compile_Write_Instruction_X64 ( rex, code0, code1, modRm, controlFlags, sib, disp, dispSize, imm, immSize ) ; } [39;49m
Source code file location of [34;49mCompile_CalculateWrite_Instruction_X64[39;49m : "namespaces/compiler/x64.cft" : 214.118 :: we are now at : namespaces/compiler/x64.cft : 220.51
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04a58c -- code size = 358 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mCompile_CalculateWrite_Instruction_X64[39;49m : definition = 0x00007fa6de04a58c : disassembly at namespaces/compiler/x64.cft : 220.51 :
[34;49m ..                                  void [39;49m[33;40mCompile_CalculateWrite_Instruction_X64[39;49m[34;49m ( code0, code1, mod, reg, rm, controlFlags, sib, dis .. [39;49m[32;49m
0x7fa6de04a58c    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04a590    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04a594    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m .. immSize ) { byte rex = CalculateRex ( [39;49m[33;40mreg[39;49m[34;49m, rm, ( immSize == 8 ) || ( controlFlags Bits.& REX_W ) ) ; byte modRm = CalculateModRmB .. [39;49m[32;49m
0x7fa6de04a59b    498b47c0                mov rax, [r15-0x40]                                    [39;49m[32;49m
0x7fa6de04a59f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a5a3    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ze ) { byte rex = CalculateRex ( reg, [39;49m[33;40mrm[39;49m[34;49m, ( immSize == 8 ) || ( controlFlags Bits.& REX_W ) ) ; byte modRm = CalculateModRmByte ( .. [39;49m[32;49m
0x7fa6de04a5a6    498b47c8                mov rax, [r15-0x38]                                    [39;49m[32;49m
0x7fa6de04a5aa    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a5ae    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  byte rex = CalculateRex ( reg, rm, ( [39;49m[33;40mimmSize[39;49m[34;49m == 8 ) || ( controlFlags Bits.& REX_W ) ) ; byte modRm = CalculateModRmByte ( mod,  .. [39;49m[32;49m
0x7fa6de04a5b1    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. x = CalculateRex ( reg, rm, ( immSize [39;49m[33;40m==[39;49m[34;49m 8 ) || ( controlFlags Bits.& REX_W ) ) ; byte modRm = CalculateModRmByte ( mod, reg, rm, .. [39;49m[32;49m
0x7fa6de04a5b5    4883f808                cmp rax, 0x8                                           [39;49m[32;49m
0x7fa6de04a5b9    0f94c0                  setz al                                                [39;49m
[34;49m ..  CalculateRex ( reg, rm, ( immSize == [39;49m[33;40m8[39;49m[34;49m ) || ( controlFlags Bits.& REX_W ) ) ; byte modRm = CalculateModRmByte ( mod, reg, rm, si .. [39;49m[32;49m
0x7fa6de04a5bc    480fb6c0                movzx rax, al                                          [39;49m[32;49m
0x7fa6de04a5c0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a5c4    498906                  mov [r14], rax                                         [39;49m
[34;49m .. eRex ( reg, rm, ( immSize == 8 ) || ( [39;49m[33;40mcontrolFlags[39;49m[34;49m Bits.& REX_W ) ) ; byte modRm = CalculateModRmByte ( mod, reg, rm, sib, disp ) .. [39;49m[32;49m
0x7fa6de04a5c7    498b47d0                mov rax, [r15-0x30]                                    [39;49m
[34;49m .. mSize == 8 ) || ( controlFlags Bits.& [39;49m[33;40mREX_W[39;49m[34;49m ) ) ; byte modRm = CalculateModRmByte ( mod, reg, rm, sib, disp ) ; _Compile_Write_In .. [39;49m[32;49m
0x7fa6de04a5cb    48b92000000000000000    mov rcx, 0x20                                          [39;49m
[34;49m .. immSize == 8 ) || ( controlFlags Bits.[39;49m[33;40m&[39;49m[34;49m REX_W ) ) ; byte modRm = CalculateModRmByte ( mod, reg, rm, sib, disp ) ; _Compile_Write_ .. [39;49m[32;49m
0x7fa6de04a5d5    4823c1                  and rax, rcx                                           [39;49m[32;49m
0x7fa6de04a5d8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a5dc    498906                  mov [r14], rax                                         [39;49m
[34;49m .. == 8 ) || ( controlFlags Bits.& REX_W [39;49m[33;40m)[39;49m[34;49m ) ; byte modRm = CalculateModRmByte ( mod, reg, rm, sib, disp ) ; _Compile_Write_Instruct .. [39;49m[32;49m
0x7fa6de04a5df    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04a5e2    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04a5e6    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fa6de04a5ea    480bc1                  or rax, rcx                                            [39;49m
[34;49m .. culateRex ( reg, rm, ( immSize == 8 ) [39;49m[33;40m||[39;49m[34;49m ( controlFlags Bits.& REX_W ) ) ; byte modRm = CalculateModRmByte ( mod, reg, rm, sib, d .. [39;49m[32;49m
0x7fa6de04a5ed    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de04a5f0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a5f4    498906                  mov [r14], rax                                         [39;49m
[34;49m .. dispSize, imm, immSize ) { byte rex = [39;49m[33;40mCalculateRex[39;49m[34;49m ( reg, rm, ( immSize == 8 ) || ( controlFlags Bits.& REX_W ) ) ; byte modRm =  .. [39;49m[32;49m
0x7fa6de04a5f7    49b963a404dea67f0000    mov r9, 0x7fa6de04a463                                 [39;49m[32;49m
0x7fa6de04a601    49ffd1                  call r9                    	< C_Syntax.[34;49mCalculateRex[39;49m : 0x00007fa6de04a463 >[39;49m
[34;49m .. disp, dispSize, imm, immSize ) { byte [39;49m[33;40mrex[39;49m[34;49m = CalculateRex ( reg, rm, ( immSize == 8 ) || ( controlFlags Bits.& REX_W ) ) ; byte mo .. [39;49m[32;49m
0x7fa6de04a604    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de04a608    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de04a60b    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04a60e    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. , dispSize, imm, immSize ) { byte rex [39;49m[33;40mstore[39;49m[34;49mculateRex ( reg, rm, ( immSize == 8 ) || ( controlFlags Bits.& REX_W ) ) ; byte modRm  .. [39;49m[32;49m
0x7fa6de04a612    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. ) ; byte modRm = CalculateModRmByte ( [39;49m[33;40mmod[39;49m[34;49m, reg, rm, sib, disp ) ; _Compile_Write_Instruction_X64 ( rex, code0, code1, modRm, cont .. [39;49m[32;49m
0x7fa6de04a615    498b47b8                mov rax, [r15-0x48]                                    [39;49m[32;49m
0x7fa6de04a619    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a61d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. yte modRm = CalculateModRmByte ( mod, [39;49m[33;40mreg[39;49m[34;49m, rm, sib, disp ) ; _Compile_Write_Instruction_X64 ( rex, code0, code1, modRm, controlFl .. [39;49m[32;49m
0x7fa6de04a620    498b47c0                mov rax, [r15-0x40]                                    [39;49m[32;49m
0x7fa6de04a624    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a628    498906                  mov [r14], rax                                         [39;49m
[34;49m .. odRm = CalculateModRmByte ( mod, reg, [39;49m[33;40mrm[39;49m[34;49m, sib, disp ) ; _Compile_Write_Instruction_X64 ( rex, code0, code1, modRm, controlFlags,  .. [39;49m[32;49m
0x7fa6de04a62b    498b47c8                mov rax, [r15-0x38]                                    [39;49m[32;49m
0x7fa6de04a62f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a633    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  = CalculateModRmByte ( mod, reg, rm, [39;49m[33;40msib[39;49m[34;49m, disp ) ; _Compile_Write_Instruction_X64 ( rex, code0, code1, modRm, controlFlags, sib, .. [39;49m[32;49m
0x7fa6de04a636    498b47d8                mov rax, [r15-0x28]                                    [39;49m[32;49m
0x7fa6de04a63a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a63e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. lculateModRmByte ( mod, reg, rm, sib, [39;49m[33;40mdisp[39;49m[34;49m ) ; _Compile_Write_Instruction_X64 ( rex, code0, code1, modRm, controlFlags, sib, disp .. [39;49m[32;49m
0x7fa6de04a641    498b47e0                mov rax, [r15-0x20]                                    [39;49m[32;49m
0x7fa6de04a645    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a649    498906                  mov [r14], rax                                         [39;49m
[34;49m .. Flags Bits.& REX_W ) ) ; byte modRm = [39;49m[33;40mCalculateModRmByte[39;49m[34;49m ( mod, reg, rm, sib, disp ) ; _Compile_Write_Instruction_X64 ( rex, code .. [39;49m[32;49m
0x7fa6de04a64c    49b9b89e04dea67f0000    mov r9, 0x7fa6de049eb8                                 [39;49m[32;49m
0x7fa6de04a656    49ffd1                  call r9                    	< C_Syntax.[34;49mCalculateModRmByte[39;49m : 0x00007fa6de049eb8 >[39;49m
[34;49m ..  controlFlags Bits.& REX_W ) ) ; byte [39;49m[33;40mmodRm[39;49m[34;49m = CalculateModRmByte ( mod, reg, rm, sib, disp ) ; _Compile_Write_Instruction_X64 ( r .. [39;49m[32;49m
0x7fa6de04a659    498d4710                lea rax, [r15+0x10]                                    [39;49m[32;49m
0x7fa6de04a65d    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de04a660    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04a663    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. olFlags Bits.& REX_W ) ) ; byte modRm [39;49m[33;40m=[39;49m[34;49m CalculateModRmByte ( mod, reg, rm, sib, disp ) ; _Compile_Write_Instruction_X64 ( rex, co .. [39;49m[32;49m
0x7fa6de04a667    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  ) ; _Compile_Write_Instruction_X64 ( [39;49m[33;40mrex[39;49m[34;49m, code0, code1, modRm, controlFlags, sib, disp, dispSize, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04a66a    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de04a66e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a672    498906                  mov [r14], rax                                         [39;49m
[34;49m .. _Compile_Write_Instruction_X64 ( rex, [39;49m[33;40mcode0[39;49m[34;49m, code1, modRm, controlFlags, sib, disp, dispSize, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04a675    498b47a8                mov rax, [r15-0x58]                                    [39;49m[32;49m
0x7fa6de04a679    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a67d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. e_Write_Instruction_X64 ( rex, code0, [39;49m[33;40mcode1[39;49m[34;49m, modRm, controlFlags, sib, disp, dispSize, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04a680    498b47b0                mov rax, [r15-0x50]                                    [39;49m[32;49m
0x7fa6de04a684    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a688    498906                  mov [r14], rax                                         [39;49m
[34;49m .. _Instruction_X64 ( rex, code0, code1, [39;49m[33;40mmodRm[39;49m[34;49m, controlFlags, sib, disp, dispSize, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04a68b    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fa6de04a68f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a693    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ction_X64 ( rex, code0, code1, modRm, [39;49m[33;40mcontrolFlags[39;49m[34;49m, sib, disp, dispSize, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04a696    498b47d0                mov rax, [r15-0x30]                                    [39;49m[32;49m
0x7fa6de04a69a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a69e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. x, code0, code1, modRm, controlFlags, [39;49m[33;40msib[39;49m[34;49m, disp, dispSize, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04a6a1    498b47d8                mov rax, [r15-0x28]                                    [39;49m[32;49m
0x7fa6de04a6a5    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a6a9    498906                  mov [r14], rax                                         [39;49m
[34;49m .. de0, code1, modRm, controlFlags, sib, [39;49m[33;40mdisp[39;49m[34;49m, dispSize, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04a6ac    498b47e0                mov rax, [r15-0x20]                                    [39;49m[32;49m
0x7fa6de04a6b0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a6b4    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ode1, modRm, controlFlags, sib, disp, [39;49m[33;40mdispSize[39;49m[34;49m, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04a6b7    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fa6de04a6bb    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a6bf    498906                  mov [r14], rax                                         [39;49m
[34;49m .. m, controlFlags, sib, disp, dispSize, [39;49m[33;40mimm[39;49m[34;49m, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04a6c2    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de04a6c6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a6ca    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ntrolFlags, sib, disp, dispSize, imm, [39;49m[33;40mimmSize[39;49m[34;49m ) ; }  .. [39;49m[32;49m
0x7fa6de04a6cd    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04a6d1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a6d5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. dRmByte ( mod, reg, rm, sib, disp ) ; [39;49m[33;40m_Compile_Write_Instruction_X64[39;49m[34;49m ( rex, code0, code1, modRm, controlFlags, sib, disp, dispSiz .. [39;49m[32;49m
0x7fa6de04a6d8    49b9fca104dea67f0000    mov r9, 0x7fa6de04a1fc                                 [39;49m[32;49m
0x7fa6de04a6e2    49ffd1                  call r9                    	< C_Syntax.[34;49m_Compile_Write_Instruction_X64[39;49m : 0x00007fa6de04a1fc >[39;49m
[34;49m .. sib, disp, dispSize, imm, immSize ) ; [39;49m[33;40m}[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de04a6e5    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04a6e9    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04a6ed    4983ee58                sub r14, 0x58                                          [39;49m[32;49m
0x7fa6de04a6f1    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'Compile_CalculateWrite_Instruction_X64' :: codeSize = 357
Word : 0x00007fa6dd3a3c28 :: Compiled at : 0x00007fa6de04a58c
 =============================
::> 'wdiss' was called at namespaces/compiler/x64.cft 220.51 <::

 =============================
C_Syntax.[34;49mCompile_Move[39;49m <:> cfrTil compiled word, prefix
SourceCode for C_Syntax.[34;49mCompile_Move[39;49m :> 
[34;49mvoid Compile_Move ( direction, mod, reg, rm, operandSize, sib, disp, dispSize, imm, immSize ) { uint8 opCode ; uint16 controlFlags = ( disp ? DISP_B : 0 ) | ( sib ? SIB_B : 0 ) | MODRM_B ; if ( imm || immSize ) { reg = 0 ; if ( immSize == 1 ) opCode = 0xb0 ; else opCode = 0xb8 ; opCode += ( rm Bits.& 7 ) ; controlFlags |= IMM_B ; } else { opCode = 0x88 ; if ( direction == REG ) opCode |= 2 ; if ( operandSize > 1 ) opCode += 1 ; if ( operandSize == 8 ) controlFlags |= REX_W ; if ( ! mod ) { if ( disp == 0 ) mod = 0 ; else if ( disp <= 0xff ) mod = 1 ; else if ( disp >= 0x100 ) mod = 2 ; } controlFlags |= REX_B ; } Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, reg, rm, controlFlags, sib, disp, dispSize, imm, immSize ) ; } [39;49m
Source code file location of [34;49mCompile_Move[39;49m : "namespaces/compiler/x64.cft" : 223.88 :: we are now at : namespaces/compiler/x64.cft : 250.25
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04a6f7 -- code size = 766 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mCompile_Move[39;49m : definition = 0x00007fa6de04a6f7 : disassembly at namespaces/compiler/x64.cft : 250.25 :
[34;49m ..                                  void [39;49m[33;40mCompile_Move[39;49m[34;49m ( direction, mod, reg, rm, operandSize, sib, disp, dispSize, imm, immSize ) {  .. [39;49m[32;49m
0x7fa6de04a6f7    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04a6fb    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04a6ff    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m .. int8 opCode ; uint16 controlFlags = ( [39;49m[33;40mdisp[39;49m[34;49m ? DISP_B : 0 ) | ( sib ? SIB_B : 0 ) | MODRM_B ; if ( imm || immSize ) { reg = 0 ; if  .. [39;49m[32;49m
0x7fa6de04a706    498b47e0                mov rax, [r15-0x20]                                    [39;49m[32;49m
0x7fa6de04a70a    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de04a70d    0f8416000000            jz 0x7fa6de04a729          	< C_Syntax.[34;49mCompile_Move[39;49m+50 >[39;49m
[34;49m .. Code ; uint16 controlFlags = ( disp ? [39;49m[33;40mDISP_B[39;49m[34;49m : 0 ) | ( sib ? SIB_B : 0 ) | MODRM_B ; if ( imm || immSize ) { reg = 0 ; if ( immSi .. [39;49m[32;49m
0x7fa6de04a713    48b80800000000000000    mov rax, 0x8                                           [39;49m[32;49m
0x7fa6de04a71d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a721    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04a724    e911000000              jmp 0x7fa6de04a73a         	< C_Syntax.[34;49mCompile_Move[39;49m+67 >[39;49m
[34;49m .. nt16 controlFlags = ( disp ? DISP_B : [39;49m[33;40m0[39;49m[34;49m ) | ( sib ? SIB_B : 0 ) | MODRM_B ; if ( imm || immSize ) { reg = 0 ; if ( immSize == 1 ) .. [39;49m[32;49m
0x7fa6de04a729    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de04a733    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a737    498906                  mov [r14], rax                                         [39;49m
[34;49m .. trolFlags = ( disp ? DISP_B : 0 ) | ( [39;49m[33;40msib[39;49m[34;49m ? SIB_B : 0 ) | MODRM_B ; if ( imm || immSize ) { reg = 0 ; if ( immSize == 1 ) opCode  .. [39;49m[32;49m
0x7fa6de04a73a    498b47d8                mov rax, [r15-0x28]                                    [39;49m[32;49m
0x7fa6de04a73e    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de04a741    0f8416000000            jz 0x7fa6de04a75d          	< C_Syntax.[34;49mCompile_Move[39;49m+102 >[39;49m
[34;49m .. ags = ( disp ? DISP_B : 0 ) | ( sib ? [39;49m[33;40mSIB_B[39;49m[34;49m : 0 ) | MODRM_B ; if ( imm || immSize ) { reg = 0 ; if ( immSize == 1 ) opCode = 0xb0 .. [39;49m[32;49m
0x7fa6de04a747    48b80400000000000000    mov rax, 0x4                                           [39;49m[32;49m
0x7fa6de04a751    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a755    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04a758    e911000000              jmp 0x7fa6de04a76e         	< C_Syntax.[34;49mCompile_Move[39;49m+119 >[39;49m
[34;49m .. disp ? DISP_B : 0 ) | ( sib ? SIB_B : [39;49m[33;40m0[39;49m[34;49m ) | MODRM_B ; if ( imm || immSize ) { reg = 0 ; if ( immSize == 1 ) opCode = 0xb0 ; else  .. [39;49m[32;49m
0x7fa6de04a75d    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de04a767    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a76b    498906                  mov [r14], rax                                         [39;49m
[34;49m .. sp ? DISP_B : 0 ) | ( sib ? SIB_B : 0 [39;49m[33;40m)[39;49m[34;49m | MODRM_B ; if ( imm || immSize ) { reg = 0 ; if ( immSize == 1 ) opCode = 0xb0 ; else op .. [39;49m[32;49m
0x7fa6de04a76e    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04a771    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04a775    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  controlFlags = ( disp ? DISP_B : 0 ) [39;49m[33;40m|[39;49m[34;49m ( sib ? SIB_B : 0 ) | MODRM_B ; if ( imm || immSize ) { reg = 0 ; if ( immSize == 1 ) opC .. [39;49m[32;49m
0x7fa6de04a779    480bc1                  or rax, rcx                                            [39;49m
[34;49m ..  DISP_B : 0 ) | ( sib ? SIB_B : 0 ) | [39;49m[33;40mMODRM_B[39;49m[34;49m ; if ( imm || immSize ) { reg = 0 ; if ( immSize == 1 ) opCode = 0xb0 ; else opCode .. [39;49m[32;49m
0x7fa6de04a77c    48b90200000000000000    mov rcx, 0x2                                           [39;49m
[34;49m ..  ? DISP_B : 0 ) | ( sib ? SIB_B : 0 ) [39;49m[33;40m|[39;49m[34;49m MODRM_B ; if ( imm || immSize ) { reg = 0 ; if ( immSize == 1 ) opCode = 0xb0 ; else opCo .. [39;49m[32;49m
0x7fa6de04a786    480bc1                  or rax, rcx                                            [39;49m
[34;49m .. mm, immSize ) { uint8 opCode ; uint16 [39;49m[33;40mcontrolFlags[39;49m[34;49m = ( disp ? DISP_B : 0 ) | ( sib ? SIB_B : 0 ) | MODRM_B ; if ( imm || immSize  .. [39;49m[32;49m
0x7fa6de04a789    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m ..  { uint8 opCode ; uint16 controlFlags [39;49m[33;40mstore[39;49m[34;49misp ? DISP_B : 0 ) | ( sib ? SIB_B : 0 ) | MODRM_B ; if ( imm || immSize ) { reg = 0 ; .. [39;49m[32;49m
0x7fa6de04a78d    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  ( sib ? SIB_B : 0 ) | MODRM_B ; if ( [39;49m[33;40mimm[39;49m[34;49m || immSize ) { reg = 0 ; if ( immSize == 1 ) opCode = 0xb0 ; else opCode = 0xb8 ; opCod .. [39;49m[32;49m
0x7fa6de04a790    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. ? SIB_B : 0 ) | MODRM_B ; if ( imm || [39;49m[33;40mimmSize[39;49m[34;49m ) { reg = 0 ; if ( immSize == 1 ) opCode = 0xb0 ; else opCode = 0xb8 ; opCode += (  .. [39;49m[32;49m
0x7fa6de04a794    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04a798    480bc1                  or rax, rcx                                            [39;49m[32;49m
0x7fa6de04a79b    4885c0                  test rax, rax                                          [39;49m
[34;49m .. ) mod = 2 ; } controlFlags |= REX_B ; [39;49m[33;40m}[39;49m[34;49m Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, reg, rm, controlFlags, sib, disp .. [39;49m[32;49m
0x7fa6de04a79e    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de04a7a1    0f8489000000            jz 0x7fa6de04a830          	< C_Syntax.[34;49mCompile_Move[39;49m+313 >[39;49m
[34;49m ..  ) controlFlags |= REX_W ; if ( ! mod [39;49m[33;40m)[39;49m[34;49m { if ( disp == 0 ) mod = 0 ; else if ( disp <= 0xff ) mod = 1 ; else if ( disp >= 0x100 ) .. [39;49m[32;49m
0x7fa6de04a7a7    48b80000000000000000    mov rax, 0x0                                           [39;49m
[34;49m .. ) | MODRM_B ; if ( imm || immSize ) { [39;49m[33;40mreg[39;49m[34;49m = 0 ; if ( immSize == 1 ) opCode = 0xb0 ; else opCode = 0xb8 ; opCode += ( rm Bits.& 7  .. [39;49m[32;49m
0x7fa6de04a7b1    498d4fc0                lea rcx, [r15-0x40]                                    [39;49m
[34;49m .. MODRM_B ; if ( imm || immSize ) { reg [39;49m[33;40m=[39;49m[34;49m 0 ; if ( immSize == 1 ) opCode = 0xb0 ; else opCode = 0xb8 ; opCode += ( rm Bits.& 7 ) ;  .. [39;49m[32;49m
0x7fa6de04a7b5    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. f ( imm || immSize ) { reg = 0 ; if ( [39;49m[33;40mimmSize[39;49m[34;49m == 1 ) opCode = 0xb0 ; else opCode = 0xb8 ; opCode += ( rm Bits.& 7 ) ; controlFlag .. [39;49m[32;49m
0x7fa6de04a7b8    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. || immSize ) { reg = 0 ; if ( immSize [39;49m[33;40m==[39;49m[34;49m 1 ) opCode = 0xb0 ; else opCode = 0xb8 ; opCode += ( rm Bits.& 7 ) ; controlFlags |= IMM .. [39;49m[32;49m
0x7fa6de04a7bc    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fa6de04a7c0    0f8516000000            jnz 0x7fa6de04a7dc         	< C_Syntax.[34;49mCompile_Move[39;49m+229 >[39;49m
[34;49m .. eg = 0 ; if ( immSize == 1 ) opCode = [39;49m[33;40m0xb0[39;49m[34;49m ; else opCode = 0xb8 ; opCode += ( rm Bits.& 7 ) ; controlFlags |= IMM_B ; } else { op .. [39;49m[32;49m
0x7fa6de04a7c6    48b8b000000000000000    mov rax, 0xb0                                          [39;49m
[34;49m .. ize ) { reg = 0 ; if ( immSize == 1 ) [39;49m[33;40mopCode[39;49m[34;49m = 0xb0 ; else opCode = 0xb8 ; opCode += ( rm Bits.& 7 ) ; controlFlags |= IMM_B ; }  .. [39;49m[32;49m
0x7fa6de04a7d0    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  reg = 0 ; if ( immSize == 1 ) opCode [39;49m[33;40m=[39;49m[34;49m 0xb0 ; else opCode = 0xb8 ; opCode += ( rm Bits.& 7 ) ; controlFlags |= IMM_B ; } else {  .. [39;49m[32;49m
0x7fa6de04a7d4    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. 0 ; if ( immSize == 1 ) opCode = 0xb0 [39;49m[33;40m;[39;49m[34;49m else opCode = 0xb8 ; opCode += ( rm Bits.& 7 ) ; controlFlags |= IMM_B ; } else { opCode  .. [39;49m[32;49m
0x7fa6de04a7d7    e911000000              jmp 0x7fa6de04a7ed         	< C_Syntax.[34;49mCompile_Move[39;49m+246 >[39;49m
[34;49m ..  == 1 ) opCode = 0xb0 ; else opCode = [39;49m[33;40m0xb8[39;49m[34;49m ; opCode += ( rm Bits.& 7 ) ; controlFlags |= IMM_B ; } else { opCode = 0x88 ; if ( di .. [39;49m[32;49m
0x7fa6de04a7dc    48b8b800000000000000    mov rax, 0xb8                                          [39;49m
[34;49m .. ( immSize == 1 ) opCode = 0xb0 ; else [39;49m[33;40mopCode[39;49m[34;49m = 0xb8 ; opCode += ( rm Bits.& 7 ) ; controlFlags |= IMM_B ; } else { opCode = 0x88  .. [39;49m[32;49m
0x7fa6de04a7e6    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m .. ze == 1 ) opCode = 0xb0 ; else opCode [39;49m[33;40m=[39;49m[34;49m 0xb8 ; opCode += ( rm Bits.& 7 ) ; controlFlags |= IMM_B ; } else { opCode = 0x88 ; if (  .. [39;49m[32;49m
0x7fa6de04a7ea    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. b0 ; else opCode = 0xb8 ; opCode += ( [39;49m[33;40mrm[39;49m[34;49m Bits.& 7 ) ; controlFlags |= IMM_B ; } else { opCode = 0x88 ; if ( direction == REG ) op .. [39;49m[32;49m
0x7fa6de04a7ed    498b47c8                mov rax, [r15-0x38]                                    [39;49m
[34;49m .. opCode = 0xb8 ; opCode += ( rm Bits.& [39;49m[33;40m7[39;49m[34;49m ) ; controlFlags |= IMM_B ; } else { opCode = 0x88 ; if ( direction == REG ) opCode |= 2  .. [39;49m[32;49m
0x7fa6de04a7f1    48b90700000000000000    mov rcx, 0x7                                           [39;49m
[34;49m .. e opCode = 0xb8 ; opCode += ( rm Bits.[39;49m[33;40m&[39;49m[34;49m 7 ) ; controlFlags |= IMM_B ; } else { opCode = 0x88 ; if ( direction == REG ) opCode |=  .. [39;49m[32;49m
0x7fa6de04a7fb    4823c1                  and rax, rcx                                           [39;49m
[34;49m .. ; else if ( disp >= 0x100 ) mod = 2 ; [39;49m[33;40m}[39;49m[34;49m controlFlags |= REX_B ; } Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, reg, r .. [39;49m[32;49m
0x7fa6de04a7fe    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a802    498906                  mov [r14], rax                                         [39;49m
[34;49m .. Code = 0xb8 ; opCode += ( rm Bits.& 7 [39;49m[33;40m)[39;49m[34;49m ; controlFlags |= IMM_B ; } else { opCode = 0x88 ; if ( direction == REG ) opCode |= 2 ;  .. [39;49m[32;49m
0x7fa6de04a805    498d5f08                lea rbx, [r15+0x8]                                     [39;49m
[34;49m ..  opCode = 0xb0 ; else opCode = 0xb8 ; [39;49m[33;40mopCode[39;49m[34;49m += ( rm Bits.& 7 ) ; controlFlags |= IMM_B ; } else { opCode = 0x88 ; if ( direction .. [39;49m[32;49m
0x7fa6de04a809    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de04a80d    4803c1                  add rax, rcx                                           [39;49m
[34;49m ..  = 0xb0 ; else opCode = 0xb8 ; opCode [39;49m[33;40m+=[39;49m[34;49m ( rm Bits.& 7 ) ; controlFlags |= IMM_B ; } else { opCode = 0x88 ; if ( direction == REG .. [39;49m[32;49m
0x7fa6de04a810    488903                  mov [rbx], rax                                         [39;49m[32;49m
0x7fa6de04a813    498d5f10                lea rbx, [r15+0x10]                                    [39;49m
[34;49m ..  = 0xb8 ; opCode += ( rm Bits.& 7 ) ; [39;49m[33;40mcontrolFlags[39;49m[34;49m |= IMM_B ; } else { opCode = 0x88 ; if ( direction == REG ) opCode |= 2 ; if ( .. [39;49m[32;49m
0x7fa6de04a817    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  += ( rm Bits.& 7 ) ; controlFlags |= [39;49m[33;40mIMM_B[39;49m[34;49m ; } else { opCode = 0x88 ; if ( direction == REG ) opCode |= 2 ; if ( operandSize > 1 .. [39;49m[32;49m
0x7fa6de04a81b    48b91000000000000000    mov rcx, 0x10                                          [39;49m[32;49m
0x7fa6de04a825    480bc1                  or rax, rcx                                            [39;49m
[34;49m .. ode += ( rm Bits.& 7 ) ; controlFlags [39;49m[33;40m|=[39;49m[34;49m IMM_B ; } else { opCode = 0x88 ; if ( direction == REG ) opCode |= 2 ; if ( operandSize  .. [39;49m[32;49m
0x7fa6de04a828    488903                  mov [rbx], rax                                         [39;49m
[34;49m ..  Bits.& 7 ) ; controlFlags |= IMM_B ; [39;49m[33;40m}[39;49m[34;49m else { opCode = 0x88 ; if ( direction == REG ) opCode |= 2 ; if ( operandSize > 1 ) opCod .. [39;49m[32;49m
0x7fa6de04a82b    e92c010000              jmp 0x7fa6de04a95c         	< C_Syntax.[34;49mCompile_Move[39;49m+613 >[39;49m
[34;49m .. rolFlags |= IMM_B ; } else { opCode = [39;49m[33;40m0x88[39;49m[34;49m ; if ( direction == REG ) opCode |= 2 ; if ( operandSize > 1 ) opCode += 1 ; if ( oper .. [39;49m[32;49m
0x7fa6de04a830    48b88800000000000000    mov rax, 0x88                                          [39;49m
[34;49m ..  ) ; controlFlags |= IMM_B ; } else { [39;49m[33;40mopCode[39;49m[34;49m = 0x88 ; if ( direction == REG ) opCode |= 2 ; if ( operandSize > 1 ) opCode += 1 ;  .. [39;49m[32;49m
0x7fa6de04a83a    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m .. ntrolFlags |= IMM_B ; } else { opCode [39;49m[33;40m=[39;49m[34;49m 0x88 ; if ( direction == REG ) opCode |= 2 ; if ( operandSize > 1 ) opCode += 1 ; if ( op .. [39;49m[32;49m
0x7fa6de04a83e    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. IMM_B ; } else { opCode = 0x88 ; if ( [39;49m[33;40mdirection[39;49m[34;49m == REG ) opCode |= 2 ; if ( operandSize > 1 ) opCode += 1 ; if ( operandSize == 8 .. [39;49m[32;49m
0x7fa6de04a841    498b47b0                mov rax, [r15-0x50]                                    [39;49m
[34;49m .. else { opCode = 0x88 ; if ( direction [39;49m[33;40m==[39;49m[34;49m REG ) opCode |= 2 ; if ( operandSize > 1 ) opCode += 1 ; if ( operandSize == 8 ) control .. [39;49m[32;49m
0x7fa6de04a845    4883f803                cmp rax, 0x3                                           [39;49m[32;49m
0x7fa6de04a849    0f8518000000            jnz 0x7fa6de04a867         	< C_Syntax.[34;49mCompile_Move[39;49m+368 >[39;49m[32;49m
0x7fa6de04a84f    498d5f08                lea rbx, [r15+0x8]                                     [39;49m
[34;49m .. Code = 0x88 ; if ( direction == REG ) [39;49m[33;40mopCode[39;49m[34;49m |= 2 ; if ( operandSize > 1 ) opCode += 1 ; if ( operandSize == 8 ) controlFlags |=  .. [39;49m[32;49m
0x7fa6de04a853    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. 8 ; if ( direction == REG ) opCode |= [39;49m[33;40m2[39;49m[34;49m ; if ( operandSize > 1 ) opCode += 1 ; if ( operandSize == 8 ) controlFlags |= REX_W ; if .. [39;49m[32;49m
0x7fa6de04a857    48b90200000000000000    mov rcx, 0x2                                           [39;49m[32;49m
0x7fa6de04a861    480bc1                  or rax, rcx                                            [39;49m
[34;49m .. 0x88 ; if ( direction == REG ) opCode [39;49m[33;40m|=[39;49m[34;49m 2 ; if ( operandSize > 1 ) opCode += 1 ; if ( operandSize == 8 ) controlFlags |= REX_W ; .. [39;49m[32;49m
0x7fa6de04a864    488903                  mov [rbx], rax                                         [39;49m
[34;49m .. direction == REG ) opCode |= 2 ; if ( [39;49m[33;40moperandSize[39;49m[34;49m > 1 ) opCode += 1 ; if ( operandSize == 8 ) controlFlags |= REX_W ; if ( ! mod  .. [39;49m[32;49m
0x7fa6de04a867    498b47d0                mov rax, [r15-0x30]                                    [39;49m
[34;49m ..  REG ) opCode |= 2 ; if ( operandSize [39;49m[33;40m>[39;49m[34;49m 1 ) opCode += 1 ; if ( operandSize == 8 ) controlFlags |= REX_W ; if ( ! mod ) { if ( dis .. [39;49m[32;49m
0x7fa6de04a86b    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fa6de04a86f    0f8e18000000            jle 0x7fa6de04a88d         	< C_Syntax.[34;49mCompile_Move[39;49m+406 >[39;49m[32;49m
0x7fa6de04a875    498d5f08                lea rbx, [r15+0x8]                                     [39;49m
[34;49m ..  opCode |= 2 ; if ( operandSize > 1 ) [39;49m[33;40mopCode[39;49m[34;49m += 1 ; if ( operandSize == 8 ) controlFlags |= REX_W ; if ( ! mod ) { if ( disp == 0 .. [39;49m[32;49m
0x7fa6de04a879    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  2 ; if ( operandSize > 1 ) opCode += [39;49m[33;40m1[39;49m[34;49m ; if ( operandSize == 8 ) controlFlags |= REX_W ; if ( ! mod ) { if ( disp == 0 ) mod = 0 .. [39;49m[32;49m
0x7fa6de04a87d    48b90100000000000000    mov rcx, 0x1                                           [39;49m[32;49m
0x7fa6de04a887    4803c1                  add rax, rcx                                           [39;49m
[34;49m ..  |= 2 ; if ( operandSize > 1 ) opCode [39;49m[33;40m+=[39;49m[34;49m 1 ; if ( operandSize == 8 ) controlFlags |= REX_W ; if ( ! mod ) { if ( disp == 0 ) mod  .. [39;49m[32;49m
0x7fa6de04a88a    488903                  mov [rbx], rax                                         [39;49m
[34;49m ..  operandSize > 1 ) opCode += 1 ; if ( [39;49m[33;40moperandSize[39;49m[34;49m == 8 ) controlFlags |= REX_W ; if ( ! mod ) { if ( disp == 0 ) mod = 0 ; else i .. [39;49m[32;49m
0x7fa6de04a88d    498b47d0                mov rax, [r15-0x30]                                    [39;49m
[34;49m ..  > 1 ) opCode += 1 ; if ( operandSize [39;49m[33;40m==[39;49m[34;49m 8 ) controlFlags |= REX_W ; if ( ! mod ) { if ( disp == 0 ) mod = 0 ; else if ( disp <=  .. [39;49m[32;49m
0x7fa6de04a891    4883f808                cmp rax, 0x8                                           [39;49m[32;49m
0x7fa6de04a895    0f8518000000            jnz 0x7fa6de04a8b3         	< C_Syntax.[34;49mCompile_Move[39;49m+444 >[39;49m[32;49m
0x7fa6de04a89b    498d5f10                lea rbx, [r15+0x10]                                    [39;49m
[34;49m .. opCode += 1 ; if ( operandSize == 8 ) [39;49m[33;40mcontrolFlags[39;49m[34;49m |= REX_W ; if ( ! mod ) { if ( disp == 0 ) mod = 0 ; else if ( disp <= 0xff )  .. [39;49m[32;49m
0x7fa6de04a89f    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  ( operandSize == 8 ) controlFlags |= [39;49m[33;40mREX_W[39;49m[34;49m ; if ( ! mod ) { if ( disp == 0 ) mod = 0 ; else if ( disp <= 0xff ) mod = 1 ; else i .. [39;49m[32;49m
0x7fa6de04a8a3    48b92000000000000000    mov rcx, 0x20                                          [39;49m[32;49m
0x7fa6de04a8ad    480bc1                  or rax, rcx                                            [39;49m
[34;49m ..  if ( operandSize == 8 ) controlFlags [39;49m[33;40m|=[39;49m[34;49m REX_W ; if ( ! mod ) { if ( disp == 0 ) mod = 0 ; else if ( disp <= 0xff ) mod = 1 ; els .. [39;49m[32;49m
0x7fa6de04a8b0    488903                  mov [rbx], rax                                         [39;49m
[34;49m .. == 8 ) controlFlags |= REX_W ; if ( ! [39;49m[33;40mmod[39;49m[34;49m ) { if ( disp == 0 ) mod = 0 ; else if ( disp <= 0xff ) mod = 1 ; else if ( disp >= 0x1 .. [39;49m[32;49m
0x7fa6de04a8b3    498b47b8                mov rax, [r15-0x48]                                    [39;49m[32;49m
0x7fa6de04a8b7    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de04a8ba    740c                    jz 0xde04a8c8                                          [39;49m[32;49m
0x7fa6de04a8bc    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de04a8c6    eb0a                    jmp 0x7fa6de04a8d2         	< C_Syntax.[34;49mCompile_Move[39;49m+475 >[39;49m[32;49m
0x7fa6de04a8c8    48b80100000000000000    mov rax, 0x1                                           [39;49m
[34;49m .. 1 ) opCode += 1 ; if ( operandSize == [39;49m[33;40m8[39;49m[34;49m ) controlFlags |= REX_W ; if ( ! mod ) { if ( disp == 0 ) mod = 0 ; else if ( disp <= 0xf .. [39;49m[32;49m
0x7fa6de04a8d2    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de04a8d5    0f8469000000            jz 0x7fa6de04a944          	< C_Syntax.[34;49mCompile_Move[39;49m+589 >[39;49m
[34;49m .. lFlags |= REX_W ; if ( ! mod ) { if ( [39;49m[33;40mdisp[39;49m[34;49m == 0 ) mod = 0 ; else if ( disp <= 0xff ) mod = 1 ; else if ( disp >= 0x100 ) mod = 2  .. [39;49m[32;49m
0x7fa6de04a8db    498b47e0                mov rax, [r15-0x20]                                    [39;49m
[34;49m .. s |= REX_W ; if ( ! mod ) { if ( disp [39;49m[33;40m==[39;49m[34;49m 0 ) mod = 0 ; else if ( disp <= 0xff ) mod = 1 ; else if ( disp >= 0x100 ) mod = 2 ; } c .. [39;49m[32;49m
0x7fa6de04a8df    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de04a8e2    0f8516000000            jnz 0x7fa6de04a8fe         	< C_Syntax.[34;49mCompile_Move[39;49m+519 >[39;49m
[34;49m .. if ( ! mod ) { if ( disp == 0 ) mod = [39;49m[33;40m0[39;49m[34;49m ; else if ( disp <= 0xff ) mod = 1 ; else if ( disp >= 0x100 ) mod = 2 ; } controlFlags | .. [39;49m[32;49m
0x7fa6de04a8e8    48b80000000000000000    mov rax, 0x0                                           [39;49m
[34;49m .. X_W ; if ( ! mod ) { if ( disp == 0 ) [39;49m[33;40mmod[39;49m[34;49m = 0 ; else if ( disp <= 0xff ) mod = 1 ; else if ( disp >= 0x100 ) mod = 2 ; } controlF .. [39;49m[32;49m
0x7fa6de04a8f2    498d4fb8                lea rcx, [r15-0x48]                                    [39;49m
[34;49m .. ; if ( ! mod ) { if ( disp == 0 ) mod [39;49m[33;40m=[39;49m[34;49m 0 ; else if ( disp <= 0xff ) mod = 1 ; else if ( disp >= 0x100 ) mod = 2 ; } controlFlags .. [39;49m[32;49m
0x7fa6de04a8f6    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  ( ! mod ) { if ( disp == 0 ) mod = 0 [39;49m[33;40m;[39;49m[34;49m else if ( disp <= 0xff ) mod = 1 ; else if ( disp >= 0x100 ) mod = 2 ; } controlFlags |=  .. [39;49m[32;49m
0x7fa6de04a8f9    e946000000              jmp 0x7fa6de04a944         	< C_Syntax.[34;49mCompile_Move[39;49m+589 >[39;49m
[34;49m ..  if ( disp == 0 ) mod = 0 ; else if ( [39;49m[33;40mdisp[39;49m[34;49m <= 0xff ) mod = 1 ; else if ( disp >= 0x100 ) mod = 2 ; } controlFlags |= REX_B ; } Co .. [39;49m[32;49m
0x7fa6de04a8fe    498b47e0                mov rax, [r15-0x20]                                    [39;49m
[34;49m ..  disp == 0 ) mod = 0 ; else if ( disp [39;49m[33;40m<=[39;49m[34;49m 0xff ) mod = 1 ; else if ( disp >= 0x100 ) mod = 2 ; } controlFlags |= REX_B ; } Compile .. [39;49m[32;49m
0x7fa6de04a902    4883f8ff                cmp rax, 0xffffffffffffffff                              [39;49m[32;49m
0x7fa6de04a906    0f8f16000000            jg 0x7fa6de04a922          	< C_Syntax.[34;49mCompile_Move[39;49m+555 >[39;49m
[34;49m ..  = 0 ; else if ( disp <= 0xff ) mod = [39;49m[33;40m1[39;49m[34;49m ; else if ( disp >= 0x100 ) mod = 2 ; } controlFlags |= REX_B ; } Compile_CalculateWrite_ .. [39;49m[32;49m
0x7fa6de04a90c    48b80100000000000000    mov rax, 0x1                                           [39;49m
[34;49m ..  ) mod = 0 ; else if ( disp <= 0xff ) [39;49m[33;40mmod[39;49m[34;49m = 1 ; else if ( disp >= 0x100 ) mod = 2 ; } controlFlags |= REX_B ; } Compile_Calculate .. [39;49m[32;49m
0x7fa6de04a916    498d4fb8                lea rcx, [r15-0x48]                                    [39;49m
[34;49m .. od = 0 ; else if ( disp <= 0xff ) mod [39;49m[33;40m=[39;49m[34;49m 1 ; else if ( disp >= 0x100 ) mod = 2 ; } controlFlags |= REX_B ; } Compile_CalculateWrit .. [39;49m[32;49m
0x7fa6de04a91a    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  0 ; else if ( disp <= 0xff ) mod = 1 [39;49m[33;40m;[39;49m[34;49m else if ( disp >= 0x100 ) mod = 2 ; } controlFlags |= REX_B ; } Compile_CalculateWrite_In .. [39;49m[32;49m
0x7fa6de04a91d    e922000000              jmp 0x7fa6de04a944         	< C_Syntax.[34;49mCompile_Move[39;49m+589 >[39;49m
[34;49m ..  ( disp <= 0xff ) mod = 1 ; else if ( [39;49m[33;40mdisp[39;49m[34;49m >= 0x100 ) mod = 2 ; } controlFlags |= REX_B ; } Compile_CalculateWrite_Instruction_X6 .. [39;49m[32;49m
0x7fa6de04a922    498b47e0                mov rax, [r15-0x20]                                    [39;49m
[34;49m .. sp <= 0xff ) mod = 1 ; else if ( disp [39;49m[33;40m>=[39;49m[34;49m 0x100 ) mod = 2 ; } controlFlags |= REX_B ; } Compile_CalculateWrite_Instruction_X64 ( 0 .. [39;49m[32;49m
0x7fa6de04a926    4881f800010000          cmp rax, 0x100                                         [39;49m
[34;49m .. <= 0xff ) mod = 1 ; else if ( disp >= [39;49m[33;40m0x100[39;49m[34;49m ) mod = 2 ; } controlFlags |= REX_B ; } Compile_CalculateWrite_Instruction_X64 ( 0, o .. [39;49m[32;49m
0x7fa6de04a92d    0f8c11000000            jl 0x7fa6de04a944          	< C_Syntax.[34;49mCompile_Move[39;49m+589 >[39;49m
[34;49m .. 1 ; else if ( disp >= 0x100 ) mod = 2 [39;49m[33;40m;[39;49m[34;49m } controlFlags |= REX_B ; } Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, reg, .. [39;49m[32;49m
0x7fa6de04a933    48b80200000000000000    mov rax, 0x2                                           [39;49m
[34;49m .. ) mod = 1 ; else if ( disp >= 0x100 ) [39;49m[33;40mmod[39;49m[34;49m = 2 ; } controlFlags |= REX_B ; } Compile_CalculateWrite_Instruction_X64 ( 0, opCode, m .. [39;49m[32;49m
0x7fa6de04a93d    498d4fb8                lea rcx, [r15-0x48]                                    [39;49m
[34;49m .. d = 1 ; else if ( disp >= 0x100 ) mod [39;49m[33;40m=[39;49m[34;49m 2 ; } controlFlags |= REX_B ; } Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod,  .. [39;49m[32;49m
0x7fa6de04a941    488901                  mov [rcx], rax                                         [39;49m[32;49m
0x7fa6de04a944    498d5f10                lea rbx, [r15+0x10]                                    [39;49m
[34;49m .. else if ( disp >= 0x100 ) mod = 2 ; } [39;49m[33;40mcontrolFlags[39;49m[34;49m |= REX_B ; } Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, reg, rm, .. [39;49m[32;49m
0x7fa6de04a948    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m .. = 0x100 ) mod = 2 ; } controlFlags |= [39;49m[33;40mREX_B[39;49m[34;49m ; } Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, reg, rm, controlFlags, s .. [39;49m[32;49m
0x7fa6de04a94c    48b90100000000000000    mov rcx, 0x1                                           [39;49m[32;49m
0x7fa6de04a956    480bc1                  or rax, rcx                                            [39;49m
[34;49m .. p >= 0x100 ) mod = 2 ; } controlFlags [39;49m[33;40m|=[39;49m[34;49m REX_B ; } Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, reg, rm, controlFlags .. [39;49m[32;49m
0x7fa6de04a959    488903                  mov [rbx], rax                                         [39;49m
[34;49m .. pile_CalculateWrite_Instruction_X64 ( [39;49m[33;40m0[39;49m[34;49m, opCode, mod, reg, rm, controlFlags, sib, disp, dispSize, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04a95c    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de04a966    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a96a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. e_CalculateWrite_Instruction_X64 ( 0, [39;49m[33;40mopCode[39;49m[34;49m, mod, reg, rm, controlFlags, sib, disp, dispSize, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04a96d    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de04a971    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a975    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ateWrite_Instruction_X64 ( 0, opCode, [39;49m[33;40mmod[39;49m[34;49m, reg, rm, controlFlags, sib, disp, dispSize, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04a978    498b47b8                mov rax, [r15-0x48]                                    [39;49m[32;49m
0x7fa6de04a97c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a980    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ite_Instruction_X64 ( 0, opCode, mod, [39;49m[33;40mreg[39;49m[34;49m, rm, controlFlags, sib, disp, dispSize, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04a983    498b47c0                mov rax, [r15-0x40]                                    [39;49m[32;49m
0x7fa6de04a987    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a98b    498906                  mov [r14], rax                                         [39;49m
[34;49m .. nstruction_X64 ( 0, opCode, mod, reg, [39;49m[33;40mrm[39;49m[34;49m, controlFlags, sib, disp, dispSize, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04a98e    498b47c8                mov rax, [r15-0x38]                                    [39;49m[32;49m
0x7fa6de04a992    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a996    498906                  mov [r14], rax                                         [39;49m
[34;49m .. uction_X64 ( 0, opCode, mod, reg, rm, [39;49m[33;40mcontrolFlags[39;49m[34;49m, sib, disp, dispSize, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04a999    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fa6de04a99d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a9a1    498906                  mov [r14], rax                                         [39;49m
[34;49m .. , opCode, mod, reg, rm, controlFlags, [39;49m[33;40msib[39;49m[34;49m, disp, dispSize, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04a9a4    498b47d8                mov rax, [r15-0x28]                                    [39;49m[32;49m
0x7fa6de04a9a8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a9ac    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ode, mod, reg, rm, controlFlags, sib, [39;49m[33;40mdisp[39;49m[34;49m, dispSize, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04a9af    498b47e0                mov rax, [r15-0x20]                                    [39;49m[32;49m
0x7fa6de04a9b3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a9b7    498906                  mov [r14], rax                                         [39;49m
[34;49m .. od, reg, rm, controlFlags, sib, disp, [39;49m[33;40mdispSize[39;49m[34;49m, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04a9ba    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fa6de04a9be    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a9c2    498906                  mov [r14], rax                                         [39;49m
[34;49m .. m, controlFlags, sib, disp, dispSize, [39;49m[33;40mimm[39;49m[34;49m, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04a9c5    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de04a9c9    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a9cd    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ntrolFlags, sib, disp, dispSize, imm, [39;49m[33;40mimmSize[39;49m[34;49m ) ; }  .. [39;49m[32;49m
0x7fa6de04a9d0    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04a9d4    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04a9d8    498906                  mov [r14], rax                                         [39;49m
[34;49m .. mod = 2 ; } controlFlags |= REX_B ; } [39;49m[33;40mCompile_CalculateWrite_Instruction_X64[39;49m[34;49m ( 0, opCode, mod, reg, rm, controlFlags, sib, disp,  .. [39;49m[32;49m
0x7fa6de04a9db    49b98ca504dea67f0000    mov r9, 0x7fa6de04a58c                                 [39;49m[32;49m
0x7fa6de04a9e5    49ffd1                  call r9                    	< C_Syntax.[34;49mCompile_CalculateWrite_Instruction_X64[39;49m : 0x00007fa6de04a58c >[39;49m
[34;49m .. sib, disp, dispSize, imm, immSize ) ; [39;49m[33;40m}[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de04a9e8    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04a9ec    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04a9f0    4983ee50                sub r14, 0x50                                          [39;49m[32;49m
0x7fa6de04a9f4    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'Compile_Move' :: codeSize = 765
Word : 0x00007fa6dd3a9a70 :: Compiled at : 0x00007fa6de04a6f7
 =============================
::> 'wdiss' was called at namespaces/compiler/x64.cft 250.25 <::

 =============================
C_Syntax.[34;49m_Compile_Group1_Immediate[39;49m <:> cfrTil compiled word, prefix
SourceCode for C_Syntax.[34;49m_Compile_Group1_Immediate[39;49m :> 
[34;49mvoid _Compile_Group1_Immediate ( code mod rm disp imm immSize ) { byte opCode = #x80 ; if ( ( immSize > BYTE ) || ( imm >= 0x100 ) ) opCode |= 1 ; else if ( ( immSize <= BYTE ) || ( imm < 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm, (REX_B | REX_W | MODRM_B | (disp ? DISP_B : 0 ) | IMM_B), 0, disp, 0, imm, immSize ) ; } [39;49m
Source code file location of [34;49m_Compile_Group1_Immediate[39;49m : "namespaces/compiler/x64.cft" : 264.75 :: we are now at : namespaces/compiler/x64.cft : 274.44
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04ab8e -- code size = 501 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49m_Compile_Group1_Immediate[39;49m : definition = 0x00007fa6de04ab8e : disassembly at namespaces/compiler/x64.cft : 274.44 :
[34;49m ..                                 void  [39;49m[33;40m_Compile_Group1_Immediate[39;49m[34;49m ( code mod rm disp imm immSize ) { byte opCode = #x80 ; if ( ( im .. [39;49m[32;49m
0x7fa6de04ab8e    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04ab92    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04ab96    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m .. rm disp imm immSize ) { byte opCode = [39;49m[33;40m#x80[39;49m[34;49m ; if ( ( immSize > BYTE ) || ( imm >= 0x100 ) ) opCode |= 1 ; else if ( ( immSize <= B .. [39;49m[32;49m
0x7fa6de04ab9d    48b88000000000000000    mov rax, 0x80                                          [39;49m
[34;49m .. code mod rm disp imm immSize ) { byte [39;49m[33;40mopCode[39;49m[34;49m = #x80 ; if ( ( immSize > BYTE ) || ( imm >= 0x100 ) ) opCode |= 1 ; else if ( ( imm .. [39;49m[32;49m
0x7fa6de04aba7    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m .. d rm disp imm immSize ) { byte opCode [39;49m[33;40mstore[39;49m[34;49m0 ; if ( ( immSize > BYTE ) || ( imm >= 0x100 ) ) opCode |= 1 ; else if ( ( immSize <= .. [39;49m[32;49m
0x7fa6de04abab    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. mSize ) { byte opCode = #x80 ; if ( ( [39;49m[33;40mimmSize[39;49m[34;49m > BYTE ) || ( imm >= 0x100 ) ) opCode |= 1 ; else if ( ( immSize <= BYTE ) || ( imm .. [39;49m[32;49m
0x7fa6de04abae    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. { byte opCode = #x80 ; if ( ( immSize [39;49m[33;40m>[39;49m[34;49m BYTE ) || ( imm >= 0x100 ) ) opCode |= 1 ; else if ( ( immSize <= BYTE ) || ( imm < 0x100 .. [39;49m[32;49m
0x7fa6de04abb2    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fa6de04abb6    0f9fc0                  setg al                                                [39;49m
[34;49m .. byte opCode = #x80 ; if ( ( immSize > [39;49m[33;40mBYTE[39;49m[34;49m ) || ( imm >= 0x100 ) ) opCode |= 1 ; else if ( ( immSize <= BYTE ) || ( imm < 0x100 ) .. [39;49m[32;49m
0x7fa6de04abb9    480fb6c0                movzx rax, al                                          [39;49m[32;49m
0x7fa6de04abbd    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04abc1    498906                  mov [r14], rax                                         [39;49m
[34;49m .. = #x80 ; if ( ( immSize > BYTE ) || ( [39;49m[33;40mimm[39;49m[34;49m >= 0x100 ) ) opCode |= 1 ; else if ( ( immSize <= BYTE ) || ( imm < 0x100 ) ) opCode |= .. [39;49m[32;49m
0x7fa6de04abc4    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. 80 ; if ( ( immSize > BYTE ) || ( imm [39;49m[33;40m>=[39;49m[34;49m 0x100 ) ) opCode |= 1 ; else if ( ( immSize <= BYTE ) || ( imm < 0x100 ) ) opCode |= 3 ; .. [39;49m[32;49m
0x7fa6de04abc8    4881f800010000          cmp rax, 0x100                                         [39;49m
[34;49m .. ; if ( ( immSize > BYTE ) || ( imm >= [39;49m[33;40m0x100[39;49m[34;49m ) ) opCode |= 1 ; else if ( ( immSize <= BYTE ) || ( imm < 0x100 ) ) opCode |= 3 ; Co .. [39;49m[32;49m
0x7fa6de04abcf    0f9dc0                  setge al                                               [39;49m[32;49m
0x7fa6de04abd2    480fb6c0                movzx rax, al                                          [39;49m[32;49m
0x7fa6de04abd6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04abda    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ( immSize > BYTE ) || ( imm >= 0x100 [39;49m[33;40m)[39;49m[34;49m ) opCode |= 1 ; else if ( ( immSize <= BYTE ) || ( imm < 0x100 ) ) opCode |= 3 ; Compile_ .. [39;49m[32;49m
0x7fa6de04abdd    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04abe0    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04abe4    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fa6de04abe8    480bc1                  or rax, rcx                                            [39;49m[32;49m
0x7fa6de04abeb    4885c0                  test rax, rax                                          [39;49m
[34;49m ..  ) || ( imm < 0x100 ) ) opCode |= 3 ; [39;49m[33;40m}[39;49m[34;49mompile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm, (REX_B | REX_W | MODRM_B .. [39;49m[32;49m
0x7fa6de04abee    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de04abf1    0f841d000000            jz 0x7fa6de04ac14          	< C_Syntax.[34;49m_Compile_Group1_Immediate[39;49m+134 >[39;49m[32;49m
0x7fa6de04abf7    498d5f08                lea rbx, [r15+0x8]                                     [39;49m
[34;49m .. mmSize > BYTE ) || ( imm >= 0x100 ) ) [39;49m[33;40mopCode[39;49m[34;49m |= 1 ; else if ( ( immSize <= BYTE ) || ( imm < 0x100 ) ) opCode |= 3 ; Compile_Calc .. [39;49m[32;49m
0x7fa6de04abfb    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. YTE ) || ( imm >= 0x100 ) ) opCode |= [39;49m[33;40m1[39;49m[34;49m ; else if ( ( immSize <= BYTE ) || ( imm < 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite .. [39;49m[32;49m
0x7fa6de04abff    48b90100000000000000    mov rcx, 0x1                                           [39;49m[32;49m
0x7fa6de04ac09    480bc1                  or rax, rcx                                            [39;49m
[34;49m .. > BYTE ) || ( imm >= 0x100 ) ) opCode [39;49m[33;40m|=[39;49m[34;49m 1 ; else if ( ( immSize <= BYTE ) || ( imm < 0x100 ) ) opCode |= 3 ; Compile_CalculateWr .. [39;49m[32;49m
0x7fa6de04ac0c    488903                  mov [rbx], rax                                         [39;49m
[34;49m .. E ) || ( imm >= 0x100 ) ) opCode |= 1 [39;49m[33;40m;[39;49m[34;49m else if ( ( immSize <= BYTE ) || ( imm < 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite_I .. [39;49m[32;49m
0x7fa6de04ac0f    e961000000              jmp 0x7fa6de04ac75         	< C_Syntax.[34;49m_Compile_Group1_Immediate[39;49m+231 >[39;49m
[34;49m .. = 0x100 ) ) opCode |= 1 ; else if ( ( [39;49m[33;40mimmSize[39;49m[34;49m <= BYTE ) || ( imm < 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite_Instruction_X64 .. [39;49m[32;49m
0x7fa6de04ac14    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. ) ) opCode |= 1 ; else if ( ( immSize [39;49m[33;40m<=[39;49m[34;49m BYTE ) || ( imm < 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, op .. [39;49m[32;49m
0x7fa6de04ac18    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fa6de04ac1c    0f9ec0                  setle al                                               [39;49m
[34;49m ..  opCode |= 1 ; else if ( ( immSize <= [39;49m[33;40mBYTE[39;49m[34;49m ) || ( imm < 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, opCod .. [39;49m[32;49m
0x7fa6de04ac1f    480fb6c0                movzx rax, al                                          [39;49m[32;49m
0x7fa6de04ac23    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04ac27    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ; else if ( ( immSize <= BYTE ) || ( [39;49m[33;40mimm[39;49m[34;49m < 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code .. [39;49m[32;49m
0x7fa6de04ac2a    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. lse if ( ( immSize <= BYTE ) || ( imm [39;49m[33;40m<[39;49m[34;49m 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm .. [39;49m[32;49m
0x7fa6de04ac2e    4881f800010000          cmp rax, 0x100                                         [39;49m
[34;49m .. e if ( ( immSize <= BYTE ) || ( imm < [39;49m[33;40m0x100[39;49m[34;49m ) ) opCode |= 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm,  .. [39;49m[32;49m
0x7fa6de04ac35    0f9cc0                  setl al                                                [39;49m[32;49m
0x7fa6de04ac38    480fb6c0                movzx rax, al                                          [39;49m[32;49m
0x7fa6de04ac3c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04ac40    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ( immSize <= BYTE ) || ( imm < 0x100 [39;49m[33;40m)[39;49m[34;49m ) opCode |= 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm, (REX_B .. [39;49m[32;49m
0x7fa6de04ac43    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04ac46    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04ac4a    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fa6de04ac4e    480bc1                  or rax, rcx                                            [39;49m[32;49m
0x7fa6de04ac51    4885c0                  test rax, rax                                          [39;49m
[34;49m .. TE ) || ( imm < 0x100 ) ) opCode |= 3 [39;49m[33;40m;[39;49m[34;49m Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm, (REX_B | REX_W | MODRM .. [39;49m[32;49m
0x7fa6de04ac54    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de04ac57    0f8418000000            jz 0x7fa6de04ac75          	< C_Syntax.[34;49m_Compile_Group1_Immediate[39;49m+231 >[39;49m[32;49m
0x7fa6de04ac5d    498d5f08                lea rbx, [r15+0x8]                                     [39;49m
[34;49m .. mmSize <= BYTE ) || ( imm < 0x100 ) ) [39;49m[33;40mopCode[39;49m[34;49m |= 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm, (REX_B | R .. [39;49m[32;49m
0x7fa6de04ac61    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. BYTE ) || ( imm < 0x100 ) ) opCode |= [39;49m[33;40m3[39;49m[34;49m ; Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm, (REX_B | REX_W | MOD .. [39;49m[32;49m
0x7fa6de04ac65    48b90300000000000000    mov rcx, 0x3                                           [39;49m[32;49m
0x7fa6de04ac6f    480bc1                  or rax, rcx                                            [39;49m
[34;49m .. <= BYTE ) || ( imm < 0x100 ) ) opCode [39;49m[33;40m|=[39;49m[34;49m 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm, (REX_B | REX_W |  .. [39;49m[32;49m
0x7fa6de04ac72    488903                  mov [rbx], rax                                         [39;49m
[34;49m .. pile_CalculateWrite_Instruction_X64 ( [39;49m[33;40m0[39;49m[34;49m, opCode, mod, code, rm, (REX_B | REX_W | MODRM_B | (disp ? DISP_B : 0 ) | IMM_B), 0, disp .. [39;49m[32;49m
0x7fa6de04ac75    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de04ac7f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04ac83    498906                  mov [r14], rax                                         [39;49m
[34;49m .. e_CalculateWrite_Instruction_X64 ( 0, [39;49m[33;40mopCode[39;49m[34;49m, mod, code, rm, (REX_B | REX_W | MODRM_B | (disp ? DISP_B : 0 ) | IMM_B), 0, disp, 0 .. [39;49m[32;49m
0x7fa6de04ac86    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de04ac8a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04ac8e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ateWrite_Instruction_X64 ( 0, opCode, [39;49m[33;40mmod[39;49m[34;49m, code, rm, (REX_B | REX_W | MODRM_B | (disp ? DISP_B : 0 ) | IMM_B), 0, disp, 0, imm, i .. [39;49m[32;49m
0x7fa6de04ac91    498b47d8                mov rax, [r15-0x28]                                    [39;49m[32;49m
0x7fa6de04ac95    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04ac99    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ite_Instruction_X64 ( 0, opCode, mod, [39;49m[33;40mcode[39;49m[34;49m, rm, (REX_B | REX_W | MODRM_B | (disp ? DISP_B : 0 ) | IMM_B), 0, disp, 0, imm, immSiz .. [39;49m[32;49m
0x7fa6de04ac9c    498b47d0                mov rax, [r15-0x30]                                    [39;49m[32;49m
0x7fa6de04aca0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04aca4    498906                  mov [r14], rax                                         [39;49m
[34;49m .. struction_X64 ( 0, opCode, mod, code, [39;49m[33;40mrm[39;49m[34;49m, (REX_B | REX_W | MODRM_B | (disp ? DISP_B : 0 ) | IMM_B), 0, disp, 0, imm, immSize ) ;  .. [39;49m[32;49m
0x7fa6de04aca7    498b47e0                mov rax, [r15-0x20]                                    [39;49m[32;49m
0x7fa6de04acab    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04acaf    498906                  mov [r14], rax                                         [39;49m
[34;49m .. tion_X64 ( 0, opCode, mod, code, rm, ([39;49m[33;40mREX_B[39;49m[34;49m | REX_W | MODRM_B | (disp ? DISP_B : 0 ) | IMM_B), 0, disp, 0, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04acb2    48b82100000000000000    mov rax, 0x21                                          [39;49m
[34;49m .. Code, mod, code, rm, (REX_B | REX_W | [39;49m[33;40mMODRM_B[39;49m[34;49m | (disp ? DISP_B : 0 ) | IMM_B), 0, disp, 0, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04acbc    48b90200000000000000    mov rcx, 0x2                                           [39;49m
[34;49m .. opCode, mod, code, rm, (REX_B | REX_W [39;49m[33;40m|[39;49m[34;49m MODRM_B | (disp ? DISP_B : 0 ) | IMM_B), 0, disp, 0, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04acc6    480bc1                  or rax, rcx                                            [39;49m[32;49m
0x7fa6de04acc9    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04accd    498906                  mov [r14], rax                                         [39;49m
[34;49m .. code, rm, (REX_B | REX_W | MODRM_B | ([39;49m[33;40mdisp[39;49m[34;49m ? DISP_B : 0 ) | IMM_B), 0, disp, 0, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04acd0    498b47e8                mov rax, [r15-0x18]                                    [39;49m
[34;49m .. 64 ( 0, opCode, mod, code, rm, (REX_B [39;49m[33;40m|[39;49m[34;49m REX_W | MODRM_B | (disp ? DISP_B : 0 ) | IMM_B), 0, disp, 0, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04acd4    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de04acd7    0f8416000000            jz 0x7fa6de04acf3          	< C_Syntax.[34;49m_Compile_Group1_Immediate[39;49m+357 >[39;49m
[34;49m .. m, (REX_B | REX_W | MODRM_B | (disp ? [39;49m[33;40mDISP_B[39;49m[34;49m : 0 ) | IMM_B), 0, disp, 0, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04acdd    48b80800000000000000    mov rax, 0x8                                           [39;49m[32;49m
0x7fa6de04ace7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04aceb    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04acee    e911000000              jmp 0x7fa6de04ad04         	< C_Syntax.[34;49m_Compile_Group1_Immediate[39;49m+374 >[39;49m
[34;49m ..  | REX_W | MODRM_B | (disp ? DISP_B : [39;49m[33;40m0[39;49m[34;49m ) | IMM_B), 0, disp, 0, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04acf3    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de04acfd    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04ad01    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  REX_W | MODRM_B | (disp ? DISP_B : 0 [39;49m[33;40m)[39;49m[34;49m | IMM_B), 0, disp, 0, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04ad04    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04ad07    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04ad0b    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. d, code, rm, (REX_B | REX_W | MODRM_B [39;49m[33;40m|[39;49m[34;49m (disp ? DISP_B : 0 ) | IMM_B), 0, disp, 0, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04ad0f    480bc1                  or rax, rcx                                            [39;49m
[34;49m .. _W | MODRM_B | (disp ? DISP_B : 0 ) | [39;49m[33;40mIMM_B[39;49m[34;49m), 0, disp, 0, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04ad12    48b91000000000000000    mov rcx, 0x10                                          [39;49m
[34;49m .. EX_W | MODRM_B | (disp ? DISP_B : 0 ) [39;49m[33;40m|[39;49m[34;49m IMM_B), 0, disp, 0, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04ad1c    480bc1                  or rax, rcx                                            [39;49m[32;49m
0x7fa6de04ad1f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04ad23    498906                  mov [r14], rax                                         [39;49m
[34;49m .. RM_B | (disp ? DISP_B : 0 ) | IMM_B), [39;49m[33;40m0[39;49m[34;49m, disp, 0, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04ad26    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de04ad30    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04ad34    498906                  mov [r14], rax                                         [39;49m
[34;49m .. B | (disp ? DISP_B : 0 ) | IMM_B), 0, [39;49m[33;40mdisp[39;49m[34;49m, 0, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04ad37    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fa6de04ad3b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04ad3f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. isp ? DISP_B : 0 ) | IMM_B), 0, disp, [39;49m[33;40m0[39;49m[34;49m, imm, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04ad42    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de04ad4c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04ad50    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ? DISP_B : 0 ) | IMM_B), 0, disp, 0, [39;49m[33;40mimm[39;49m[34;49m, immSize ) ; }  .. [39;49m[32;49m
0x7fa6de04ad53    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fa6de04ad57    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04ad5b    498906                  mov [r14], rax                                         [39;49m
[34;49m .. SP_B : 0 ) | IMM_B), 0, disp, 0, imm, [39;49m[33;40mimmSize[39;49m[34;49m ) ; }  .. [39;49m[32;49m
0x7fa6de04ad5e    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04ad62    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04ad66    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ) || ( imm < 0x100 ) ) opCode |= 3 ; [39;49m[33;40mCompile_CalculateWrite_Instruction_X64[39;49m[34;49m ( 0, opCode, mod, code, rm, (REX_B | REX_W | MODRM_B .. [39;49m[32;49m
0x7fa6de04ad69    49b98ca504dea67f0000    mov r9, 0x7fa6de04a58c                                 [39;49m[32;49m
0x7fa6de04ad73    49ffd1                  call r9                    	< C_Syntax.[34;49mCompile_CalculateWrite_Instruction_X64[39;49m : 0x00007fa6de04a58c >[39;49m
[34;49m ..  IMM_B), 0, disp, 0, imm, immSize ) ; [39;49m[33;40m}[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de04ad76    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04ad7a    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04ad7e    4983ee30                sub r14, 0x30                                          [39;49m[32;49m
0x7fa6de04ad82    c3                      ret                                                    [39;49m
Word_Disassemble : word - '_Compile_Group1_Immediate' :: codeSize = 500
Word : 0x00007fa6dd3bfd78 :: Compiled at : 0x00007fa6de04ab8e
 =============================
::> 'wdiss' was called at namespaces/compiler/x64.cft 274.44 <::

 =============================
C_Syntax.[34;49m_Compile_Stack_PopToReg[39;49m <:> cfrTil compiled word, prefix
SourceCode for C_Syntax.[34;49m_Compile_Stack_PopToReg[39;49m :> 
[34;49m: _Compile_Stack_PopToReg ( reg ) _Compile_Move_DataStackN_ToReg ( reg, 0 ) _Compile_SUBI_DSP ( CELL ) ;; [39;49m
Source code file location of [34;49m_Compile_Stack_PopToReg[39;49m : "namespaces/compiler/x64.cft" : 329.34 :: we are now at : namespaces/compiler/x64.cft : 336.36
Compiled with : optimizeOn, inlineOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04b349 -- code size = 99 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49m_Compile_Stack_PopToReg[39;49m : definition = 0x00007fa6de04b349 : disassembly at namespaces/compiler/x64.cft : 336.36 :
[34;49m ..                                     : [39;49m[33;40m_Compile_Stack_PopToReg[39;49m[34;49m ( reg )  _Compile_Move_DataStackN_ToReg ( reg, 0 ) _Compile_SUBI_DS .. [39;49m[32;49m
0x7fa6de04b349    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04b34d    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04b351    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m .. g )  _Compile_Move_DataStackN_ToReg ( [39;49m[33;40mreg[39;49m[34;49m, 0 ) _Compile_SUBI_DSP ( CELL ) ;; [39;49m[32;49m
0x7fa6de04b358    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04b35c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04b360    498906                  mov [r14], rax                                         [39;49m
[34;49m .. _Compile_Move_DataStackN_ToReg ( reg, [39;49m[33;40m0[39;49m[34;49m ) _Compile_SUBI_DSP ( CELL ) ;; [39;49m[32;49m
0x7fa6de04b363    48b80000000000000000    mov rax, 0x0                                           [39;49m[32;49m
0x7fa6de04b36d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04b371    498906                  mov [r14], rax                                         [39;49m
[34;49m ..    : _Compile_Stack_PopToReg ( reg )  [39;49m[33;40m_Compile_Move_DataStackN_ToReg[39;49m[34;49m ( reg, 0 ) _Compile_SUBI_DSP ( CELL ) ;;  .. [39;49m[32;49m
0x7fa6de04b374    49b9b4aa04dea67f0000    mov r9, 0x7fa6de04aab4                                 [39;49m[32;49m
0x7fa6de04b37e    49ffd1                  call r9                    	< C_Syntax.[34;49m_Compile_Move_DataStackN_ToReg[39;49m : 0x00007fa6de04aab4 >[39;49m
[34;49m .. _ToReg ( reg, 0 ) _Compile_SUBI_DSP ( [39;49m[33;40mCELL[39;49m[34;49m ) ;; [39;49m[32;49m
0x7fa6de04b381    48b80800000000000000    mov rax, 0x8                                           [39;49m[32;49m
0x7fa6de04b38b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04b38f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. pile_Move_DataStackN_ToReg ( reg, 0 ) [39;49m[33;40m_Compile_SUBI_DSP[39;49m[34;49m ( CELL ) ;; [39;49m[32;49m
0x7fa6de04b392    49b9f1ae04dea67f0000    mov r9, 0x7fa6de04aef1                                 [39;49m[32;49m
0x7fa6de04b39c    49ffd1                  call r9                    	< C_Syntax.[34;49m_Compile_SUBI_DSP[39;49m : 0x00007fa6de04aef1 >[39;49m
[34;49m .. ( reg, 0 ) _Compile_SUBI_DSP ( CELL ) [39;49m[33;40m;;[39;49m[34;49m [39;49m[32;49m
0x7fa6de04b39f    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04b3a3    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04b3a7    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de04b3ab    c3                      ret                                                    [39;49m
Word_Disassemble : word - '_Compile_Stack_PopToReg' :: codeSize = 98
Word : 0x00007fa6dd32ad60 :: Compiled at : 0x00007fa6de04b349
 =============================
::> 'wdiss' was called at namespaces/compiler/x64.cft 336.36 <::

 =============================
Combinators.[34;49miax[39;49m <:> cfrTil compiled word
SourceCode for Combinators.[34;49miax[39;49m :> 
[34;49masm: iax _Compile_Stack_PopToReg ( R8D ) _Compile_CallThruReg ( R8D ) ;asm [39;49m
Source code file location of [34;49miax[39;49m : "namespaces/compiler/x64.cft" : 343.8 :: we are now at : namespaces/compiler/x64.cft : 350.17
Compiled with : optimizeOn, inlineOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04b3c0 -- code size = 11 bytes
 -----------------------------
Word :: Combinators.[34;49miax[39;49m : definition = 0x00007fa6de04b3c0 : disassembly at namespaces/compiler/x64.cft : 350.17 :
[34;49m ..                              asm: iax [39;49m[33;40m_Compile_Stack_PopToReg[39;49m[34;49m ( R8D ) _Compile_CallThruReg ( R8D ) ;asm  .. [39;49m[32;49m
0x7fa6de04b3c0    4d8b06                  mov r8, [r14]                                          [39;49m[32;49m
0x7fa6de04b3c3    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m asm: iax _Compile_Stack_PopToReg ( R8D ) [39;49m[33;40m_Compile_CallThruReg[39;49m[34;49m ( R8D ) ;asm  .. [39;49m[32;49m
0x7fa6de04b3c7    41ffd0                  call r8                                                [39;49m
[34;49m ..  ( R8D ) _Compile_CallThruReg ( R8D ) [39;49m[33;40m;asm[39;49m[34;49m [39;49m[32;49m
0x7fa6de04b3ca    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'iax' :: codeSize = 10
Word : 0x00007fa6dd32bce8 :: Compiled at : 0x00007fa6de04b3c0
 =============================
::> 'wdiss' was called at namespaces/compiler/x64.cft 350.17 <::

 =============================
User.[34;49mqeval[39;49m <:> cfrTil compiled word
SourceCode for User.[34;49mqeval[39;49m :> 
[34;49m: qeval stk iax ; [39;49m
Source code file location of [34;49mqeval[39;49m : "namespaces/compiler/x64.cft" : 373.7 :: we are now at : namespaces/compiler/x64.cft : 376.19
Compiled with : optimizeOn, inlineOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04b6ee -- code size = 27 bytes
 -----------------------------
Word :: User.[34;49mqeval[39;49m : definition = 0x00007fa6de04b6ee : disassembly at namespaces/compiler/x64.cft : 376.19 :
[34;49m ..                               : qeval [39;49m[33;40mstk[39;49m[34;49m iax ;  .. [39;49m[32;49m
0x7fa6de04b6ee    49b968a503dea67f0000    mov r9, 0x7fa6de03a568                                 [39;49m[32;49m
0x7fa6de04b6f8    49ffd1                  call r9                    	< System.[34;49mstk[39;49m : 0x00007fa6de03a568 >[39;49m
[34;49m ..                           : qeval stk [39;49m[33;40miax[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fa6de04b6fb    49b9c0b304dea67f0000    mov r9, 0x7fa6de04b3c0                                 [39;49m[32;49m
0x7fa6de04b705    49ffd1                  call r9                    	< Combinators.[34;49miax[39;49m : 0x00007fa6de04b3c0 >[39;49m
[34;49m ..                       : qeval stk iax [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de04b708    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'qeval' :: codeSize = 26
Word : 0x00007fa6dd332d58 :: Compiled at : 0x00007fa6de04b6ee
 =============================
::> 'wdiss' was called at namespaces/compiler/x64.cft 376.19 <::

 =============================
User.[34;49mstest[39;49m <:> cfrTil compiled word
SourceCode for User.[34;49mstest[39;49m :> 
[34;49masm: stest _Compile_MoveTOS_To_R8D ( ) _Compile_Move_DataStackN_ToReg ( R8D, 0 ) Compile_Stack_Push_R8D ( ) _Compile_SUBI_DSP ( CELL ) ;asm [39;49m
Source code file location of [34;49mstest[39;49m : "namespaces/compiler/x64.cft" : 379.10 :: we are now at : namespaces/compiler/x64.cft : 386.19
Compiled with : optimizeOn, inlineOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04b71d -- code size = 18 bytes
 -----------------------------
Word :: User.[34;49mstest[39;49m : definition = 0x00007fa6de04b71d : disassembly at namespaces/compiler/x64.cft : 386.19 :
[34;49m ..                            asm: stest [39;49m[33;40m_Compile_MoveTOS_To_R8D[39;49m[34;49m ( )  _Compile_Move_DataStackN_ToReg ( R8D, 0 )  Compile_Stack_Push_ .. [39;49m[32;49m
0x7fa6de04b71d    4d8b06                  mov r8, [r14]                                          [39;49m
[34;49m  asm: stest _Compile_MoveTOS_To_R8D ( )  [39;49m[33;40m_Compile_Move_DataStackN_ToReg[39;49m[34;49m ( R8D, 0 )  Compile_Stack_Push_R8D ( )  _Compile_SUBI_DSP (  .. [39;49m[32;49m
0x7fa6de04b720    4d8b06                  mov r8, [r14]                                          [39;49m
[34;49m .. ile_Move_DataStackN_ToReg ( R8D, 0 )  [39;49m[33;40mCompile_Stack_Push_R8D[39;49m[34;49m ( )  _Compile_SUBI_DSP ( CELL )  ;asm [39;49m[32;49m
0x7fa6de04b723    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04b727    4d8906                  mov [r14], r8                                          [39;49m
[34;49m .. R8D, 0 )  Compile_Stack_Push_R8D ( )  [39;49m[33;40m_Compile_SUBI_DSP[39;49m[34;49m ( CELL )  ;asm [39;49m[32;49m
0x7fa6de04b72a    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. _R8D ( )  _Compile_SUBI_DSP ( CELL )  [39;49m[33;40m;asm[39;49m[34;49m [39;49m[32;49m
0x7fa6de04b72e    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'stest' :: codeSize = 17
Word : 0x00007fa6dd333618 :: Compiled at : 0x00007fa6de04b71d
 =============================
::> 'wdiss' was called at namespaces/compiler/x64.cft 386.19 <::
 
this is some purposefully funky code for testing

DataStack at : [34;49mnamespaces/compiler/x64.cft : 390.2[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fa6ddf73220, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	

 x64 test ok
 =============================
Stack.[34;49mndup[39;49m <:> cfrTil compiled word
SourceCode for Stack.[34;49mndup[39;49m :> 
[34;49masm: ndup _Compile_MoveTOS_To_R8D ( ) _Compile_SUBI_DSP ( CELL ) _Compile_Move_DataStackN_ToReg ( R9D, 0 ) "start" label _Compile_TESTreg_Toreg ( R8D, R8D ) "end" 0 EQ jcc _Compile_ADDI_DSP ( CELL ) _Compile_MoveReg_To_StackN ( DSP, 0, R9D ) _Compile_IncDecreg ( DEC, R8D ) "start" goto "end" label ;asm [39;49m
Source code file location of [34;49mndup[39;49m : "namespaces/compiler/x64.cft" : 395.9 :: we are now at : namespaces/compiler/x64.cft : 409.18
Compiled with : optimizeOn, inlineOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04b743 -- code size = 35 bytes
 -----------------------------
Word :: Stack.[34;49mndup[39;49m : definition = 0x00007fa6de04b743 : disassembly at namespaces/compiler/x64.cft : 409.18 :
[34;49m ..                             asm: ndup [39;49m[33;40m_Compile_MoveTOS_To_R8D[39;49m[34;49m ( ) _Compile_SUBI_DSP ( CELL )  _Compile_Move_DataStackN_ToReg ( R9 .. [39;49m[32;49m
0x7fa6de04b743    4d8b06                  mov r8, [r14]                                          [39;49m
[34;49m .. asm: ndup _Compile_MoveTOS_To_R8D ( ) [39;49m[33;40m_Compile_SUBI_DSP[39;49m[34;49m ( CELL )  _Compile_Move_DataStackN_ToReg ( R9D, 0 ) "start" label  _Compi .. [39;49m[32;49m
0x7fa6de04b746    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. o_R8D ( ) _Compile_SUBI_DSP ( CELL )  [39;49m[33;40m_Compile_Move_DataStackN_ToReg[39;49m[34;49m ( R9D, 0 ) "start" label  _Compile_TESTreg_Toreg ( R8D, R8D  .. [39;49m[32;49m
0x7fa6de04b74a    4d8b0e                  mov r9, [r14]                                          [39;49m
[34;49m .. tackN_ToReg ( R9D, 0 ) "start" label  [39;49m[33;40m_Compile_TESTreg_Toreg[39;49m[34;49m ( R8D, R8D ) "end" 0 EQ jcc _Compile_ADDI_DSP ( CELL )  _Compile_Mov .. [39;49m[32;49m
0x7fa6de04b74d    4585c0                  test r8d, r8d                                          [39;49m
[34;49m .. TESTreg_Toreg ( R8D, R8D ) "end" 0 EQ [39;49m[33;40mjcc[39;49m[34;49m _Compile_ADDI_DSP ( CELL )  _Compile_MoveReg_To_StackN ( DSP, 0, R9D )  _Compile_IncDec .. [39;49m[32;49m
0x7fa6de04b750    0f840f000000            jz 0x7fa6de04b765          	< Stack.[34;49mndup[39;49m+34 >[39;49m
[34;49m .. reg_Toreg ( R8D, R8D ) "end" 0 EQ jcc [39;49m[33;40m_Compile_ADDI_DSP[39;49m[34;49m ( CELL )  _Compile_MoveReg_To_StackN ( DSP, 0, R9D )  _Compile_IncDecreg  .. [39;49m[32;49m
0x7fa6de04b756    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..  0 EQ jcc _Compile_ADDI_DSP ( CELL )  [39;49m[33;40m_Compile_MoveReg_To_StackN[39;49m[34;49m ( DSP, 0, R9D )  _Compile_IncDecreg ( DEC, R8D )  "start" goto " .. [39;49m[32;49m
0x7fa6de04b75a    4d890e                  mov [r14], r9                                          [39;49m
[34;49m .. le_MoveReg_To_StackN ( DSP, 0, R9D )  [39;49m[33;40m_Compile_IncDecreg[39;49m[34;49m ( DEC, R8D )  "start" goto "end" label ;asm  .. [39;49m[32;49m
0x7fa6de04b75d    41ffc8                  dec r8d                                                [39;49m
[34;49m .. mpile_IncDecreg ( DEC, R8D )  "start" [39;49m[33;40mgoto[39;49m[34;49m "end" label ;asm  .. [39;49m[32;49m
0x7fa6de04b760    e9e8ffffff              jmp 0x7fa6de04b74d         	< Stack.[34;49mndup[39;49m+10 >[39;49m
[34;49m ..  DEC, R8D )  "start" goto "end" label [39;49m[33;40m;asm[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de04b765    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'ndup' :: codeSize = 34
Word : 0x00007fa6dd334338 :: Compiled at : 0x00007fa6de04b743
 =============================
::> 'wdiss' was called at namespaces/compiler/x64.cft 409.18 <::

DataStack at : [34;49mnamespaces/compiler/x64.cft : 410.2[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fa6ddf73220, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/compiler/x64.cft : 410.13[39;49m :
DataStack depth =  11 : Dsp (R14) = Top = 0x00007fa6ddf73260, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73260 > = 0x0000000000000007	
  DataStack   [  -1 ] < 0x00007fa6ddf73258 > = 0x0000000000000007	
  DataStack   [  -2 ] < 0x00007fa6ddf73250 > = 0x0000000000000007	
  DataStack   [  -3 ] < 0x00007fa6ddf73248 > = 0x0000000000000007	
  DataStack   [  -4 ] < 0x00007fa6ddf73240 > = 0x0000000000000007	
  DataStack   [  -5 ] < 0x00007fa6ddf73238 > = 0x0000000000000007	
  DataStack   [  -6 ] < 0x00007fa6ddf73230 > = 0x0000000000000007	
  DataStack   [  -7 ] < 0x00007fa6ddf73228 > = 0x0000000000000007	
  DataStack   [  -8 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -9 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [ -10 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/compiler/x64.cft : 410.23[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fa6ddf73220, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fa6ddf73220 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fa6ddf73218 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fa6ddf73210 > = 0x0000000000000005	

 =============================
Asm.[34;49mtestAsm[39;49m <:> cfrTil compiled word
SourceCode for Asm.[34;49mtestAsm[39;49m :> 
[34;49masm: testAsm MOVrr RDX RAX MOVrr RAX RBX MOVrr RBX RAX MOVrr RAX RDX ;asm [39;49m
Source code file location of [34;49mtestAsm[39;49m : "namespaces/compiler/x64.cft" : 448.12 :: we are now at : namespaces/compiler/x64.cft : 455.12
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04b944 -- code size = 13 bytes
 -----------------------------
Word :: Asm.[34;49mtestAsm[39;49m : definition = 0x00007fa6de04b944 : disassembly at namespaces/compiler/x64.cft : 455.12 :
[34;49m ..                          asm: testAsm [39;49m[33;40mMOVrr[39;49m[34;49m RDX RAX  MOVrr RAX RBX  MOVrr RBX RAX  MOVrr RAX RDX  ;asm  .. [39;49m[32;49m
0x7fa6de04b944    488bd0                  mov rdx, rax                                           [39;49m
[34;49m ..           asm: testAsm MOVrr RDX RAX  [39;49m[33;40mMOVrr[39;49m[34;49m RAX RBX  MOVrr RBX RAX  MOVrr RAX RDX  ;asm  .. [39;49m[32;49m
0x7fa6de04b947    488bc3                  mov rax, rbx                                           [39;49m
[34;49m .. testAsm MOVrr RDX RAX  MOVrr RAX RBX  [39;49m[33;40mMOVrr[39;49m[34;49m RBX RAX  MOVrr RAX RDX  ;asm [39;49m[32;49m
0x7fa6de04b94a    488bd8                  mov rbx, rax                                           [39;49m
[34;49m .. DX RAX  MOVrr RAX RBX  MOVrr RBX RAX  [39;49m[33;40mMOVrr[39;49m[34;49m RAX RDX  ;asm [39;49m[32;49m
0x7fa6de04b94d    488bc2                  mov rax, rdx                                           [39;49m
[34;49m .. AX RBX  MOVrr RBX RAX  MOVrr RAX RDX  [39;49m[33;40m;asm[39;49m[34;49m [39;49m[32;49m
0x7fa6de04b950    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'testAsm' :: codeSize = 12
Word : 0x00007fa6dd29f188 :: Compiled at : 0x00007fa6de04b944
 =============================
::> 'wdiss' was called at namespaces/compiler/x64.cft 455.12 <::

 _TestDone_ = 1

DataStack at : [34;49mnamespaces/ninit.cft : 15.2[39;49m :
DataStack depth =   0 : Dsp (R14) = Top = 0x00007fa6ddf73208, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
 5040
 =============================
C_Syntax.[34;49mfactoriali[39;49m <:> cfrTil compiled word, prefix
SourceCode for C_Syntax.[34;49mfactoriali[39;49m :> 
[34;49mint factoriali ( byte REG n | REG res ) { res = 1; while ( n >= 2 ) { res = res * (n--) ; } return res; } [39;49m
Source code file location of [34;49mfactoriali[39;49m : "namespaces/test/dev.cft" : 18.39 :: we are now at : namespaces/test/dev.cft : 36.23
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04ba0a -- code size = 32 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfactoriali[39;49m : definition = 0x00007fa6de04ba0a : disassembly at namespaces/test/dev.cft : 36.23 :
[34;49m ..                                   int [39;49m[33;40mfactoriali[39;49m[34;49m ( byte REG n | REG res ) { res = 1; while ( n >= 2 ) { res = res * (n--) ; } ret .. [39;49m[32;49m
0x7fa6de04ba0a    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m .. iali ( byte REG n | REG res ) { res = [39;49m[33;40m1[39;49m[34;49m; while ( n >= 2 ) { res = res * (n--) ; } return res; } [39;49m[32;49m
0x7fa6de04ba0d    48be0100000000000000    mov rsi, 0x1                                           [39;49m
[34;49m .. EG n | REG res ) { res = 1; while ( n [39;49m[33;40m>=[39;49m[34;49m 2 ) { res = res * (n--) ; } return res; } [39;49m[32;49m
0x7fa6de04ba17    4883ff02                cmp rdi, 0x2                                           [39;49m[32;49m
0x7fa6de04ba1b    7c09                    jl 0xde04ba26                                          [39;49m
[34;49m .. res = 1; while ( n >= 2 ) { res = res [39;49m[33;40m*[39;49m[34;49m (n--) ; } return res; } [39;49m[32;49m
0x7fa6de04ba1d    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. = 1; while ( n >= 2 ) { res = res * (n[39;49m[33;40m--[39;49m[34;49m) ; } return res; } [39;49m[32;49m
0x7fa6de04ba21    48ffcf                  dec rdi                                                [39;49m
[34;49m .. hile ( n >= 2 ) { res = res * (n--) ; [39;49m[33;40m}[39;49m[34;49m return res; } [39;49m[32;49m
0x7fa6de04ba24    ebf1                    jmp 0x7fa6de04ba17         	< C_Syntax.[34;49mfactoriali[39;49m+13 >[39;49m
[34;49m .. >= 2 ) { res = res * (n--) ; } return [39;49m[33;40mres[39;49m[34;49m; } [39;49m[32;49m
0x7fa6de04ba26    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fa6de04ba29    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factoriali' :: codeSize = 31
Word : 0x00007fa6ddddd8d8 :: Compiled at : 0x00007fa6de04ba0a
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 36.23 <::
 5040 5040 5040
 =============================
User.[34;49mqexp[39;49m <:> cfrTil compiled word
SourceCode for User.[34;49mqexp[39;49m :> 
[34;49m: qexp dup 1 <= if{ }else{ dup -- qexp * }fi ; [39;49m
Source code file location of [34;49mqexp[39;49m : "namespaces/test/dev.cft" : 45.89 :: we are now at : namespaces/test/dev.cft : 45.90
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04ba96 -- code size = 95 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mqexp[39;49m : definition = 0x00007fa6de04ba96 : disassembly at namespaces/test/dev.cft : 45.90 :
[34;49m ..                                : qexp [39;49m[33;40mdup[39;49m[34;49m 1 <= if{ }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fa6de04ba96    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04ba99    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04ba9d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                            : qexp dup [39;49m[33;40m1[39;49m[34;49m <= if{ }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fa6de04baa0    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de04baaa    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de04baad    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04bab0    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..                          : qexp dup 1 [39;49m[33;40m<=[39;49m[34;49m if{ }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fa6de04bab4    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fa6de04bab7    7f05                    jg 0xde04babe                                          [39;49m
[34;49m ..                   : qexp dup 1 <= if{ [39;49m[33;40m}else{[39;49m[34;49m dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fa6de04bab9    e936000000              jmp 0x7fa6de04baf4         	< User.[34;49mqexp[39;49m+94 >[39;49m
[34;49m ..            : qexp dup 1 <= if{ }else{ [39;49m[33;40mdup[39;49m[34;49m -- qexp * }fi ;  .. [39;49m[32;49m
0x7fa6de04babe    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04bac1    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..                       : qexp dup 1 <= [39;49m[33;40mif{[39;49m[34;49m }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fa6de04bac5    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04bac8    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04bacb    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..        : qexp dup 1 <= if{ }else{ dup [39;49m[33;40m--[39;49m[34;49m qexp * }fi ;  .. [39;49m[32;49m
0x7fa6de04bacf    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fa6de04bad2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04bad6    498906                  mov [r14], rax                                         [39;49m
[34;49m ..     : qexp dup 1 <= if{ }else{ dup -- [39;49m[33;40mqexp[39;49m[34;49m * }fi ;  .. [39;49m[32;49m
0x7fa6de04bad9    e8b8ffffff              call 0x7fa6de04ba96        	< User.[34;49mqexp[39;49m : 0x00007fa6de04ba96 >[39;49m[32;49m
0x7fa6de04bade    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04bae1    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04bae5    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m   : qexp dup 1 <= if{ }else{ dup -- qexp [39;49m[33;40m*[39;49m[34;49m }fi ;  .. [39;49m[32;49m
0x7fa6de04bae9    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fa6de04baed    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04baf1    498906                  mov [r14], rax                                         [39;49m
[34;49m .. dup 1 <= if{ }else{ dup -- qexp * }fi [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de04baf4    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'qexp' :: codeSize = 94
Word : 0x00007fa6dd6a7758 :: Compiled at : 0x00007fa6de04ba96
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 45.90 <::
 5040 5040 5040 5040
 =============================
User.[34;49mbexp3[39;49m <:> cfrTil compiled word
SourceCode for User.[34;49mbexp3[39;49m :> 
[34;49m: bexp3 ( n ) { n @ 1 > } { n @ n @ -- bexp3 * } { 1 } ifElse ; [39;49m
Source code file location of [34;49mbexp3[39;49m : "namespaces/test/dev.cft" : 49.64 :: we are now at : namespaces/test/dev.cft : 51.18
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04bc63 -- code size = 111 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mbexp3[39;49m : definition = 0x00007fa6de04bc63 : disassembly at namespaces/test/dev.cft : 51.18 :
[34;49m ..                                     : [39;49m[33;40mbexp3[39;49m[34;49m ( n ) { n @ 1 > } { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de04bc63    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04bc67    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04bc6b    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                       : bexp3 ( n ) { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de04bc72    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                 : bexp3 ( n ) { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de04bc76    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fa6de04bc7a    7e39                    jle 0xde04bcb5                                         [39;49m
[34;49m ..           : bexp3 ( n ) { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de04bc7c    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04bc80    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04bc84    498906                  mov [r14], rax                                         [39;49m
[34;49m ..       : bexp3 ( n ) { n @ 1 > } { n @ [39;49m[33;40mn[39;49m[34;49m @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de04bc87    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..   : bexp3 ( n ) { n @ 1 > } { n @ n @ [39;49m[33;40m--[39;49m[34;49m bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de04bc8b    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fa6de04bc8e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04bc92    498906                  mov [r14], rax                                         [39;49m
[34;49m   : bexp3 ( n ) { n @ 1 > } { n @ n @ -- [39;49m[33;40mbexp3[39;49m[34;49m * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de04bc95    e8c9ffffff              call 0x7fa6de04bc63        	< User.[34;49mbexp3[39;49m : 0x00007fa6de04bc63 >[39;49m[32;49m
0x7fa6de04bc9a    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04bc9d    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04bca1    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  ( n ) { n @ 1 > } { n @ n @ -- bexp3 [39;49m[33;40m*[39;49m[34;49m } { 1 } ifElse ; [39;49m[32;49m
0x7fa6de04bca5    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fa6de04bca9    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04bcad    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  n ) { n @ 1 > } { n @ n @ -- bexp3 * [39;49m[33;40m}[39;49m[34;49m { 1 } ifElse ; [39;49m[32;49m
0x7fa6de04bcb0    e911000000              jmp 0x7fa6de04bcc6         	< User.[34;49mbexp3[39;49m+99 >[39;49m
[34;49m ..  { n @ 1 > } { n @ n @ -- bexp3 * } { [39;49m[33;40m1[39;49m[34;49m } ifElse ; [39;49m[32;49m
0x7fa6de04bcb5    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de04bcbf    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04bcc3    498906                  mov [r14], rax                                         [39;49m
[34;49m .. } { n @ n @ -- bexp3 * } { 1 } ifElse [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de04bcc6    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04bcca    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04bcce    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04bcd1    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp3' :: codeSize = 110
Word : 0x00007fa6dd2a4c18 :: Compiled at : 0x00007fa6de04bc63
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 51.18 <::

 =============================
C_Syntax.[34;49mfaccs3[39;49m <:> cfrTil compiled word
SourceCode for C_Syntax.[34;49mfaccs3[39;49m :> 
[34;49mint faccs3 ( n | rec -- TOS ) { for ( rec = 1 ; n > 1 ; n-- ) { rec = rec * n ; } } [39;49m
Source code file location of [34;49mfaccs3[39;49m : "namespaces/test/dev.cft" : 56.26 :: we are now at : namespaces/test/dev.cft : 64.20
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04bcec -- code size = 82 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfaccs3[39;49m : definition = 0x00007fa6de04bcec : disassembly at namespaces/test/dev.cft : 64.20 :
[34;49m ..                                   int [39;49m[33;40mfaccs3[39;49m[34;49m ( n | rec -- TOS )  { for ( rec = 1 ; n > 1 ; n-- ) {  rec = rec * n ;  } }  .. [39;49m[32;49m
0x7fa6de04bcec    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04bcf0    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04bcf4    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m .. cs3 ( n | rec -- TOS )  { for ( rec = [39;49m[33;40m1[39;49m[34;49m ; n > 1 ; n-- ) {  rec = rec * n ;  } } [39;49m[32;49m
0x7fa6de04bcfb    48b80100000000000000    mov rax, 0x1                                           [39;49m
[34;49m   int faccs3 ( n | rec -- TOS )  { for ( [39;49m[33;40mrec[39;49m[34;49m = 1 ; n > 1 ; n-- ) {  rec = rec * n ;  } }  .. [39;49m[32;49m
0x7fa6de04bd05    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m .. accs3 ( n | rec -- TOS )  { for ( rec [39;49m[33;40m=[39;49m[34;49m 1 ; n > 1 ; n-- ) {  rec = rec * n ;  } } [39;49m[32;49m
0x7fa6de04bd09    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. ( n | rec -- TOS )  { for ( rec = 1 ; [39;49m[33;40mn[39;49m[34;49m > 1 ; n-- ) {  rec = rec * n ;  } } [39;49m[32;49m
0x7fa6de04bd0c    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. n | rec -- TOS )  { for ( rec = 1 ; n [39;49m[33;40m>[39;49m[34;49m 1 ; n-- ) {  rec = rec * n ;  } } [39;49m[32;49m
0x7fa6de04bd10    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fa6de04bd14    7e19                    jle 0xde04bd2f                                         [39;49m
[34;49m .. or ( rec = 1 ; n > 1 ; n-- ) {  rec = [39;49m[33;40mrec[39;49m[34;49m * n ;  } } [39;49m[32;49m
0x7fa6de04bd16    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ec = 1 ; n > 1 ; n-- ) {  rec = rec * [39;49m[33;40mn[39;49m[34;49m ;  } } [39;49m[32;49m
0x7fa6de04bd1a    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..  rec = 1 ; n > 1 ; n-- ) {  rec = rec [39;49m[33;40m*[39;49m[34;49m n ;  } } [39;49m[32;49m
0x7fa6de04bd1e    480fafc1                imul rax, rcx                                          [39;49m
[34;49m .. )  { for ( rec = 1 ; n > 1 ; n-- ) {  [39;49m[33;40mrec[39;49m[34;49m = rec * n ;  } } [39;49m[32;49m
0x7fa6de04bd22    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  for ( rec = 1 ; n > 1 ; n-- ) {  rec [39;49m[33;40m=[39;49m[34;49m rec * n ;  } } [39;49m[32;49m
0x7fa6de04bd26    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  -- TOS )  { for ( rec = 1 ; n > 1 ; n[39;49m[33;40m--[39;49m[34;49m ) {  rec = rec * n ;  } } [39;49m[32;49m
0x7fa6de04bd29    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  TOS )  { for ( rec = 1 ; n > 1 ; n-- [39;49m[33;40m)[39;49m[34;49m {  rec = rec * n ;  } } [39;49m[32;49m
0x7fa6de04bd2d    ebdd                    jmp 0x7fa6de04bd0c         	< C_Syntax.[34;49mfaccs3[39;49m+32 >[39;49m[32;49m
0x7fa6de04bd2f    498b06                  mov rax, [r14]                                         [39;49m
[34;49m .. ; n > 1 ; n-- ) {  rec = rec * n ;  } [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fa6de04bd32    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04bd36    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04bd3a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04bd3d    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'faccs3' :: codeSize = 81
Word : 0x00007fa6dd2a7a40 :: Compiled at : 0x00007fa6de04bcec
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 64.20 <::
 5040
 =============================
C_Syntax.[34;49mfac5[39;49m <:> cfrTil compiled word
SourceCode for C_Syntax.[34;49mfac5[39;49m :> 
[34;49mint fac5 ( REG n | REG facc ) { facc = 1 ; while ( n > 1 ) { facc = facc * ( n -- ) ; } return facc ; } [39;49m
Source code file location of [34;49mfac5[39;49m : "namespaces/test/dev.cft" : 70.27 :: we are now at : namespaces/test/dev.cft : 80.21
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04bd52 -- code size = 32 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfac5[39;49m : definition = 0x00007fa6de04bd52 : disassembly at namespaces/test/dev.cft : 80.21 :
[34;49m ..                                   int [39;49m[33;40mfac5[39;49m[34;49m ( REG n | REG facc )  {  facc = 1 ; while ( n > 1 )  { facc = facc * ( n -- ) ; } retu .. [39;49m[32;49m
0x7fa6de04bd52    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m int fac5 ( REG n | REG facc )  {  facc = [39;49m[33;40m1[39;49m[34;49m ; while ( n > 1 )  { facc = facc * ( n -- ) ; } return facc ; }  .. [39;49m[32;49m
0x7fa6de04bd55    48be0100000000000000    mov rsi, 0x1                                           [39;49m
[34;49m .. | REG facc )  {  facc = 1 ; while ( n [39;49m[33;40m>[39;49m[34;49m 1 )  { facc = facc * ( n -- ) ; } return facc ; } [39;49m[32;49m
0x7fa6de04bd5f    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fa6de04bd63    7e09                    jle 0xde04bd6e                                         [39;49m
[34;49m ..  = 1 ; while ( n > 1 )  { facc = facc [39;49m[33;40m*[39;49m[34;49m ( n -- ) ; } return facc ; } [39;49m[32;49m
0x7fa6de04bd65    480faff7                imul rsi, rdi                                          [39;49m
[34;49m ..  while ( n > 1 )  { facc = facc * ( n [39;49m[33;40m--[39;49m[34;49m ) ; } return facc ; } [39;49m[32;49m
0x7fa6de04bd69    48ffcf                  dec rdi                                                [39;49m
[34;49m .. ( n > 1 )  { facc = facc * ( n -- ) ; [39;49m[33;40m}[39;49m[34;49m return facc ; } [39;49m[32;49m
0x7fa6de04bd6c    ebf1                    jmp 0x7fa6de04bd5f         	< C_Syntax.[34;49mfac5[39;49m+13 >[39;49m
[34;49m ..   { facc = facc * ( n -- ) ; } return [39;49m[33;40mfacc[39;49m[34;49m ; } [39;49m[32;49m
0x7fa6de04bd6e    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fa6de04bd71    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac5' :: codeSize = 31
Word : 0x00007fa6dd2ab7b8 :: Compiled at : 0x00007fa6de04bd52
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 80.21 <::
 5040
 =============================
C_Syntax.[34;49mfaccs[39;49m <:> cfrTil compiled word
SourceCode for C_Syntax.[34;49mfaccs[39;49m :> 
[34;49mint faccs ( REG n | REG rec -- RAX ) { rec = 1 ; while ( n > 1 ) { rec = rec * n ; n-- ; } return rec ; } [39;49m
Source code file location of [34;49mfaccs[39;49m : "namespaces/test/dev.cft" : 85.33 :: we are now at : namespaces/test/dev.cft : 94.19
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04bd86 -- code size = 32 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfaccs[39;49m : definition = 0x00007fa6de04bd86 : disassembly at namespaces/test/dev.cft : 94.19 :
[34;49m ..                                   int [39;49m[33;40mfaccs[39;49m[34;49m ( REG n | REG rec -- RAX )  { rec = 1 ;  while ( n > 1 ) {  rec = rec * n ; n-- ;  }  .. [39;49m[32;49m
0x7fa6de04bd86    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m .. s ( REG n | REG rec -- RAX )  { rec = [39;49m[33;40m1[39;49m[34;49m ;  while ( n > 1 ) {  rec = rec * n ; n-- ;  }  return rec ; } [39;49m[32;49m
0x7fa6de04bd89    48be0100000000000000    mov rsi, 0x1                                           [39;49m
[34;49m ..  rec -- RAX )  { rec = 1 ;  while ( n [39;49m[33;40m>[39;49m[34;49m 1 ) {  rec = rec * n ; n-- ;  }  return rec ; } [39;49m[32;49m
0x7fa6de04bd93    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fa6de04bd97    7e09                    jle 0xde04bda2                                         [39;49m
[34;49m ..   while ( n > 1 ) {  rec = rec * n ; n[39;49m[33;40m--[39;49m[34;49m ;  }  return rec ; } [39;49m[32;49m
0x7fa6de04bd99    480faff7                imul rsi, rdi                                          [39;49m
[34;49m ..   while ( n > 1 ) {  rec = rec * n ; n[39;49m[33;40m--[39;49m[34;49m ;  }  return rec ; } [39;49m[32;49m
0x7fa6de04bd9d    48ffcf                  dec rdi                                                [39;49m
[34;49m .. e ( n > 1 ) {  rec = rec * n ; n-- ;  [39;49m[33;40m}[39;49m[34;49m  return rec ; } [39;49m[32;49m
0x7fa6de04bda0    ebf1                    jmp 0x7fa6de04bd93         	< C_Syntax.[34;49mfaccs[39;49m+13 >[39;49m
[34;49m .. ) {  rec = rec * n ; n-- ;  }  return [39;49m[33;40mrec[39;49m[34;49m ; } [39;49m[32;49m
0x7fa6de04bda2    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fa6de04bda5    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'faccs' :: codeSize = 31
Word : 0x00007fa6dd2af300 :: Compiled at : 0x00007fa6de04bd86
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 94.19 <::
 5040 5040
 =============================
C_Syntax.[34;49mfaccs2[39;49m <:> cfrTil compiled word
SourceCode for C_Syntax.[34;49mfaccs2[39;49m :> 
[34;49mint faccs2 ( REG n | REG rec ) { for ( rec = 1 ; n > 1 ; n-- ) { rec = rec * n ; } return rec ; } [39;49m
Source code file location of [34;49mfaccs2[39;49m : "namespaces/test/dev.cft" : 112.27 :: we are now at : namespaces/test/dev.cft : 120.20
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04bdee -- code size = 32 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfaccs2[39;49m : definition = 0x00007fa6de04bdee : disassembly at namespaces/test/dev.cft : 120.20 :
[34;49m ..                                   int [39;49m[33;40mfaccs2[39;49m[34;49m ( REG n | REG rec )  { for ( rec = 1 ; n > 1 ; n-- ) {  rec = rec * n ;  }  return r .. [39;49m[32;49m
0x7fa6de04bdee    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m .. s2 ( REG n | REG rec )  { for ( rec = [39;49m[33;40m1[39;49m[34;49m ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fa6de04bdf1    48be0100000000000000    mov rsi, 0x1                                           [39;49m
[34;49m .. EG n | REG rec )  { for ( rec = 1 ; n [39;49m[33;40m>[39;49m[34;49m 1 ; n-- ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fa6de04bdfb    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fa6de04bdff    7e09                    jle 0xde04be0a                                         [39;49m
[34;49m ..  rec = 1 ; n > 1 ; n-- ) {  rec = rec [39;49m[33;40m*[39;49m[34;49m n ;  }  return rec ; } [39;49m[32;49m
0x7fa6de04be01    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. REG rec )  { for ( rec = 1 ; n > 1 ; n[39;49m[33;40m--[39;49m[34;49m ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fa6de04be05    48ffcf                  dec rdi                                                [39;49m
[34;49m ..  rec )  { for ( rec = 1 ; n > 1 ; n-- [39;49m[33;40m)[39;49m[34;49m {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fa6de04be08    ebf1                    jmp 0x7fa6de04bdfb         	< C_Syntax.[34;49mfaccs2[39;49m+13 >[39;49m
[34;49m .. ; n-- ) {  rec = rec * n ;  }  return [39;49m[33;40mrec[39;49m[34;49m ; } [39;49m[32;49m
0x7fa6de04be0a    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fa6de04be0d    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'faccs2' :: codeSize = 31
Word : 0x00007fa6dd2b6760 :: Compiled at : 0x00007fa6de04bdee
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 120.20 <::
 5040 5040
 =============================
User.[34;49miFactorialX[39;49m <:> cfrTil compiled word
SourceCode for User.[34;49miFactorialX[39;49m :> 
[34;49m: iFactorialX ( n w | k ) { k 1 = } { k @ n @ <= } { k ++ } { w @ _ifx } for ; [39;49m
Source code file location of [34;49miFactorialX[39;49m : "namespaces/test/dev.cft" : 159.26 :: we are now at : namespaces/test/dev.cft : 163.24
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04c13c -- code size = 92 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49miFactorialX[39;49m : definition = 0x00007fa6de04c13c : disassembly at namespaces/test/dev.cft : 163.24 :
[34;49m ..                                     : [39;49m[33;40miFactorialX[39;49m[34;49m ( n w | k )  { k 1 = } { k @ n @ <= } { k ++ }  { w @ _ifx } for  ;  .. [39;49m[32;49m
0x7fa6de04c13c    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04c140    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04c144    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..          : iFactorialX ( n w | k )  { [39;49m[33;40mk[39;49m[34;49m 1 = } { k @ n @ <= } { k ++ }  { w @ _ifx } for  ;  .. [39;49m[32;49m
0x7fa6de04c14b    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..        : iFactorialX ( n w | k )  { k [39;49m[33;40m1[39;49m[34;49m = } { k @ n @ <= } { k ++ }  { w @ _ifx } for  ;  .. [39;49m[32;49m
0x7fa6de04c14f    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m ..      : iFactorialX ( n w | k )  { k 1 [39;49m[33;40m=[39;49m[34;49m } { k @ n @ <= } { k ++ }  { w @ _ifx } for  ;  .. [39;49m[32;49m
0x7fa6de04c159    488908                  mov [rax], rcx                                         [39;49m
[34;49m   : iFactorialX ( n w | k )  { k 1 = } { [39;49m[33;40mk[39;49m[34;49m @ n @ <= } { k ++ }  { w @ _ifx } for  ;  .. [39;49m[32;49m
0x7fa6de04c15c    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ctorialX ( n w | k )  { k 1 = } { k @ [39;49m[33;40mn[39;49m[34;49m @ <= } { k ++ }  { w @ _ifx } for  ; [39;49m[32;49m
0x7fa6de04c160    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. ialX ( n w | k )  { k 1 = } { k @ n @ [39;49m[33;40m<=[39;49m[34;49m } { k ++ }  { w @ _ifx } for  ; [39;49m[32;49m
0x7fa6de04c164    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fa6de04c167    0f8f1e000000            jg 0x7fa6de04c18b          	< User.[34;49miFactorialX[39;49m+79 >[39;49m
[34;49m ..  { k 1 = } { k @ n @ <= } { k ++ }  { [39;49m[33;40mw[39;49m[34;49m @ _ifx } for  ; [39;49m[32;49m
0x7fa6de04c16d    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04c171    4983c608                add r14, 0x8                                           [39;49m
[34;49m .. X ( n w | k )  { k 1 = } { k @ n @ <= [39;49m[33;40m}[39;49m[34;49m { k ++ }  { w @ _ifx } for  ; [39;49m[32;49m
0x7fa6de04c175    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  1 = } { k @ n @ <= } { k ++ }  { w @ [39;49m[33;40m_ifx[39;49m[34;49m } for  ; [39;49m[32;49m
0x7fa6de04c178    49b91ac004dea67f0000    mov r9, 0x7fa6de04c01a                                 [39;49m[32;49m
0x7fa6de04c182    49ffd1                  call r9                    	< User.[34;49m_ifx[39;49m : 0x00007fa6de04c01a >[39;49m
[34;49m .. w | k )  { k 1 = } { k @ n @ <= } { k [39;49m[33;40m++[39;49m[34;49m }  { w @ _ifx } for  ; [39;49m[32;49m
0x7fa6de04c185    49ff4708                inc qword [r15+0x8]                                    [39;49m
[34;49m ..  k )  { k 1 = } { k @ n @ <= } { k ++ [39;49m[33;40m}[39;49m[34;49m  { w @ _ifx } for  ; [39;49m[32;49m
0x7fa6de04c189    ebd1                    jmp 0x7fa6de04c15c         	< User.[34;49miFactorialX[39;49m+32 >[39;49m
[34;49m ..  n @ <= } { k ++ }  { w @ _ifx } for  [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de04c18b    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04c18f    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04c193    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fa6de04c197    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'iFactorialX' :: codeSize = 91
Word : 0x00007fa6dd270310 :: Compiled at : 0x00007fa6de04c13c
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 163.24 <::

 =============================
User.[34;49m_ffx[39;49m <:> cfrTil compiled word
SourceCode for User.[34;49m_ffx[39;49m :> 
[34;49m: _ffx ( n w | t ) nl 7 w @ wordRun decimal p nl { t 0 = } { t @ n @ < } { t ++ } { reps @ w @ iFactorialX } for ; [39;49m
Source code file location of [34;49m_ffx[39;49m : "namespaces/test/dev.cft" : 166.19 :: we are now at : namespaces/test/dev.cft : 171.17
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04c1fe -- code size = 245 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49m_ffx[39;49m : definition = 0x00007fa6de04c1fe : disassembly at namespaces/test/dev.cft : 171.17 :
[34;49m ..                                     : [39;49m[33;40m_ffx[39;49m[34;49m ( n w | t )  nl 7 w @ wordRun decimal p nl  { t 0 = } { t @ n @ < } { t ++ }  { reps @ .. [39;49m[32;49m
0x7fa6de04c1fe    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04c202    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04c206    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                   : _ffx ( n w | t )  [39;49m[33;40mnl[39;49m[34;49m 7 w @ wordRun decimal p nl  { t 0 = } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } .. [39;49m[32;49m
0x7fa6de04c20d    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de04c217    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04c221    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m ..                : _ffx ( n w | t )  nl [39;49m[33;40m7[39;49m[34;49m w @ wordRun decimal p nl  { t 0 = } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } fo .. [39;49m[32;49m
0x7fa6de04c224    48b80700000000000000    mov rax, 0x7                                           [39;49m[32;49m
0x7fa6de04c22e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04c232    498906                  mov [r14], rax                                         [39;49m
[34;49m ..              : _ffx ( n w | t )  nl 7 [39;49m[33;40mw[39;49m[34;49m @ wordRun decimal p nl  { t 0 = } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  .. [39;49m[32;49m
0x7fa6de04c235    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04c239    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04c23d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..          : _ffx ( n w | t )  nl 7 w @ [39;49m[33;40mwordRun[39;49m[34;49m decimal p nl  { t 0 = } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ;  .. [39;49m[32;49m
0x7fa6de04c240    49b89940efbf1d560000    mov r8, 0x561dbfef4099                                 [39;49m[32;49m
0x7fa6de04c24a    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04c254    49ffd1                  call r9                    	< Word.[34;49mwordRun[39;49m : 0x0000561dbfef4099 >[39;49m
[34;49m ..  : _ffx ( n w | t )  nl 7 w @ wordRun [39;49m[33;40mdecimal[39;49m[34;49m p nl  { t 0 = } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ;  .. [39;49m[32;49m
0x7fa6de04c257    49b84f31efbf1d560000    mov r8, 0x561dbfef314f                                 [39;49m[32;49m
0x7fa6de04c261    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04c26b    49ffd1                  call r9                    	< System.[34;49mdecimal[39;49m : 0x0000561dbfef314f >[39;49m
[34;49m .. ( n w | t )  nl 7 w @ wordRun decimal [39;49m[33;40mp[39;49m[34;49m nl  { t 0 = } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fa6de04c26e    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de04c278    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m
[34;49m .. n w | t )  nl 7 w @ wordRun decimal p [39;49m[33;40mnl[39;49m[34;49m  { t 0 = } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fa6de04c27b    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de04c285    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04c28f    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m .. t )  nl 7 w @ wordRun decimal p nl  { [39;49m[33;40mt[39;49m[34;49m 0 = } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fa6de04c292    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m .. )  nl 7 w @ wordRun decimal p nl  { t [39;49m[33;40m0[39;49m[34;49m = } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fa6de04c296    48b90000000000000000    mov rcx, 0x0                                           [39;49m
[34;49m ..  nl 7 w @ wordRun decimal p nl  { t 0 [39;49m[33;40m=[39;49m[34;49m } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fa6de04c2a0    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. w @ wordRun decimal p nl  { t 0 = } { [39;49m[33;40mt[39;49m[34;49m @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fa6de04c2a3    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. wordRun decimal p nl  { t 0 = } { t @ [39;49m[33;40mn[39;49m[34;49m @ < } { t ++ }  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fa6de04c2a7    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. Run decimal p nl  { t 0 = } { t @ n @ [39;49m[33;40m<[39;49m[34;49m } { t ++ }  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fa6de04c2ab    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fa6de04c2ae    0f8d32000000            jge 0x7fa6de04c2e6         	< User.[34;49m_ffx[39;49m+232 >[39;49m
[34;49m ..   { t 0 = } { t @ n @ < } { t ++ }  { [39;49m[33;40mreps[39;49m[34;49m @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fa6de04c2b4    48b8886827dda67f0000    mov rax, 0x7fa6dd276888                                [39;49m[32;49m
0x7fa6de04c2be    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fa6de04c2c1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04c2c5    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  = } { t @ n @ < } { t ++ }  { reps @ [39;49m[33;40mw[39;49m[34;49m @ iFactorialX } for  ; [39;49m[32;49m
0x7fa6de04c2c8    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04c2cc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04c2d0    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  { t @ n @ < } { t ++ }  { reps @ w @ [39;49m[33;40miFactorialX[39;49m[34;49m } for  ; [39;49m[32;49m
0x7fa6de04c2d3    49b93cc104dea67f0000    mov r9, 0x7fa6de04c13c                                 [39;49m[32;49m
0x7fa6de04c2dd    49ffd1                  call r9                    	< User.[34;49miFactorialX[39;49m : 0x00007fa6de04c13c >[39;49m
[34;49m .. mal p nl  { t 0 = } { t @ n @ < } { t [39;49m[33;40m++[39;49m[34;49m }  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fa6de04c2e0    49ff4708                inc qword [r15+0x8]                                    [39;49m
[34;49m ..  p nl  { t 0 = } { t @ n @ < } { t ++ [39;49m[33;40m}[39;49m[34;49m  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fa6de04c2e4    ebbd                    jmp 0x7fa6de04c2a3         	< User.[34;49m_ffx[39;49m+165 >[39;49m
[34;49m .. ++ }  { reps @ w @ iFactorialX } for  [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de04c2e6    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04c2ea    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04c2ee    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fa6de04c2f2    c3                      ret                                                    [39;49m
Word_Disassemble : word - '_ffx' :: codeSize = 244
Word : 0x00007fa6dd276a50 :: Compiled at : 0x00007fa6de04c1fe
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 171.17 <::

 ffx ... 

 =============================
User.[34;49mfactorial[39;49m <:> cfrTil compiled word
SourceCode for User.[34;49mfactorial[39;49m :> 
[34;49m: factorial ( REG n | REG rec -- RAX ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ; [39;49m
Source code file location of [34;49mfactorial[39;49m : "namespaces/test/dev.cft" : 137.108 :: we are now at : namespaces/test/dev.cft : 201.16
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04bff5 -- code size = 32 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mfactorial[39;49m : definition = 0x00007fa6de04bff5 : disassembly at namespaces/test/dev.cft : 201.16 :
[34;49m ..                           : factorial [39;49m[33;40m([39;49m[34;49m REG n | REG rec -- RAX ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return  .. [39;49m[32;49m
0x7fa6de04bff5    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m .. torial ( REG n | REG rec -- RAX ) rec [39;49m[33;40m1[39;49m[34;49m = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ; [39;49m[32;49m
0x7fa6de04bff8    48be0100000000000000    mov rsi, 0x1                                           [39;49m
[34;49m ..  n | REG rec -- RAX ) rec 1 = { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { rec @ n @ * rec store n -- } while return rec ; [39;49m[32;49m
0x7fa6de04c002    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fa6de04c006    7e09                    jle 0xde04c011                                         [39;49m
[34;49m .. RAX ) rec 1 = { n @ 1 > } { rec @ n @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while return rec ; [39;49m[32;49m
0x7fa6de04c008    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. { n @ 1 > } { rec @ n @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while return rec ; [39;49m[32;49m
0x7fa6de04c00c    48ffcf                  dec rdi                                                [39;49m
[34;49m ..  @ 1 > } { rec @ n @ * rec store n -- [39;49m[33;40m}[39;49m[34;49m while return rec ; [39;49m[32;49m
0x7fa6de04c00f    ebf1                    jmp 0x7fa6de04c002         	< User.[34;49mfactorial[39;49m+13 >[39;49m
[34;49m .. @ * rec store n -- } while return rec [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de04c011    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fa6de04c014    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factorial' :: codeSize = 31
Word : 0x00007fa6dd2662b8 :: Compiled at : 0x00007fa6de04bff5
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 201.16 <::

 5040

 factorial :
Timer [ 1 ] : elapsed time = 0.024686543 seconds :: function : factorial : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial[39;49m :> 
C Primitive
 -----------------------------
Word :: C.[34;49mcfactorial[39;49m : definition = 0x0000561dbfef7600 : disassembly at namespaces/test/dev.cft : 202.17 :[32;49m
0x561dbfef7604    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x561dbfef7607    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x561dbfef760b    7f0b                    jg 0xbfef7618                                          [39;49m[32;49m
0x561dbfef760d    49c70601000000          mov qword [r14], 0x1                                   [39;49m[32;49m
0x561dbfef7614    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial' :: codeSize = 17
Word : 0x00007fa6de0255c8 :: Compiled at : 0x0000561dbfef7600
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 202.17 <::

 5040

 cfactorial :
Timer [ 1 ] : elapsed time = 0.036836303 seconds :: function : cfactorial : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial2[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial2[39;49m :> 
C Primitive
 -----------------------------
Word :: C.[34;49mcfactorial2[39;49m : definition = 0x0000561dbfef7740 : disassembly at namespaces/test/dev.cft : 203.18 :[32;49m
0x561dbfef7744    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x561dbfef7747    4c89f6                  mov rsi, r14                                           [39;49m[32;49m
0x561dbfef774a    ba01000000              mov edx, 0x1                                           [39;49m[32;49m
0x561dbfef774f    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x561dbfef7753    7e14                    jle 0xbfef7769                                         [39;49m[32;49m
0x561dbfef7755    0f1f00                  nop [rax]                                              [39;49m[32;49m
0x561dbfef7758    4889c1                  mov rcx, rax                                           [39;49m[32;49m
0x561dbfef775b    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x561dbfef775f    480fafd1                imul rdx, rcx                                          [39;49m[32;49m
0x561dbfef7763    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x561dbfef7767    75ef                    jnz 0xbfef7758                                         [39;49m[32;49m
0x561dbfef7769    488916                  mov [rsi], rdx                                         [39;49m[32;49m
0x561dbfef776c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial2' :: codeSize = 41
Word : 0x00007fa6de0257f8 :: Compiled at : 0x0000561dbfef7740
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 203.18 <::

 5040

 cfactorial2 :
Timer [ 1 ] : elapsed time = 0.025845893 seconds :: function : cfactorial2 : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial3[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial3[39;49m :> 
C Primitive
 -----------------------------
Word :: C.[34;49mcfactorial3[39;49m : definition = 0x0000561dbfef7770 : disassembly at namespaces/test/dev.cft : 204.18 :[32;49m
0x561dbfef7774    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x561dbfef7777    4c89f6                  mov rsi, r14                                           [39;49m[32;49m
0x561dbfef777a    ba01000000              mov edx, 0x1                                           [39;49m[32;49m
0x561dbfef777f    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x561dbfef7783    7e14                    jle 0xbfef7799                                         [39;49m[32;49m
0x561dbfef7785    0f1f00                  nop [rax]                                              [39;49m[32;49m
0x561dbfef7788    4889c1                  mov rcx, rax                                           [39;49m[32;49m
0x561dbfef778b    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x561dbfef778f    480fafd1                imul rdx, rcx                                          [39;49m[32;49m
0x561dbfef7793    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x561dbfef7797    75ef                    jnz 0xbfef7788                                         [39;49m[32;49m
0x561dbfef7799    488916                  mov [rsi], rdx                                         [39;49m[32;49m
0x561dbfef779c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial3' :: codeSize = 41
Word : 0x00007fa6de025a28 :: Compiled at : 0x0000561dbfef7770
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 204.18 <::

 5040

 cfactorial3 :
Timer [ 1 ] : elapsed time = 0.025223157 seconds :: function : cfactorial3 : called on args : 1 - 23 : 10000 reps

 =============================
User.[34;49mqexp[39;49m <:> cfrTil compiled word
SourceCode for User.[34;49mqexp[39;49m :> 
[34;49m: qexp dup 1 <= if{ }else{ dup -- qexp * }fi ; [39;49m
Source code file location of [34;49mqexp[39;49m : "namespaces/test/dev.cft" : 45.89 :: we are now at : namespaces/test/dev.cft : 205.16
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04ba96 -- code size = 95 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mqexp[39;49m : definition = 0x00007fa6de04ba96 : disassembly at namespaces/test/dev.cft : 205.16 :
[34;49m ..                                : qexp [39;49m[33;40mdup[39;49m[34;49m 1 <= if{ }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fa6de04ba96    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04ba99    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04ba9d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                            : qexp dup [39;49m[33;40m1[39;49m[34;49m <= if{ }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fa6de04baa0    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de04baaa    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de04baad    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04bab0    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..                          : qexp dup 1 [39;49m[33;40m<=[39;49m[34;49m if{ }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fa6de04bab4    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fa6de04bab7    7f05                    jg 0xde04babe                                          [39;49m[32;49m
0x7fa6de04bab9    e936000000              jmp 0x7fa6de04baf4         	< User.[34;49mqexp[39;49m+94 >[39;49m
[34;49m ..            : qexp dup 1 <= if{ }else{ [39;49m[33;40mdup[39;49m[34;49m -- qexp * }fi ;  .. [39;49m[32;49m
0x7fa6de04babe    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04bac1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04bac5    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04bac8    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04bacb    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..        : qexp dup 1 <= if{ }else{ dup [39;49m[33;40m--[39;49m[34;49m qexp * }fi ;  .. [39;49m[32;49m
0x7fa6de04bacf    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fa6de04bad2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04bad6    498906                  mov [r14], rax                                         [39;49m
[34;49m ..     : qexp dup 1 <= if{ }else{ dup -- [39;49m[33;40mqexp[39;49m[34;49m * }fi ;  .. [39;49m[32;49m
0x7fa6de04bad9    e8b8ffffff              call 0x7fa6de04ba96        	< User.[34;49mqexp[39;49m : 0x00007fa6de04ba96 >[39;49m[32;49m
0x7fa6de04bade    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04bae1    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04bae5    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m   : qexp dup 1 <= if{ }else{ dup -- qexp [39;49m[33;40m*[39;49m[34;49m }fi ;  .. [39;49m[32;49m
0x7fa6de04bae9    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fa6de04baed    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04baf1    498906                  mov [r14], rax                                         [39;49m
[34;49m .. dup 1 <= if{ }else{ dup -- qexp * }fi [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de04baf4    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'qexp' :: codeSize = 94
Word : 0x00007fa6dd6a7758 :: Compiled at : 0x00007fa6de04ba96
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 205.16 <::

 5040

 qexp :
Timer [ 1 ] : elapsed time = 0.062613267 seconds :: function : qexp : called on args : 1 - 23 : 10000 reps

 =============================
User.[34;49mbexp[39;49m <:> cfrTil compiled word
SourceCode for User.[34;49mbexp[39;49m :> 
[34;49m: bexp ( n ) n @ 1 > if{ n @ dup -- bexp * }else{ 1 }fi ; [39;49m
Source code file location of [34;49mbexp[39;49m : "namespaces/test/dev.cft" : 47.83 :: we are now at : namespaces/test/dev.cft : 206.13
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04bb6d -- code size = 118 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mbexp[39;49m : definition = 0x00007fa6de04bb6d : disassembly at namespaces/test/dev.cft : 206.13 :
[34;49m ..                                     : [39;49m[33;40mbexp[39;49m[34;49m ( n ) n @ 1 > if{ n @ dup -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fa6de04bb6d    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04bb71    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04bb75    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                          : bexp ( n ) [39;49m[33;40mn[39;49m[34;49m @ 1 > if{ n @ dup -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fa6de04bb7c    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                    : bexp ( n ) n @ 1 [39;49m[33;40m>[39;49m[34;49m if{ n @ dup -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fa6de04bb80    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fa6de04bb84    7e40                    jle 0xde04bbc6                                         [39;49m
[34;49m ..              : bexp ( n ) n @ 1 > if{ [39;49m[33;40mn[39;49m[34;49m @ dup -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fa6de04bb86    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04bb8a    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de04bb8e    498906                  mov [r14], rax                                         [39;49m
[34;49m ..          : bexp ( n ) n @ 1 > if{ n @ [39;49m[33;40mdup[39;49m[34;49m -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fa6de04bb91    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fa6de04bb95    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04bb98    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..      : bexp ( n ) n @ 1 > if{ n @ dup [39;49m[33;40m--[39;49m[34;49m bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fa6de04bb9c    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fa6de04bb9f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04bba3    498906                  mov [r14], rax                                         [39;49m
[34;49m ..   : bexp ( n ) n @ 1 > if{ n @ dup -- [39;49m[33;40mbexp[39;49m[34;49m * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fa6de04bba6    e8c2ffffff              call 0x7fa6de04bb6d        	< User.[34;49mbexp[39;49m : 0x00007fa6de04bb6d >[39;49m[32;49m
0x7fa6de04bbab    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04bbae    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04bbb2    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m : bexp ( n ) n @ 1 > if{ n @ dup -- bexp [39;49m[33;40m*[39;49m[34;49m }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fa6de04bbb6    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fa6de04bbba    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04bbbe    498906                  mov [r14], rax                                         [39;49m
[34;49m .. p ( n ) n @ 1 > if{ n @ dup -- bexp * [39;49m[33;40m}else{[39;49m[34;49m 1 }fi ; [39;49m[32;49m
0x7fa6de04bbc1    e911000000              jmp 0x7fa6de04bbd7         	< User.[34;49mbexp[39;49m+106 >[39;49m
[34;49m ..  n @ 1 > if{ n @ dup -- bexp * }else{ [39;49m[33;40m1[39;49m[34;49m }fi ; [39;49m[32;49m
0x7fa6de04bbc6    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de04bbd0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04bbd4    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  > if{ n @ dup -- bexp * }else{ 1 }fi [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de04bbd7    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04bbdb    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04bbdf    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04bbe2    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp' :: codeSize = 117
Word : 0x00007fa6dddbe770 :: Compiled at : 0x00007fa6de04bb6d
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 206.13 <::

 5040

 bexp :
Timer [ 1 ] : elapsed time = 0.067343700 seconds :: function : bexp : called on args : 1 - 23 : 10000 reps

 =============================
User.[34;49mbexp2[39;49m <:> cfrTil compiled word
SourceCode for User.[34;49mbexp2[39;49m :> 
[34;49m: bexp2 ( n ) { n @ 1 > } { n @ dup -- bexp2 * } { 1 } ifElse ; [39;49m
Source code file location of [34;49mbexp2[39;49m : "namespaces/test/dev.cft" : 48.90 :: we are now at : namespaces/test/dev.cft : 207.12
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04bbe8 -- code size = 118 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mbexp2[39;49m : definition = 0x00007fa6de04bbe8 : disassembly at namespaces/test/dev.cft : 207.12 :
[34;49m ..                                     : [39;49m[33;40mbexp2[39;49m[34;49m ( n ) { n @ 1 > } { n @ dup -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de04bbe8    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04bbec    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04bbf0    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                       : bexp2 ( n ) { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ dup -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de04bbf7    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                 : bexp2 ( n ) { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ dup -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de04bbfb    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fa6de04bbff    7e40                    jle 0xde04bc41                                         [39;49m
[34;49m ..           : bexp2 ( n ) { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ dup -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de04bc01    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04bc05    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de04bc09    498906                  mov [r14], rax                                         [39;49m
[34;49m ..       : bexp2 ( n ) { n @ 1 > } { n @ [39;49m[33;40mdup[39;49m[34;49m -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de04bc0c    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fa6de04bc10    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04bc13    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..   : bexp2 ( n ) { n @ 1 > } { n @ dup [39;49m[33;40m--[39;49m[34;49m bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de04bc17    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fa6de04bc1a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04bc1e    498906                  mov [r14], rax                                         [39;49m
[34;49m   : bexp2 ( n ) { n @ 1 > } { n @ dup -- [39;49m[33;40mbexp2[39;49m[34;49m * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de04bc21    e8c2ffffff              call 0x7fa6de04bbe8        	< User.[34;49mbexp2[39;49m : 0x00007fa6de04bbe8 >[39;49m[32;49m
0x7fa6de04bc26    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04bc29    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04bc2d    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  ( n ) { n @ 1 > } { n @ dup -- bexp2 [39;49m[33;40m*[39;49m[34;49m } { 1 } ifElse ; [39;49m[32;49m
0x7fa6de04bc31    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fa6de04bc35    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04bc39    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  n ) { n @ 1 > } { n @ dup -- bexp2 * [39;49m[33;40m}[39;49m[34;49m { 1 } ifElse ; [39;49m[32;49m
0x7fa6de04bc3c    e911000000              jmp 0x7fa6de04bc52         	< User.[34;49mbexp2[39;49m+106 >[39;49m
[34;49m ..  { n @ 1 > } { n @ dup -- bexp2 * } { [39;49m[33;40m1[39;49m[34;49m } ifElse ; [39;49m[32;49m
0x7fa6de04bc41    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de04bc4b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04bc4f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. } { n @ dup -- bexp2 * } { 1 } ifElse [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de04bc52    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04bc56    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04bc5a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04bc5d    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp2' :: codeSize = 117
Word : 0x00007fa6dd2a2480 :: Compiled at : 0x00007fa6de04bbe8
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 207.12 <::

 5040

 bexp2 :
Timer [ 1 ] : elapsed time = 0.068046225 seconds :: function : bexp2 : called on args : 1 - 23 : 10000 reps

 =============================
C_Syntax.[34;49mfactoriali[39;49m <:> cfrTil compiled word, prefix
SourceCode for C_Syntax.[34;49mfactoriali[39;49m :> 
[34;49mint factoriali ( byte REG n | REG res ) { res = 1; while ( n >= 2 ) { res = res * (n--) ; } return res; } [39;49m
Source code file location of [34;49mfactoriali[39;49m : "namespaces/test/dev.cft" : 18.39 :: we are now at : namespaces/test/dev.cft : 208.17
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04ba0a -- code size = 32 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfactoriali[39;49m : definition = 0x00007fa6de04ba0a : disassembly at namespaces/test/dev.cft : 208.17 :
[34;49m ..                                   int [39;49m[33;40mfactoriali[39;49m[34;49m ( byte REG n | REG res ) { res = 1; while ( n >= 2 ) { res = res * (n--) ; } ret .. [39;49m[32;49m
0x7fa6de04ba0a    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m .. iali ( byte REG n | REG res ) { res = [39;49m[33;40m1[39;49m[34;49m; while ( n >= 2 ) { res = res * (n--) ; } return res; } [39;49m[32;49m
0x7fa6de04ba0d    48be0100000000000000    mov rsi, 0x1                                           [39;49m
[34;49m .. EG n | REG res ) { res = 1; while ( n [39;49m[33;40m>=[39;49m[34;49m 2 ) { res = res * (n--) ; } return res; } [39;49m[32;49m
0x7fa6de04ba17    4883ff02                cmp rdi, 0x2                                           [39;49m[32;49m
0x7fa6de04ba1b    7c09                    jl 0xde04ba26                                          [39;49m
[34;49m .. res = 1; while ( n >= 2 ) { res = res [39;49m[33;40m*[39;49m[34;49m (n--) ; } return res; } [39;49m[32;49m
0x7fa6de04ba1d    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. = 1; while ( n >= 2 ) { res = res * (n[39;49m[33;40m--[39;49m[34;49m) ; } return res; } [39;49m[32;49m
0x7fa6de04ba21    48ffcf                  dec rdi                                                [39;49m
[34;49m .. hile ( n >= 2 ) { res = res * (n--) ; [39;49m[33;40m}[39;49m[34;49m return res; } [39;49m[32;49m
0x7fa6de04ba24    ebf1                    jmp 0x7fa6de04ba17         	< C_Syntax.[34;49mfactoriali[39;49m+13 >[39;49m
[34;49m .. >= 2 ) { res = res * (n--) ; } return [39;49m[33;40mres[39;49m[34;49m; } [39;49m[32;49m
0x7fa6de04ba26    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fa6de04ba29    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factoriali' :: codeSize = 31
Word : 0x00007fa6ddddd8d8 :: Compiled at : 0x00007fa6de04ba0a
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 208.17 <::

 5040

 factoriali :
Timer [ 1 ] : elapsed time = 0.025461496 seconds :: function : factoriali : called on args : 1 - 23 : 10000 reps

 =============================
User.[34;49mqexp[39;49m <:> cfrTil compiled word
SourceCode for User.[34;49mqexp[39;49m :> 
[34;49m: qexp dup 1 <= if{ }else{ dup -- qexp * }fi ; [39;49m
Source code file location of [34;49mqexp[39;49m : "namespaces/test/dev.cft" : 45.89 :: we are now at : namespaces/test/dev.cft : 209.13
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04ba96 -- code size = 95 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mqexp[39;49m : definition = 0x00007fa6de04ba96 : disassembly at namespaces/test/dev.cft : 209.13 :
[34;49m ..                                : qexp [39;49m[33;40mdup[39;49m[34;49m 1 <= if{ }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fa6de04ba96    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04ba99    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04ba9d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                            : qexp dup [39;49m[33;40m1[39;49m[34;49m <= if{ }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fa6de04baa0    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de04baaa    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de04baad    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04bab0    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..                          : qexp dup 1 [39;49m[33;40m<=[39;49m[34;49m if{ }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fa6de04bab4    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fa6de04bab7    7f05                    jg 0xde04babe                                          [39;49m[32;49m
0x7fa6de04bab9    e936000000              jmp 0x7fa6de04baf4         	< User.[34;49mqexp[39;49m+94 >[39;49m
[34;49m ..            : qexp dup 1 <= if{ }else{ [39;49m[33;40mdup[39;49m[34;49m -- qexp * }fi ;  .. [39;49m[32;49m
0x7fa6de04babe    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04bac1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04bac5    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04bac8    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04bacb    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..        : qexp dup 1 <= if{ }else{ dup [39;49m[33;40m--[39;49m[34;49m qexp * }fi ;  .. [39;49m[32;49m
0x7fa6de04bacf    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fa6de04bad2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04bad6    498906                  mov [r14], rax                                         [39;49m
[34;49m ..     : qexp dup 1 <= if{ }else{ dup -- [39;49m[33;40mqexp[39;49m[34;49m * }fi ;  .. [39;49m[32;49m
0x7fa6de04bad9    e8b8ffffff              call 0x7fa6de04ba96        	< User.[34;49mqexp[39;49m : 0x00007fa6de04ba96 >[39;49m[32;49m
0x7fa6de04bade    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04bae1    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04bae5    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m   : qexp dup 1 <= if{ }else{ dup -- qexp [39;49m[33;40m*[39;49m[34;49m }fi ;  .. [39;49m[32;49m
0x7fa6de04bae9    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fa6de04baed    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04baf1    498906                  mov [r14], rax                                         [39;49m
[34;49m .. dup 1 <= if{ }else{ dup -- qexp * }fi [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de04baf4    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'qexp' :: codeSize = 94
Word : 0x00007fa6dd6a7758 :: Compiled at : 0x00007fa6de04ba96
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 209.13 <::

 5040

 qexp :
Timer [ 1 ] : elapsed time = 0.063890845 seconds :: function : qexp : called on args : 1 - 23 : 10000 reps

 =============================
User.[34;49mqexp2[39;49m <:> cfrTil compiled word
SourceCode for User.[34;49mqexp2[39;49m :> 
[34;49m: qexp2 dup 1 <= ?< >:< dup -- qexp2 * >? ; [39;49m
Source code file location of [34;49mqexp2[39;49m : "namespaces/test/dev.cft" : 46.70 :: we are now at : namespaces/test/dev.cft : 210.14
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04bb09 -- code size = 95 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mqexp2[39;49m : definition = 0x00007fa6de04bb09 : disassembly at namespaces/test/dev.cft : 210.14 :
[34;49m ..                               : qexp2 [39;49m[33;40mdup[39;49m[34;49m 1 <= ?< >:< dup -- qexp2 * >? ;  .. [39;49m[32;49m
0x7fa6de04bb09    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04bb0c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04bb10    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                           : qexp2 dup [39;49m[33;40m1[39;49m[34;49m <= ?< >:< dup -- qexp2 * >? ;  .. [39;49m[32;49m
0x7fa6de04bb13    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de04bb1d    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de04bb20    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04bb23    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..                         : qexp2 dup 1 [39;49m[33;40m<=[39;49m[34;49m ?< >:< dup -- qexp2 * >? ;  .. [39;49m[32;49m
0x7fa6de04bb27    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fa6de04bb2a    7f05                    jg 0xde04bb31                                          [39;49m
[34;49m ..                   : qexp2 dup 1 <= ?< [39;49m[33;40m>:<[39;49m[34;49m dup -- qexp2 * >? ;  .. [39;49m[32;49m
0x7fa6de04bb2c    e936000000              jmp 0x7fa6de04bb67         	< User.[34;49mqexp2[39;49m+94 >[39;49m
[34;49m ..               : qexp2 dup 1 <= ?< >:< [39;49m[33;40mdup[39;49m[34;49m -- qexp2 * >? ;  .. [39;49m[32;49m
0x7fa6de04bb31    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04bb34    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..                      : qexp2 dup 1 <= [39;49m[33;40m?<[39;49m[34;49m >:< dup -- qexp2 * >? ;  .. [39;49m[32;49m
0x7fa6de04bb38    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04bb3b    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04bb3e    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..           : qexp2 dup 1 <= ?< >:< dup [39;49m[33;40m--[39;49m[34;49m qexp2 * >? ;  .. [39;49m[32;49m
0x7fa6de04bb42    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fa6de04bb45    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04bb49    498906                  mov [r14], rax                                         [39;49m
[34;49m ..        : qexp2 dup 1 <= ?< >:< dup -- [39;49m[33;40mqexp2[39;49m[34;49m * >? ;  .. [39;49m[32;49m
0x7fa6de04bb4c    e8b8ffffff              call 0x7fa6de04bb09        	< User.[34;49mqexp2[39;49m : 0x00007fa6de04bb09 >[39;49m[32;49m
0x7fa6de04bb51    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04bb54    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04bb58    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  : qexp2 dup 1 <= ?< >:< dup -- qexp2 [39;49m[33;40m*[39;49m[34;49m >? ;  .. [39;49m[32;49m
0x7fa6de04bb5c    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fa6de04bb60    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04bb64    498906                  mov [r14], rax                                         [39;49m
[34;49m: qexp2 dup 1 <= ?< >:< dup -- qexp2 * >? [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de04bb67    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'qexp2' :: codeSize = 94
Word : 0x00007fa6dde227a0 :: Compiled at : 0x00007fa6de04bb09
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 210.14 <::

 5040

 qexp2 :
Timer [ 1 ] : elapsed time = 0.064390254 seconds :: function : qexp2 : called on args : 1 - 23 : 10000 reps

 =============================
User.[34;49mbexp[39;49m <:> cfrTil compiled word
SourceCode for User.[34;49mbexp[39;49m :> 
[34;49m: bexp ( n ) n @ 1 > if{ n @ dup -- bexp * }else{ 1 }fi ; [39;49m
Source code file location of [34;49mbexp[39;49m : "namespaces/test/dev.cft" : 47.83 :: we are now at : namespaces/test/dev.cft : 211.11
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04bb6d -- code size = 118 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mbexp[39;49m : definition = 0x00007fa6de04bb6d : disassembly at namespaces/test/dev.cft : 211.11 :
[34;49m ..                                     : [39;49m[33;40mbexp[39;49m[34;49m ( n ) n @ 1 > if{ n @ dup -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fa6de04bb6d    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04bb71    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04bb75    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                          : bexp ( n ) [39;49m[33;40mn[39;49m[34;49m @ 1 > if{ n @ dup -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fa6de04bb7c    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                    : bexp ( n ) n @ 1 [39;49m[33;40m>[39;49m[34;49m if{ n @ dup -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fa6de04bb80    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fa6de04bb84    7e40                    jle 0xde04bbc6                                         [39;49m
[34;49m ..              : bexp ( n ) n @ 1 > if{ [39;49m[33;40mn[39;49m[34;49m @ dup -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fa6de04bb86    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04bb8a    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de04bb8e    498906                  mov [r14], rax                                         [39;49m
[34;49m ..          : bexp ( n ) n @ 1 > if{ n @ [39;49m[33;40mdup[39;49m[34;49m -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fa6de04bb91    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fa6de04bb95    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04bb98    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..      : bexp ( n ) n @ 1 > if{ n @ dup [39;49m[33;40m--[39;49m[34;49m bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fa6de04bb9c    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fa6de04bb9f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04bba3    498906                  mov [r14], rax                                         [39;49m
[34;49m ..   : bexp ( n ) n @ 1 > if{ n @ dup -- [39;49m[33;40mbexp[39;49m[34;49m * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fa6de04bba6    e8c2ffffff              call 0x7fa6de04bb6d        	< User.[34;49mbexp[39;49m : 0x00007fa6de04bb6d >[39;49m[32;49m
0x7fa6de04bbab    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04bbae    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04bbb2    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m : bexp ( n ) n @ 1 > if{ n @ dup -- bexp [39;49m[33;40m*[39;49m[34;49m }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fa6de04bbb6    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fa6de04bbba    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04bbbe    498906                  mov [r14], rax                                         [39;49m
[34;49m .. p ( n ) n @ 1 > if{ n @ dup -- bexp * [39;49m[33;40m}else{[39;49m[34;49m 1 }fi ; [39;49m[32;49m
0x7fa6de04bbc1    e911000000              jmp 0x7fa6de04bbd7         	< User.[34;49mbexp[39;49m+106 >[39;49m
[34;49m ..  n @ 1 > if{ n @ dup -- bexp * }else{ [39;49m[33;40m1[39;49m[34;49m }fi ; [39;49m[32;49m
0x7fa6de04bbc6    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de04bbd0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04bbd4    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  > if{ n @ dup -- bexp * }else{ 1 }fi [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de04bbd7    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04bbdb    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04bbdf    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04bbe2    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp' :: codeSize = 117
Word : 0x00007fa6dddbe770 :: Compiled at : 0x00007fa6de04bb6d
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 211.11 <::

 5040

 bexp :
Timer [ 1 ] : elapsed time = 0.067738790 seconds :: function : bexp : called on args : 1 - 23 : 10000 reps

 =============================
User.[34;49mbexp2[39;49m <:> cfrTil compiled word
SourceCode for User.[34;49mbexp2[39;49m :> 
[34;49m: bexp2 ( n ) { n @ 1 > } { n @ dup -- bexp2 * } { 1 } ifElse ; [39;49m
Source code file location of [34;49mbexp2[39;49m : "namespaces/test/dev.cft" : 48.90 :: we are now at : namespaces/test/dev.cft : 212.12
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04bbe8 -- code size = 118 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mbexp2[39;49m : definition = 0x00007fa6de04bbe8 : disassembly at namespaces/test/dev.cft : 212.12 :
[34;49m ..                                     : [39;49m[33;40mbexp2[39;49m[34;49m ( n ) { n @ 1 > } { n @ dup -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de04bbe8    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04bbec    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04bbf0    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                       : bexp2 ( n ) { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ dup -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de04bbf7    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                 : bexp2 ( n ) { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ dup -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de04bbfb    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fa6de04bbff    7e40                    jle 0xde04bc41                                         [39;49m
[34;49m ..           : bexp2 ( n ) { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ dup -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de04bc01    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04bc05    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fa6de04bc09    498906                  mov [r14], rax                                         [39;49m
[34;49m ..       : bexp2 ( n ) { n @ 1 > } { n @ [39;49m[33;40mdup[39;49m[34;49m -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de04bc0c    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fa6de04bc10    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04bc13    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..   : bexp2 ( n ) { n @ 1 > } { n @ dup [39;49m[33;40m--[39;49m[34;49m bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de04bc17    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fa6de04bc1a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04bc1e    498906                  mov [r14], rax                                         [39;49m
[34;49m   : bexp2 ( n ) { n @ 1 > } { n @ dup -- [39;49m[33;40mbexp2[39;49m[34;49m * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de04bc21    e8c2ffffff              call 0x7fa6de04bbe8        	< User.[34;49mbexp2[39;49m : 0x00007fa6de04bbe8 >[39;49m[32;49m
0x7fa6de04bc26    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04bc29    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04bc2d    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  ( n ) { n @ 1 > } { n @ dup -- bexp2 [39;49m[33;40m*[39;49m[34;49m } { 1 } ifElse ; [39;49m[32;49m
0x7fa6de04bc31    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fa6de04bc35    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04bc39    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  n ) { n @ 1 > } { n @ dup -- bexp2 * [39;49m[33;40m}[39;49m[34;49m { 1 } ifElse ; [39;49m[32;49m
0x7fa6de04bc3c    e911000000              jmp 0x7fa6de04bc52         	< User.[34;49mbexp2[39;49m+106 >[39;49m
[34;49m ..  { n @ 1 > } { n @ dup -- bexp2 * } { [39;49m[33;40m1[39;49m[34;49m } ifElse ; [39;49m[32;49m
0x7fa6de04bc41    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de04bc4b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04bc4f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. } { n @ dup -- bexp2 * } { 1 } ifElse [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de04bc52    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04bc56    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04bc5a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04bc5d    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp2' :: codeSize = 117
Word : 0x00007fa6dd2a2480 :: Compiled at : 0x00007fa6de04bbe8
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 212.12 <::

 5040

 bexp2 :
Timer [ 1 ] : elapsed time = 0.068157077 seconds :: function : bexp2 : called on args : 1 - 23 : 10000 reps

 =============================
Root.[34;49mbexp3[39;49m <:> cfrTil compiled word
SourceCode for Root.[34;49mbexp3[39;49m :> 
[34;49m: bexp3 ( n ) { n @ 1 > } { n @ n @ -- bexp3 * } { 1 } ifElse ; [39;49m
Source code file location of [34;49mbexp3[39;49m : "namespaces/test/dev0.cft" : 355.64 :: we are now at : namespaces/test/dev.cft : 213.12
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde049481 -- code size = 115 bytes
TypeSignature : 
 -----------------------------
Word :: Root.[34;49mbexp3[39;49m : definition = 0x00007fa6de049481 : disassembly at namespaces/test/dev.cft : 213.12 :
[34;49m ..                                     : [39;49m[33;40mbexp3[39;49m[34;49m ( n ) { n @ 1 > } { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de049481    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de049485    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de049489    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                       : bexp3 ( n ) { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de049490    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                 : bexp3 ( n ) { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de049494    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fa6de049498    0f8e39000000            jle 0x7fa6de0494d7         	< Root.[34;49mbexp3[39;49m+86 >[39;49m
[34;49m ..           : bexp3 ( n ) { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de04949e    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0494a2    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..               : bexp3 ( n ) { n @ 1 > [39;49m[33;40m}[39;49m[34;49m { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de0494a6    498906                  mov [r14], rax                                         [39;49m
[34;49m ..       : bexp3 ( n ) { n @ 1 > } { n @ [39;49m[33;40mn[39;49m[34;49m @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de0494a9    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..   : bexp3 ( n ) { n @ 1 > } { n @ n @ [39;49m[33;40m--[39;49m[34;49m bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de0494ad    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fa6de0494b0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0494b4    498906                  mov [r14], rax                                         [39;49m
[34;49m   : bexp3 ( n ) { n @ 1 > } { n @ n @ -- [39;49m[33;40mbexp3[39;49m[34;49m * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fa6de0494b7    e8c5ffffff              call 0x7fa6de049481        	< Root.[34;49mbexp3[39;49m : 0x00007fa6de049481 >[39;49m[32;49m
0x7fa6de0494bc    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de0494bf    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de0494c3    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  ( n ) { n @ 1 > } { n @ n @ -- bexp3 [39;49m[33;40m*[39;49m[34;49m } { 1 } ifElse ; [39;49m[32;49m
0x7fa6de0494c7    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fa6de0494cb    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0494cf    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  n ) { n @ 1 > } { n @ n @ -- bexp3 * [39;49m[33;40m}[39;49m[34;49m { 1 } ifElse ; [39;49m[32;49m
0x7fa6de0494d2    e911000000              jmp 0x7fa6de0494e8         	< Root.[34;49mbexp3[39;49m+103 >[39;49m
[34;49m ..  { n @ 1 > } { n @ n @ -- bexp3 * } { [39;49m[33;40m1[39;49m[34;49m } ifElse ; [39;49m[32;49m
0x7fa6de0494d7    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de0494e1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de0494e5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. } { n @ n @ -- bexp3 * } { 1 } ifElse [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de0494e8    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de0494ec    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de0494f0    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de0494f3    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp3' :: codeSize = 114
Word : 0x00007fa6dd38c858 :: Compiled at : 0x00007fa6de049481
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 213.12 <::

 5040

 bexp3 :
Timer [ 1 ] : elapsed time = 0.061242568 seconds :: function : bexp3 : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mfac[39;49m <:> cfrTil compiled word
SourceCode for C.[34;49mfac[39;49m :> 
[34;49m: fac ( n | rec -- TOS ) rec 1 = { n @ 1 > } { n @ rec @ * rec store n -- } while rec @ ; [39;49m
Source code file location of [34;49mfac[39;49m : "namespaces/test/dev0.cft" : 65.26 :: we are now at : namespaces/test/dev.cft : 214.10
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde0486cd -- code size = 87 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mfac[39;49m : definition = 0x00007fa6de0486cd : disassembly at namespaces/test/dev.cft : 214.10 :
[34;49m ..                                     : [39;49m[33;40mfac[39;49m[34;49m ( n | rec -- TOS )  rec 1 =  { n @ 1 > } { n @ rec @ * rec store n -- } while  rec @  ; .. [39;49m[32;49m
0x7fa6de0486cd    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de0486d1    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de0486d5    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..             : fac ( n | rec -- TOS )  [39;49m[33;40mrec[39;49m[34;49m 1 =  { n @ 1 > } { n @ rec @ * rec store n -- } while  rec @  ;  .. [39;49m[32;49m
0x7fa6de0486dc    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..         : fac ( n | rec -- TOS )  rec [39;49m[33;40m1[39;49m[34;49m =  { n @ 1 > } { n @ rec @ * rec store n -- } while  rec @  ;  .. [39;49m[32;49m
0x7fa6de0486e0    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m ..       : fac ( n | rec -- TOS )  rec 1 [39;49m[33;40m=[39;49m[34;49m  { n @ 1 > } { n @ rec @ * rec store n -- } while  rec @  ;  .. [39;49m[32;49m
0x7fa6de0486ea    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  : fac ( n | rec -- TOS )  rec 1 =  { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ rec @ * rec store n -- } while  rec @  ;  .. [39;49m[32;49m
0x7fa6de0486ed    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  ( n | rec -- TOS )  rec 1 =  { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ rec @ * rec store n -- } while  rec @  ; [39;49m[32;49m
0x7fa6de0486f1    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fa6de0486f5    0f8e19000000            jle 0x7fa6de048714         	< C.[34;49mfac[39;49m+71 >[39;49m
[34;49m ..  rec -- TOS )  rec 1 =  { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ rec @ * rec store n -- } while  rec @  ; [39;49m[32;49m
0x7fa6de0486fb    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  -- TOS )  rec 1 =  { n @ 1 > } { n @ [39;49m[33;40mrec[39;49m[34;49m @ * rec store n -- } while  rec @  ; [39;49m[32;49m
0x7fa6de0486ff    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. S )  rec 1 =  { n @ 1 > } { n @ rec @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while  rec @  ; [39;49m[32;49m
0x7fa6de048703    480fafc1                imul rax, rcx                                          [39;49m
[34;49m .. )  rec 1 =  { n @ 1 > } { n @ rec @ * [39;49m[33;40mrec[39;49m[34;49m store n -- } while  rec @  ; [39;49m[32;49m
0x7fa6de048707    498d4f08                lea rcx, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de04870b    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. { n @ 1 > } { n @ rec @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while  rec @  ; [39;49m[32;49m
0x7fa6de04870e    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  @ 1 > } { n @ rec @ * rec store n -- [39;49m[33;40m}[39;49m[34;49m while  rec @  ; [39;49m[32;49m
0x7fa6de048712    ebd9                    jmp 0x7fa6de0486ed         	< C.[34;49mfac[39;49m+32 >[39;49m
[34;49m .. { n @ rec @ * rec store n -- } while  [39;49m[33;40mrec[39;49m[34;49m @  ; [39;49m[32;49m
0x7fa6de048714    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ec @ * rec store n -- } while  rec @  [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de048718    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04871c    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de048720    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de048723    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac' :: codeSize = 86
Word : 0x00007fa6dd594368 :: Compiled at : 0x00007fa6de0486cd
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 214.10 <::

 5040

 fac :
Timer [ 1 ] : elapsed time = 0.036099406 seconds :: function : fac : called on args : 1 - 23 : 10000 reps

 =============================
C_Syntax.[34;49mfac5[39;49m <:> cfrTil compiled word
SourceCode for C_Syntax.[34;49mfac5[39;49m :> 
[34;49mint fac5 ( REG n | REG facc ) { facc = 1 ; while ( n > 1 ) { facc = facc * (n --) ; } return facc ; } [39;49m
Source code file location of [34;49mfac5[39;49m : "namespaces/test/dev.cft" : 99.27 :: we are now at : namespaces/test/dev.cft : 215.11
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04bdba -- code size = 32 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfac5[39;49m : definition = 0x00007fa6de04bdba : disassembly at namespaces/test/dev.cft : 215.11 :
[34;49m ..                                   int [39;49m[33;40mfac5[39;49m[34;49m ( REG n | REG facc )  {  facc = 1 ; while ( n > 1 )  { facc = facc * (n --) ; } return .. [39;49m[32;49m
0x7fa6de04bdba    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m int fac5 ( REG n | REG facc )  {  facc = [39;49m[33;40m1[39;49m[34;49m ; while ( n > 1 )  { facc = facc * (n --) ; } return facc ; }  .. [39;49m[32;49m
0x7fa6de04bdbd    48be0100000000000000    mov rsi, 0x1                                           [39;49m
[34;49m .. | REG facc )  {  facc = 1 ; while ( n [39;49m[33;40m>[39;49m[34;49m 1 )  { facc = facc * (n --) ; } return facc ; } [39;49m[32;49m
0x7fa6de04bdc7    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fa6de04bdcb    7e09                    jle 0xde04bdd6                                         [39;49m
[34;49m ..  = 1 ; while ( n > 1 )  { facc = facc [39;49m[33;40m*[39;49m[34;49m (n --) ; } return facc ; } [39;49m[32;49m
0x7fa6de04bdcd    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. ; while ( n > 1 )  { facc = facc * (n [39;49m[33;40m--[39;49m[34;49m) ; } return facc ; } [39;49m[32;49m
0x7fa6de04bdd1    48ffcf                  dec rdi                                                [39;49m
[34;49m .. e ( n > 1 )  { facc = facc * (n --) ; [39;49m[33;40m}[39;49m[34;49m return facc ; } [39;49m[32;49m
0x7fa6de04bdd4    ebf1                    jmp 0x7fa6de04bdc7         	< C_Syntax.[34;49mfac5[39;49m+13 >[39;49m
[34;49m ..  )  { facc = facc * (n --) ; } return [39;49m[33;40mfacc[39;49m[34;49m ; } [39;49m[32;49m
0x7fa6de04bdd6    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fa6de04bdd9    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac5' :: codeSize = 31
Word : 0x00007fa6dd2b2c18 :: Compiled at : 0x00007fa6de04bdba
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 215.11 <::

 5040

 fac5 :
Timer [ 1 ] : elapsed time = 0.024462663 seconds :: function : fac5 : called on args : 1 - 23 : 10000 reps

 =============================
User.[34;49mfactorial[39;49m <:> cfrTil compiled word
SourceCode for User.[34;49mfactorial[39;49m :> 
[34;49m: factorial ( REG n | REG rec -- RAX ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ; [39;49m
Source code file location of [34;49mfactorial[39;49m : "namespaces/test/dev.cft" : 137.108 :: we are now at : namespaces/test/dev.cft : 217.16
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04bff5 -- code size = 32 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mfactorial[39;49m : definition = 0x00007fa6de04bff5 : disassembly at namespaces/test/dev.cft : 217.16 :
[34;49m ..                           : factorial [39;49m[33;40m([39;49m[34;49m REG n | REG rec -- RAX ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return  .. [39;49m[32;49m
0x7fa6de04bff5    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m .. torial ( REG n | REG rec -- RAX ) rec [39;49m[33;40m1[39;49m[34;49m = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ; [39;49m[32;49m
0x7fa6de04bff8    48be0100000000000000    mov rsi, 0x1                                           [39;49m
[34;49m ..  n | REG rec -- RAX ) rec 1 = { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { rec @ n @ * rec store n -- } while return rec ; [39;49m[32;49m
0x7fa6de04c002    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fa6de04c006    7e09                    jle 0xde04c011                                         [39;49m
[34;49m .. RAX ) rec 1 = { n @ 1 > } { rec @ n @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while return rec ; [39;49m[32;49m
0x7fa6de04c008    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. { n @ 1 > } { rec @ n @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while return rec ; [39;49m[32;49m
0x7fa6de04c00c    48ffcf                  dec rdi                                                [39;49m
[34;49m ..  @ 1 > } { rec @ n @ * rec store n -- [39;49m[33;40m}[39;49m[34;49m while return rec ; [39;49m[32;49m
0x7fa6de04c00f    ebf1                    jmp 0x7fa6de04c002         	< User.[34;49mfactorial[39;49m+13 >[39;49m
[34;49m .. @ * rec store n -- } while return rec [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de04c011    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fa6de04c014    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factorial' :: codeSize = 31
Word : 0x00007fa6dd2662b8 :: Compiled at : 0x00007fa6de04bff5
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 217.16 <::

 5040

 factorial :
Timer [ 1 ] : elapsed time = 0.024757662 seconds :: function : factorial : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial3[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial3[39;49m :> 
C Primitive
starting at address : 0xbfef7770 -- code size = 41 bytes
 -----------------------------
Word :: C.[34;49mcfactorial3[39;49m : definition = 0x0000561dbfef7770 : disassembly at namespaces/test/dev.cft : 218.18 :[32;49m
0x561dbfef7774    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x561dbfef7777    4c89f6                  mov rsi, r14                                           [39;49m[32;49m
0x561dbfef777a    ba01000000              mov edx, 0x1                                           [39;49m[32;49m
0x561dbfef777f    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x561dbfef7783    7e14                    jle 0xbfef7799                                         [39;49m[32;49m
0x561dbfef7785    0f1f00                  nop [rax]                                              [39;49m[32;49m
0x561dbfef7788    4889c1                  mov rcx, rax                                           [39;49m[32;49m
0x561dbfef778b    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x561dbfef778f    480fafd1                imul rdx, rcx                                          [39;49m[32;49m
0x561dbfef7793    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x561dbfef7797    75ef                    jnz 0xbfef7788                                         [39;49m[32;49m
0x561dbfef7799    488916                  mov [rsi], rdx                                         [39;49m[32;49m
0x561dbfef779c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial3' :: codeSize = 41
Word : 0x00007fa6de025a28 :: Compiled at : 0x0000561dbfef7770
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 218.18 <::

 5040

 cfactorial3 :
Timer [ 1 ] : elapsed time = 0.025091190 seconds :: function : cfactorial3 : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial[39;49m :> 
C Primitive
starting at address : 0xbfef7600 -- code size = 17 bytes
 -----------------------------
Word :: C.[34;49mcfactorial[39;49m : definition = 0x0000561dbfef7600 : disassembly at namespaces/test/dev.cft : 219.17 :[32;49m
0x561dbfef7604    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x561dbfef7607    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x561dbfef760b    7f0b                    jg 0xbfef7618                                          [39;49m[32;49m
0x561dbfef760d    49c70601000000          mov qword [r14], 0x1                                   [39;49m[32;49m
0x561dbfef7614    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial' :: codeSize = 17
Word : 0x00007fa6de0255c8 :: Compiled at : 0x0000561dbfef7600
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 219.17 <::

 5040

 cfactorial :
Timer [ 1 ] : elapsed time = 0.036910511 seconds :: function : cfactorial : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial2[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial2[39;49m :> 
C Primitive
starting at address : 0xbfef7740 -- code size = 41 bytes
 -----------------------------
Word :: C.[34;49mcfactorial2[39;49m : definition = 0x0000561dbfef7740 : disassembly at namespaces/test/dev.cft : 220.18 :[32;49m
0x561dbfef7744    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x561dbfef7747    4c89f6                  mov rsi, r14                                           [39;49m[32;49m
0x561dbfef774a    ba01000000              mov edx, 0x1                                           [39;49m[32;49m
0x561dbfef774f    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x561dbfef7753    7e14                    jle 0xbfef7769                                         [39;49m[32;49m
0x561dbfef7755    0f1f00                  nop [rax]                                              [39;49m[32;49m
0x561dbfef7758    4889c1                  mov rcx, rax                                           [39;49m[32;49m
0x561dbfef775b    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x561dbfef775f    480fafd1                imul rdx, rcx                                          [39;49m[32;49m
0x561dbfef7763    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x561dbfef7767    75ef                    jnz 0xbfef7758                                         [39;49m[32;49m
0x561dbfef7769    488916                  mov [rsi], rdx                                         [39;49m[32;49m
0x561dbfef776c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial2' :: codeSize = 41
Word : 0x00007fa6de0257f8 :: Compiled at : 0x0000561dbfef7740
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 220.18 <::

 5040

 cfactorial2 :
Timer [ 1 ] : elapsed time = 0.025643095 seconds :: function : cfactorial2 : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial3[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial3[39;49m :> 
C Primitive
starting at address : 0xbfef7770 -- code size = 41 bytes
 -----------------------------
Word :: C.[34;49mcfactorial3[39;49m : definition = 0x0000561dbfef7770 : disassembly at namespaces/test/dev.cft : 221.18 :[32;49m
0x561dbfef7774    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x561dbfef7777    4c89f6                  mov rsi, r14                                           [39;49m[32;49m
0x561dbfef777a    ba01000000              mov edx, 0x1                                           [39;49m[32;49m
0x561dbfef777f    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x561dbfef7783    7e14                    jle 0xbfef7799                                         [39;49m[32;49m
0x561dbfef7785    0f1f00                  nop [rax]                                              [39;49m[32;49m
0x561dbfef7788    4889c1                  mov rcx, rax                                           [39;49m[32;49m
0x561dbfef778b    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x561dbfef778f    480fafd1                imul rdx, rcx                                          [39;49m[32;49m
0x561dbfef7793    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x561dbfef7797    75ef                    jnz 0xbfef7788                                         [39;49m[32;49m
0x561dbfef7799    488916                  mov [rsi], rdx                                         [39;49m[32;49m
0x561dbfef779c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial3' :: codeSize = 41
Word : 0x00007fa6de025a28 :: Compiled at : 0x0000561dbfef7770
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 221.18 <::

 5040

 cfactorial3 :
Timer [ 1 ] : elapsed time = 0.024945317 seconds :: function : cfactorial3 : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial_O3[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial_O3[39;49m :> 
C Primitive
 -----------------------------
Word :: C.[34;49mcfactorial_O3[39;49m : definition = 0x0000561dbfef73d0 : disassembly at namespaces/test/dev.cft : 222.20 :[32;49m
0x561dbfef73d4    53                      push rbx                                               [39;49m[32;49m
0x561dbfef73d5    498b1e                  mov rbx, [r14]                                         [39;49m[32;49m
0x561dbfef73d8    4883fb01                cmp rbx, 0x1                                           [39;49m[32;49m
0x561dbfef73dc    7f12                    jg 0xbfef73f0                                          [39;49m[32;49m
0x561dbfef73de    49c70601000000          mov qword [r14], 0x1                                   [39;49m[32;49m
0x561dbfef73e5    5b                      pop rbx                                                [39;49m[32;49m
0x561dbfef73e6    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial_O3' :: codeSize = 19
Word : 0x00007fa6de0262e8 :: Compiled at : 0x0000561dbfef73d0
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 222.20 <::

 5040

 cfactorial_O3 :
Timer [ 1 ] : elapsed time = 0.051529703 seconds :: function : cfactorial_O3 : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial2_O3[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial2_O3[39;49m :> 
C Primitive
 -----------------------------
Word :: C.[34;49mcfactorial2_O3[39;49m : definition = 0x0000561dbfef7440 : disassembly at namespaces/test/dev.cft : 223.21 :[32;49m
0x561dbfef7444    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x561dbfef7447    4c89f6                  mov rsi, r14                                           [39;49m[32;49m
0x561dbfef744a    ba01000000              mov edx, 0x1                                           [39;49m[32;49m
0x561dbfef744f    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x561dbfef7453    7e14                    jle 0xbfef7469                                         [39;49m[32;49m
0x561dbfef7455    0f1f00                  nop [rax]                                              [39;49m[32;49m
0x561dbfef7458    4889c1                  mov rcx, rax                                           [39;49m[32;49m
0x561dbfef745b    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x561dbfef745f    480fafd1                imul rdx, rcx                                          [39;49m[32;49m
0x561dbfef7463    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x561dbfef7467    75ef                    jnz 0xbfef7458                                         [39;49m[32;49m
0x561dbfef7469    488916                  mov [rsi], rdx                                         [39;49m[32;49m
0x561dbfef746c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial2_O3' :: codeSize = 41
Word : 0x00007fa6de026518 :: Compiled at : 0x0000561dbfef7440
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 223.21 <::

 5040

 cfactorial2_O3 :
Timer [ 1 ] : elapsed time = 0.025893010 seconds :: function : cfactorial2_O3 : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial3_O3[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial3_O3[39;49m :> 
C Primitive
 -----------------------------
Word :: C.[34;49mcfactorial3_O3[39;49m : definition = 0x0000561dbfef7470 : disassembly at namespaces/test/dev.cft : 224.21 :[32;49m
0x561dbfef7474    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x561dbfef7477    4c89f6                  mov rsi, r14                                           [39;49m[32;49m
0x561dbfef747a    ba01000000              mov edx, 0x1                                           [39;49m[32;49m
0x561dbfef747f    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x561dbfef7483    7e14                    jle 0xbfef7499                                         [39;49m[32;49m
0x561dbfef7485    0f1f00                  nop [rax]                                              [39;49m[32;49m
0x561dbfef7488    4889c1                  mov rcx, rax                                           [39;49m[32;49m
0x561dbfef748b    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x561dbfef748f    480fafd1                imul rdx, rcx                                          [39;49m[32;49m
0x561dbfef7493    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x561dbfef7497    75ef                    jnz 0xbfef7488                                         [39;49m[32;49m
0x561dbfef7499    488916                  mov [rsi], rdx                                         [39;49m[32;49m
0x561dbfef749c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial3_O3' :: codeSize = 41
Word : 0x00007fa6de026748 :: Compiled at : 0x0000561dbfef7470
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 224.21 <::

 5040

 cfactorial3_O3 :
Timer [ 1 ] : elapsed time = 0.025546931 seconds :: function : cfactorial3_O3 : called on args : 1 - 23 : 10000 reps

Using Namespaces :> User Root C int Locals Int Logic Compiler Interpreter Asm Stack void Combinators X64 Bits Compiling Class List Experimental byteTest _byteTest libc _CBuffer Dlsym String CObj _CObj System Shell locals_-1 Debug Control DObject Lexer a112 DLLNodeAlloc DLLNode Buffer int64 cta ct Ar3 Ar2 Ar1 DLLNodeAlloc4 DLListClone DLList byte Integer Pointer OpenVmTil Word Namespace StartupMacros Io Reserved Macro PreProcessor Memory Colors File Forth 

 =============================
User.[34;49mfactorial[39;49m <:> cfrTil compiled word
SourceCode for User.[34;49mfactorial[39;49m :> 
[34;49m: factorial ( REG n | REG rec -- RAX ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ; [39;49m
Source code file location of [34;49mfactorial[39;49m : "namespaces/test/dev.cft" : 137.108 :: we are now at : namespaces/test/dev.cft : 226.16
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04bff5 -- code size = 32 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mfactorial[39;49m : definition = 0x00007fa6de04bff5 : disassembly at namespaces/test/dev.cft : 226.16 :
[34;49m ..                           : factorial [39;49m[33;40m([39;49m[34;49m REG n | REG rec -- RAX ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return  .. [39;49m[32;49m
0x7fa6de04bff5    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m .. torial ( REG n | REG rec -- RAX ) rec [39;49m[33;40m1[39;49m[34;49m = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ; [39;49m[32;49m
0x7fa6de04bff8    48be0100000000000000    mov rsi, 0x1                                           [39;49m
[34;49m ..  n | REG rec -- RAX ) rec 1 = { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { rec @ n @ * rec store n -- } while return rec ; [39;49m[32;49m
0x7fa6de04c002    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fa6de04c006    7e09                    jle 0xde04c011                                         [39;49m
[34;49m .. RAX ) rec 1 = { n @ 1 > } { rec @ n @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while return rec ; [39;49m[32;49m
0x7fa6de04c008    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. { n @ 1 > } { rec @ n @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while return rec ; [39;49m[32;49m
0x7fa6de04c00c    48ffcf                  dec rdi                                                [39;49m
[34;49m ..  @ 1 > } { rec @ n @ * rec store n -- [39;49m[33;40m}[39;49m[34;49m while return rec ; [39;49m[32;49m
0x7fa6de04c00f    ebf1                    jmp 0x7fa6de04c002         	< User.[34;49mfactorial[39;49m+13 >[39;49m
[34;49m .. @ * rec store n -- } while return rec [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de04c011    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fa6de04c014    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factorial' :: codeSize = 31
Word : 0x00007fa6dd2662b8 :: Compiled at : 0x00007fa6de04bff5
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 226.16 <::

 5040

 factorial :
Timer [ 1 ] : elapsed time = 0.024822149 seconds :: function : factorial : called on args : 1 - 23 : 10000 reps

 =============================
C_Syntax.[34;49mfaccs[39;49m <:> cfrTil compiled word
SourceCode for C_Syntax.[34;49mfaccs[39;49m :> 
[34;49mint faccs ( REG n | REG rec -- RAX ) { rec = 1 ; while ( n > 1 ) { rec = rec * n ; n-- ; } return rec ; } [39;49m
Source code file location of [34;49mfaccs[39;49m : "namespaces/test/dev.cft" : 85.33 :: we are now at : namespaces/test/dev.cft : 227.12
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04bd86 -- code size = 32 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfaccs[39;49m : definition = 0x00007fa6de04bd86 : disassembly at namespaces/test/dev.cft : 227.12 :
[34;49m ..                                   int [39;49m[33;40mfaccs[39;49m[34;49m ( REG n | REG rec -- RAX )  { rec = 1 ;  while ( n > 1 ) {  rec = rec * n ; n-- ;  }  .. [39;49m[32;49m
0x7fa6de04bd86    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m .. s ( REG n | REG rec -- RAX )  { rec = [39;49m[33;40m1[39;49m[34;49m ;  while ( n > 1 ) {  rec = rec * n ; n-- ;  }  return rec ; } [39;49m[32;49m
0x7fa6de04bd89    48be0100000000000000    mov rsi, 0x1                                           [39;49m
[34;49m ..  rec -- RAX )  { rec = 1 ;  while ( n [39;49m[33;40m>[39;49m[34;49m 1 ) {  rec = rec * n ; n-- ;  }  return rec ; } [39;49m[32;49m
0x7fa6de04bd93    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fa6de04bd97    7e09                    jle 0xde04bda2                                         [39;49m
[34;49m ..   while ( n > 1 ) {  rec = rec * n ; n[39;49m[33;40m--[39;49m[34;49m ;  }  return rec ; } [39;49m[32;49m
0x7fa6de04bd99    480faff7                imul rsi, rdi                                          [39;49m
[34;49m ..   while ( n > 1 ) {  rec = rec * n ; n[39;49m[33;40m--[39;49m[34;49m ;  }  return rec ; } [39;49m[32;49m
0x7fa6de04bd9d    48ffcf                  dec rdi                                                [39;49m
[34;49m .. e ( n > 1 ) {  rec = rec * n ; n-- ;  [39;49m[33;40m}[39;49m[34;49m  return rec ; } [39;49m[32;49m
0x7fa6de04bda0    ebf1                    jmp 0x7fa6de04bd93         	< C_Syntax.[34;49mfaccs[39;49m+13 >[39;49m
[34;49m .. ) {  rec = rec * n ; n-- ;  }  return [39;49m[33;40mrec[39;49m[34;49m ; } [39;49m[32;49m
0x7fa6de04bda2    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fa6de04bda5    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'faccs' :: codeSize = 31
Word : 0x00007fa6dd2af300 :: Compiled at : 0x00007fa6de04bd86
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 227.12 <::

 5040

 faccs :
Timer [ 1 ] : elapsed time = 0.025448837 seconds :: function : faccs : called on args : 1 - 23 : 10000 reps

 =============================
C_Syntax.[34;49mfac5[39;49m <:> cfrTil compiled word
SourceCode for C_Syntax.[34;49mfac5[39;49m :> 
[34;49mint fac5 ( REG n | REG facc ) { facc = 1 ; while ( n > 1 ) { facc = facc * (n --) ; } return facc ; } [39;49m
Source code file location of [34;49mfac5[39;49m : "namespaces/test/dev.cft" : 99.27 :: we are now at : namespaces/test/dev.cft : 228.11
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04bdba -- code size = 32 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfac5[39;49m : definition = 0x00007fa6de04bdba : disassembly at namespaces/test/dev.cft : 228.11 :
[34;49m ..                                   int [39;49m[33;40mfac5[39;49m[34;49m ( REG n | REG facc )  {  facc = 1 ; while ( n > 1 )  { facc = facc * (n --) ; } return .. [39;49m[32;49m
0x7fa6de04bdba    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m int fac5 ( REG n | REG facc )  {  facc = [39;49m[33;40m1[39;49m[34;49m ; while ( n > 1 )  { facc = facc * (n --) ; } return facc ; }  .. [39;49m[32;49m
0x7fa6de04bdbd    48be0100000000000000    mov rsi, 0x1                                           [39;49m
[34;49m .. | REG facc )  {  facc = 1 ; while ( n [39;49m[33;40m>[39;49m[34;49m 1 )  { facc = facc * (n --) ; } return facc ; } [39;49m[32;49m
0x7fa6de04bdc7    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fa6de04bdcb    7e09                    jle 0xde04bdd6                                         [39;49m
[34;49m ..  = 1 ; while ( n > 1 )  { facc = facc [39;49m[33;40m*[39;49m[34;49m (n --) ; } return facc ; } [39;49m[32;49m
0x7fa6de04bdcd    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. ; while ( n > 1 )  { facc = facc * (n [39;49m[33;40m--[39;49m[34;49m) ; } return facc ; } [39;49m[32;49m
0x7fa6de04bdd1    48ffcf                  dec rdi                                                [39;49m
[34;49m .. e ( n > 1 )  { facc = facc * (n --) ; [39;49m[33;40m}[39;49m[34;49m return facc ; } [39;49m[32;49m
0x7fa6de04bdd4    ebf1                    jmp 0x7fa6de04bdc7         	< C_Syntax.[34;49mfac5[39;49m+13 >[39;49m
[34;49m ..  )  { facc = facc * (n --) ; } return [39;49m[33;40mfacc[39;49m[34;49m ; } [39;49m[32;49m
0x7fa6de04bdd6    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fa6de04bdd9    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac5' :: codeSize = 31
Word : 0x00007fa6dd2b2c18 :: Compiled at : 0x00007fa6de04bdba
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 228.11 <::

 5040

 fac5 :
Timer [ 1 ] : elapsed time = 0.025121954 seconds :: function : fac5 : called on args : 1 - 23 : 10000 reps

 =============================
C_Syntax.[34;49mfac4[39;49m <:> cfrTil compiled word, prefix
SourceCode for C_Syntax.[34;49mfac4[39;49m :> 
[34;49mint fac4 ( n | facc -- TOS ) { int facc = 1 ; while ( n > 1 ) facc = n -- * facc ; return facc ; } [39;49m
Source code file location of [34;49mfac4[39;49m : "namespaces/compiler/c_syntax.cft" : 186.26 :: we are now at : namespaces/test/dev.cft : 229.11
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde047e41 -- code size = 87 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfac4[39;49m : definition = 0x00007fa6de047e41 : disassembly at namespaces/test/dev.cft : 229.11 :
[34;49m ..                                   int [39;49m[33;40mfac4[39;49m[34;49m ( n | facc -- TOS )  {  int facc = 1 ; while ( n > 1 ) facc = n -- * facc ; return fac .. [39;49m[32;49m
0x7fa6de047e41    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de047e45    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de047e49    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m .. c4 ( n | facc -- TOS )  {  int facc = [39;49m[33;40m1[39;49m[34;49m ; while ( n > 1 ) facc = n -- * facc ; return facc ; } [39;49m[32;49m
0x7fa6de047e50    48b80100000000000000    mov rax, 0x1                                           [39;49m
[34;49m ..  int fac4 ( n | facc -- TOS )  {  int [39;49m[33;40mfacc[39;49m[34;49m = 1 ; while ( n > 1 ) facc = n -- * facc ; return facc ; }  .. [39;49m[32;49m
0x7fa6de047e5a    498d4f08                lea rcx, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de047e5e    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. c -- TOS )  {  int facc = 1 ; while ( [39;49m[33;40mn[39;49m[34;49m > 1 ) facc = n -- * facc ; return facc ; } [39;49m[32;49m
0x7fa6de047e61    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. -- TOS )  {  int facc = 1 ; while ( n [39;49m[33;40m>[39;49m[34;49m 1 ) facc = n -- * facc ; return facc ; } [39;49m[32;49m
0x7fa6de047e65    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fa6de047e69    0f8e19000000            jle 0x7fa6de047e88         	< C_Syntax.[34;49mfac4[39;49m+71 >[39;49m
[34;49m .. int facc = 1 ; while ( n > 1 ) facc = [39;49m[33;40mn[39;49m[34;49m -- * facc ; return facc ; } [39;49m[32;49m
0x7fa6de047e6f    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. c = 1 ; while ( n > 1 ) facc = n -- * [39;49m[33;40mfacc[39;49m[34;49m ; return facc ; } [39;49m[32;49m
0x7fa6de047e73    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. acc = 1 ; while ( n > 1 ) facc = n -- [39;49m[33;40m*[39;49m[34;49m facc ; return facc ; } [39;49m[32;49m
0x7fa6de047e77    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..  )  {  int facc = 1 ; while ( n > 1 ) [39;49m[33;40mfacc[39;49m[34;49m = n -- * facc ; return facc ; } [39;49m[32;49m
0x7fa6de047e7b    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..   int facc = 1 ; while ( n > 1 ) facc [39;49m[33;40m=[39;49m[34;49m n -- * facc ; return facc ; } [39;49m[32;49m
0x7fa6de047e7f    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. t facc = 1 ; while ( n > 1 ) facc = n [39;49m[33;40m--[39;49m[34;49m * facc ; return facc ; } [39;49m[32;49m
0x7fa6de047e82    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  ; while ( n > 1 ) facc = n -- * facc [39;49m[33;40m;[39;49m[34;49m return facc ; } [39;49m[32;49m
0x7fa6de047e86    ebd9                    jmp 0x7fa6de047e61         	< C_Syntax.[34;49mfac4[39;49m+32 >[39;49m
[34;49m ..  1 ) facc = n -- * facc ; return facc [39;49m[33;40m;[39;49m[34;49m } [39;49m[32;49m
0x7fa6de047e88    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  ) facc = n -- * facc ; return facc ; [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fa6de047e8c    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de047e90    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. ( n > 1 ) facc = n -- * facc ; return [39;49m[33;40mfacc[39;49m[34;49m ; } [39;49m[32;49m
0x7fa6de047e94    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de047e97    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac4' :: codeSize = 86
Word : 0x00007fa6dd68ca50 :: Compiled at : 0x00007fa6de047e41
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 229.11 <::

 5040

 fac4 :
Timer [ 1 ] : elapsed time = 0.036335142 seconds :: function : fac4 : called on args : 1 - 23 : 10000 reps

 =============================
C_Syntax.[34;49mcpow[39;49m <:> cfrTil compiled word
SourceCode for C_Syntax.[34;49mcpow[39;49m :> 
[34;49mint cpow ( base power | out ) { for ( out = 1 ; power ; power -= 1 ) { out = out * base ; } return out ; } [39;49m
Source code file location of [34;49mcpow[39;49m : "namespaces/test/dev.cft" : 239.106 :: we are now at : namespaces/test/dev.cft : 241.17
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04c7a1 -- code size = 106 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mcpow[39;49m : definition = 0x00007fa6de04c7a1 : disassembly at namespaces/test/dev.cft : 241.17 :
[34;49m ..                                   int [39;49m[33;40mcpow[39;49m[34;49m ( base power | out ) { for ( out = 1 ; power ; power -= 1 ) { out = out * base ; } ret .. [39;49m[32;49m
0x7fa6de04c7a1    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04c7a5    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04c7a9    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m .. ow ( base power | out ) { for ( out = [39;49m[33;40m1[39;49m[34;49m ; power ; power -= 1 ) { out = out * base ; } return out ; } [39;49m[32;49m
0x7fa6de04c7b0    48b80100000000000000    mov rax, 0x1                                           [39;49m
[34;49m .. int cpow ( base power | out ) { for ( [39;49m[33;40mout[39;49m[34;49m = 1 ; power ; power -= 1 ) { out = out * base ; } return out ; }  .. [39;49m[32;49m
0x7fa6de04c7ba    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49mint cpow ( base power | out ) { for ( out [39;49m[33;40m=[39;49m[34;49m 1 ; power ; power -= 1 ) { out = out * base ; } return out ; }  .. [39;49m[32;49m
0x7fa6de04c7be    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  ( base power | out ) { for ( out = 1 [39;49m[33;40m;[39;49m[34;49m power ; power -= 1 ) { out = out * base ; } return out ; } [39;49m[32;49m
0x7fa6de04c7c1    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. r ; power -= 1 ) { out = out * base ; [39;49m[33;40m}[39;49m[34;49m return out ; } [39;49m[32;49m
0x7fa6de04c7c5    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de04c7c8    742d                    jz 0xde04c7f7                                          [39;49m
[34;49m .. ut = 1 ; power ; power -= 1 ) { out = [39;49m[33;40mout[39;49m[34;49m * base ; } return out ; } [39;49m[32;49m
0x7fa6de04c7ca    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  ; power ; power -= 1 ) { out = out * [39;49m[33;40mbase[39;49m[34;49m ; } return out ; } [39;49m[32;49m
0x7fa6de04c7ce    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m ..  1 ; power ; power -= 1 ) { out = out [39;49m[33;40m*[39;49m[34;49m base ; } return out ; } [39;49m[32;49m
0x7fa6de04c7d2    480fafc1                imul rax, rcx                                          [39;49m
[34;49m .. or ( out = 1 ; power ; power -= 1 ) { [39;49m[33;40mout[39;49m[34;49m = out * base ; } return out ; } [39;49m[32;49m
0x7fa6de04c7d6    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  out = 1 ; power ; power -= 1 ) { out [39;49m[33;40m=[39;49m[34;49m out * base ; } return out ; } [39;49m[32;49m
0x7fa6de04c7da    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  out = 1 ; power ; power -= 1 ) { out [39;49m[33;40m=[39;49m[34;49m out * base ; } return out ; } [39;49m[32;49m
0x7fa6de04c7dd    498d5ff8                lea rbx, [r15-0x8]                                     [39;49m
[34;49m .. wer | out ) { for ( out = 1 ; power ; [39;49m[33;40mpower[39;49m[34;49m -= 1 ) { out = out * base ; } return out ; } [39;49m[32;49m
0x7fa6de04c7e1    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  ) { for ( out = 1 ; power ; power -= [39;49m[33;40m1[39;49m[34;49m ) { out = out * base ; } return out ; } [39;49m[32;49m
0x7fa6de04c7e5    48b90100000000000000    mov rcx, 0x1                                           [39;49m[32;49m
0x7fa6de04c7ef    482bc1                  sub rax, rcx                                           [39;49m
[34;49m .. out ) { for ( out = 1 ; power ; power [39;49m[33;40m-=[39;49m[34;49m 1 ) { out = out * base ; } return out ; } [39;49m[32;49m
0x7fa6de04c7f2    488903                  mov [rbx], rax                                         [39;49m
[34;49m ..  { for ( out = 1 ; power ; power -= 1 [39;49m[33;40m)[39;49m[34;49m { out = out * base ; } return out ; } [39;49m[32;49m
0x7fa6de04c7f5    ebca                    jmp 0x7fa6de04c7c1         	< C_Syntax.[34;49mcpow[39;49m+32 >[39;49m
[34;49m .. ; power -= 1 ) { out = out * base ; } [39;49m[33;40mreturn[39;49m[34;49m out ; } [39;49m[32;49m
0x7fa6de04c7f7    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ) { out = out * base ; } return out ; [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fa6de04c7fb    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04c7ff    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04c803    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  -= 1 ) { out = out * base ; } return [39;49m[33;40mout[39;49m[34;49m ; } [39;49m[32;49m
0x7fa6de04c807    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04c80a    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cpow' :: codeSize = 105
Word : 0x00007fa6dd1d5438 :: Compiled at : 0x00007fa6de04c7a1
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 241.17 <::
 1073741824 1073741824
 =============================
Root.[34;49mpow[39;49m <:> cfrTil compiled word
SourceCode for Root.[34;49mpow[39;49m :> 
[34;49m: pow ( base power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m
Source code file location of [34;49mpow[39;49m : "namespaces/test/dev.cft" : 246.151 :: we are now at : namespaces/test/dev.cft : 249.11
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04c825 -- code size = 141 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Root.[34;49mpow[39;49m : definition = 0x00007fa6de04c825 : disassembly at namespaces/test/dev.cft : 249.11 :
[34;49m ..                                     : [39;49m[33;40mpow[39;49m[34;49m ( base power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out  .. [39;49m[32;49m
0x7fa6de04c825    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04c829    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04c82d    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                                 : pow [39;49m[33;40m([39;49m[34;49m base power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out  .. [39;49m[32;49m
0x7fa6de04c834    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m : pow ( base power | out -t II.I ) { out [39;49m[33;40m1[39;49m[34;49m = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out ;  .. [39;49m[32;49m
0x7fa6de04c838    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m ..  ( base power | out -t II.I ) { out 1 [39;49m[33;40m=[39;49m[34;49m } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c842    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. e power | out -t II.I ) { out 1 = } { [39;49m[33;40mpower[39;49m[34;49m @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c845    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. out -t II.I ) { out 1 = } { power @ 0 [39;49m[33;40m>[39;49m[34;49m } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c849    4883f800                cmp rax, 0x0                                           [39;49m[32;49m
0x7fa6de04c84d    7e4f                    jle 0xde04c89e                                         [39;49m
[34;49m .. wer @ 0 > } { power power @ 1 - = } { [39;49m[33;40mout[39;49m[34;49m out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c84f    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de04c853    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04c857    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ 0 > } { power power @ 1 - = } { out [39;49m[33;40mout[39;49m[34;49m @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c85a    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. } { power power @ 1 - = } { out out @ [39;49m[33;40mbase[39;49m[34;49m @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c85e    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. er power @ 1 - = } { out out @ base @ [39;49m[33;40m*[39;49m[34;49m = } for return out ; [39;49m[32;49m
0x7fa6de04c862    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fa6de04c866    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de04c869    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04c86c    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  power @ 1 - = } { out out @ base @ * [39;49m[33;40m=[39;49m[34;49m } for return out ; [39;49m[32;49m
0x7fa6de04c870    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  II.I ) { out 1 = } { power @ 0 > } { [39;49m[33;40mpower[39;49m[34;49m power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c873    498d47f8                lea rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04c877    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04c87b    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ) { out 1 = } { power @ 0 > } { power [39;49m[33;40mpower[39;49m[34;49m @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c87e    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 1 = } { power @ 0 > } { power power @ [39;49m[33;40m1[39;49m[34;49m - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c882    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. = } { power @ 0 > } { power power @ 1 [39;49m[33;40m-[39;49m[34;49m = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c88c    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fa6de04c88f    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de04c892    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04c895    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { power @ 0 > } { power power @ 1 - [39;49m[33;40m=[39;49m[34;49m } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c899    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. { power @ 0 > } { power power @ 1 - = [39;49m[33;40m}[39;49m[34;49m { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c89c    eba7                    jmp 0x7fa6de04c845         	< Root.[34;49mpow[39;49m+32 >[39;49m
[34;49m ..  1 - = } { out out @ base @ * = } for [39;49m[33;40mreturn[39;49m[34;49m out ; [39;49m[32;49m
0x7fa6de04c89e    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. out out @ base @ * = } for return out [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de04c8a2    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04c8a6    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04c8aa    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { out out @ base @ * = } for return [39;49m[33;40mout[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de04c8ae    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04c8b1    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'pow' :: codeSize = 140
Word : 0x00007fa6dd1d91b0 :: Compiled at : 0x00007fa6de04c825
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 249.11 <::

 65536

Timer [ 1 ] : elapsed time = 0.026621869 seconds
 1073741824
 =============================
Root.[34;49mpowReg[39;49m <:> cfrTil compiled word
SourceCode for Root.[34;49mpowReg[39;49m :> 
[34;49m: powReg ( REG base REG power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m
Source code file location of [34;49mpowReg[39;49m : "namespaces/test/dev.cft" : 250.143 :: we are now at : namespaces/test/dev.cft : 252.14
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04c8c6 -- code size = 56 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Root.[34;49mpowReg[39;49m : definition = 0x00007fa6de04c8c6 : disassembly at namespaces/test/dev.cft : 252.14 :
[34;49m ..                              : powReg [39;49m[33;40m([39;49m[34;49m REG base REG power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - =  .. [39;49m[32;49m
0x7fa6de04c8c6    498b36                  mov rsi, [r14]                                         [39;49m[32;49m
0x7fa6de04c8c9    498b7ef8                mov rdi, [r14-0x8]                                     [39;49m
[34;49m .. e REG power | REG out -t II.I ) { out [39;49m[33;40m1[39;49m[34;49m = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c8cd    48ba0100000000000000    mov rdx, 0x1                                           [39;49m
[34;49m .. out -t II.I ) { out 1 = } { power @ 0 [39;49m[33;40m>[39;49m[34;49m } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c8d7    4883fe00                cmp rsi, 0x0                                           [39;49m[32;49m
0x7fa6de04c8db    7e19                    jle 0xde04c8f6                                         [39;49m
[34;49m .. wer @ 0 > } { power power @ 1 - = } { [39;49m[33;40mout[39;49m[34;49m out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c8dd    488bc2                  mov rax, rdx                                           [39;49m
[34;49m .. er power @ 1 - = } { out out @ base @ [39;49m[33;40m*[39;49m[34;49m = } for return out ; [39;49m[32;49m
0x7fa6de04c8e0    480fafd7                imul rdx, rdi                                          [39;49m
[34;49m ..  II.I ) { out 1 = } { power @ 0 > } { [39;49m[33;40mpower[39;49m[34;49m power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c8e4    488bc6                  mov rax, rsi                                           [39;49m
[34;49m .. 1 = } { power @ 0 > } { power power @ [39;49m[33;40m1[39;49m[34;49m - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c8e7    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. = } { power @ 0 > } { power power @ 1 [39;49m[33;40m-[39;49m[34;49m = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c8f1    482bf1                  sub rsi, rcx                                           [39;49m
[34;49m .. { power @ 0 > } { power power @ 1 - = [39;49m[33;40m}[39;49m[34;49m { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c8f4    ebe1                    jmp 0x7fa6de04c8d7         	< Root.[34;49mpowReg[39;49m+17 >[39;49m
[34;49m .. out out @ base @ * = } for return out [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de04c8f6    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { out out @ base @ * = } for return [39;49m[33;40mout[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de04c8fa    498916                  mov [r14], rdx                                         [39;49m[32;49m
0x7fa6de04c8fd    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'powReg' :: codeSize = 55
Word : 0x00007fa6dd1dcf28 :: Compiled at : 0x00007fa6de04c8c6
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 252.14 <::

 65536

Timer [ 1 ] : elapsed time = 0.022130645 seconds
 1073741824
 =============================
Root.[34;49mpowReg2[39;49m <:> cfrTil compiled word
SourceCode for Root.[34;49mpowReg2[39;49m :> 
[34;49m: powReg2 ( base REG power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m
Source code file location of [34;49mpowReg2[39;49m : "namespaces/test/dev.cft" : 253.140 :: we are now at : namespaces/test/dev.cft : 255.15
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04c903 -- code size = 80 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Root.[34;49mpowReg2[39;49m : definition = 0x00007fa6de04c903 : disassembly at namespaces/test/dev.cft : 255.15 :
[34;49m ..                                     : [39;49m[33;40mpowReg2[39;49m[34;49m ( base REG power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1  .. [39;49m[32;49m
0x7fa6de04c903    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04c907    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04c90b    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                             : powReg2 [39;49m[33;40m([39;49m[34;49m base REG power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } {  .. [39;49m[32;49m
0x7fa6de04c912    498b7ff8                mov rdi, [r15-0x8]                                     [39;49m
[34;49m .. e REG power | REG out -t II.I ) { out [39;49m[33;40m1[39;49m[34;49m = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c916    48be0100000000000000    mov rsi, 0x1                                           [39;49m
[34;49m .. out -t II.I ) { out 1 = } { power @ 0 [39;49m[33;40m>[39;49m[34;49m } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c920    4883ff00                cmp rdi, 0x0                                           [39;49m[32;49m
0x7fa6de04c924    7e1d                    jle 0xde04c943                                         [39;49m
[34;49m .. wer @ 0 > } { power power @ 1 - = } { [39;49m[33;40mout[39;49m[34;49m out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c926    488bc6                  mov rax, rsi                                           [39;49m
[34;49m .. } { power power @ 1 - = } { out out @ [39;49m[33;40mbase[39;49m[34;49m @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c929    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. er power @ 1 - = } { out out @ base @ [39;49m[33;40m*[39;49m[34;49m = } for return out ; [39;49m[32;49m
0x7fa6de04c92d    480faff1                imul rsi, rcx                                          [39;49m
[34;49m ..  II.I ) { out 1 = } { power @ 0 > } { [39;49m[33;40mpower[39;49m[34;49m power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c931    488bc7                  mov rax, rdi                                           [39;49m
[34;49m .. 1 = } { power @ 0 > } { power power @ [39;49m[33;40m1[39;49m[34;49m - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c934    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. = } { power @ 0 > } { power power @ 1 [39;49m[33;40m-[39;49m[34;49m = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c93e    482bf9                  sub rdi, rcx                                           [39;49m
[34;49m .. { power @ 0 > } { power power @ 1 - = [39;49m[33;40m}[39;49m[34;49m { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c941    ebdd                    jmp 0x7fa6de04c920         	< Root.[34;49mpowReg2[39;49m+29 >[39;49m
[34;49m .. out out @ base @ * = } for return out [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de04c943    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04c947    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04c94b    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { out out @ base @ * = } for return [39;49m[33;40mout[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de04c94f    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fa6de04c952    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'powReg2' :: codeSize = 79
Word : 0x00007fa6dd1e0ca0 :: Compiled at : 0x00007fa6de04c903
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 255.15 <::

 65536

Timer [ 1 ] : elapsed time = 0.022929115 seconds
 1073741824
 =============================
Root.[34;49mpowReg3[39;49m <:> cfrTil compiled word
SourceCode for Root.[34;49mpowReg3[39;49m :> 
[34;49m: powReg3 ( REG base power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m
Source code file location of [34;49mpowReg3[39;49m : "namespaces/test/dev.cft" : 256.140 :: we are now at : namespaces/test/dev.cft : 259.15
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04c958 -- code size = 105 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Root.[34;49mpowReg3[39;49m : definition = 0x00007fa6de04c958 : disassembly at namespaces/test/dev.cft : 259.15 :
[34;49m ..                                     : [39;49m[33;40mpowReg3[39;49m[34;49m ( REG base power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1  .. [39;49m[32;49m
0x7fa6de04c958    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04c95c    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04c960    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                             : powReg3 [39;49m[33;40m([39;49m[34;49m REG base power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } {  .. [39;49m[32;49m
0x7fa6de04c967    498b7ff0                mov rdi, [r15-0x10]                                    [39;49m
[34;49m ..  base power | REG out -t II.I ) { out [39;49m[33;40m1[39;49m[34;49m = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c96b    48be0100000000000000    mov rsi, 0x1                                           [39;49m
[34;49m .. wer | REG out -t II.I ) { out 1 = } { [39;49m[33;40mpower[39;49m[34;49m @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c975    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. out -t II.I ) { out 1 = } { power @ 0 [39;49m[33;40m>[39;49m[34;49m } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c979    4883f800                cmp rax, 0x0                                           [39;49m[32;49m
0x7fa6de04c97d    7e32                    jle 0xde04c9b1                                         [39;49m
[34;49m .. wer @ 0 > } { power power @ 1 - = } { [39;49m[33;40mout[39;49m[34;49m out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c97f    488bc6                  mov rax, rsi                                           [39;49m
[34;49m .. er power @ 1 - = } { out out @ base @ [39;49m[33;40m*[39;49m[34;49m = } for return out ; [39;49m[32;49m
0x7fa6de04c982    480faff7                imul rsi, rdi                                          [39;49m
[34;49m ..  II.I ) { out 1 = } { power @ 0 > } { [39;49m[33;40mpower[39;49m[34;49m power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c986    498d47f8                lea rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04c98a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04c98e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ) { out 1 = } { power @ 0 > } { power [39;49m[33;40mpower[39;49m[34;49m @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c991    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 1 = } { power @ 0 > } { power power @ [39;49m[33;40m1[39;49m[34;49m - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c995    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. = } { power @ 0 > } { power power @ 1 [39;49m[33;40m-[39;49m[34;49m = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c99f    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fa6de04c9a2    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de04c9a5    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04c9a8    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { power @ 0 > } { power power @ 1 - [39;49m[33;40m=[39;49m[34;49m } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c9ac    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. { power @ 0 > } { power power @ 1 - = [39;49m[33;40m}[39;49m[34;49m { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c9af    ebc4                    jmp 0x7fa6de04c975         	< Root.[34;49mpowReg3[39;49m+29 >[39;49m
[34;49m .. out out @ base @ * = } for return out [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de04c9b1    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04c9b5    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04c9b9    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { out out @ base @ * = } for return [39;49m[33;40mout[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de04c9bd    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fa6de04c9c0    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'powReg3' :: codeSize = 104
Word : 0x00007fa6dd0c69f8 :: Compiled at : 0x00007fa6de04c958
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 259.15 <::

 65536

Timer [ 1 ] : elapsed time = 0.024688746 seconds
 1073741824
 =============================
Root.[34;49mpowReg4[39;49m <:> cfrTil compiled word
SourceCode for Root.[34;49mpowReg4[39;49m :> 
[34;49m: powReg4 ( REG base REG power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m
Source code file location of [34;49mpowReg4[39;49m : "namespaces/test/dev.cft" : 260.140 :: we are now at : namespaces/test/dev.cft : 263.15
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04c9c6 -- code size = 116 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Root.[34;49mpowReg4[39;49m : definition = 0x00007fa6de04c9c6 : disassembly at namespaces/test/dev.cft : 263.15 :
[34;49m ..                                     : [39;49m[33;40mpowReg4[39;49m[34;49m ( REG base REG power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1  .. [39;49m[32;49m
0x7fa6de04c9c6    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04c9ca    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04c9ce    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                             : powReg4 [39;49m[33;40m([39;49m[34;49m REG base REG power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } {  .. [39;49m[32;49m
0x7fa6de04c9d5    498b77f8                mov rsi, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04c9d9    498b7ff0                mov rdi, [r15-0x10]                                    [39;49m
[34;49m .. er @ 1 - = } { out out @ base @ * = } [39;49m[33;40mfor[39;49m[34;49m return out ; [39;49m[32;49m
0x7fa6de04c9dd    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..  base REG power | out -t II.I ) { out [39;49m[33;40m1[39;49m[34;49m = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c9e1    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. ase REG power | out -t II.I ) { out 1 [39;49m[33;40m=[39;49m[34;49m } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c9eb    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. out -t II.I ) { out 1 = } { power @ 0 [39;49m[33;40m>[39;49m[34;49m } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c9ee    4883fe00                cmp rsi, 0x0                                           [39;49m[32;49m
0x7fa6de04c9f2    7e32                    jle 0xde04ca26                                         [39;49m
[34;49m .. wer @ 0 > } { power power @ 1 - = } { [39;49m[33;40mout[39;49m[34;49m out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c9f4    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de04c9f8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04c9fc    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ 0 > } { power power @ 1 - = } { out [39;49m[33;40mout[39;49m[34;49m @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04c9ff    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. er power @ 1 - = } { out out @ base @ [39;49m[33;40m*[39;49m[34;49m = } for return out ; [39;49m[32;49m
0x7fa6de04ca03    480fafc7                imul rax, rdi                                          [39;49m[32;49m
0x7fa6de04ca07    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de04ca0a    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04ca0d    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  power @ 1 - = } { out out @ base @ * [39;49m[33;40m=[39;49m[34;49m } for return out ; [39;49m[32;49m
0x7fa6de04ca11    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  II.I ) { out 1 = } { power @ 0 > } { [39;49m[33;40mpower[39;49m[34;49m power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04ca14    488bc6                  mov rax, rsi                                           [39;49m
[34;49m .. 1 = } { power @ 0 > } { power power @ [39;49m[33;40m1[39;49m[34;49m - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04ca17    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. = } { power @ 0 > } { power power @ 1 [39;49m[33;40m-[39;49m[34;49m = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04ca21    482bf1                  sub rsi, rcx                                           [39;49m
[34;49m .. { power @ 0 > } { power power @ 1 - = [39;49m[33;40m}[39;49m[34;49m { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04ca24    ebc8                    jmp 0x7fa6de04c9ee         	< Root.[34;49mpowReg4[39;49m+40 >[39;49m
[34;49m ..  1 - = } { out out @ base @ * = } for [39;49m[33;40mreturn[39;49m[34;49m out ; [39;49m[32;49m
0x7fa6de04ca26    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. out out @ base @ * = } for return out [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de04ca2a    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04ca2e    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04ca32    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { out out @ base @ * = } for return [39;49m[33;40mout[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de04ca36    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04ca39    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'powReg4' :: codeSize = 115
Word : 0x00007fa6dd0ca770 :: Compiled at : 0x00007fa6de04c9c6
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 263.15 <::

 65536

Timer [ 1 ] : elapsed time = 0.024489604 seconds
 1073741824
 =============================
Root.[34;49mpowReg5[39;49m <:> cfrTil compiled word
SourceCode for Root.[34;49mpowReg5[39;49m :> 
[34;49m: powReg5 ( base REG power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m
Source code file location of [34;49mpowReg5[39;49m : "namespaces/test/dev.cft" : 264.136 :: we are now at : namespaces/test/dev.cft : 267.15
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04ca3f -- code size = 116 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Root.[34;49mpowReg5[39;49m : definition = 0x00007fa6de04ca3f : disassembly at namespaces/test/dev.cft : 267.15 :
[34;49m ..                                     : [39;49m[33;40mpowReg5[39;49m[34;49m ( base REG power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - =  .. [39;49m[32;49m
0x7fa6de04ca3f    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04ca43    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04ca47    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                             : powReg5 [39;49m[33;40m([39;49m[34;49m base REG power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out  .. [39;49m[32;49m
0x7fa6de04ca4e    498b7ff8                mov rdi, [r15-0x8]                                     [39;49m
[34;49m .. er @ 1 - = } { out out @ base @ * = } [39;49m[33;40mfor[39;49m[34;49m return out ; [39;49m[32;49m
0x7fa6de04ca52    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..  base REG power | out -t II.I ) { out [39;49m[33;40m1[39;49m[34;49m = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04ca56    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. ase REG power | out -t II.I ) { out 1 [39;49m[33;40m=[39;49m[34;49m } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04ca60    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. out -t II.I ) { out 1 = } { power @ 0 [39;49m[33;40m>[39;49m[34;49m } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04ca63    4883ff00                cmp rdi, 0x0                                           [39;49m[32;49m
0x7fa6de04ca67    7e36                    jle 0xde04ca9f                                         [39;49m
[34;49m .. wer @ 0 > } { power power @ 1 - = } { [39;49m[33;40mout[39;49m[34;49m out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04ca69    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de04ca6d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04ca71    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ 0 > } { power power @ 1 - = } { out [39;49m[33;40mout[39;49m[34;49m @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04ca74    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. } { power power @ 1 - = } { out out @ [39;49m[33;40mbase[39;49m[34;49m @ * = } for return out ; [39;49m[32;49m
0x7fa6de04ca78    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. er power @ 1 - = } { out out @ base @ [39;49m[33;40m*[39;49m[34;49m = } for return out ; [39;49m[32;49m
0x7fa6de04ca7c    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fa6de04ca80    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de04ca83    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04ca86    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  power @ 1 - = } { out out @ base @ * [39;49m[33;40m=[39;49m[34;49m } for return out ; [39;49m[32;49m
0x7fa6de04ca8a    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  II.I ) { out 1 = } { power @ 0 > } { [39;49m[33;40mpower[39;49m[34;49m power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04ca8d    488bc7                  mov rax, rdi                                           [39;49m
[34;49m .. 1 = } { power @ 0 > } { power power @ [39;49m[33;40m1[39;49m[34;49m - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04ca90    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. = } { power @ 0 > } { power power @ 1 [39;49m[33;40m-[39;49m[34;49m = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04ca9a    482bf9                  sub rdi, rcx                                           [39;49m
[34;49m .. { power @ 0 > } { power power @ 1 - = [39;49m[33;40m}[39;49m[34;49m { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04ca9d    ebc4                    jmp 0x7fa6de04ca63         	< Root.[34;49mpowReg5[39;49m+36 >[39;49m
[34;49m ..  1 - = } { out out @ base @ * = } for [39;49m[33;40mreturn[39;49m[34;49m out ; [39;49m[32;49m
0x7fa6de04ca9f    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. out out @ base @ * = } for return out [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de04caa3    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04caa7    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04caab    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { out out @ base @ * = } for return [39;49m[33;40mout[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de04caaf    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04cab2    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'powReg5' :: codeSize = 115
Word : 0x00007fa6dd0ce4e8 :: Compiled at : 0x00007fa6de04ca3f
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 267.15 <::

 65536

Timer [ 1 ] : elapsed time = 0.024499773 seconds
 1073741824
 =============================
Root.[34;49mpowReg6[39;49m <:> cfrTil compiled word
SourceCode for Root.[34;49mpowReg6[39;49m :> 
[34;49m: powReg6 ( REG base power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m
Source code file location of [34;49mpowReg6[39;49m : "namespaces/test/dev.cft" : 268.136 :: we are now at : namespaces/test/dev.cft : 270.15
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04cab8 -- code size = 141 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Root.[34;49mpowReg6[39;49m : definition = 0x00007fa6de04cab8 : disassembly at namespaces/test/dev.cft : 270.15 :
[34;49m ..                                     : [39;49m[33;40mpowReg6[39;49m[34;49m ( REG base power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - =  .. [39;49m[32;49m
0x7fa6de04cab8    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04cabc    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04cac0    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                             : powReg6 [39;49m[33;40m([39;49m[34;49m REG base power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out  .. [39;49m[32;49m
0x7fa6de04cac7    498b7ff0                mov rdi, [r15-0x10]                                    [39;49m
[34;49m .. er @ 1 - = } { out out @ base @ * = } [39;49m[33;40mfor[39;49m[34;49m return out ; [39;49m[32;49m
0x7fa6de04cacb    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..  REG base power | out -t II.I ) { out [39;49m[33;40m1[39;49m[34;49m = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04cacf    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. EG base power | out -t II.I ) { out 1 [39;49m[33;40m=[39;49m[34;49m } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04cad9    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. e power | out -t II.I ) { out 1 = } { [39;49m[33;40mpower[39;49m[34;49m @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04cadc    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. out -t II.I ) { out 1 = } { power @ 0 [39;49m[33;40m>[39;49m[34;49m } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04cae0    4883f800                cmp rax, 0x0                                           [39;49m[32;49m
0x7fa6de04cae4    7e4b                    jle 0xde04cb31                                         [39;49m
[34;49m .. wer @ 0 > } { power power @ 1 - = } { [39;49m[33;40mout[39;49m[34;49m out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04cae6    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de04caea    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04caee    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ 0 > } { power power @ 1 - = } { out [39;49m[33;40mout[39;49m[34;49m @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04caf1    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. er power @ 1 - = } { out out @ base @ [39;49m[33;40m*[39;49m[34;49m = } for return out ; [39;49m[32;49m
0x7fa6de04caf5    480fafc7                imul rax, rdi                                          [39;49m[32;49m
0x7fa6de04caf9    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de04cafc    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04caff    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  power @ 1 - = } { out out @ base @ * [39;49m[33;40m=[39;49m[34;49m } for return out ; [39;49m[32;49m
0x7fa6de04cb03    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  II.I ) { out 1 = } { power @ 0 > } { [39;49m[33;40mpower[39;49m[34;49m power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04cb06    498d47f8                lea rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04cb0a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04cb0e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ) { out 1 = } { power @ 0 > } { power [39;49m[33;40mpower[39;49m[34;49m @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04cb11    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 1 = } { power @ 0 > } { power power @ [39;49m[33;40m1[39;49m[34;49m - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04cb15    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. = } { power @ 0 > } { power power @ 1 [39;49m[33;40m-[39;49m[34;49m = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04cb1f    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fa6de04cb22    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de04cb25    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04cb28    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { power @ 0 > } { power power @ 1 - [39;49m[33;40m=[39;49m[34;49m } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04cb2c    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. { power @ 0 > } { power power @ 1 - = [39;49m[33;40m}[39;49m[34;49m { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04cb2f    ebab                    jmp 0x7fa6de04cadc         	< Root.[34;49mpowReg6[39;49m+36 >[39;49m
[34;49m ..  1 - = } { out out @ base @ * = } for [39;49m[33;40mreturn[39;49m[34;49m out ; [39;49m[32;49m
0x7fa6de04cb31    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. out out @ base @ * = } for return out [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de04cb35    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04cb39    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04cb3d    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { out out @ base @ * = } for return [39;49m[33;40mout[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de04cb41    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04cb44    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'powReg6' :: codeSize = 140
Word : 0x00007fa6dd0d2260 :: Compiled at : 0x00007fa6de04cab8
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 270.15 <::

 65536

Timer [ 1 ] : elapsed time = 0.026245702 seconds
 1073741824
 =============================
Root.[34;49mpowReg7[39;49m <:> cfrTil compiled word
SourceCode for Root.[34;49mpowReg7[39;49m :> 
[34;49m: powReg7 ( base power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m
Source code file location of [34;49mpowReg7[39;49m : "namespaces/test/dev.cft" : 271.136 :: we are now at : namespaces/test/dev.cft : 274.15
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04cb4a -- code size = 105 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Root.[34;49mpowReg7[39;49m : definition = 0x00007fa6de04cb4a : disassembly at namespaces/test/dev.cft : 274.15 :
[34;49m ..                                     : [39;49m[33;40mpowReg7[39;49m[34;49m ( base power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - =  .. [39;49m[32;49m
0x7fa6de04cb4a    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04cb4e    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04cb52    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..  base power | REG out -t II.I ) { out [39;49m[33;40m1[39;49m[34;49m = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04cb59    48bf0100000000000000    mov rdi, 0x1                                           [39;49m
[34;49m .. wer | REG out -t II.I ) { out 1 = } { [39;49m[33;40mpower[39;49m[34;49m @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04cb63    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. out -t II.I ) { out 1 = } { power @ 0 [39;49m[33;40m>[39;49m[34;49m } { power power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04cb67    4883f800                cmp rax, 0x0                                           [39;49m[32;49m
0x7fa6de04cb6b    7e36                    jle 0xde04cba3                                         [39;49m
[34;49m .. wer @ 0 > } { power power @ 1 - = } { [39;49m[33;40mout[39;49m[34;49m out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04cb6d    488bc7                  mov rax, rdi                                           [39;49m
[34;49m .. } { power power @ 1 - = } { out out @ [39;49m[33;40mbase[39;49m[34;49m @ * = } for return out ; [39;49m[32;49m
0x7fa6de04cb70    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. er power @ 1 - = } { out out @ base @ [39;49m[33;40m*[39;49m[34;49m = } for return out ; [39;49m[32;49m
0x7fa6de04cb74    480faff9                imul rdi, rcx                                          [39;49m
[34;49m ..  II.I ) { out 1 = } { power @ 0 > } { [39;49m[33;40mpower[39;49m[34;49m power @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04cb78    498d47f8                lea rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04cb7c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04cb80    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ) { out 1 = } { power @ 0 > } { power [39;49m[33;40mpower[39;49m[34;49m @ 1 - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04cb83    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 1 = } { power @ 0 > } { power power @ [39;49m[33;40m1[39;49m[34;49m - = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04cb87    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. = } { power @ 0 > } { power power @ 1 [39;49m[33;40m-[39;49m[34;49m = } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04cb91    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fa6de04cb94    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de04cb97    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04cb9a    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { power @ 0 > } { power power @ 1 - [39;49m[33;40m=[39;49m[34;49m } { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04cb9e    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. { power @ 0 > } { power power @ 1 - = [39;49m[33;40m}[39;49m[34;49m { out out @ base @ * = } for return out ; [39;49m[32;49m
0x7fa6de04cba1    ebc0                    jmp 0x7fa6de04cb63         	< Root.[34;49mpowReg7[39;49m+25 >[39;49m
[34;49m .. out out @ base @ * = } for return out [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de04cba3    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04cba7    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04cbab    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { out out @ base @ * = } for return [39;49m[33;40mout[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de04cbaf    49893e                  mov [r14], rdi                                         [39;49m[32;49m
0x7fa6de04cbb2    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'powReg7' :: codeSize = 104
Word : 0x00007fa6dd0d5fd8 :: Compiled at : 0x00007fa6de04cb4a
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 274.15 <::

 65536

Timer [ 1 ] : elapsed time = 0.025062065 seconds

 =============================
Int.[34;49m**[39;49m <:> C compiled primitive, infixable
SourceCode for Int.[34;49m**[39;49m :> 
C Primitive
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Int.[34;49m**[39;49m : definition = 0x0000561dbfef75c0 : disassembly at namespaces/test/dev.cft : 276.10 :[32;49m
0x561dbfef75c4    498b4ef8                mov rcx, [r14-0x8]                                     [39;49m[32;49m
0x561dbfef75c8    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x561dbfef75cb    4c89f6                  mov rsi, r14                                           [39;49m[32;49m
0x561dbfef75ce    4889ca                  mov rdx, rcx                                           [39;49m[32;49m
0x561dbfef75d1    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x561dbfef75d5    7413                    jz 0xbfef75ea                                          [39;49m[32;49m
0x561dbfef75d7    660f1f840000000000      o16 nop [rax+rax]                                      [39;49m[32;49m
0x561dbfef75e0    480fafd1                imul rdx, rcx                                          [39;49m[32;49m
0x561dbfef75e4    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x561dbfef75e8    75f6                    jnz 0xbfef75e0                                         [39;49m[32;49m
0x561dbfef75ea    488956f8                mov [rsi-0x8], rdx                                     [39;49m[32;49m
0x561dbfef75ee    e9de77fdff              jmp 0x561dbfecedd1         	< C compiler code >        [39;49m[32;49m
0x561dbfef75f3    66662e0f1f840000000000  o16 nop [cs:rax+rax]                                   [39;49m[32;49m
0x561dbfef75fe    6690                    nop                                                    [39;49m[32;49m
0x561dbfef7600    f30f1efa                invalid                                                [39;49m
Word_Disassemble : word - '**' :: codeSize = 60
Word : 0x00007fa6ddfbfbb0 :: Compiled at : 0x0000561dbfef75c0
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 276.10 <::

 65536

Timer [ 1 ] : elapsed time = 0.030363107 seconds

 =============================
Int.[34;49mpow_03[39;49m <:> C compiled primitive, infixable
SourceCode for Int.[34;49mpow_03[39;49m :> 
C Primitive
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Int.[34;49mpow_03[39;49m : definition = 0x0000561dbfef7200 : disassembly at namespaces/test/dev.cft : 277.14 :[32;49m
0x561dbfef7204    498b4ef8                mov rcx, [r14-0x8]                                     [39;49m[32;49m
0x561dbfef7208    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x561dbfef720b    4c89f6                  mov rsi, r14                                           [39;49m[32;49m
0x561dbfef720e    4889ca                  mov rdx, rcx                                           [39;49m[32;49m
0x561dbfef7211    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x561dbfef7215    7413                    jz 0xbfef722a                                          [39;49m[32;49m
0x561dbfef7217    660f1f840000000000      o16 nop [rax+rax]                                      [39;49m[32;49m
0x561dbfef7220    480fafd1                imul rdx, rcx                                          [39;49m[32;49m
0x561dbfef7224    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x561dbfef7228    75f6                    jnz 0xbfef7220                                         [39;49m[32;49m
0x561dbfef722a    488956f8                mov [rsi-0x8], rdx                                     [39;49m[32;49m
0x561dbfef722e    e99e7bfdff              jmp 0x561dbfecedd1         	< C compiler code >        [39;49m[32;49m
0x561dbfef7233    66662e0f1f840000000000  o16 nop [cs:rax+rax]                                   [39;49m[32;49m
0x561dbfef723e    6690                    nop                                                    [39;49m[32;49m
0x561dbfef7240    f30f1efa                invalid                                                [39;49m
Word_Disassemble : word - 'pow_03' :: codeSize = 60
Word : 0x00007fa6ddfc0010 :: Compiled at : 0x0000561dbfef7200
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 277.14 <::

 65536

Timer [ 1 ] : elapsed time = 0.030493505 seconds


Word :: C.[34;49mtt[39;49m : definition = 0x00007fa6de04cbcd : disassembly at namespaces/test/dev.cft : 283.22 :
[34;49m ..                                     : [39;49m[33;40mtt[39;49m[34;49m ( | t ) t 6 = t ++ t @ p ;  .. [39;49m[32;49m
0x7fa6de04cbcd    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04cbd1    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04cbd5    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                          : tt ( | t ) [39;49m[33;40mt[39;49m[34;49m 6 = t ++ t @ p ;  .. [39;49m[32;49m
0x7fa6de04cbdc    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..                        : tt ( | t ) t [39;49m[33;40m6[39;49m[34;49m = t ++ t @ p ;  .. [39;49m[32;49m
0x7fa6de04cbe0    48b90600000000000000    mov rcx, 0x6                                           [39;49m
[34;49m ..                      : tt ( | t ) t 6 [39;49m[33;40m=[39;49m[34;49m t ++ t @ p ;  .. [39;49m[32;49m
0x7fa6de04cbea    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..                  : tt ( | t ) t 6 = t [39;49m[33;40m++[39;49m[34;49m t @ p ;  .. [39;49m[32;49m
0x7fa6de04cbed    49ff4708                inc qword [r15+0x8]                                    [39;49m
[34;49m ..               : tt ( | t ) t 6 = t ++ [39;49m[33;40mt[39;49m[34;49m @ p ;  .. [39;49m[32;49m
0x7fa6de04cbf1    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de04cbf5    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04cbf9    498906                  mov [r14], rax                                         [39;49m
[34;49m ..           : tt ( | t ) t 6 = t ++ t @ [39;49m[33;40mp[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fa6de04cbfc    49b9889303dea67f0000    mov r9, 0x7fa6de039388                                 [39;49m[32;49m
0x7fa6de04cc06    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fa6de039388 >[39;49m
[34;49m ..         : tt ( | t ) t 6 = t ++ t @ p [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de04cc09    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04cc0d    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04cc11    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tt' :: codeSize = 68 7 
should show 7
 =============================
C_Syntax.[34;49mfibPTC?[39;49m <:> cfrTil compiled word, prefix
SourceCode for C_Syntax.[34;49mfibPTC?[39;49m :> 
[34;49mint fibPTC? ( n ) { int fn, fn1, fn2 ; for ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n -- ) { fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ; } return fn ; } [39;49m
Source code file location of [34;49mfibPTC?[39;49m : "namespaces/test/dev.cft" : 299.14 :: we are now at : namespaces/test/dev.cft : 310.21
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04cc9f -- code size = 137 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfibPTC?[39;49m : definition = 0x00007fa6de04cc9f : disassembly at namespaces/test/dev.cft : 310.21 :
[34;49m ..                                   int [39;49m[33;40mfibPTC?[39;49m[34;49m ( n )  { int fn, fn1, fn2 ; for ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ;[39;49m[32;49m
0x7fa6de04cc9f    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04cca3    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04cca7    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m ..  n )  { int fn, fn1, fn2 ; for ( fn = [39;49m[33;40m0[39;49m[34;49m, fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04ccae    48b80000000000000000    mov rax, 0x0                                           [39;49m
[34;49m .. TC? ( n )  { int fn, fn1, fn2 ; for ( [39;49m[33;40mfn[39;49m[34;49m = 0, fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn [39;49m[32;49m
0x7fa6de04ccb8    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  ( n )  { int fn, fn1, fn2 ; for ( fn [39;49m[33;40mstore[39;49m[34;49mfn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; }[39;49m[32;49m
0x7fa6de04ccbc    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. nt fn, fn1, fn2 ; for ( fn = 0, fn1 = [39;49m[33;40m0[39;49m[34;49m, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04ccbf    48b80000000000000000    mov rax, 0x0                                           [39;49m
[34;49m .. )  { int fn, fn1, fn2 ; for ( fn = 0, [39;49m[33;40mfn1[39;49m[34;49m = 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04ccc9    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m ..  int fn, fn1, fn2 ; for ( fn = 0, fn1 [39;49m[33;40m=[39;49m[34;49m 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04cccd    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. 1, fn2 ; for ( fn = 0, fn1 = 0, fn2 = [39;49m[33;40m1[39;49m[34;49m ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04ccd0    48b80100000000000000    mov rax, 0x1                                           [39;49m
[34;49m .. fn, fn1, fn2 ; for ( fn = 0, fn1 = 0, [39;49m[33;40mfn2[39;49m[34;49m = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04ccda    498d4f18                lea rcx, [r15+0x18]                                    [39;49m
[34;49m .. fn1, fn2 ; for ( fn = 0, fn1 = 0, fn2 [39;49m[33;40m=[39;49m[34;49m 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04ccde    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  fn2 ; for ( fn = 0, fn1 = 0, fn2 = 1 [39;49m[33;40m;[39;49m[34;49m n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04cce1    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  [39;49m[33;40m}[39;49m[34;49m return fn ; } [39;49m[32;49m
0x7fa6de04cce5    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de04cce8    742e                    jz 0xde04cd18                                          [39;49m
[34;49m .. 1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 = [39;49m[33;40mfn2[39;49m[34;49m ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04ccea    498b4718                mov rax, [r15+0x18]                                    [39;49m
[34;49m ..  0, fn1 = 0, fn2 = 1 ; n ; n -- )  {  [39;49m[33;40mfn1[39;49m[34;49m = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04ccee    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m .. fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 [39;49m[33;40m=[39;49m[34;49m fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04ccf2    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = [39;49m[33;40mfn[39;49m[34;49m ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04ccf5    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; [39;49m[33;40mfn2[39;49m[34;49m = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04ccf9    498d4f18                lea rcx, [r15+0x18]                                    [39;49m
[34;49m ..  = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 [39;49m[33;40m=[39;49m[34;49m fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04ccfd    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  -- )  {  fn1 = fn2 ; fn2 = fn ; fn = [39;49m[33;40mfn1[39;49m[34;49m + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04cd00    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + [39;49m[33;40mfn2[39;49m[34;49m ;  } return fn ; } [39;49m[32;49m
0x7fa6de04cd04    498b4f18                mov rcx, [r15+0x18]                                    [39;49m
[34;49m .. )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 [39;49m[33;40m+[39;49m[34;49m fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04cd08    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; [39;49m[33;40mfn[39;49m[34;49m = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04cd0b    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  n -- )  {  fn1 = fn2 ; fn2 = fn ; fn [39;49m[33;40m=[39;49m[34;49m fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04cd0f    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. or ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n [39;49m[33;40m--[39;49m[34;49m )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04cd12    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m .. ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n -- [39;49m[33;40m)[39;49m[34;49m  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04cd16    ebc9                    jmp 0x7fa6de04cce1         	< C_Syntax.[34;49mfibPTC?[39;49m+66 >[39;49m
[34;49m ..  fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } [39;49m[33;40mreturn[39;49m[34;49m fn ; } [39;49m[32;49m
0x7fa6de04cd18    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  fn ; fn = fn1 + fn2 ;  } return fn ; [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fa6de04cd1c    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04cd20    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. fn2 = fn ; fn = fn1 + fn2 ;  } return [39;49m[33;40mfn[39;49m[34;49m ; } [39;49m[32;49m
0x7fa6de04cd24    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04cd27    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fibPTC?' :: codeSize = 136
Word : 0x00007fa6dd0df310 :: Compiled at : 0x00007fa6de04cc9f
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 310.21 <::
 6765
 =============================
C_Syntax.[34;49mfibPTC2?[39;49m <:> cfrTil compiled word
SourceCode for C_Syntax.[34;49mfibPTC2?[39;49m :> 
[34;49mint fibPTC2? ( REG n | REG fn, REG fn1, REG fn2 ) { for ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n -- ) { fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ; } return fn ; } [39;49m
Source code file location of [34;49mfibPTC2?[39;49m : "namespaces/test/dev.cft" : 314.45 :: we are now at : namespaces/test/dev.cft : 324.26
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04cd3c -- code size = 62 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfibPTC2?[39;49m : definition = 0x00007fa6de04cd3c : disassembly at namespaces/test/dev.cft : 324.26 :
[34;49m ..                                   int [39;49m[33;40mfibPTC2?[39;49m[34;49m ( REG n | REG fn, REG fn1, REG fn2 ) { for ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n -- ) .. [39;49m[32;49m
0x7fa6de04cd3c    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m ..  = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 [39;49m[33;40m=[39;49m[34;49m fn ; fn = fn1 + fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fa6de04cd3f    48be0000000000000000    mov rsi, 0x0                                           [39;49m
[34;49m ..  fn1, REG fn2 ) { for ( fn = 0, fn1 = [39;49m[33;40m0[39;49m[34;49m, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fa6de04cd49    48ba0000000000000000    mov rdx, 0x0                                           [39;49m
[34;49m ..  fn2 ) { for ( fn = 0, fn1 = 0, fn2 = [39;49m[33;40m1[39;49m[34;49m ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fa6de04cd53    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. n2 ) { for ( fn = 0, fn1 = 0, fn2 = 1 [39;49m[33;40m;[39;49m[34;49m n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fa6de04cd5d    488bc7                  mov rax, rdi                                           [39;49m
[34;49m ..  = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  [39;49m[33;40m}[39;49m[34;49m return fn ; }  .. [39;49m[32;49m
0x7fa6de04cd60    4885ff                  test rdi, rdi                                          [39;49m[32;49m
0x7fa6de04cd63    7411                    jz 0xde04cd76                                          [39;49m
[34;49m .. fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 [39;49m[33;40m=[39;49m[34;49m fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fa6de04cd65    488bd1                  mov rdx, rcx                                           [39;49m
[34;49m ..  = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 [39;49m[33;40m=[39;49m[34;49m fn ; fn = fn1 + fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fa6de04cd68    488bce                  mov rcx, rsi                                           [39;49m
[34;49m .. )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 [39;49m[33;40m+[39;49m[34;49m fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fa6de04cd6b    4803d1                  add rdx, rcx                                           [39;49m
[34;49m ..  n -- )  {  fn1 = fn2 ; fn2 = fn ; fn [39;49m[33;40m=[39;49m[34;49m fn1 + fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fa6de04cd6e    488bf2                  mov rsi, rdx                                           [39;49m
[34;49m .. or ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n [39;49m[33;40m--[39;49m[34;49m )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fa6de04cd71    48ffcf                  dec rdi                                                [39;49m
[34;49m .. ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n -- [39;49m[33;40m)[39;49m[34;49m  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fa6de04cd74    ebe7                    jmp 0x7fa6de04cd5d         	< C_Syntax.[34;49mfibPTC2?[39;49m+33 >[39;49m
[34;49m .. fn2 = fn ; fn = fn1 + fn2 ;  } return [39;49m[33;40mfn[39;49m[34;49m ; }  .. [39;49m[32;49m
0x7fa6de04cd76    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fa6de04cd79    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fibPTC2?' :: codeSize = 61
Word : 0x00007fa6dd087c28 :: Compiled at : 0x00007fa6de04cd3c
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 324.26 <::
 6765
 =============================
C_Syntax.[34;49mfibPTC?[39;49m <:> cfrTil compiled word, prefix
SourceCode for C_Syntax.[34;49mfibPTC?[39;49m :> 
[34;49mint fibPTC? ( n ) { int fn, fn1, fn2 ; for ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n -- ) { fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ; } return fn ; } [39;49m
Source code file location of [34;49mfibPTC?[39;49m : "namespaces/test/dev.cft" : 299.14 :: we are now at : namespaces/test/dev.cft : 326.14
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04cc9f -- code size = 137 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfibPTC?[39;49m : definition = 0x00007fa6de04cc9f : disassembly at namespaces/test/dev.cft : 326.14 :
[34;49m ..                                   int [39;49m[33;40mfibPTC?[39;49m[34;49m ( n )  { int fn, fn1, fn2 ; for ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ;[39;49m[32;49m
0x7fa6de04cc9f    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04cca3    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04cca7    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m ..  n )  { int fn, fn1, fn2 ; for ( fn = [39;49m[33;40m0[39;49m[34;49m, fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04ccae    48b80000000000000000    mov rax, 0x0                                           [39;49m
[34;49m .. TC? ( n )  { int fn, fn1, fn2 ; for ( [39;49m[33;40mfn[39;49m[34;49m = 0, fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn [39;49m[32;49m
0x7fa6de04ccb8    498d4f08                lea rcx, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de04ccbc    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. nt fn, fn1, fn2 ; for ( fn = 0, fn1 = [39;49m[33;40m0[39;49m[34;49m, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04ccbf    48b80000000000000000    mov rax, 0x0                                           [39;49m
[34;49m .. )  { int fn, fn1, fn2 ; for ( fn = 0, [39;49m[33;40mfn1[39;49m[34;49m = 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04ccc9    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m ..  int fn, fn1, fn2 ; for ( fn = 0, fn1 [39;49m[33;40m=[39;49m[34;49m 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04cccd    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. 1, fn2 ; for ( fn = 0, fn1 = 0, fn2 = [39;49m[33;40m1[39;49m[34;49m ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04ccd0    48b80100000000000000    mov rax, 0x1                                           [39;49m
[34;49m .. fn, fn1, fn2 ; for ( fn = 0, fn1 = 0, [39;49m[33;40mfn2[39;49m[34;49m = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04ccda    498d4f18                lea rcx, [r15+0x18]                                    [39;49m
[34;49m .. fn1, fn2 ; for ( fn = 0, fn1 = 0, fn2 [39;49m[33;40m=[39;49m[34;49m 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04ccde    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  fn2 ; for ( fn = 0, fn1 = 0, fn2 = 1 [39;49m[33;40m;[39;49m[34;49m n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04cce1    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  [39;49m[33;40m}[39;49m[34;49m return fn ; } [39;49m[32;49m
0x7fa6de04cce5    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de04cce8    742e                    jz 0xde04cd18                                          [39;49m
[34;49m .. 1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 = [39;49m[33;40mfn2[39;49m[34;49m ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04ccea    498b4718                mov rax, [r15+0x18]                                    [39;49m
[34;49m ..  0, fn1 = 0, fn2 = 1 ; n ; n -- )  {  [39;49m[33;40mfn1[39;49m[34;49m = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04ccee    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m .. fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 [39;49m[33;40m=[39;49m[34;49m fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04ccf2    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = [39;49m[33;40mfn[39;49m[34;49m ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04ccf5    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; [39;49m[33;40mfn2[39;49m[34;49m = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04ccf9    498d4f18                lea rcx, [r15+0x18]                                    [39;49m
[34;49m ..  = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 [39;49m[33;40m=[39;49m[34;49m fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04ccfd    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  -- )  {  fn1 = fn2 ; fn2 = fn ; fn = [39;49m[33;40mfn1[39;49m[34;49m + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04cd00    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + [39;49m[33;40mfn2[39;49m[34;49m ;  } return fn ; } [39;49m[32;49m
0x7fa6de04cd04    498b4f18                mov rcx, [r15+0x18]                                    [39;49m
[34;49m .. )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 [39;49m[33;40m+[39;49m[34;49m fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04cd08    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; [39;49m[33;40mfn[39;49m[34;49m = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04cd0b    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  n -- )  {  fn1 = fn2 ; fn2 = fn ; fn [39;49m[33;40m=[39;49m[34;49m fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04cd0f    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. or ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n [39;49m[33;40m--[39;49m[34;49m )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04cd12    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m .. ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n -- [39;49m[33;40m)[39;49m[34;49m  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fa6de04cd16    ebc9                    jmp 0x7fa6de04cce1         	< C_Syntax.[34;49mfibPTC?[39;49m+66 >[39;49m
[34;49m ..  = fn ; fn = fn1 + fn2 ;  } return fn [39;49m[33;40m;[39;49m[34;49m } [39;49m[32;49m
0x7fa6de04cd18    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  fn ; fn = fn1 + fn2 ;  } return fn ; [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fa6de04cd1c    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04cd20    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. fn2 = fn ; fn = fn1 + fn2 ;  } return [39;49m[33;40mfn[39;49m[34;49m ; } [39;49m[32;49m
0x7fa6de04cd24    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04cd27    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fibPTC?' :: codeSize = 136
Word : 0x00007fa6dd0df310 :: Compiled at : 0x00007fa6de04cc9f
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 326.14 <::

 13

 fibPTC? :
Timer [ 1 ] : elapsed time = 0.047082236 seconds :: function : fibPTC? : called on args : 1 - 23 : 10000 reps

 =============================
User.[34;49m_fibn1[39;49m <:> cfrTil compiled word
SourceCode for User.[34;49m_fibn1[39;49m :> 
[34;49m: _fibn1 ( n -- TOS ) { n @ 2 < } { n @ } { n -- n @ _fibn1 n -- n @ _fibn1 + } ifElse ; [39;49m
Source code file location of [34;49m_fibn1[39;49m : "namespaces/test/dev.cft" : 331.89 :: we are now at : namespaces/test/dev.cft : 332.20
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04cd94 -- code size = 117 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49m_fibn1[39;49m : definition = 0x00007fa6de04cd94 : disassembly at namespaces/test/dev.cft : 332.20 :
[34;49m ..                                     : [39;49m[33;40m_fibn1[39;49m[34;49m ( n -- TOS ) { n @ 2 < } { n @ } { n -- n @ _fibn1 n -- n @ _fibn1 + } ifElse ;  .. [39;49m[32;49m
0x7fa6de04cd94    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04cd98    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04cd9c    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..               : _fibn1 ( n -- TOS ) { [39;49m[33;40mn[39;49m[34;49m @ 2 < } { n @ } { n -- n @ _fibn1 n -- n @ _fibn1 + } ifElse ;  .. [39;49m[32;49m
0x7fa6de04cda3    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..         : _fibn1 ( n -- TOS ) { n @ 2 [39;49m[33;40m<[39;49m[34;49m } { n @ } { n -- n @ _fibn1 n -- n @ _fibn1 + } ifElse ;  .. [39;49m[32;49m
0x7fa6de04cda7    4883f802                cmp rax, 0x2                                           [39;49m[32;49m
0x7fa6de04cdab    7d10                    jge 0xde04cdbd                                         [39;49m
[34;49m ..   : _fibn1 ( n -- TOS ) { n @ 2 < } { [39;49m[33;40mn[39;49m[34;49m @ } { n -- n @ _fibn1 n -- n @ _fibn1 + } ifElse ;  .. [39;49m[32;49m
0x7fa6de04cdad    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04cdb1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04cdb5    498906                  mov [r14], rax                                         [39;49m
[34;49m  : _fibn1 ( n -- TOS ) { n @ 2 < } { n @ [39;49m[33;40m}[39;49m[34;49m { n -- n @ _fibn1 n -- n @ _fibn1 + } ifElse ;  .. [39;49m[32;49m
0x7fa6de04cdb8    e93d000000              jmp 0x7fa6de04cdfa         	< User.[34;49m_fibn1[39;49m+102 >[39;49m
[34;49m ..  ( n -- TOS ) { n @ 2 < } { n @ } { n [39;49m[33;40m--[39;49m[34;49m n @ _fibn1 n -- n @ _fibn1 + } ifElse ; [39;49m[32;49m
0x7fa6de04cdbd    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m .. n -- TOS ) { n @ 2 < } { n @ } { n -- [39;49m[33;40mn[39;49m[34;49m @ _fibn1 n -- n @ _fibn1 + } ifElse ; [39;49m[32;49m
0x7fa6de04cdc1    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04cdc5    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04cdc9    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  TOS ) { n @ 2 < } { n @ } { n -- n @ [39;49m[33;40m_fibn1[39;49m[34;49m n -- n @ _fibn1 + } ifElse ; [39;49m[32;49m
0x7fa6de04cdcc    e8c3ffffff              call 0x7fa6de04cd94        	< User.[34;49m_fibn1[39;49m : 0x00007fa6de04cd94 >[39;49m
[34;49m .. n @ 2 < } { n @ } { n -- n @ _fibn1 n [39;49m[33;40m--[39;49m[34;49m n @ _fibn1 + } ifElse ; [39;49m[32;49m
0x7fa6de04cdd1    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  2 < } { n @ } { n -- n @ _fibn1 n -- [39;49m[33;40mn[39;49m[34;49m @ _fibn1 + } ifElse ; [39;49m[32;49m
0x7fa6de04cdd5    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04cdd9    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04cddd    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  } { n @ } { n -- n @ _fibn1 n -- n @ [39;49m[33;40m_fibn1[39;49m[34;49m + } ifElse ; [39;49m[32;49m
0x7fa6de04cde0    e8afffffff              call 0x7fa6de04cd94        	< User.[34;49m_fibn1[39;49m : 0x00007fa6de04cd94 >[39;49m[32;49m
0x7fa6de04cde5    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04cde8    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04cdec    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. @ } { n -- n @ _fibn1 n -- n @ _fibn1 [39;49m[33;40m+[39;49m[34;49m } ifElse ; [39;49m[32;49m
0x7fa6de04cdf0    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de04cdf3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04cdf7    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04cdfa    498b06                  mov rax, [r14]                                         [39;49m
[34;49m .. n @ _fibn1 n -- n @ _fibn1 + } ifElse [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de04cdfd    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04ce01    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04ce05    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04ce08    c3                      ret                                                    [39;49m
Word_Disassemble : word - '_fibn1' :: codeSize = 116
Word : 0x00007fa6dd08e9c0 :: Compiled at : 0x00007fa6de04cd94
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 332.20 <::
 6765 6765
 =============================
User.[34;49m_fib2[39;49m <:> cfrTil compiled word
SourceCode for User.[34;49m_fib2[39;49m :> 
[34;49m: _fib2 dup 2 < ?< >:< dup -- _fib2 swap 2 - _fib2 + >; ; [39;49m
Source code file location of [34;49m_fib2[39;49m : "namespaces/test/dev.cft" : 344.58 :: we are now at : namespaces/test/dev.cft : 345.19
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04cf54 -- code size = 143 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49m_fib2[39;49m : definition = 0x00007fa6de04cf54 : disassembly at namespaces/test/dev.cft : 345.19 :
[34;49m ..                               : _fib2 [39;49m[33;40mdup[39;49m[34;49m 2 < ?< >:< dup -- _fib2 swap 2 - _fib2 + >; ;  .. [39;49m[32;49m
0x7fa6de04cf54    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04cf57    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04cf5b    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                           : _fib2 dup [39;49m[33;40m2[39;49m[34;49m < ?< >:< dup -- _fib2 swap 2 - _fib2 + >; ;  .. [39;49m[32;49m
0x7fa6de04cf5e    48b80200000000000000    mov rax, 0x2                                           [39;49m[32;49m
0x7fa6de04cf68    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de04cf6b    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04cf6e    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..                         : _fib2 dup 2 [39;49m[33;40m<[39;49m[34;49m ?< >:< dup -- _fib2 swap 2 - _fib2 + >; ;  .. [39;49m[32;49m
0x7fa6de04cf72    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fa6de04cf75    7d05                    jge 0xde04cf7c                                         [39;49m
[34;49m ..                    : _fib2 dup 2 < ?< [39;49m[33;40m>:<[39;49m[34;49m dup -- _fib2 swap 2 - _fib2 + >; ;  .. [39;49m[32;49m
0x7fa6de04cf77    e966000000              jmp 0x7fa6de04cfe2         	< User.[34;49m_fib2[39;49m+142 >[39;49m
[34;49m ..                : _fib2 dup 2 < ?< >:< [39;49m[33;40mdup[39;49m[34;49m -- _fib2 swap 2 - _fib2 + >; ;  .. [39;49m[32;49m
0x7fa6de04cf7c    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04cf7f    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..                       : _fib2 dup 2 < [39;49m[33;40m?<[39;49m[34;49m >:< dup -- _fib2 swap 2 - _fib2 + >; ;  .. [39;49m[32;49m
0x7fa6de04cf83    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04cf86    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04cf89    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..            : _fib2 dup 2 < ?< >:< dup [39;49m[33;40m--[39;49m[34;49m _fib2 swap 2 - _fib2 + >; ;  .. [39;49m[32;49m
0x7fa6de04cf8d    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fa6de04cf90    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04cf94    498906                  mov [r14], rax                                         [39;49m
[34;49m ..         : _fib2 dup 2 < ?< >:< dup -- [39;49m[33;40m_fib2[39;49m[34;49m swap 2 - _fib2 + >; ;  .. [39;49m[32;49m
0x7fa6de04cf97    e8b8ffffff              call 0x7fa6de04cf54        	< User.[34;49m_fib2[39;49m : 0x00007fa6de04cf54 >[39;49m
[34;49m ..   : _fib2 dup 2 < ?< >:< dup -- _fib2 [39;49m[33;40mswap[39;49m[34;49m 2 - _fib2 + >; ;  .. [39;49m[32;49m
0x7fa6de04cf9c    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04cf9f    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04cfa3    49894ef8                mov [r14-0x8], rcx                                     [39;49m[32;49m
0x7fa6de04cfa7    498906                  mov [r14], rax                                         [39;49m
[34;49m : _fib2 dup 2 < ?< >:< dup -- _fib2 swap [39;49m[33;40m2[39;49m[34;49m - _fib2 + >; ;  .. [39;49m[32;49m
0x7fa6de04cfaa    48b80200000000000000    mov rax, 0x2                                           [39;49m[32;49m
0x7fa6de04cfb4    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de04cfb7    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04cfba    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. b2 dup 2 < ?< >:< dup -- _fib2 swap 2 [39;49m[33;40m-[39;49m[34;49m _fib2 + >; ; [39;49m[32;49m
0x7fa6de04cfbe    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fa6de04cfc1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04cfc5    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  dup 2 < ?< >:< dup -- _fib2 swap 2 - [39;49m[33;40m_fib2[39;49m[34;49m + >; ; [39;49m[32;49m
0x7fa6de04cfc8    e887ffffff              call 0x7fa6de04cf54        	< User.[34;49m_fib2[39;49m : 0x00007fa6de04cf54 >[39;49m[32;49m
0x7fa6de04cfcd    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04cfd0    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04cfd4    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  < ?< >:< dup -- _fib2 swap 2 - _fib2 [39;49m[33;40m+[39;49m[34;49m >; ; [39;49m[32;49m
0x7fa6de04cfd8    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de04cfdb    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04cfdf    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  >:< dup -- _fib2 swap 2 - _fib2 + >; [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de04cfe2    c3                      ret                                                    [39;49m
Word_Disassemble : word - '_fib2' :: codeSize = 142
Word : 0x00007fa6dd096d70 :: Compiled at : 0x00007fa6de04cf54
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 345.19 <::

 6765
 =============================
User.[34;49m_fib3[39;49m <:> cfrTil compiled word
SourceCode for User.[34;49m_fib3[39;49m :> 
[34;49m: _fib3 dup 2 < ?< >:< dup -- _fib3 swap 2 - _fib3 + >; ; [39;49m
Source code file location of [34;49m_fib3[39;49m : "namespaces/test/dev.cft" : 347.8 :: we are now at : namespaces/test/dev.cft : 353.19
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04cff7 -- code size = 143 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49m_fib3[39;49m : definition = 0x00007fa6de04cff7 : disassembly at namespaces/test/dev.cft : 353.19 :
[34;49m ..                              : _fib3  [39;49m[33;40mdup[39;49m[34;49m 2 <  ?< >:<  dup -- _fib3 swap 2 - _fib3 +  >;  ;  .. [39;49m[32;49m
0x7fa6de04cff7    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04cffa    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04cffe    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                          : _fib3  dup [39;49m[33;40m2[39;49m[34;49m <  ?< >:<  dup -- _fib3 swap 2 - _fib3 +  >;  ;  .. [39;49m[32;49m
0x7fa6de04d001    48b80200000000000000    mov rax, 0x2                                           [39;49m[32;49m
0x7fa6de04d00b    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de04d00e    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04d011    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..                        : _fib3  dup 2 [39;49m[33;40m<[39;49m[34;49m  ?< >:<  dup -- _fib3 swap 2 - _fib3 +  >;  ;  .. [39;49m[32;49m
0x7fa6de04d015    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fa6de04d018    7d05                    jge 0xde04d01f                                         [39;49m
[34;49m ..                  : _fib3  dup 2 <  ?< [39;49m[33;40m>:<[39;49m[34;49m  dup -- _fib3 swap 2 - _fib3 +  >;  ;  .. [39;49m[32;49m
0x7fa6de04d01a    e966000000              jmp 0x7fa6de04d085         	< User.[34;49m_fib3[39;49m+142 >[39;49m
[34;49m ..             : _fib3  dup 2 <  ?< >:<  [39;49m[33;40mdup[39;49m[34;49m -- _fib3 swap 2 - _fib3 +  >;  ;  .. [39;49m[32;49m
0x7fa6de04d01f    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04d022    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..                     : _fib3  dup 2 <  [39;49m[33;40m?<[39;49m[34;49m >:<  dup -- _fib3 swap 2 - _fib3 +  >;  ;  .. [39;49m[32;49m
0x7fa6de04d026    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04d029    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04d02c    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..         : _fib3  dup 2 <  ?< >:<  dup [39;49m[33;40m--[39;49m[34;49m _fib3 swap 2 - _fib3 +  >;  ;  .. [39;49m[32;49m
0x7fa6de04d030    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fa6de04d033    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04d037    498906                  mov [r14], rax                                         [39;49m
[34;49m ..      : _fib3  dup 2 <  ?< >:<  dup -- [39;49m[33;40m_fib3[39;49m[34;49m swap 2 - _fib3 +  >;  ;  .. [39;49m[32;49m
0x7fa6de04d03a    e8b8ffffff              call 0x7fa6de04cff7        	< User.[34;49m_fib3[39;49m : 0x00007fa6de04cff7 >[39;49m
[34;49m   : _fib3  dup 2 <  ?< >:<  dup -- _fib3 [39;49m[33;40mswap[39;49m[34;49m 2 - _fib3 +  >;  ;  .. [39;49m[32;49m
0x7fa6de04d03f    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04d042    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04d046    49894ef8                mov [r14-0x8], rcx                                     [39;49m[32;49m
0x7fa6de04d04a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 3  dup 2 <  ?< >:<  dup -- _fib3 swap [39;49m[33;40m2[39;49m[34;49m - _fib3 +  >;  ; [39;49m[32;49m
0x7fa6de04d04d    48b80200000000000000    mov rax, 0x2                                           [39;49m[32;49m
0x7fa6de04d057    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de04d05a    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04d05d    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  dup 2 <  ?< >:<  dup -- _fib3 swap 2 [39;49m[33;40m-[39;49m[34;49m _fib3 +  >;  ; [39;49m[32;49m
0x7fa6de04d061    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fa6de04d064    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04d068    498906                  mov [r14], rax                                         [39;49m
[34;49m .. up 2 <  ?< >:<  dup -- _fib3 swap 2 - [39;49m[33;40m_fib3[39;49m[34;49m +  >;  ; [39;49m[32;49m
0x7fa6de04d06b    e887ffffff              call 0x7fa6de04cff7        	< User.[34;49m_fib3[39;49m : 0x00007fa6de04cff7 >[39;49m[32;49m
0x7fa6de04d070    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04d073    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04d077    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..   ?< >:<  dup -- _fib3 swap 2 - _fib3 [39;49m[33;40m+[39;49m[34;49m  >;  ; [39;49m[32;49m
0x7fa6de04d07b    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de04d07e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04d082    498906                  mov [r14], rax                                         [39;49m
[34;49m .. <  dup -- _fib3 swap 2 - _fib3 +  >;  [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de04d085    c3                      ret                                                    [39;49m
Word_Disassemble : word - '_fib3' :: codeSize = 142
Word : 0x00007fa6dd098350 :: Compiled at : 0x00007fa6de04cff7
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 353.19 <::
 6765
 =============================
User.[34;49m_fib4[39;49m <:> cfrTil compiled word
SourceCode for User.[34;49m_fib4[39;49m :> 
[34;49m: _fib4 { dup 2 >= } { dup -- _fib4 swap 2 - _fib4 + } if2 ; [39;49m
Source code file location of [34;49m_fib4[39;49m : "namespaces/test/dev.cft" : 355.8 :: we are now at : namespaces/test/dev.cft : 361.19
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04d09a -- code size = 138 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49m_fib4[39;49m : definition = 0x00007fa6de04d09a : disassembly at namespaces/test/dev.cft : 361.19 :
[34;49m ..                            : _fib4  { [39;49m[33;40mdup[39;49m[34;49m 2 >= } {  dup -- _fib4 swap 2 - _fib4 +  } if2  ;  .. [39;49m[32;49m
0x7fa6de04d09a    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04d09d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04d0a1    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                        : _fib4  { dup [39;49m[33;40m2[39;49m[34;49m >= } {  dup -- _fib4 swap 2 - _fib4 +  } if2  ;  .. [39;49m[32;49m
0x7fa6de04d0a4    48b80200000000000000    mov rax, 0x2                                           [39;49m[32;49m
0x7fa6de04d0ae    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de04d0b1    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04d0b4    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..                      : _fib4  { dup 2 [39;49m[33;40m>=[39;49m[34;49m } {  dup -- _fib4 swap 2 - _fib4 +  } if2  ;  .. [39;49m[32;49m
0x7fa6de04d0b8    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fa6de04d0bb    7c66                    jl 0xde04d123                                          [39;49m
[34;49m ..              : _fib4  { dup 2 >= } {  [39;49m[33;40mdup[39;49m[34;49m -- _fib4 swap 2 - _fib4 +  } if2  ;  .. [39;49m[32;49m
0x7fa6de04d0bd    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04d0c0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04d0c4    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04d0c7    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04d0ca    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..          : _fib4  { dup 2 >= } {  dup [39;49m[33;40m--[39;49m[34;49m _fib4 swap 2 - _fib4 +  } if2  ;  .. [39;49m[32;49m
0x7fa6de04d0ce    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fa6de04d0d1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04d0d5    498906                  mov [r14], rax                                         [39;49m
[34;49m ..       : _fib4  { dup 2 >= } {  dup -- [39;49m[33;40m_fib4[39;49m[34;49m swap 2 - _fib4 +  } if2  ;  .. [39;49m[32;49m
0x7fa6de04d0d8    e8bdffffff              call 0x7fa6de04d09a        	< User.[34;49m_fib4[39;49m : 0x00007fa6de04d09a >[39;49m
[34;49m .. : _fib4  { dup 2 >= } {  dup -- _fib4 [39;49m[33;40mswap[39;49m[34;49m 2 - _fib4 +  } if2  ;  .. [39;49m[32;49m
0x7fa6de04d0dd    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04d0e0    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04d0e4    49894ef8                mov [r14-0x8], rcx                                     [39;49m[32;49m
0x7fa6de04d0e8    498906                  mov [r14], rax                                         [39;49m
[34;49m .. b4  { dup 2 >= } {  dup -- _fib4 swap [39;49m[33;40m2[39;49m[34;49m - _fib4 +  } if2  ; [39;49m[32;49m
0x7fa6de04d0eb    48b80200000000000000    mov rax, 0x2                                           [39;49m[32;49m
0x7fa6de04d0f5    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de04d0f8    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04d0fb    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..   { dup 2 >= } {  dup -- _fib4 swap 2 [39;49m[33;40m-[39;49m[34;49m _fib4 +  } if2  ; [39;49m[32;49m
0x7fa6de04d0ff    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fa6de04d102    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04d106    498906                  mov [r14], rax                                         [39;49m
[34;49m .. { dup 2 >= } {  dup -- _fib4 swap 2 - [39;49m[33;40m_fib4[39;49m[34;49m +  } if2  ; [39;49m[32;49m
0x7fa6de04d109    e88cffffff              call 0x7fa6de04d09a        	< User.[34;49m_fib4[39;49m : 0x00007fa6de04d09a >[39;49m[32;49m
0x7fa6de04d10e    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04d111    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04d115    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. 2 >= } {  dup -- _fib4 swap 2 - _fib4 [39;49m[33;40m+[39;49m[34;49m  } if2  ; [39;49m[32;49m
0x7fa6de04d119    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de04d11c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04d120    498906                  mov [r14], rax                                         [39;49m
[34;49m .. dup -- _fib4 swap 2 - _fib4 +  } if2  [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de04d123    c3                      ret                                                    [39;49m
Word_Disassemble : word - '_fib4' :: codeSize = 137
Word : 0x00007fa6dd099930 :: Compiled at : 0x00007fa6de04d09a
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 361.19 <::
 6765
 =============================
C.[34;49mcfib2_O3[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfib2_O3[39;49m :> 
C Primitive
 -----------------------------
Word :: C.[34;49mcfib2_O3[39;49m : definition = 0x0000561dbfef7390 : disassembly at namespaces/test/dev.cft : 370.21 :[32;49m
0x561dbfef7394    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x561dbfef7397    4c89f7                  mov rdi, r14                                           [39;49m[32;49m
0x561dbfef739a    4885c0                  test rax, rax                                          [39;49m[32;49m
0x561dbfef739d    7429                    jz 0xbfef73c8                                          [39;49m[32;49m
0x561dbfef739f    be01000000              mov esi, 0x1                                           [39;49m[32;49m
0x561dbfef73a4    31d2                    xor edx, edx                                           [39;49m[32;49m
0x561dbfef73a6    eb0b                    jmp 0x561dbfef73b3         	< C compiler code >        [39;49m[32;49m
0x561dbfef73a8    0f1f840000000000        nop [rax+rax]                                          [39;49m[32;49m
0x561dbfef73b0    4889ca                  mov rdx, rcx                                           [39;49m[32;49m
0x561dbfef73b3    488d0c32                lea rcx, [rdx+rsi]                                     [39;49m[32;49m
0x561dbfef73b7    4889d6                  mov rsi, rdx                                           [39;49m[32;49m
0x561dbfef73ba    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x561dbfef73be    75f0                    jnz 0xbfef73b0                                         [39;49m[32;49m
0x561dbfef73c0    48890f                  mov [rdi], rcx                                         [39;49m[32;49m
0x561dbfef73c3    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfib2_O3' :: codeSize = 48
Word : 0x00007fa6de0260b8 :: Compiled at : 0x0000561dbfef7390
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 370.21 <::

 0x00007fa6ddf73220
 The fibonacci sequence 15 :
 C -O3 :  610
Timer [ 1 ] : elapsed time = 0.000006634 seconds
 no locals fib  :  610
Timer [ 1 ] : elapsed time = 0.000009816 seconds
 locals fib1    :  610
Timer [ 1 ] : elapsed time = 0.000016788 seconds
 no locals fib2 :  610
Timer [ 1 ] : elapsed time = 0.000012160 seconds
 no locals fib3 :  610
Timer [ 1 ] : elapsed time = 0.000010025 seconds
 fibPTC?        :  610
Timer [ 1 ] : elapsed time = 0.000004167 seconds
 fibPTC2?        :  610
Timer [ 1 ] : elapsed time = 0.000003734 seconds
 0x00007fa6ddf73220
 The fibonacci sequence 30 :
 C -O3 :  832040
Timer [ 1 ] : elapsed time = 0.002755679 seconds
 no locals fib  :  832040
Timer [ 1 ] : elapsed time = 0.007813968 seconds
 locals fib1    :  832040
Timer [ 1 ] : elapsed time = 0.007267883 seconds
 no locals fib2 :  832040
Timer [ 1 ] : elapsed time = 0.009312818 seconds
 no locals fib3 :  832040
Timer [ 1 ] : elapsed time = 0.007572567 seconds
 fibPTC?        :  832040
Timer [ 1 ] : elapsed time = 0.000003429 seconds
 fibPTC2?        :  832040
Timer [ 1 ] : elapsed time = 0.000003427 seconds
 =============================
Interpreter.[34;49mtfib3[39;49m <:> cfrTil compiled word
SourceCode for Interpreter.[34;49mtfib3[39;49m :> 
[34;49m: tfib3 ( n | m ) "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ; [39;49m
Source code file location of [34;49mtfib3[39;49m : "namespaces/test/dev.cft" : 420.19 :: we are now at : namespaces/test/dev.cft : 426.19
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde04e8cb -- code size = 940 bytes
TypeSignature : 
 -----------------------------
Word :: Interpreter.[34;49mtfib3[39;49m : definition = 0x00007fa6de04e8cb : disassembly at namespaces/test/dev.cft : 426.19 :
[34;49m ..                                     : [39;49m[33;40mtfib3[39;49m[34;49m ( n | m )  "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 .. [39;49m[32;49m
0x7fa6de04e8cb    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04e8cf    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04e8d3    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                      : tfib3 ( n | m )[39;49m[33;40m"Cfib2_O3       : "[39;49m[34;49m1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "lo .. [39;49m[32;49m
0x7fa6de04e8da    48b8f124f6dca67f0000    mov rax, 0x7fa6dcf624f1    	< string : '[34;49mCfib2_O3       : [39;49m' >[39;49m[32;49m
0x7fa6de04e8e4    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04e8e8    498906                  mov [r14], rax                                         [39;49m
[34;49m ..      : tfib3 ( n | m )  "Cfib2_O3 : " [39;49m[33;40mps[39;49m[34;49m 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " .. [39;49m[32;49m
0x7fa6de04e8eb    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de04e8f5    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m ..   : tfib3 ( n | m )  "Cfib2_O3 : " ps [39;49m[33;40m1[39;49m[34;49m ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps .. [39;49m[32;49m
0x7fa6de04e8f8    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de04e902    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04e906    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : tfib3 ( n | m )  "Cfib2_O3 : " ps 1 [39;49m[33;40mti[39;49m[34;49m m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 .. [39;49m[32;49m
0x7fa6de04e909    49b994a503dea67f0000    mov r9, 0x7fa6de03a594                                 [39;49m[32;49m
0x7fa6de04e913    49ffd1                  call r9                    	< System.[34;49mti[39;49m : 0x00007fa6de03a594 >[39;49m
[34;49m : tfib3 ( n | m )  "Cfib2_O3 : " ps 1 ti [39;49m[33;40mm[39;49m[34;49m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti .. [39;49m[32;49m
0x7fa6de04e916    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m .. b3 ( n | m )  "Cfib2_O3 : " ps 1 ti m [39;49m[33;40m1[39;49m[34;49m = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m .. [39;49m[32;49m
0x7fa6de04e91a    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m ..  ( n | m )  "Cfib2_O3 : " ps 1 ti m 1 [39;49m[33;40m=[39;49m[34;49m { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 .. [39;49m[32;49m
0x7fa6de04e924    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  | m )  "Cfib2_O3 : " ps 1 ti m 1 = { [39;49m[33;40mm[39;49m[34;49m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { .. [39;49m[32;49m
0x7fa6de04e927    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  )  "Cfib2_O3 : " ps 1 ti m 1 = { m @ [39;49m[33;40mn[39;49m[34;49m @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ .. [39;49m[32;49m
0x7fa6de04e92b    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ [39;49m[33;40m<=[39;49m[34;49m } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ .. [39;49m[32;49m
0x7fa6de04e92f    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fa6de04e932    0f8f35000000            jg 0x7fa6de04e96d          	< Interpreter.[34;49mtfib3[39;49m+162 >[39;49m
[34;49m .. O3 : " ps 1 ti m 1 = { m @ n @ <= } { [39;49m[33;40mm[39;49m[34;49m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { .. [39;49m[32;49m
0x7fa6de04e938    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de04e93c    4983c608                add r14, 0x8                                           [39;49m
[34;49m .. ib2_O3 : " ps 1 ti m 1 = { m @ n @ <= [39;49m[33;40m}[39;49m[34;49m { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= .. [39;49m[32;49m
0x7fa6de04e940    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  " ps 1 ti m 1 = { m @ n @ <= } { m @ [39;49m[33;40mcfib2_O3[39;49m[34;49m p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ .. [39;49m[32;49m
0x7fa6de04e943    49b89073efbf1d560000    mov r8, 0x561dbfef7390                                 [39;49m[32;49m
0x7fa6de04e94d    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04e957    49ffd1                  call r9                    	< C.[34;49mcfib2_O3[39;49m : 0x0000561dbfef7390 >[39;49m
[34;49m .. i m 1 = { m @ n @ <= } { m @ cfib2_O3 [39;49m[33;40mp[39;49m[34;49m m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC?  .. [39;49m[32;49m
0x7fa6de04e95a    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de04e964    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m
[34;49m .. 1 = { m @ n @ <= } { m @ cfib2_O3 p m [39;49m[33;40m++[39;49m[34;49m } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p m  .. [39;49m[32;49m
0x7fa6de04e967    49ff4708                inc qword [r15+0x8]                                    [39;49m
[34;49m ..  { m @ n @ <= } { m @ cfib2_O3 p m ++ [39;49m[33;40m}[39;49m[34;49m while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++  .. [39;49m[32;49m
0x7fa6de04e96b    ebba                    jmp 0x7fa6de04e927         	< Interpreter.[34;49mtfib3[39;49m+92 >[39;49m
[34;49m ..  @ <= } { m @ cfib2_O3 p m ++ } while [39;49m[33;40m1[39;49m[34;49m time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while  .. [39;49m[32;49m
0x7fa6de04e96d    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de04e977    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04e97b    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  <= } { m @ cfib2_O3 p m ++ } while 1 [39;49m[33;40mtime[39;49m[34;49m nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1  .. [39;49m[32;49m
0x7fa6de04e97e    49b8612cefbf1d560000    mov r8, 0x561dbfef2c61                                 [39;49m[32;49m
0x7fa6de04e988    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04e992    49ffd1                  call r9                    	< System.[34;49mtime[39;49m : 0x0000561dbfef2c61 >[39;49m
[34;49m ..  { m @ cfib2_O3 p m ++ } while 1 time [39;49m[33;40mnl[39;49m[34;49m nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time  .. [39;49m[32;49m
0x7fa6de04e995    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de04e99f    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04e9a9    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m .. m @ cfib2_O3 p m ++ } while 1 time nl [39;49m[33;40mnl[39;49m[34;49m "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl  .. [39;49m[32;49m
0x7fa6de04e9ac    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de04e9b6    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04e9c0    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m ..  cfib2_O3 p m ++ } while 1 time nl nl [39;49m[33;40m"locals fibPTC? : "[39;49m[34;49m ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl  .. [39;49m[32;49m
0x7fa6de04e9c3    48b83125f6dca67f0000    mov rax, 0x7fa6dcf62531    	< string : '[34;49mlocals fibPTC? : [39;49m' >[39;49m[32;49m
0x7fa6de04e9cd    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04e9d1    498906                  mov [r14], rax                                         [39;49m
[34;49m .. hile 1 time nl nl "locals fibPTC? : " [39;49m[33;40mps[39;49m[34;49m 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " .. [39;49m[32;49m
0x7fa6de04e9d4    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de04e9de    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m .. e 1 time nl nl "locals fibPTC? : " ps [39;49m[33;40m1[39;49m[34;49m ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps .. [39;49m[32;49m
0x7fa6de04e9e1    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de04e9eb    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04e9ef    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 1 time nl nl "locals fibPTC? : " ps 1 [39;49m[33;40mti[39;49m[34;49m m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 .. [39;49m[32;49m
0x7fa6de04e9f2    49b994a503dea67f0000    mov r9, 0x7fa6de03a594                                 [39;49m[32;49m
0x7fa6de04e9fc    49ffd1                  call r9                    	< System.[34;49mti[39;49m : 0x00007fa6de03a594 >[39;49m
[34;49m .. ime nl nl "locals fibPTC? : " ps 1 ti [39;49m[33;40mm[39;49m[34;49m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti .. [39;49m[32;49m
0x7fa6de04e9ff    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m .. e nl nl "locals fibPTC? : " ps 1 ti m [39;49m[33;40m1[39;49m[34;49m = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m .. [39;49m[32;49m
0x7fa6de04ea03    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. nl nl "locals fibPTC? : " ps 1 ti m 1 [39;49m[33;40m=[39;49m[34;49m { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 .. [39;49m[32;49m
0x7fa6de04ea0d    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. l "locals fibPTC? : " ps 1 ti m 1 = { [39;49m[33;40mm[39;49m[34;49m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { .. [39;49m[32;49m
0x7fa6de04ea10    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ocals fibPTC? : " ps 1 ti m 1 = { m @ [39;49m[33;40mn[39;49m[34;49m @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ .. [39;49m[32;49m
0x7fa6de04ea14    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. s fibPTC? : " ps 1 ti m 1 = { m @ n @ [39;49m[33;40m<=[39;49m[34;49m } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ .. [39;49m[32;49m
0x7fa6de04ea18    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fa6de04ea1b    0f8f2b000000            jg 0x7fa6de04ea4c          	< Interpreter.[34;49mtfib3[39;49m+385 >[39;49m
[34;49m .. C? : " ps 1 ti m 1 = { m @ n @ <= } { [39;49m[33;40mm[39;49m[34;49m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { .. [39;49m[32;49m
0x7fa6de04ea21    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de04ea25    4983c608                add r14, 0x8                                           [39;49m
[34;49m .. ibPTC? : " ps 1 ti m 1 = { m @ n @ <= [39;49m[33;40m}[39;49m[34;49m { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= .. [39;49m[32;49m
0x7fa6de04ea29    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  " ps 1 ti m 1 = { m @ n @ <= } { m @ [39;49m[33;40mfibPTC?[39;49m[34;49m p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ .. [39;49m[32;49m
0x7fa6de04ea2c    49b9f18c04dea67f0000    mov r9, 0x7fa6de048cf1                                 [39;49m[32;49m
0x7fa6de04ea36    49ffd1                  call r9                    	< C.[34;49mfibPTC?[39;49m : 0x00007fa6de048cf1 >[39;49m
[34;49m .. ti m 1 = { m @ n @ <= } { m @ fibPTC? [39;49m[33;40mp[39;49m[34;49m m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2 .. [39;49m[32;49m
0x7fa6de04ea39    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de04ea43    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m
[34;49m ..  1 = { m @ n @ <= } { m @ fibPTC? p m [39;49m[33;40m++[39;49m[34;49m } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2? p  .. [39;49m[32;49m
0x7fa6de04ea46    49ff4708                inc qword [r15+0x8]                                    [39;49m
[34;49m .. = { m @ n @ <= } { m @ fibPTC? p m ++ [39;49m[33;40m}[39;49m[34;49m while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m + .. [39;49m[32;49m
0x7fa6de04ea4a    ebc4                    jmp 0x7fa6de04ea10         	< Interpreter.[34;49mtfib3[39;49m+325 >[39;49m
[34;49m .. n @ <= } { m @ fibPTC? p m ++ } while [39;49m[33;40m1[39;49m[34;49m time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } whil .. [39;49m[32;49m
0x7fa6de04ea4c    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de04ea56    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04ea5a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ <= } { m @ fibPTC? p m ++ } while 1 [39;49m[33;40mtime[39;49m[34;49m nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while  .. [39;49m[32;49m
0x7fa6de04ea5d    49b8612cefbf1d560000    mov r8, 0x561dbfef2c61                                 [39;49m[32;49m
0x7fa6de04ea67    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04ea71    49ffd1                  call r9                    	< System.[34;49mtime[39;49m : 0x0000561dbfef2c61 >[39;49m
[34;49m .. } { m @ fibPTC? p m ++ } while 1 time [39;49m[33;40mnl[39;49m[34;49m nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 tim .. [39;49m[32;49m
0x7fa6de04ea74    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de04ea7e    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04ea88    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m ..  m @ fibPTC? p m ++ } while 1 time nl [39;49m[33;40mnl[39;49m[34;49m "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time n .. [39;49m[32;49m
0x7fa6de04ea8b    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de04ea95    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04ea9f    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m .. @ fibPTC? p m ++ } while 1 time nl nl [39;49m[33;40m"locals fibPTC2? : "[39;49m[34;49m ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl n .. [39;49m[32;49m
0x7fa6de04eaa2    48b87225f6dca67f0000    mov rax, 0x7fa6dcf62572    	< string : '[34;49mlocals fibPTC2? : [39;49m' >[39;49m[32;49m
0x7fa6de04eaac    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04eab0    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ile 1 time nl nl "locals fibPTC2? : " [39;49m[33;40mps[39;49m[34;49m 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1  .. [39;49m[32;49m
0x7fa6de04eab3    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de04eabd    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m ..  1 time nl nl "locals fibPTC2? : " ps [39;49m[33;40m1[39;49m[34;49m ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti  .. [39;49m[32;49m
0x7fa6de04eac0    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de04eaca    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04eace    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  time nl nl "locals fibPTC2? : " ps 1 [39;49m[33;40mti[39;49m[34;49m m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m  .. [39;49m[32;49m
0x7fa6de04ead1    49b994a503dea67f0000    mov r9, 0x7fa6de03a594                                 [39;49m[32;49m
0x7fa6de04eadb    49ffd1                  call r9                    	< System.[34;49mti[39;49m : 0x00007fa6de03a594 >[39;49m
[34;49m .. me nl nl "locals fibPTC2? : " ps 1 ti [39;49m[33;40mm[39;49m[34;49m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = .. [39;49m[32;49m
0x7fa6de04eade    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..  nl nl "locals fibPTC2? : " ps 1 ti m [39;49m[33;40m1[39;49m[34;49m = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { .. [39;49m[32;49m
0x7fa6de04eae2    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m .. l nl "locals fibPTC2? : " ps 1 ti m 1 [39;49m[33;40m=[39;49m[34;49m { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m .. [39;49m[32;49m
0x7fa6de04eaec    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  "locals fibPTC2? : " ps 1 ti m 1 = { [39;49m[33;40mm[39;49m[34;49m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n .. [39;49m[32;49m
0x7fa6de04eaef    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. cals fibPTC2? : " ps 1 ti m 1 = { m @ [39;49m[33;40mn[39;49m[34;49m @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ < .. [39;49m[32;49m
0x7fa6de04eaf3    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..  fibPTC2? : " ps 1 ti m 1 = { m @ n @ [39;49m[33;40m<=[39;49m[34;49m } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= }  .. [39;49m[32;49m
0x7fa6de04eaf7    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fa6de04eafa    0f8f2b000000            jg 0x7fa6de04eb2b          	< Interpreter.[34;49mtfib3[39;49m+608 >[39;49m
[34;49m .. 2? : " ps 1 ti m 1 = { m @ n @ <= } { [39;49m[33;40mm[39;49m[34;49m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ c .. [39;49m[32;49m
0x7fa6de04eb00    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de04eb04    4983c608                add r14, 0x8                                           [39;49m
[34;49m .. bPTC2? : " ps 1 ti m 1 = { m @ n @ <= [39;49m[33;40m}[39;49m[34;49m { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m .. [39;49m[32;49m
0x7fa6de04eb08    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  " ps 1 ti m 1 = { m @ n @ <= } { m @ [39;49m[33;40mfibPTC2?[39;49m[34;49m p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2 .. [39;49m[32;49m
0x7fa6de04eb0b    49b93ccd04dea67f0000    mov r9, 0x7fa6de04cd3c                                 [39;49m[32;49m
0x7fa6de04eb15    49ffd1                  call r9                    	< C_Syntax.[34;49mfibPTC2?[39;49m : 0x00007fa6de04cd3c >[39;49m
[34;49m .. i m 1 = { m @ n @ <= } { m @ fibPTC2? [39;49m[33;40mp[39;49m[34;49m m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m + .. [39;49m[32;49m
0x7fa6de04eb18    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de04eb22    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m
[34;49m .. 1 = { m @ n @ <= } { m @ fibPTC2? p m [39;49m[33;40m++[39;49m[34;49m } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ }  .. [39;49m[32;49m
0x7fa6de04eb25    49ff4708                inc qword [r15+0x8]                                    [39;49m
[34;49m ..  { m @ n @ <= } { m @ fibPTC2? p m ++ [39;49m[33;40m}[39;49m[34;49m while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } whi .. [39;49m[32;49m
0x7fa6de04eb29    ebc4                    jmp 0x7fa6de04eaef         	< Interpreter.[34;49mtfib3[39;49m+548 >[39;49m
[34;49m ..  @ <= } { m @ fibPTC2? p m ++ } while [39;49m[33;40m1[39;49m[34;49m time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 tim .. [39;49m[32;49m
0x7fa6de04eb2b    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de04eb35    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04eb39    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  <= } { m @ fibPTC2? p m ++ } while 1 [39;49m[33;40mtime[39;49m[34;49m nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time  .. [39;49m[32;49m
0x7fa6de04eb3c    49b8612cefbf1d560000    mov r8, 0x561dbfef2c61                                 [39;49m[32;49m
0x7fa6de04eb46    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04eb50    49ffd1                  call r9                    	< System.[34;49mtime[39;49m : 0x0000561dbfef2c61 >[39;49m
[34;49m ..  { m @ fibPTC2? p m ++ } while 1 time [39;49m[33;40mnl[39;49m[34;49m nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl .. [39;49m[32;49m
0x7fa6de04eb53    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de04eb5d    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04eb67    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m .. m @ fibPTC2? p m ++ } while 1 time nl [39;49m[33;40mnl[39;49m[34;49m "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fa6de04eb6a    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de04eb74    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04eb7e    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m ..  fibPTC2? p m ++ } while 1 time nl nl [39;49m[33;40m"Cfib2_O3       : "[39;49m[34;49mti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fa6de04eb81    48b8b425f6dca67f0000    mov rax, 0x7fa6dcf625b4    	< string : '[34;49mCfib2_O3       : [39;49m' >[39;49m[32;49m
0x7fa6de04eb8b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04eb8f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ++ } while 1 time nl nl "Cfib2_O3 : " [39;49m[33;40mps[39;49m[34;49m 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fa6de04eb92    49b9c19203dea67f0000    mov r9, 0x7fa6de0392c1                                 [39;49m[32;49m
0x7fa6de04eb9c    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fa6de0392c1 >[39;49m
[34;49m .. } while 1 time nl nl "Cfib2_O3 : " ps [39;49m[33;40m1[39;49m[34;49m ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fa6de04eb9f    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de04eba9    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04ebad    498906                  mov [r14], rax                                         [39;49m
[34;49m .. while 1 time nl nl "Cfib2_O3 : " ps 1 [39;49m[33;40mti[39;49m[34;49m m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fa6de04ebb0    49b994a503dea67f0000    mov r9, 0x7fa6de03a594                                 [39;49m[32;49m
0x7fa6de04ebba    49ffd1                  call r9                    	< System.[34;49mti[39;49m : 0x00007fa6de03a594 >[39;49m
[34;49m .. le 1 time nl nl "Cfib2_O3 : " ps 1 ti [39;49m[33;40mm[39;49m[34;49m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fa6de04ebbd    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..  1 time nl nl "Cfib2_O3 : " ps 1 ti m [39;49m[33;40m1[39;49m[34;49m = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fa6de04ebc1    48b90100000000000000    mov rcx, 0x1                                           [39;49m
[34;49m ..  time nl nl "Cfib2_O3 : " ps 1 ti m 1 [39;49m[33;40m=[39;49m[34;49m { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fa6de04ebcb    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. e nl nl "Cfib2_O3 : " ps 1 ti m 1 = { [39;49m[33;40mm[39;49m[34;49m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fa6de04ebce    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ [39;49m[33;40mn[39;49m[34;49m @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fa6de04ebd2    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ [39;49m[33;40m<=[39;49m[34;49m } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fa6de04ebd6    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fa6de04ebd9    0f8f35000000            jg 0x7fa6de04ec14          	< Interpreter.[34;49mtfib3[39;49m+841 >[39;49m
[34;49m .. O3 : " ps 1 ti m 1 = { m @ n @ <= } { [39;49m[33;40mm[39;49m[34;49m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fa6de04ebdf    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de04ebe3    4983c608                add r14, 0x8                                           [39;49m
[34;49m .. ib2_O3 : " ps 1 ti m 1 = { m @ n @ <= [39;49m[33;40m}[39;49m[34;49m { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fa6de04ebe7    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  " ps 1 ti m 1 = { m @ n @ <= } { m @ [39;49m[33;40mcfib2_O3[39;49m[34;49m p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fa6de04ebea    49b89073efbf1d560000    mov r8, 0x561dbfef7390                                 [39;49m[32;49m
0x7fa6de04ebf4    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04ebfe    49ffd1                  call r9                    	< C.[34;49mcfib2_O3[39;49m : 0x0000561dbfef7390 >[39;49m
[34;49m .. i m 1 = { m @ n @ <= } { m @ cfib2_O3 [39;49m[33;40mp[39;49m[34;49m m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fa6de04ec01    49b9319503dea67f0000    mov r9, 0x7fa6de039531                                 [39;49m[32;49m
0x7fa6de04ec0b    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fa6de039531 >[39;49m
[34;49m .. 1 = { m @ n @ <= } { m @ cfib2_O3 p m [39;49m[33;40m++[39;49m[34;49m } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fa6de04ec0e    49ff4708                inc qword [r15+0x8]                                    [39;49m
[34;49m ..  { m @ n @ <= } { m @ cfib2_O3 p m ++ [39;49m[33;40m}[39;49m[34;49m while 1 time nl nl ;  .. [39;49m[32;49m
0x7fa6de04ec12    ebba                    jmp 0x7fa6de04ebce         	< Interpreter.[34;49mtfib3[39;49m+771 >[39;49m
[34;49m ..  @ <= } { m @ cfib2_O3 p m ++ } while [39;49m[33;40m1[39;49m[34;49m time nl nl ;  .. [39;49m[32;49m
0x7fa6de04ec14    48b80100000000000000    mov rax, 0x1                                           [39;49m[32;49m
0x7fa6de04ec1e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04ec22    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  <= } { m @ cfib2_O3 p m ++ } while 1 [39;49m[33;40mtime[39;49m[34;49m nl nl ;  .. [39;49m[32;49m
0x7fa6de04ec25    49b8612cefbf1d560000    mov r8, 0x561dbfef2c61                                 [39;49m[32;49m
0x7fa6de04ec2f    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04ec39    49ffd1                  call r9                    	< System.[34;49mtime[39;49m : 0x0000561dbfef2c61 >[39;49m
[34;49m ..  { m @ cfib2_O3 p m ++ } while 1 time [39;49m[33;40mnl[39;49m[34;49m nl ;  .. [39;49m[32;49m
0x7fa6de04ec3c    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de04ec46    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04ec50    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m .. m @ cfib2_O3 p m ++ } while 1 time nl [39;49m[33;40mnl[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fa6de04ec53    49b8cb0fefbf1d560000    mov r8, 0x561dbfef0fcb                                 [39;49m[32;49m
0x7fa6de04ec5d    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04ec67    49ffd1                  call r9                    	< Int.[34;49mnl[39;49m : 0x0000561dbfef0fcb >[39;49m
[34;49m ..  cfib2_O3 p m ++ } while 1 time nl nl [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de04ec6a    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04ec6e    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04ec72    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fa6de04ec76    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tfib3' :: codeSize = 939
Word : 0x00007fa6dcfd92b0 :: Compiled at : 0x00007fa6de04e8cb
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 426.19 <::

 The fibonacci sequence:: first : 30 ...
 Cfib_O3         :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.004661876 seconds

 Cfib            :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.004773026 seconds

 Cfib_O3         :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.004621979 seconds

 no locals _fib  :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.012704621 seconds

 locals   _fibn0 :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.013854123 seconds

 locals   _fibn1 :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.016733855 seconds

 locals   _fib1  :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.012804861 seconds

 no locals _fib2 :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.015281011 seconds

 no locals _fib3 :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.012972405 seconds

 no locals _fib4 :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.012860935 seconds

 fibPTC?  :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.000126787 seconds

 fibPTC2?  :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.000110387 seconds

 Cfib_O3        :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.004715252 seconds

 no locals _fib4 :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.012681228 seconds

 locals _fibn1   :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.016604936 seconds

 no locals _fib3 :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.013013696 seconds

 Cfib2_O3       :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229 832040 1346269 2178309 3524578 5702887 9227465 14930352 24157817 39088169 63245986 102334155 165580141 267914296 433494437 701408733 1134903170 1836311903 2971215073 4807526976 7778742049 12586269025 20365011074 32951280099 53316291173 86267571272 139583862445 225851433717 365435296162 591286729879 956722026041 1548008755920 2504730781961 4052739537881 6557470319842 10610209857723 17167680177565 27777890035288 44945570212853 72723460248141 117669030460994 190392490709135 308061521170129 498454011879264 806515533049393 1304969544928657 2111485077978050 3416454622906707 5527939700884757 8944394323791464 14472334024676221 23416728348467685 37889062373143906 61305790721611591 99194853094755497 160500643816367088 259695496911122585 420196140727489673 679891637638612258 1100087778366101931 1779979416004714189 2880067194370816120 4660046610375530309 7540113804746346429
Timer [ 1 ] : elapsed time = 0.000372293 seconds

 locals fibPTC? :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229 832040 1346269 2178309 3524578 5702887 9227465 14930352 24157817 39088169 63245986 102334155 165580141 267914296 433494437 701408733 1134903170 1836311903 2971215073 4807526976 7778742049 12586269025 20365011074 32951280099 53316291173 86267571272 139583862445 225851433717 365435296162 591286729879 956722026041 1548008755920 2504730781961 4052739537881 6557470319842 10610209857723 17167680177565 27777890035288 44945570212853 72723460248141 117669030460994 190392490709135 308061521170129 498454011879264 806515533049393 1304969544928657 2111485077978050 3416454622906707 5527939700884757 8944394323791464 14472334024676221 23416728348467685 37889062373143906 61305790721611591 99194853094755497 160500643816367088 259695496911122585 420196140727489673 679891637638612258 1100087778366101931 1779979416004714189 2880067194370816120 4660046610375530309 7540113804746346429
Timer [ 1 ] : elapsed time = 0.000358610 seconds

 locals fibPTC2? :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229 832040 1346269 2178309 3524578 5702887 9227465 14930352 24157817 39088169 63245986 102334155 165580141 267914296 433494437 701408733 1134903170 1836311903 2971215073 4807526976 7778742049 12586269025 20365011074 32951280099 53316291173 86267571272 139583862445 225851433717 365435296162 591286729879 956722026041 1548008755920 2504730781961 4052739537881 6557470319842 10610209857723 17167680177565 27777890035288 44945570212853 72723460248141 117669030460994 190392490709135 308061521170129 498454011879264 806515533049393 1304969544928657 2111485077978050 3416454622906707 5527939700884757 8944394323791464 14472334024676221 23416728348467685 37889062373143906 61305790721611591 99194853094755497 160500643816367088 259695496911122585 420196140727489673 679891637638612258 1100087778366101931 1779979416004714189 2880067194370816120 4660046610375530309 7540113804746346429
Timer [ 1 ] : elapsed time = 0.000334127 seconds

 Cfib2_O3       :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229 832040 1346269 2178309 3524578 5702887 9227465 14930352 24157817 39088169 63245986 102334155 165580141 267914296 433494437 701408733 1134903170 1836311903 2971215073 4807526976 7778742049 12586269025 20365011074 32951280099 53316291173 86267571272 139583862445 225851433717 365435296162 591286729879 956722026041 1548008755920 2504730781961 4052739537881 6557470319842 10610209857723 17167680177565 27777890035288 44945570212853 72723460248141 117669030460994 190392490709135 308061521170129 498454011879264 806515533049393 1304969544928657 2111485077978050 3416454622906707 5527939700884757 8944394323791464 14472334024676221 23416728348467685 37889062373143906 61305790721611591 99194853094755497 160500643816367088 259695496911122585 420196140727489673 679891637638612258 1100087778366101931 1779979416004714189 2880067194370816120 4660046610375530309 7540113804746346429
Timer [ 1 ] : elapsed time = 0.000344424 seconds


 =============================
C.[34;49m_fib2[39;49m <:> cfrTil compiled word
SourceCode for C.[34;49m_fib2[39;49m :> 
[34;49m: _fib2 dup 2 < ? : dup -- _fib2 swap 2 - _fib2 + ; [39;49m
Source code file location of [34;49m_fib2[39;49m : "namespaces/test/dev0.cft" : 142.52 :: we are now at : namespaces/test/dev.cft : 436.19
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xde048b3c -- code size = 157 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49m_fib2[39;49m : definition = 0x00007fa6de048b3c : disassembly at namespaces/test/dev.cft : 436.19 :
[34;49m ..                               : _fib2 [39;49m[33;40mdup[39;49m[34;49m 2 < ? : dup -- _fib2 swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fa6de048b3c    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de048b3f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de048b43    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                           : _fib2 dup [39;49m[33;40m2[39;49m[34;49m < ? : dup -- _fib2 swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fa6de048b46    48b80200000000000000    mov rax, 0x2                                           [39;49m[32;49m
0x7fa6de048b50    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de048b53    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de048b56    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..                         : _fib2 dup 2 [39;49m[33;40m<[39;49m[34;49m ? : dup -- _fib2 swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fa6de048b5a    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fa6de048b5d    0f9cc0                  setl al                                                [39;49m[32;49m
0x7fa6de048b60    480fb6c0                movzx rax, al                                          [39;49m[32;49m
0x7fa6de048b64    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de048b67    0f8405000000            jz 0x7fa6de048b72          	< C.[34;49m_fib2[39;49m+54 >[39;49m[32;49m
0x7fa6de048b6d    e966000000              jmp 0x7fa6de048bd8         	< C.[34;49m_fib2[39;49m+156 >[39;49m
[34;49m ..                   : _fib2 dup 2 < ? : [39;49m[33;40mdup[39;49m[34;49m -- _fib2 swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fa6de048b72    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de048b75    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de048b79    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de048b7c    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de048b7f    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..               : _fib2 dup 2 < ? : dup [39;49m[33;40m--[39;49m[34;49m _fib2 swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fa6de048b83    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fa6de048b86    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de048b8a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..            : _fib2 dup 2 < ? : dup -- [39;49m[33;40m_fib2[39;49m[34;49m swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fa6de048b8d    e8aaffffff              call 0x7fa6de048b3c        	< C.[34;49m_fib2[39;49m : 0x00007fa6de048b3c >[39;49m[32;49m
0x7fa6de048b92    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de048b95    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de048b99    49894ef8                mov [r14-0x8], rcx                                     [39;49m[32;49m
0x7fa6de048b9d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : _fib2 dup 2 < ? : dup -- _fib2 swap [39;49m[33;40m2[39;49m[34;49m - _fib2 + ;  .. [39;49m[32;49m
0x7fa6de048ba0    48b80200000000000000    mov rax, 0x2                                           [39;49m[32;49m
0x7fa6de048baa    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fa6de048bad    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de048bb0    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m  : _fib2 dup 2 < ? : dup -- _fib2 swap 2 [39;49m[33;40m-[39;49m[34;49m _fib2 + ;  .. [39;49m[32;49m
0x7fa6de048bb4    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fa6de048bb7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de048bbb    498906                  mov [r14], rax                                         [39;49m
[34;49m: _fib2 dup 2 < ? : dup -- _fib2 swap 2 - [39;49m[33;40m_fib2[39;49m[34;49m + ;  .. [39;49m[32;49m
0x7fa6de048bbe    e879ffffff              call 0x7fa6de048b3c        	< C.[34;49m_fib2[39;49m : 0x00007fa6de048b3c >[39;49m[32;49m
0x7fa6de048bc3    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de048bc6    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de048bca    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. p 2 < ? : dup -- _fib2 swap 2 - _fib2 [39;49m[33;40m+[39;49m[34;49m ; [39;49m[32;49m
0x7fa6de048bce    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fa6de048bd1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de048bd5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 2 < ? : dup -- _fib2 swap 2 - _fib2 + [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6de048bd8    c3                      ret                                                    [39;49m
Word_Disassemble : word - '_fib2' :: codeSize = 156
Word : 0x00007fa6dd532170 :: Compiled at : 0x00007fa6de048b3c
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 436.19 <::
 9.0000000000000000
 should be 9
 =============================
BigNum.[34;49mfibBN[39;49m <:> cfrTil compiled word
SourceCode for BigNum.[34;49mfibBN[39;49m :> 
[34;49m: fibBN ( n | fn fn1 fn2 -- TOS ) { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= } { fn1 fn2 @ = fn2 fn @ = fn fn1 @ fn2 @ + = } for fn @ ; [39;49m
Source code file location of [34;49mfibBN[39;49m : "namespaces/test/dev.cft" : 443.34 :: we are now at : namespaces/test/dev.cft : 454.19
Compiled with : optimizeOn, inlineOn
Debug Source Code on : BigNum on : Lisp off : Word Source Code on
starting at address : 0xde04ed6f -- code size = 297 bytes
TypeSignature : 
 -----------------------------
Word :: BigNum.[34;49mfibBN[39;49m : definition = 0x00007fa6de04ed6f : disassembly at namespaces/test/dev.cft : 454.19 :
[34;49m ..                                     : [39;49m[33;40mfibBN[39;49m[34;49m ( n | fn fn1 fn2 -- TOS )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1  .. [39;49m[32;49m
0x7fa6de04ed6f    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6de04ed73    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04ed77    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m ..  : fibBN ( n | fn fn1 fn2 -- TOS )  { [39;49m[33;40mfn[39;49m[34;49m 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ .. [39;49m[32;49m
0x7fa6de04ed7e    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m  : fibBN ( n | fn fn1 fn2 -- TOS )  { fn [39;49m[33;40m0[39;49m[34;49m = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ +  .. [39;49m[32;49m
0x7fa6de04ed82    48b970c311dda67f0000    mov rcx, 0x7fa6dd11c370                                [39;49m
[34;49m: fibBN ( n | fn fn1 fn2 -- TOS )  { fn 0 [39;49m[33;40m=[39;49m[34;49m fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  .. [39;49m[32;49m
0x7fa6de04ed8c    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. N ( n | fn fn1 fn2 -- TOS )  { fn 0 = [39;49m[33;40mfn1[39;49m[34;49m 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } .. [39;49m[32;49m
0x7fa6de04ed8f    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. n | fn fn1 fn2 -- TOS )  { fn 0 = fn1 [39;49m[33;40m0[39;49m[34;49m = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for .. [39;49m[32;49m
0x7fa6de04ed93    48b9ecc511dda67f0000    mov rcx, 0x7fa6dd11c5ec                                [39;49m
[34;49m .. | fn fn1 fn2 -- TOS )  { fn 0 = fn1 0 [39;49m[33;40m=[39;49m[34;49m fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for f .. [39;49m[32;49m
0x7fa6de04ed9d    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. fn fn1 fn2 -- TOS )  { fn 0 = fn1 0 = [39;49m[33;40mfn2[39;49m[34;49m 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for fn  .. [39;49m[32;49m
0x7fa6de04eda0    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m .. n1 fn2 -- TOS )  { fn 0 = fn1 0 = fn2 [39;49m[33;40m1[39;49m[34;49m = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de04eda4    48b968c811dda67f0000    mov rcx, 0x7fa6dd11c868                                [39;49m
[34;49m ..  fn2 -- TOS )  { fn 0 = fn1 0 = fn2 1 [39;49m[33;40m=[39;49m[34;49m } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de04edae    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. - TOS )  { fn 0 = fn1 0 = fn2 1 = } { [39;49m[33;40mn[39;49m[34;49m @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de04edb1    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04edb5    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04edb9    498906                  mov [r14], rax                                         [39;49m
[34;49m .. S )  { fn 0 = fn1 0 = fn2 1 = } { n @ [39;49m[33;40m0[39;49m[34;49m > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de04edbc    48b8e4ca11dda67f0000    mov rax, 0x7fa6dd11cae4                                [39;49m[32;49m
0x7fa6de04edc6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04edca    498906                  mov [r14], rax                                         [39;49m
[34;49m .. )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 [39;49m[33;40m>[39;49m[34;49m } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de04edcd    49b8c727edbf1d560000    mov r8, 0x561dbfed27c7                                 [39;49m[32;49m
0x7fa6de04edd7    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04ede1    49ffd1                  call r9                    	< BigNum.[34;49m>[39;49m : 0x0000561dbfed27c7 >[39;49m
[34;49m ..  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > [39;49m[33;40m}[39;49m[34;49m { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de04ede4    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fa6de04ede7    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } [39;49m[33;40mfor[39;49m[34;49m fn @ ;  .. [39;49m[32;49m
0x7fa6de04edeb    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fa6de04edee    0f8494000000            jz 0x7fa6de04ee88          	< BigNum.[34;49mfibBN[39;49m+281 >[39;49m
[34;49m ..  fn2 1 = } { n @ 0 > } { n 1 -= }  {  [39;49m[33;40mfn1[39;49m[34;49m fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de04edf4    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m ..  1 = } { n @ 0 > } { n 1 -= }  {  fn1 [39;49m[33;40mfn2[39;49m[34;49m @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de04edf8    498b4f18                mov rcx, [r15+0x18]                                    [39;49m
[34;49m ..  { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ [39;49m[33;40m=[39;49m[34;49m  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de04edfc    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  [39;49m[33;40mfn2[39;49m[34;49m fn @ =  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de04edff    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m .. 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 [39;49m[33;40mfn[39;49m[34;49m @ =  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de04ee03    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m ..  { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ [39;49m[33;40m=[39;49m[34;49m  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de04ee07    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  [39;49m[33;40mfn[39;49m[34;49m fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de04ee0a    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6de04ee0e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04ee12    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn [39;49m[33;40mfn1[39;49m[34;49m @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de04ee15    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fa6de04ee19    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04ee1d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ [39;49m[33;40mfn2[39;49m[34;49m @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de04ee20    498b4718                mov rax, [r15+0x18]                                    [39;49m[32;49m
0x7fa6de04ee24    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04ee28    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ [39;49m[33;40m+[39;49m[34;49m =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de04ee2b    49b8ae24edbf1d560000    mov r8, 0x561dbfed24ae                                 [39;49m[32;49m
0x7fa6de04ee35    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04ee3f    49ffd1                  call r9                    	< BigNum.[34;49m+[39;49m : 0x0000561dbfed24ae >[39;49m[32;49m
0x7fa6de04ee42    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fa6de04ee45    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fa6de04ee49    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + [39;49m[33;40m=[39;49m[34;49m  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de04ee4d    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. n 0 = fn1 0 = fn2 1 = } { n @ 0 > } { [39;49m[33;40mn[39;49m[34;49m 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de04ee50    498d47f8                lea rax, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04ee54    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04ee58    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n [39;49m[33;40m1[39;49m[34;49m -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de04ee5b    48b860cd11dda67f0000    mov rax, 0x7fa6dd11cd60                                [39;49m[32;49m
0x7fa6de04ee65    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fa6de04ee69    498906                  mov [r14], rax                                         [39;49m
[34;49m .. = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 [39;49m[33;40m-=[39;49m[34;49m }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de04ee6c    49b88c25edbf1d560000    mov r8, 0x561dbfed258c                                 [39;49m[32;49m
0x7fa6de04ee76    49b99c9808dea67f0000    mov r9, 0x7fa6de08989c                                 [39;49m[32;49m
0x7fa6de04ee80    49ffd1                  call r9                    	< BigNum.[34;49m-=[39;49m : 0x0000561dbfed258c >[39;49m
[34;49m .. n1 0 = fn2 1 = } { n @ 0 > } { n 1 -= [39;49m[33;40m}[39;49m[34;49m  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for fn @ ;  .. [39;49m[32;49m
0x7fa6de04ee83    e929ffffff              jmp 0x7fa6de04edb1         	< BigNum.[34;49mfibBN[39;49m+66 >[39;49m
[34;49m .. fn2 fn @ =  fn fn1 @ fn2 @ + =  } for [39;49m[33;40mfn[39;49m[34;49m @ ;  .. [39;49m[32;49m
0x7fa6de04ee88    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. n @ =  fn fn1 @ fn2 @ + =  } for fn @ [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fa6de04ee8c    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6de04ee90    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6de04ee94    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6de04ee97    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fibBN' :: codeSize = 296
Word : 0x00007fa6dcf8ffe0 :: Compiled at : 0x00007fa6de04ed6f
 =============================
::> 'wdiss' was called at namespaces/test/dev.cft 454.19 <::
 6765.0000000000000000

 locals fibBN :  1.0000000000000000 :  1.0000000000000000, 2.0000000000000000 :  1.0000000000000000, 3.0000000000000000 :  2.0000000000000000, 4.0000000000000000 :  3.0000000000000000, 5.0000000000000000 :  5.0000000000000000, 6.0000000000000000 :  8.0000000000000000, 7.0000000000000000 :  13.0000000000000000, 8.0000000000000000 :  21.0000000000000000, 9.0000000000000000 :  34.0000000000000000, 10.0000000000000000 :  55.0000000000000000, 11.0000000000000000 :  89.0000000000000000, 12.0000000000000000 :  144.0000000000000000, 13.0000000000000000 :  233.0000000000000000, 14.0000000000000000 :  377.0000000000000000, 15.0000000000000000 :  610.0000000000000000, 16.0000000000000000 :  987.0000000000000000, 17.0000000000000000 :  1597.0000000000000000, 18.0000000000000000 :  2584.0000000000000000, 19.0000000000000000 :  4181.0000000000000000, 20.0000000000000000 :  6765.0000000000000000, 21.0000000000000000 :  10946.0000000000000000, 22.0000000000000000 :  17711.0000000000000000, 23.0000000000000000 :  28657.0000000000000000, 24.0000000000000000 :  46368.0000000000000000, 25.0000000000000000 :  75024.0000000000000000, 26.0000000000000000 :  121392.0000000000000000, 27.0000000000000000 :  196416.0000000000000000, 28.0000000000000000 :  317808.0000000000000000, 29.0000000000000000 :  514224.0000000000000000, 30.0000000000000000 :  832032.0000000000000000, 31.0000000000000000 :  1346240.0000000000000000, 32.0000000000000000 :  2178304.0000000000000000, 33.0000000000000000 :  3524544.0000000000000000, 34.0000000000000000 :  5702912.0000000000000000, 35.0000000000000000 :  9227520.0000000000000000, 36.0000000000000000 :  14930432.0000000000000000, 37.0000000000000000 :  24158208.0000000000000000, 38.0000000000000000 :  39088128.0000000000000000, 39.0000000000000000 :  63246336.0000000000000000, 40.0000000000000000 :  102334464.0000000000000000, 41.0000000000000000 :  165580800.0000000000000000, 42.0000000000000000 :  267915264.0000000000000000, 43.0000000000000000 :  433496064.0000000000000000, 44.0000000000000000 :  701415424.0000000000000000, 45.0000000000000000 :  1134919680.0000000000000000, 46.0000000000000000 :  1836318720.0000000000000000, 47.0000000000000000 :  2971271168.0000000000000000, 48.0000000000000000 :  4807589888.0000000000000000, 49.0000000000000000 :  7778861056.0000000000000000, 50.0000000000000000 :  12586582016.0000000000000000, 51.0000000000000000 :  20365443072.0000000000000000, 52.0000000000000000 :  32952025088.0000000000000000, 53.0000000000000000 :  53317992448.0000000000000000, 54.0000000000000000 :  86270541824.0000000000000000, 55.0000000000000000 :  139586437120.0000000000000000, 56.0000000000000000 :  225854881792.0000000000000000, 57.0000000000000000 :  365441318912.0000000000000000, 58.0000000000000000 :  591296200704.0000000000000000, 59.0000000000000000 :  956737519616.0000000000000000, 60.0000000000000000 :  1548033720320.0000000000000000, 61.0000000000000000 :  2504771239936.0000000000000000, 62.0000000000000000 :  4052838514688.0000000000000000, 63.0000000000000000 :  6557609754624.0000000000000000, 64.0000000000000000 :  10610448269312.0000000000000000, 65.0000000000000000 :  17168058023936.0000000000000000, 66.0000000000000000 :  27778774728704.0000000000000000, 67.0000000000000000 :  44946832752640.0000000000000000, 68.0000000000000000 :  72726681223168.0000000000000000, 69.0000000000000000 :  117673513975808.0000000000000000, 70.0000000000000000 :  190400195198976.0000000000000000, 71.0000000000000000 :  308069414207488.0000000000000000, 72.0000000000000000 :  498473904373760.0000000000000000, 73.0000000000000000 :  806543318581248.0000000000000000, 74.0000000000000000 :  1305017222955008.0000000000000000, 75.0000000000000000 :  2111543361667072.0000000000000000, 76.0000000000000000 :  3416594944360448.0000000000000000, 77.0000000000000000 :  5528069586550784.0000000000000000, 78.0000000000000000 :  8944664530911232.0000000000000000, 79.0000000000000000 :  14472871556415488.0000000000000000, 80.0000000000000000 :  23417398648373248.0000000000000000, 81.0000000000000000 :  37890270204788736.0000000000000000, 82.0000000000000000 :  61307668853161984.0000000000000000, 83.0000000000000000 :  99197939057950720.0000000000000000, 84.0000000000000000 :  160506707422740480.0000000000000000, 85.0000000000000000 :  259704646480691200.0000000000000000, 86.0000000000000000 :  420206955856920576.0000000000000000, 87.0000000000000000 :  679902806244589568.0000000000000000, 88.0000000000000000 :  1100109762101510144.0000000000000000, 89.0000000000000000 :  1780012568346099712.0000000000000000, 90.0000000000000000 :  2880122330447609856.0000000000000000, 91.0000000000000000 :  4660099714421620736.0000000000000000, 92.0000000000000000 :  7540151676125052928.0000000000000000
 92.0000000000000000 7540151676125052928.0000000000000000

NamespaceTree - All Namespaces : using : [34;49mnot using[39;49m :: with[32;49m : words[39;49m
	 - Root[32;49m powReg7[39;49m[32;49m powReg6[39;49m[32;49m powReg5[39;49m[32;49m powReg4[39;49m[32;49m powReg3[39;49m[32;49m powReg2[39;49m[32;49m powReg[39;49m[32;49m pow[39;49m[32;49m sp[39;49m[32;49m fibBN[39;49m[32;49m fibBN[39;49m[32;49m fibBN[39;49m[32;49m fibBN[39;49m[32;49m fibBN[39;49m[32;49m fibBN[39;49m[32;49m fibBN[39;49m[32;49m pow[39;49m[32;49m pow0[39;49m[32;49m bexp3[39;49m[32;49m x1[39;49m[32;49m get[39;49m[32;49m set[39;49m[32;49m goedel8[39;49m[32;49m goedel6[39;49m[32;49m hio[39;49m[32;49m hioo[39;49m[32;49m doInitTest[39;49m[32;49m mct[39;49m[32;49m _doDemo[39;49m[32;49m doScript2[39;49m[32;49m doScript[39;49m[32;49m doTX64[39;49m[32;49m doX64[39;49m[32;49m todo[39;49m[32;49m TODO[39;49m[32;49m bx[39;49m[32;49m x64[39;49m[32;49m tc[39;49m[32;49m tCfrTil[39;49m[32;49m rtw[39;49m[32;49m sh[39;49m[32;49m license[39;49m[32;49m purgeAll[39;49m[32;49m purge[39;49m[32;49m ri[39;49m[32;49m fr[39;49m[32;49m bnOn[39;49m[32;49m bnOff[39;49m[32;49m bigNumOff[39;49m[32;49m log[39;49m[32;49m C_Off[39;49m[32;49m C_On[39;49m[32;49m forth[39;49m[32;49m ndrop[39;49m[32;49m tick[39;49m[32;49m findAny[39;49m[32;49m find[39;49m[32;49m '[39;49m
		 - Class[32;49m sp[39;49m[32;49m tbb[39;49m[32;49m .[39;49m[32;49m [[39;49m[32;49m ][39;49m[32;49m clone[39;49m[32;49m new[39;49m[32;49m class[39;49m[32;49m :{[39;49m[32;49m +:{[39;49m[32;49m };[39;49m
			 - Buffer[32;49m buf[39;49m[32;49m this[39;49m[32;49m size[39;49m
				 - DLLNode[32;49m BeforeReference[39;49m[32;49m AfterReference[39;49m[32;49m BeforeReference[39;49m[32;49m someJunkForTesting[39;49m[32;49m AfterReference[39;49m[32;49m BeforeReference[39;49m[32;49m AfterReference[39;49m[32;49m this[39;49m[32;49m size[39;49m
					 - DLLNodeAlloc[32;49m tna2x[39;49m[32;49m tnax1[39;49m[32;49m tna3[39;49m[32;49m tna[39;49m[32;49m nodes[39;49m[32;49m this[39;49m[32;49m size[39;49m
						 - Ar1[32;49m a3[39;49m[32;49m arr2[39;49m[32;49m arr1[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
							 - Ar2[32;49m a5[39;49m[32;49m a4[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
								 - Ar3[32;49m a7[39;49m[32;49m a8[39;49m[32;49m a6x[39;49m[32;49m a6[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
									 - ct[32;49m ac[39;49m[32;49m tct[39;49m[32;49m ab[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
										 - cta[32;49m caba[39;49m[32;49m cadump[39;49m[32;49m tcta[39;49m[32;49m aba[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
						 - DLLNodeAlloc4[32;49m nodes[39;49m[32;49m this[39;49m[32;49m size[39;49m
					 - DLList[32;49m init[39;49m[32;49m TailNode[39;49m[32;49m HeadNode[39;49m[32;49m this[39;49m[32;49m size[39;49m
						 - DLListClone[32;49m init[39;49m[32;49m Accum[39;49m[32;49m Four[39;49m[32;49m Three[39;49m[32;49m Twelve[39;49m[32;49m Sum[39;49m[32;49m Prototype[39;49m[32;49m Category[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - Pointer[32;49m this[39;49m[32;49m size[39;49m
				 - Integer
			 - [34;49mBigNum[39;49m[32;49m tfib3[39;49m[32;49m fibBN[39;49m[32;49m tbn[39;49m[32;49m sp[39;49m[32;49m tfib3[39;49m[32;49m fibBN[39;49m[32;49m tbn[39;49m[32;49m _bassert[39;49m[32;49m bexpl[39;49m[32;49m !![39;49m[32;49m ![39;49m[32;49m bexp0[39;49m[32;49m bexp[39;49m[32;49m aexp[39;49m[32;49m ![39;49m[32;49m qexp[39;49m[32;49m x[39;49m[32;49m bnInit[39;49m[32;49m eprint[39;49m[32;49m p[39;49m[32;49m fprint[39;49m[32;49m _fprint[39;49m[32;49m _eprint[39;49m[32;49m **[39;49m[32;49m ^[39;49m[32;49m pow[39;49m[32;49m sqrt[39;49m[32;49m !=[39;49m[32;49m ==[39;49m[32;49m >[39;49m[32;49m >=[39;49m[32;49m <[39;49m[32;49m <=[39;49m[32;49m ==[39;49m[32;49m /=[39;49m[32;49m /[39;49m[32;49m *=[39;49m[32;49m *[39;49m[32;49m --[39;49m[32;49m -=[39;49m[32;49m ++[39;49m[32;49m +=[39;49m[32;49m -[39;49m[32;49m +[39;49m[32;49m bnState[39;49m[32;49m pPrecision[39;49m[32;49m pWidth[39;49m
		 - Interpreter[32;49m tfib3[39;49m[32;49m tfib2[39;49m[32;49m tfib1[39;49m[32;49m tfib[39;49m[32;49m fibPTC2[39;49m[32;49m fibPTC[39;49m[32;49m Cfib_O3[39;49m[32;49m Cfib[39;49m[32;49m fibn0[39;49m[32;49m sp[39;49m[32;49m sp[39;49m[32;49m xhi1[39;49m[32;49m xhi01[39;49m[32;49m xhi2a[39;49m[32;49m xhi2[39;49m[32;49m xhe12[39;49m[32;49m xhe1[39;49m[32;49m xhe0[39;49m[32;49m thi42[39;49m[32;49m thi3[39;49m[32;49m thi2[39;49m[32;49m defined[39;49m[32;49m _defined[39;49m[32;49m :[39;49m[32;49m word[39;49m[32;49m ;[39;49m[32;49m semi[39;49m[32;49m _semi[39;49m[32;49m xt@[39;49m[32;49m }[39;49m[32;49m end[39;49m[32;49m {[39;49m[32;49m #[39;49m[32;49m _lx_[39;49m[32;49m l:[39;49m[32;49m interpretFile[39;49m[32;49m interpret[39;49m[32;49m interpreterDone[39;49m[32;49m interpreterIsDone[39;49m[32;49m interpreterStop[39;49m[32;49m interpreterInit[39;49m[32;49m interpreterRun[39;49m[32;49m interpretNextToken[39;49m[32;49m interpretString[39;49m[32;49m tokenToWord[39;49m[32;49m doWord[39;49m[32;49m eval[39;49m[32;49m /*[39;49m[32;49m */[39;49m[32;49m #![39;49m[32;49m //[39;49m[32;49m compileModeOff[39;49m[32;49m asmModeOff[39;49m[32;49m asmModeOn[39;49m[32;49m compileModeOn[39;49m[32;49m finishDebugInfo[39;49m[32;49m compileMode[39;49m
		 - C[32;49m fib4[39;49m[32;49m fib3[39;49m[32;49m fib2[39;49m[32;49m fib[39;49m[32;49m sp[39;49m[32;49m tt[39;49m[32;49m sp[39;49m[32;49m apause[39;49m[32;49m fibPTC3?[39;49m[32;49m fibPTC?[39;49m[32;49m _fib1[39;49m[32;49m _fib2[39;49m[32;49m factorial[39;49m[32;49m fac[39;49m[32;49m btt[39;49m[32;49m x7[39;49m[32;49m cobj[39;49m[32;49m $[39;49m[32;49m streol[39;49m[32;49m $$[39;49m[32;49m hip[39;49m[32;49m goedel3[39;49m[32;49m bexp44[39;49m[32;49m bexp43[39;49m[32;49m heeeey2[39;49m[32;49m heeey2[39;49m[32;49m a1234[39;49m[32;49m a123[39;49m[32;49m a1234[39;49m[32;49m a123[39;49m[32;49m tnarr2a[39;49m[32;49m tnarr2[39;49m[32;49m t64bitSub3[39;49m[32;49m t64bitSub3[39;49m[32;49m t64bitSub2[39;49m[32;49m t64bitSub[39;49m[32;49m t64bitAdd2[39;49m[32;49m t64bitAdd[39;49m[32;49m moe3[39;49m[32;49m moe2[39;49m[32;49m t+[39;49m[32;49m t*[39;49m[32;49m t+[39;49m[32;49m t*[39;49m[32;49m factorial[39;49m[32;49m factorial[39;49m[32;49m include1[39;49m[32;49m allot[39;49m[32;49m logAppend[39;49m[32;49m logWrite[39;49m[32;49m ;;[39;49m[32;49m ,[39;49m[32;49m rax_return[39;49m[32;49m void_return[39;49m[32;49m c_return[39;49m[32;49m c_prefix[39;49m[32;49m c_rtl[39;49m[32;49m cfactorial3_O3[39;49m[32;49m cfactorial2_O3[39;49m[32;49m cfactorial_O3[39;49m[32;49m cfib2_O3[39;49m[32;49m cfib_O3[39;49m[32;49m ctct[39;49m[32;49m cfactorial3[39;49m[32;49m cfactorial2[39;49m[32;49m cfactorial[39;49m[32;49m cfib[39;49m[32;49m --[39;49m[32;49m ++[39;49m[32;49m ?<[39;49m[32;49m >:<[39;49m[32;49m >?[39;49m[32;49m switch[39;49m[32;49m case[39;49m[32;49m }fi[39;49m[32;49m }else{[39;49m[32;49m if{[39;49m[32;49m (|[39;49m[32;49m ([39;49m[32;49m sprintf[39;49m[32;49m printf[39;49m[32;49m _Printf[39;49m
			 - C_Syntax[32;49m fibPTC2?[39;49m[32;49m fibPTC?[39;49m[32;49m _fibn0[39;49m[32;49m cpow[39;49m[32;49m fibPTC2?[39;49m[32;49m faccs2[39;49m[32;49m fac5[39;49m[32;49m faccs[39;49m[32;49m fac5[39;49m[32;49m faccs3[39;49m[32;49m factoriali[39;49m[32;49m MOVrr[39;49m[32;49m MOVmr[39;49m[32;49m MOV32rm[39;49m[32;49m MOV8rm[39;49m[32;49m _Compile_Stack_PopToReg[39;49m[32;49m _Compile_TESTreg_Toreg[39;49m[32;49m _Compile_MoveReg_To_StackN[39;49m[32;49m _Compile_MoveReg_To_Rm[39;49m[32;49m _Compile_Test[39;49m[32;49m _Compile_SUBI_DSP[39;49m[32;49m _Compile_CallThruReg[39;49m[32;49m _Compile_Group5[39;49m[32;49m _Compile_Group1_Immediate[39;49m[32;49m _Compile_Move_DataStackN_ToReg[39;49m[32;49m _Compile_Move[39;49m[32;49m Compile_Move[39;49m[32;49m Compile_CalculateWrite_Instruction_X64[39;49m[32;49m CalculateRex[39;49m[32;49m _Compile_Write_Instruction_X64[39;49m[32;49m _Compile_ImmOrDispData[39;49m[32;49m CalculateModRmByte[39;49m[32;49m CalculateModRegardingDisplacement[39;49m[32;49m cpow[39;49m[32;49m fac5[39;49m[32;49m fibPTC2?[39;49m[32;49m _fib1c[39;49m[32;49m factorial[39;49m[32;49m factoriali[39;49m[32;49m fac5[39;49m[32;49m bttt[39;49m[32;49m $[39;49m[32;49m faccs3[39;49m[32;49m interpret4[39;49m[32;49m faccs2[39;49m[32;49m fac4[39;49m[32;49m interpret2[39;49m[32;49m chi[39;49m[32;49m interpret2[39;49m[32;49m thi42[39;49m[32;49m thi41[39;49m[32;49m thi42[39;49m[32;49m taa[39;49m[32;49m ctcta[39;49m[32;49m cmoe[39;49m[32;49m cmoe[39;49m[32;49m factorial[39;49m[32;49m &[39;49m[32;49m typedef[39;49m[32;49m type[39;49m[32;49m c_class[39;49m[32;49m ?[39;49m[32;49m ![39;49m[32;49m ,[39;49m[32;49m ;[39;49m[32;49m }[39;49m[32;49m {[39;49m
				 - [34;49mC_Typedef[39;49m[32;49m {[39;49m[32;49m }[39;49m
			 - int[32;49m this[39;49m[32;49m size[39;49m
			 - void[32;49m this[39;49m[32;49m size[39;49m
			 - _byteTest[32;49m bt[39;49m[32;49m bt[39;49m[32;49m f123[39;49m[32;49m d123[39;49m[32;49m c123[39;49m[32;49m bb123[39;49m[32;49m b123[39;49m[32;49m e123[39;49m[32;49m a123[39;49m[32;49m this[39;49m[32;49m size[39;49m
				 - byteTest[32;49m bt[39;49m[32;49m bt[39;49m[32;49m f123[39;49m[32;49m d123[39;49m[32;49m c123[39;49m[32;49m bb123[39;49m[32;49m b123[39;49m[32;49m e123[39;49m[32;49m a123[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - Dlsym
				 - libc[32;49m CBuffer[39;49m[32;49m x[39;49m[32;49m xc[39;49m[32;49m tprintf2[39;49m[32;49m tprintf1[39;49m[32;49m tprintf[39;49m[32;49m memset[39;49m[32;49m strcat[39;49m[32;49m sprintf[39;49m[32;49m strcmp[39;49m[32;49m printf[39;49m
					 - _CBuffer[32;49m buf[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - CObj[32;49m chey[39;49m[32;49m chars2[39;49m[32;49m chars[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - _CObj[32;49m chey[39;49m[32;49m chars2[39;49m[32;49m chars[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - int64[32;49m this[39;49m[32;49m size[39;49m
			 - byte[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mBoolean[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mquad[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mlong[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mchar[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49muint64[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49muint32[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mint32[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49muint16[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mint16[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49muint8[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mint8[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mPrefixCombinators[39;49m[32;49m loop[39;49m[32;49m for[39;49m[32;49m do[39;49m[32;49m while[39;49m[32;49m if[39;49m
			 - [34;49mInfix[39;49m[32;49m xhi[39;49m[32;49m xhii[39;49m[32;49m xhi0[39;49m[32;49m h4[39;49m[32;49m h3[39;49m[32;49m hi2[39;49m[32;49m hi1[39;49m[32;49m hi1[39;49m[32;49m _assert1[39;49m[32;49m =[39;49m
		 - User[32;49m fib1[39;49m[32;49m _fib4[39;49m[32;49m _fib3[39;49m[32;49m _fib2[39;49m[32;49m _fib[39;49m[32;49m sp[39;49m[32;49m _fib1[39;49m[32;49m _fibn1[39;49m[32;49m sp[39;49m[32;49m ffx2[39;49m[32;49m ffx[39;49m[32;49m comment[39;49m[32;49m _ffx2[39;49m[32;49m _ffx[39;49m[32;49m reps[39;49m[32;49m iFactorialX2[39;49m[32;49m iFactorialX[39;49m[32;49m _ifx2[39;49m[32;49m _ifx[39;49m[32;49m reps0[39;49m[32;49m factorial[39;49m[32;49m sdbg[39;49m[32;49m fac[39;49m[32;49m bexp3[39;49m[32;49m bexp2[39;49m[32;49m bexp[39;49m[32;49m qexp2[39;49m[32;49m qexp[39;49m[32;49m factorial[39;49m[32;49m Dsp[39;49m[32;49m fibTest[39;49m[32;49m facTest[39;49m[32;49m sp[39;49m[32;49m qeval[39;49m[32;49m hi1[39;49m[32;49m hi1[39;49m[32;49m t3[39;49m[32;49m t1[39;49m[32;49m t0[39;49m[32;49m caseSwitchExample[39;49m[32;49m goedel7[39;49m[32;49m goedel6[39;49m[32;49m goedel5[39;49m[32;49m goedel4[39;49m[32;49m goedel2[39;49m[32;49m goedel[39;49m[32;49m localsT[39;49m[32;49m _localsT[39;49m[32;49m doTest[39;49m[32;49m tcd[39;49m[32;49m tL2[39;49m[32;49m tL[39;49m[32;49m aTest[39;49m[32;49m aoTest[39;49m[32;49m tdemo[39;49m[32;49m demo[39;49m[32;49m odemo[39;49m[32;49m demo![39;49m[32;49m _basicT[39;49m[32;49m basicT[39;49m[32;49m lT[39;49m[32;49m ppT[39;49m[32;49m cST[39;49m[32;49m oT[39;49m[32;49m cntT[39;49m[32;49m cT[39;49m[32;49m aT[39;49m[32;49m locT[39;49m[32;49m bT[39;49m[32;49m stT[39;49m[32;49m oldL[39;49m[32;49m lispTest[39;49m[32;49m sysT[39;49m[32;49m sT[39;49m[32;49m fT[39;49m[32;49m mT[39;49m[32;49m dT2[39;49m[32;49m dT[39;49m[32;49m loT[39;49m[32;49m dT3[39;49m[32;49m dT2[39;49m[32;49m dT0[39;49m[32;49m preprocessorTest[39;49m[32;49m syntaxTest[39;49m[32;49m c_SyntaxTest[39;49m[32;49m objectTest[39;49m[32;49m controlTest[39;49m[32;49m stackTest[39;49m[32;49m bigNumTest[39;49m[32;49m localsTest[39;49m[32;49m arrayTest[39;49m[32;49m classTest[39;49m[32;49m interpT[39;49m[32;49m iinc[39;49m[32;49m _TestDone_[39;49m[32;49m demo0[39;49m[32;49m def[39;49m[32;49m istring[39;49m[32;49m s[39;49m[32;49m opOn[39;49m[32;49m vck[39;49m[32;49m opOn1[39;49m[32;49m opOff[39;49m[32;49m pause[39;49m[32;49m _SMN_[39;49m[32;49m mp[39;49m[32;49m Is_DebugOn[39;49m[32;49m dbgOff[39;49m[32;49m dbgOn[39;49m[32;49m dbOn[39;49m[32;49m dbgOnVar[39;49m[32;49m p[39;49m[32;49m s[39;49m[32;49m ts[39;49m[32;49m wdis[39;49m[32;49m _var[39;49m[32;49m var[39;49m[32;49m _const[39;49m[32;49m const[39;49m
			 - StartupMacros[32;49m namespaces[39;49m[32;49m Delimiters[39;49m
		 - Locals[32;49m (|[39;49m[32;49m ([39;49m
		 - Int[32;49m sp[39;49m[32;49m mt5[39;49m[32;49m mt5v[39;49m[32;49m mt4[39;49m[32;49m mt3[39;49m[32;49m mt2[39;49m[32;49m mt1a[39;49m[32;49m mta[39;49m[32;49m mt1[39;49m[32;49m mt[39;49m[32;49m _ClassTest_[39;49m[32;49m ppxe[39;49m[32;49m ppx[39;49m[32;49m apause[39;49m[32;49m _logAppend[39;49m[32;49m _logWrite[39;49m[32;49m nl[39;49m[32;49m print[39;49m[32;49m hp[39;49m[32;49m _hp[39;49m[32;49m p[39;49m[32;49m _p[39;49m[32;49m pn[39;49m[32;49m prints[39;49m[32;49m ps[39;49m[32;49m _ps[39;49m[32;49m hexIntPrint[39;49m[32;49m intPrint[39;49m[32;49m /=[39;49m[32;49m *=[39;49m[32;49m %[39;49m[32;49m modulo[39;49m[32;49m /[39;49m[32;49m ^[39;49m[32;49m pow_03[39;49m[32;49m pow[39;49m[32;49m **[39;49m[32;49m *[39;49m[32;49m -=[39;49m[32;49m +=[39;49m[32;49m -[39;49m[32;49m +[39;49m
		 - Logic[32;49m tx1[39;49m[32;49m nt[39;49m[32;49m >=[39;49m[32;49m <=[39;49m[32;49m !=[39;49m[32;49m equal[39;49m[32;49m ==[39;49m[32;49m >[39;49m[32;49m <[39;49m[32;49m &&[39;49m[32;49m and[39;49m[32;49m not[39;49m[32;49m ![39;49m[32;49m ^^[39;49m[32;49m xor[39;49m[32;49m or[39;49m[32;49m ||[39;49m
			 - Bits[32;49m Compile_DEC[39;49m[32;49m Compile_INC[39;49m[32;49m tcmp[39;49m[32;49m tNotAnd[39;49m[32;49m tAnd[39;49m[32;49m tnot3[39;49m[32;49m tnot2[39;49m[32;49m tnot[39;49m[32;49m lt10[39;49m[32;49m lt9[39;49m[32;49m lt8[39;49m[32;49m lt7b[39;49m[32;49m lt7[39;49m[32;49m lnt5[39;49m[32;49m lnt5[39;49m[32;49m lnt5[39;49m[32;49m lnt5[39;49m[32;49m lnt5[39;49m[32;49m lnt2[39;49m[32;49m lnt[39;49m[32;49m lnt2[39;49m[32;49m lnt[39;49m[32;49m lnt4[39;49m[32;49m lnt3[39;49m[32;49m lnt2[39;49m[32;49m lnt[39;49m[32;49m lt2[39;49m[32;49m lt[39;49m[32;49m |=[39;49m[32;49m &=[39;49m[32;49m >>=[39;49m[32;49m <<=[39;49m[32;49m neg[39;49m[32;49m ~[39;49m[32;49m ^[39;49m[32;49m |[39;49m[32;49m &[39;49m[32;49m >>[39;49m[32;49m <<[39;49m
		 - Asm[32;49m ;;[39;49m[32;49m ;asm[39;49m[32;49m asm:[39;49m[32;49m asmEnd[39;49m[32;49m asmBegin[39;49m[32;49m jmp[39;49m[32;49m goto:[39;49m[32;49m label:[39;49m[32;49m goto[39;49m[32;49m label[39;49m[32;49m jcc[39;49m[32;49m Jcc[39;49m[32;49m jmpHere[39;49m[32;49m Jmp[39;49m[32;49m if_[39;49m[32;49m _else_[39;49m[32;49m _fi[39;49m
			 - X64[32;49m x64_dbg[39;49m[32;49m dbiOff[39;49m[32;49m dbiOn[39;49m[32;49m DBI[39;49m[32;49m x64_dbg[39;49m[32;49m REX_W[39;49m[32;49m IMM_B[39;49m[32;49m DISP_B[39;49m[32;49m SIB_B[39;49m[32;49m MODRM_B[39;49m[32;49m REX_B[39;49m[32;49m DEC[39;49m[32;49m INC[39;49m[32;49m N[39;49m[32;49m TO_REG[39;49m[32;49m INT32_SIZE[39;49m[32;49m CELL_SIZE[39;49m[32;49m CELL[39;49m[32;49m BYTE[39;49m[32;49m CALL[39;49m[32;49m CMP[39;49m[32;49m SUB[39;49m[32;49m ADD[39;49m[32;49m NG[39;49m[32;49m LE[39;49m[32;49m LESS[39;49m[32;49m NA[39;49m[32;49m BE[39;49m[32;49m Z[39;49m[32;49m ZERO[39;49m[32;49m EQ[39;49m[32;49m EQUAL[39;49m[32;49m BELOW[39;49m[32;49m ACC[39;49m[32;49m FP[39;49m[32;49m DSP[39;49m[32;49m R15D[39;49m[32;49m R14D[39;49m[32;49m R13D[39;49m[32;49m R12D[39;49m[32;49m R11D[39;49m[32;49m R10D[39;49m[32;49m R9D[39;49m[32;49m R8D[39;49m[32;49m RDI[39;49m[32;49m RSI[39;49m[32;49m RBP[39;49m[32;49m RSP[39;49m[32;49m RBX[39;49m[32;49m RDX[39;49m[32;49m RCX[39;49m[32;49m RAX[39;49m[32;49m MEM[39;49m[32;49m MEM0[39;49m[32;49m MEM32[39;49m[32;49m MEM8[39;49m[32;49m REG[39;49m[32;49m off[39;49m[32;49m on[39;49m[32;49m false[39;49m[32;49m true[39;49m
		 - Stack[32;49m ndup[39;49m[32;49m stackCheck[39;49m[32;49m dsp[39;49m[32;49m _swap[39;49m[32;49m pick[39;49m[32;49m _ndrop[39;49m[32;49m dropN[39;49m[32;49m drop[39;49m[32;49m ndup[39;49m[32;49m dup[39;49m[32;49m _dup[39;49m
		 - Combinators[32;49m Compile_Stack_Push_R8D[39;49m[32;49m _Compile_CMPreg_IMM[39;49m[32;49m _Compile_ADDI_DSP[39;49m[32;49m _Compile_MoveTOS_To_R8D[39;49m[32;49m _Compile_IncDecreg[39;49m[32;49m _Compile_Test_Imm[39;49m[32;49m iax[39;49m[32;49m startupMacros[39;49m[32;49m ifElse[39;49m[32;49m ifte[39;49m[32;49m qEval[39;49m[32;49m ix[39;49m[32;49m ?[39;49m[32;49m for[39;49m[32;49m loop[39;49m[32;49m _[39;49m[32;49m _run[39;49m[32;49m _call[39;49m[32;49m run[39;49m[32;49m call[39;49m[32;49m doWhileDo[39;49m[32;49m doWhile[39;49m[32;49m while[39;49m[32;49m if3[39;49m[32;49m if2[39;49m[32;49m if[39;49m[32;49m if1[39;49m[32;49m tf3[39;49m[32;49m tf2[39;49m
		 - List[32;49m lcRestoreStack[39;49m[32;49m dupList[39;49m[32;49m printList[39;49m[32;49m eval[39;49m[32;49m _([39;49m[32;49m lisp[39;49m
		 - Experimental[32;49m tx[39;49m[32;49m <do[39;49m[32;49m does>[39;49m[32;49m do>[39;49m[32;49m locationPrint[39;49m[32;49m locationPush[39;49m
		 - String[32;49m stricmp[39;49m[32;49m strcpy[39;49m[32;49m strcat[39;49m[32;49m strcmp[39;49m[32;49m Strlen[39;49m
		 - System[32;49m assertStkChk[39;49m[32;49m _assertStkChk[39;49m[32;49m _assert[39;49m[32;49m assert1[39;49m[32;49m assert[39;49m[32;49m assert0[39;49m[32;49m assert1s[39;49m[32;49m _assert[39;49m[32;49m _assert0[39;49m[32;49m ctloc[39;49m[32;49m _assert1[39;49m[32;49m dbgTest[39;49m[32;49m ddps[39;49m[32;49m adps[39;49m[32;49m ahOff[39;49m[32;49m ahOn[39;49m[32;49m sOn[39;49m[32;49m sOff[39;49m[32;49m vb0[39;49m[32;49m vb1[39;49m[32;49m vb2[39;49m[32;49m vb3[39;49m[32;49m vb4[39;49m[32;49m vb[39;49m[32;49m ahalt[39;49m[32;49m ti[39;49m[32;49m stk[39;49m[32;49m aw[39;49m[32;49m sys[39;49m[32;49m fload[39;49m[32;49m pwi[39;49m[32;49m pwdiss[39;49m[32;49m wi[39;49m[32;49m wdissl[39;49m[32;49m wdiss[39;49m[32;49m _wdiss[39;49m[32;49m _source[39;49m[32;49m pel[39;49m[32;49m pdl[39;49m[32;49m location[39;49m[32;49m F[39;49m[32;49m T[39;49m[32;49m false[39;49m[32;49m true[39;49m[32;49m Default[39;49m[32;49m White[39;49m[32;49m Cyan[39;49m[32;49m Magenta[39;49m[32;49m Blue[39;49m[32;49m Yellow[39;49m[32;49m Green[39;49m[32;49m Red[39;49m[32;49m Black[39;49m[32;49m saveCpu2State[39;49m[32;49m restoreCpu2State[39;49m[32;49m saveCpuState[39;49m[32;49m restoreCpuState[39;49m[32;49m call_ToAddressThruR8_TestAlignRSP[39;49m[32;49m lcOff[39;49m[32;49m lcOn[39;49m[32;49m registers[39;49m[32;49m _pause[39;49m[32;49m pause[39;49m[32;49m location[39;49m[32;49m showTypeWordStack[39;49m[32;49m cpuStateShow[39;49m[32;49m console[39;49m[32;49m ok[39;49m[32;49m warmInit[39;49m[32;49m fr[39;49m[32;49m fullRestart[39;49m[32;49m ri[39;49m[32;49m restartInit[39;49m[32;49m restart[39;49m[32;49m exit[39;49m[32;49m systemBreak[39;49m[32;49m quit[39;49m[32;49m abort[39;49m[32;49m bye[39;49m[32;49m resetAll[39;49m[32;49m mem[39;49m[32;49m freeSessionMem[39;49m[32;49m allocateMem[39;49m[32;49m returnFromFile[39;49m[32;49m system3[39;49m[32;49m system2[39;49m[32;49m system1[39;49m[32;49m system0[39;49m[32;49m shell[39;49m[32;49m time[39;49m[32;49m timerInit[39;49m[32;49m timeInit[39;49m[32;49m echo[39;49m[32;49m jcc8_Off[39;49m[32;49m jcc8_On[39;49m[32;49m echoOff[39;49m[32;49m echoOn[39;49m[32;49m echoOff[39;49m[32;49m variables[39;49m[32;49m state[39;49m[32;49m binary[39;49m[32;49m hex[39;49m[32;49m decimal[39;49m[32;49m version[39;49m[32;49m charNumber[39;49m[32;49m lineNumber[39;49m[32;49m throw[39;49m[32;49m filename[39;49m[32;49m stackDepth[39;49m[32;49m stackInit[39;49m[32;49m reset[39;49m[32;49m include[39;49m
			 - Colors[32;49m alertColors[39;49m[32;49m userColors[39;49m[32;49m defaultColors[39;49m[32;49m noticeColors[39;49m[32;49m debugColors[39;49m[32;49m setNoticeColors[39;49m[32;49m setDebugColors[39;49m[32;49m setAlertColors[39;49m[32;49m setDefaultColors[39;49m[32;49m setUserColors[39;49m[32;49m setNoticeRGB[39;49m[32;49m setUserRGB[39;49m[32;49m setDebugRGB[39;49m[32;49m setAlertRGB[39;49m[32;49m setDefaultRGB[39;49m
			 - File[32;49m freadToString[39;49m[32;49m fexists[39;49m[32;49m fsize[39;49m[32;49m ftell[39;49m[32;49m fseek[39;49m[32;49m fread[39;49m[32;49m fwrite[39;49m[32;49m fclose[39;49m[32;49m fopen[39;49m
		 - Shell[32;49m hio[39;49m[32;49m $[39;49m[32;49m _sh[39;49m[32;49m endif[39;49m[32;49m else[39;49m[32;49m if[39;49m
		 - Debug[32;49m rdi[39;49m[32;49m slp[39;49m[32;49m dcm[39;49m[32;49m sinit[39;49m[32;49m s[39;49m[32;49m _s[39;49m[32;49m dbiOff[39;49m[32;49m dbiOn[39;49m[32;49m DebugFlag[39;49m[32;49m v1[39;49m[32;49m v4[39;49m[32;49m tcOnv[39;49m[32;49m scOff[39;49m[32;49m scOn[39;49m[32;49m dscOff[39;49m[32;49m dscOn[39;49m[32;49m nt[39;49m[32;49m tcOff[39;49m[32;49m tcOn[39;49m[32;49m ;t[39;49m[32;49m t:[39;49m[32;49m regs[39;49m[32;49m locals[39;49m[32;49m dbrk[39;49m[32;49m OptimizeOn[39;49m[32;49m d:[39;49m[32;49m _startDirectory_[39;49m[32;49m <dbg>[39;49m[32;49m saveCpuState[39;49m[32;49m restoreCpuState[39;49m[32;49m stop[39;49m[32;49m localsShow[39;49m[32;49m info[39;49m[32;49m _info[39;49m[32;49m xtDbg[39;49m[32;49m ;d[39;49m[32;49m _dbgOff[39;49m[32;49m _dbgOn[39;49m[32;49m scOn[39;49m[32;49m scOff[39;49m[32;49m dbgTypecheckOff[39;49m[32;49m dbgTypecheckOn[39;49m[32;49m dbgSourceCodeOff[39;49m[32;49m dbgSourceCodeOn[39;49m[32;49m ndstack[39;49m[32;49m dstack[39;49m[32;49m nrstack[39;49m[32;49m rstack[39;49m[32;49m stackDepthPrint[39;49m[32;49m stack[39;49m[32;49m setSourceCodeWord[39;49m[32;49m sourceDontAdd[39;49m[32;49m source[39;49m[32;49m sourceAdd[39;49m[32;49m wordDisassemble[39;49m[32;49m dis[39;49m[32;49m dump[39;49m
		 - Control[32;49m hic2[39;49m[32;49m ct2[39;49m[32;49m ct1[39;49m[32;49m ct0[39;49m[32;49m ct00[39;49m[32;49m leaving[39;49m[32;49m abrk0[39;49m[32;49m abrkcon[39;49m[32;49m x[39;49m
		 - DObject[32;49m new[39;49m[32;49m clone[39;49m[32;49m dobject[39;49m
			 - [34;49mDO_Experimental[39;49m[32;49m o12[39;49m
				 - [34;49mo1[39;49m
					 - [34;49mx[39;49m[32;49m ott3[39;49m[32;49m zzx[39;49m[32;49m ott2[39;49m[32;49m zzz[39;49m
						 - [34;49mxxy[39;49m[32;49m a[39;49m
					 - [34;49mo2[39;49m[32;49m ay[39;49m
						 - [34;49mo3[39;49m[32;49m ott[39;49m[32;49m o4[39;49m
		 - Lexer[32;49m ofile[39;49m[32;49m orpfile[39;49m[32;49m %[39;49m[32;49m "[39;49m
		 - OpenVmTil[32;49m lispOn[39;49m[32;49m lispOff[39;49m[32;49m recycleDebugInfo[39;49m[32;49m showAllocated[39;49m[32;49m addToHistoryOff[39;49m[32;49m addToHistoryOn[39;49m[32;49m historyReset[39;49m[32;49m addToHistory[39;49m[32;49m historySize[39;49m[32;49m dataStackSize[39;49m[32;49m dictionarySize[39;49m[32;49m sessionObjectsSize[39;49m[32;49m compilerTempObjectsSize[39;49m[32;49m objectsSize[39;49m[32;49m codeSize[39;49m[32;49m dbi[39;49m[32;49m verbosity[39;49m[32;49m debugOn[39;49m[32;49m debugOff[39;49m[32;49m inlineOn[39;49m[32;49m inlineOff[39;49m[32;49m stringMacrosOff[39;49m[32;49m stringMacrosOn[39;49m[32;49m optimizeOff[39;49m[32;49m optimizeOn[39;49m[32;49m t{[39;49m[32;49m }t[39;49m[32;49m typecheckOff[39;49m[32;49m typecheckOn[39;49m[32;49m inlining[39;49m[32;49m optimize[39;49m[32;49m autoVarOff[39;49m[32;49m autoVarOn[39;49m[32;49m autoVar[39;49m
			 - Memory[32;49m freeAllTempMem[39;49m[32;49m freeSessionMem[39;49m[32;49m freeLispTempMem[39;49m[32;49m freeCompilerTempMem[39;49m[32;49m freeTemporayMem[39;49m
		 - Word[32;49m code[39;49m[32;49m purgeWordIfContainsName[39;49m[32;49m purgeWordName[39;49m[32;49m addrToWord[39;49m[32;49m codeSize[39;49m[32;49m codeStart[39;49m[32;49m wordAdd[39;49m[32;49m wordFinish[39;49m[32;49m xt=[39;49m[32;49m xt[39;49m[32;49m value[39;49m[32;49m definition[39;49m[32;49m run[39;49m[32;49m wordRun[39;49m[32;49m wordEval[39;49m[32;49m wNamespace[39;49m[32;49m wordNew[39;49m[32;49m name[39;49m
		 - Namespace[32;49m usingLast:[39;49m[32;49m notUsing:[39;49m[32;49m using:[39;49m[32;49m _findAny[39;49m[32;49m _find[39;49m[32;49m namespace[39;49m[32;49m namespaceWords[39;49m[32;49m _namespaceWords[39;49m[32;49m allWords[39;49m[32;49m words[39;49m[32;49m namespaceTreeWithWords[39;49m[32;49m namespaceTree[39;49m[32;49m namespaces[39;49m[32;49m notUsing[39;49m[32;49m usingLast[39;49m[32;49m usingFirst[39;49m[32;49m using[39;49m[32;49m in[39;49m
		 - Io[32;49m logOff[39;49m[32;49m logOn[39;49m[32;49m logWrite[39;49m[32;49m logAppend[39;49m[32;49m space[39;49m[32;49m tab[39;49m[32;49m cr[39;49m[32;49m newline[39;49m[32;49m kbhit[39;49m[32;49m key[39;49m[32;49m emit[39;49m[32;49m printString[39;49m
		 - Macro[32;49m tm:[39;49m[32;49m alias[39;49m[32;49m sm:[39;49m
		 - PreProcessor[32;49m define[39;49m[32;49m elif[39;49m[32;49m if[39;49m[32;49m else[39;49m[32;49m endif[39;49m[32;49m ![39;49m
		 - Forth[32;49m n,[39;49m[32;49m 8,[39;49m[32;49m 4,[39;49m[32;49m ,[39;49m[32;49m 2,[39;49m[32;49m 1,[39;49m[32;49m '[39;49m
		 - [34;49mLisp[39;49m[32;49m /|[39;49m[32;49m /.[39;49m[32;49m /\[39;49m[32;49m lambda[39;49m[32;49m lcClearDefines[39;49m[32;49m lcReset[39;49m[32;49m ::[39;49m[32;49m ,@[39;49m[32;49m unquoteSplicing[39;49m[32;49m ,[39;49m[32;49m unquote[39;49m[32;49m `[39;49m[32;49m quasiquote[39;49m[32;49m @[39;49m[32;49m '[39;49m[32;49m list[39;49m[32;49m eval[39;49m[32;49m quote[39;49m[32;49m cdr[39;49m[32;49m car[39;49m[32;49m cond[39;49m[32;49m .if[39;49m[32;49m macro[39;49m[32;49m if*[39;49m[32;49m let[39;49m[32;49m set[39;49m[32;49m begin[39;49m[32;49m lambda[39;49m[32;49m _lambda[39;49m[32;49m compile[39;49m[32;49m define[39;49m[32;49m _Printf[39;49m[32;49m )[39;49m[32;49m print[39;49m[32;49m eval[39;49m[32;49m _([39;49m[32;49m ([39;49m
	 - locals_-1[32;49m n[39;49m[32;49m x[39;49m
	 - Compiler[32;49m _fib1[39;49m[32;49m vckf1[39;49m[32;49m vckf[39;49m[32;49m sl[39;49m[32;49m >;[39;49m[32;49m mod[39;49m[32;49m nstrcat:[39;49m[32;49m Zenfone2[39;49m[32;49m x[39;49m[32;49m doLisp[39;49m[32;49m COMBINATOR_TOOKIT[39;49m[32;49m doLisp[39;49m[32;49m doTest[39;49m[32;49m doDemo[39;49m[32;49m doInit1[39;49m[32;49m streamLine[39;49m[32;49m classTestRead[39;49m[32;49m DebugFlag[39;49m[32;49m var:[39;49m[32;49m swap[39;49m[32;49m compileCall[39;49m[32;49m compileWord[39;49m[32;49m immediate[39;49m[32;49m '[39;49m[32;49m )[39;49m[32;49m sourceCodeOn[39;49m[32;49m sourceCodeInit[39;49m[32;49m getStringToEndOfLine[39;49m[32;49m ftoken[39;49m[32;49m token[39;49m[32;49m _tick[39;49m[32;49m quote[39;49m[32;49m store[39;49m[32;49m set[39;49m[32;49m poke[39;49m[32;49m =[39;49m[32;49m ![39;49m[32;49m @=[39;49m[32;49m get[39;49m[32;49m peek[39;49m[32;49m load[39;49m[32;49m @[39;49m[32;49m debugWord[39;49m[32;49m prefixOff[39;49m[32;49m prefixOn[39;49m[32;49m infixOff[39;49m[32;49m infixOn[39;49m[32;49m nprefix[39;49m[32;49m prefix[39;49m[32;49m _prefix[39;49m[32;49m typeSignature[39;49m[32;49m inline[39;49m[32;49m ?immediate[39;49m[32;49m _immediate[39;49m[32;49m code[39;49m[32;49m Here[39;49m[32;49m begin[39;49m[32;49m _end[39;49m[32;49m _literal[39;49m[32;49m literal[39;49m[32;49m constant[39;49m[32;49m _constant[39;49m[32;49m variable[39;49m[32;49m _variable[39;49m[32;49m macro[39;49m[32;49m noop[39;49m[32;49m break[39;49m[32;49m return[39;49m[32;49m continue[39;49m[32;49m goto[39;49m[32;49m postfixOn[39;49m[32;49m c_syntaxOff[39;49m[32;49m c_syntaxOn[39;49m
		 - Compiling[32;49m pokeRegAtAddress[39;49m[32;49m pokeRegWithValue[39;49m[32;49m peekReg[39;49m[32;49m _compileWord[39;49m[32;49m _compileCall[39;49m[32;49m compileInt64[39;49m[32;49m compileInt32[39;49m[32;49m compileInt16[39;49m[32;49m compileByte[39;49m
		 - Reserved[32;49m {|[39;49m[32;49m |}[39;49m[32;49m swap[39;49m[32;49m keyword[39;49m[32;49m dlsym:[39;49m[32;49m syntactic[39;49m[32;49m immediate[39;49m[32;49m end[39;49m[32;49m {[39;49m[32;49m }[39;49m[32;49m ;[39;49m[32;49m semi[39;49m[32;49m :[39;49m[32;49m word[39;49m
	 - [34;49mLispTemp[39;49m
	 - [34;49mLispDefines[39;49m
Total namespaces = 86 :: Total words = 1303

DataStack at : [34;49mnamespaces/test/dev.cft : 474.2[39;49m :
DataStack depth =   0 : Dsp (R14) = Top = 0x00007fa6ddf73208, InitialTos = 0x00007fa6ddf73208, Size = 0x0000000000002000
[39;49m[39;49m
<: 