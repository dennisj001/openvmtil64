5 
hex
// asm constants
// mod values
"REG" 3 const  
"MEM8" 1 const
"MEM32" 2 const
"MEM0" 0 const
"MEM" MEM0 const
// registers
"EAX" 0 const 
"ECX" 1 const 
"EDX" 2 const 
"EBX" 3 const 
"ESP" 4 const 
"EBP" 5 const 
"ESI" 6 const
"EDI" 7 const 
"R8D" 8 const 
"R9D" 9 const 
"R10D" 10 const 
"R11D" 11 const 
"R12D" 12 const 
"R13D" 13 const 
"R14D" 14 const 
"R15D" 15 const 

"DSP" R14D const 
"FP" R15D const 

// ttt codes
"BELOW" 1 const 
"EQUAL" 2 const
"EQ" 2 const
"ZERO" 2 const
"Z" 2 const
"BE" 3 const
"NA" 3 const
"LESS" 6 const
"LE" 7 const
"NG" 7 const

"ADD" 0 const
"SUB" 5 const
"CMP" 7 const
"BYTE" 1 const
"CELL" 8 const
"N" 1 const // used with JCC n/ttt notation

// opCodes
"INC" 0x40 const
"DEC" 0x48 const

#if 0 // not working yet
c_syntaxOn
#define REX_B      1 // ( 1 << 0 ) 
#define MODRM_B    2 // ( 1 << 1 ) // backwards compatibility
#define SIB_B      4 //  ( 1 << 2 ) 
#define DISP_B     8 // ( 1 << 3 ) 
#define IMM_B      16 // ( 1 << 4 ) 
#define REX_W_B       REX_B
c_syntaxOff
#else
'REX_B      1  const 
'MODRM_B    2  const 
'SIB_B      4  const //  ( 1 << 2 ) 
'DISP_B     8  const // ( 1 << 3 ) 
'IMM_B      16 const // ( 1 << 4 ) 
'REX_W_B    REX_B const
#endif

2 + 7 assertStkChk // stack checking
